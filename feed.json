{
    "version": "https://jsonfeed.org/version/1",
    "title": "D の Java",
    "subtitle": "别怕路长梦远",
    "icon": "https://pigpigletsgo.github.io/images/favicon.ico",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-2024-7-4-pgsql%E4%BB%8E5%E5%BC%A0%E4%B8%8D%E5%90%8C%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E5%B9%B6%E7%BB%BC%E5%90%88%E8%BF%94%E5%9B%9E/",
            "url": "https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-2024-7-4-pgsql%E4%BB%8E5%E5%BC%A0%E4%B8%8D%E5%90%8C%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E5%B9%B6%E7%BB%BC%E5%90%88%E8%BF%94%E5%9B%9E/",
            "title": "pgsql从5张不同表查询字段数据并综合返回",
            "date_published": "2024-07-04T09:12:25.597Z",
            "content_html": "<h1 id=\"pgsql从5张不同表查询字段数据并综合返回\"><a class=\"anchor\" href=\"#pgsql从5张不同表查询字段数据并综合返回\">#</a> pgsql 从 5 张不同表查询字段数据并综合返回</h1>\n<p>编写的查询数据库表的 sql</p>\n<p><mark>思路</mark>：从 5 张不同的表中，它们的结构大致相同。我们从 5 张表中拿到不同的字段的数据并返回</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">.</span>operating_income<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_operating_income<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>nr<span class=\"token punctuation\">.</span>total_profit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_total_profit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>nr<span class=\"token punctuation\">.</span>net_profit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_net_profit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">.</span>asset_liability_ratio<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_asset_liability_ratio<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">.</span>return_on_equity<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_return_on_equity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">.</span>operate_cash_ratio<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_operate_cash_ratio<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">.</span>assets<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_assets<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">.</span>operating_activities_cash_flow<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_operating_activities_cash_flow<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    CAST<span class=\"token punctuation\">(</span><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>dr<span class=\"token punctuation\">.</span>liabilities<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> total_liabilities</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">FROM</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">SELECT</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>operating_income<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> operating_income</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">FROM</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        pro_va_mea_province_cash_flow_financing_income_costs_result</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> cr</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">SELECT</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>total_profit<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> total_profit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>net_profit<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> net_profit</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">FROM</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        pro_va_mea_province_cost_profit_net_result</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> nr <span class=\"token keyword\">ON</span> cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span> <span class=\"token operator\">=</span> nr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">SELECT</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>asset_liability_ratio<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> asset_liability_ratio<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>return_on_equity<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> return_on_equity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>operate_cash_ratio<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> operate_cash_ratio<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>assets<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> assets<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>operating_activities_cash_flow<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> operating_activities_cash_flow</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">FROM</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        pro_va_mea_province_equity_ratio_cash_flow</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> cf <span class=\"token keyword\">ON</span> cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span> <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">SELECT</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>liabilities<span class=\"token punctuation\">)</span> :: <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> liabilities</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">FROM</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        pro_va_mea_province_liabilities_depreciation_result</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> dr <span class=\"token keyword\">ON</span> cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span> <span class=\"token operator\">=</span> dr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    cr<span class=\"token punctuation\">.</span><span class=\"token keyword\">YEAR</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回 List&lt;Map&lt;String, Object&gt;&gt;<br />\n 返回结果：</p>\n<pre><code>[&#123;\n  year=2021,\n  total_net_profit=0.00,\n  total_asset_liability_ratio=0.00,\n  total_return_on_equity=0.00,\n  total_assets=0.00,\n  total_operating_activities_cash_flow=0.00,\n  total_liabilities=0.00,\n  total_operating_income=0.00,\n  total_total_profit=0.00,\n  total_operate_cash_ratio=0.00\n&#125;\n&#123;\n  year=2022,\n  total_net_profit=0.00,\n  total_asset_liability_ratio=0.00,\n  total_return_on_equity=0.00,\n  total_assets=0.00,\n  total_operating_activities_cash_flow=0.00,\n  total_liabilities=0.00,\n  total_operating_income=0.00,\n  total_total_profit=0.00,\n  total_operate_cash_ratio=0.00\n&#125;\n&#123;\n  year=2023,\n  total_net_profit=0.00,\n  total_asset_liability_ratio=0.00,\n  total_return_on_equity=0.00,\n  total_assets=0.00,\n  total_operating_activities_cash_flow=0.00,\n  total_liabilities=0.00,\n  total_operating_income=0.00,\n  total_total_profit=0.00,\n  total_operate_cash_ratio=0.00\n&#125;]\n</code></pre>\n<p>对数据进行格式转换：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">formatAnnualEvaluation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> annualEvaluation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> formattedData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 需要显示的字段列表</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">AnnualEvaluationF</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values <span class=\"token operator\">=</span> <span class=\"token class-name\">AnnualEvaluationF</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> fielder <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fields <span class=\"token operator\">=</span> fielder<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 遍历每个字段</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> field <span class=\"token operator\">:</span> fields<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 初始化一个 Map 用于存储当前字段的数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> fieldData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            fieldData<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 遍历每个年份，将当前字段的值按年份填充到 fieldData 中</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">:</span> annualEvaluation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token class-name\">Integer</span> year <span class=\"token operator\">=</span> <span class=\"token class-name\">ObjectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotNull</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token class-name\">Object</span> value <span class=\"token operator\">=</span> <span class=\"token class-name\">ObjectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotNull</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                fieldData<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 将当前字段的数据添加到 formattedData 中</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            formattedData<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fieldData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> formattedData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>[\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_asset_liability_ratio&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_net_profit&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_return_on_equity&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_assets&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_operating_activities_cash_flow&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_liabilities&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_operating_income&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_total_profit&quot;\n  &#125;,\n  &#123;\n    2023=0.00,\n    2022=0.00,\n    2021=0.00,\n    field=&quot;total_operate_cash_ratio&quot;\n  &#125;\n]\n</code></pre>\n",
            "tags": [
                "计算机学科",
                "blog",
                "sql",
                "计算机学科",
                "blog - sql"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/Predicate%E7%B1%BB%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/Predicate%E7%B1%BB%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/",
            "title": "Predicate类基本使用详解",
            "date_published": "2024-07-04T07:25:35.680Z",
            "content_html": "<h1 id=\"predicate类基本使用详解\"><a class=\"anchor\" href=\"#predicate类基本使用详解\">#</a> Predicate 类基本使用详解</h1>\n<h2 id=\"一-基本方法\"><a class=\"anchor\" href=\"#一-基本方法\">#</a> 一、基本方法</h2>\n<p>test 方法主要用于参数符不符合规则。返回值 boolean</p>\n<p>写法如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> fourLetterLong1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">4</span> <span class=\"token operator\">?</span><span class=\"token boolean\">true</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>配合 Lambda filter 使用如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> fourLetterLong1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">4</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>fourLetterLong1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is:\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is: Scala\nthis is: Haskell\n</code></pre>\n<h2 id=\"二-andpredicate-super-t-other\"><a class=\"anchor\" href=\"#二-andpredicate-super-t-other\">#</a> 二、and (Predicate&lt;? super T&gt; other)</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">default</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> other<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> other<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>and 方法等同于我们的逻辑与 &amp;&amp; ，存在短路特性，需要所有条件都满足。第一个不满足则不走第二个</p>\n<p>配置 Lambda filter 使用如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> startsWith <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>startsWith<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is: \"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is: Haskell\n</code></pre>\n<h2 id=\"三-orpredicate-super-t-other\"><a class=\"anchor\" href=\"#三-orpredicate-super-t-other\">#</a> 三、or (Predicate&lt;? super T&gt; other)</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">default</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> other<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> other<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>or 等同于我们的逻辑或 ||，多个条件只要满足一个即可。第一个满足则不走第二个</p>\n<p>配合 Lambda filter 使用如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> fourLetterLong1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> startsWith <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zzz\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>fourLetterLong1<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span>startsWith<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is:\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is: Scala\nthis is: Haskell\n</code></pre>\n<h2 id=\"四-negate方法\"><a class=\"anchor\" href=\"#四-negate方法\">#</a> 四、negate () 方法</h2>\n<p>negate 等同于我们的逻辑非！。对条件进行取反判断</p>\n<p>配合 Lambda filter 使用如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> fourLetterLong1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>fourLetterLong1<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is:\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is:Java\nthis is:C++\nthis is:Lisp\nthis is:Hell\nthis is:opt\n</code></pre>\n<h2 id=\"五-isequalobject-targetref方法\"><a class=\"anchor\" href=\"#五-isequalobject-targetref方法\">#</a> 五、isEqual (Object targetRef) 方法</h2>\n<p>isEqual 类似于 equals () 区别在于：先判断对象是否为 NULL，不为 NULL 再使用 equals () 方法进行比较</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">isEqual</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> targetRef<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> targetRef<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token operator\">?</span> <span class=\"token class-name\">Objects</span><span class=\"token operator\">::</span><span class=\"token function\">isNull</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token operator\">:</span> object <span class=\"token operator\">-></span> targetRef<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>配合 Lambda filter 使用如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> isEqual <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token class-name\">Predicate</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>isEqual<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is:\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is:Java\n</code></pre>\n<h2 id=\"六-扩展\"><a class=\"anchor\" href=\"#六-扩展\">#</a> 六、扩展</h2>\n<p>使用 Lambda 新特性和 String 类中的方法，多条件查询</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scala\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lisp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hell\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"opt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 长度为 7</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">//endsWith 方法字符串是否以指定的前缀开头。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> startsWith <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"J\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">//endsWith 字符串是否以指定的后缀结尾。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> endsWith <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> isEqual <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span><span class=\"token class-name\">Predicate</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Haskell\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>startsWith<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>endsWith<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span>isEqual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is:\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>this is:Java\nthis is:Haskell\n</code></pre>\n",
            "tags": [
                "计算机学科",
                "java",
                "知识点",
                "知识点"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/blog/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%B7%A5%E5%85%B7/HMAC%E7%AE%97%E6%B3%95%E4%BB%A5%E5%8F%8A%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/",
            "url": "https://pigpigletsgo.github.io/computer-science/blog/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%B7%A5%E5%85%B7/HMAC%E7%AE%97%E6%B3%95%E4%BB%A5%E5%8F%8A%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/",
            "title": "HMAC算法以及工作原理",
            "date_published": "2024-06-15T12:07:00.228Z",
            "content_html": "<h1 id=\"hmac算法以及工作原理\"><a class=\"anchor\" href=\"#hmac算法以及工作原理\">#</a> HMAC 算法以及工作原理</h1>\n<h2 id=\"一-消息认证码mac简介\"><a class=\"anchor\" href=\"#一-消息认证码mac简介\">#</a> 一、消息认证码 (MAC) 简介</h2>\n<p>消息认证码 (Message Authentication Code，简称 MAC)，是密码学中的一个关键概念，主要用于确保信息在传输或存储过程中的完整性，同时提供对信息来源的身份验证。这是一种防止信息在未经授权的情况下被篡改的重要手段。</p>\n<p>MAC 算法的核心在于它采用了一种特定的加密方式，这种方式也依赖于一个只有通信双方知道的秘钥。这意味着，即使攻击者能够截获到传输的信息，只要他们没有这个秘钥，就无法生成有效的 MAC 值，也无法对信息进行篡改而不被发现。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240615183118453.png\" alt=\"image-20240615183118453\" /></p>\n<h3 id=\"mac的主要特性包括\"><a class=\"anchor\" href=\"#mac的主要特性包括\">#</a> MAC 的主要特性包括</h3>\n<ol>\n<li>完成性：MAC 能确保信息的完整性，即信息在传输或存储过程中没有被篡改。这是通过对此接收到的 MAC 值和重新计算的 MAC 值来实现的。如果两者相同，那么信息就被认为是完整的。</li>\n<li>认证：MAC 能提供对信息来源的身份验证。因为只有知道秘钥的实体才能生成有效的 MAC 值，所以接收者可以通过验证 MAC 值来确认信息来源。</li>\n<li>秘钥依赖性：MAC 值的计算依赖于秘钥，不同的秘钥会产生不同的 MAC 值。这增加了攻击者伪造有效 MAC 值的难度。</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240615183425944.png\" alt=\"image-20240615183425944\" /></p>\n<p>MAC 被广泛应用于网络通信、数据存储、电子商务等领域，以保护数据的安全性和可靠性。例如，在网络通信中，MAC 可以防止数据被篡改或冒充，确保数据的完整性和真实性；在数据存储中，MAC 可以防止数据被篡改或删除，保护数据的完整性和可靠性；在电商中，MAC 可以确保交易数据的完整性和真实性，防止数据被篡改或冒充，保护用户的隐私和安全。</p>\n<h2 id=\"二-hmacsha1算法\"><a class=\"anchor\" href=\"#二-hmacsha1算法\">#</a> 二、HmacSHA1 算法</h2>\n<p>HmacSHA1 是一种结合了密钥与 SHA-1 哈希函数的消息认证码（MAC）算法。与 HmacMD5 类似，HmacSHA1 旨在通过引入密钥来增强 SHA-1 算法的安全性，以提供数据的完整性和身份验证。由于 SHA-1 相较于 MD5 具有更高的安全性，HmacSHA1 也被广泛认为是一种更安全的消息认证码算法。</p>\n<p>SHA-1（Secure Hash Algorithm 1）是一种密码散列函数，美国国家安全局设计，并由美国国家标准技术研究所（NIST）发布为联邦资料处理标准（FIPS）。SHA-1 可以生成一个被称为消息摘要的 160 位（20 字节）散列值，散列值通常的呈现形式为 40 个十六进制数。</p>\n<h3 id=\"hmacsha1算法的工作原理\"><a class=\"anchor\" href=\"#hmacsha1算法的工作原理\">#</a> HmacSHA1 算法的工作原理</h3>\n<h4 id=\"1-秘钥处理\"><a class=\"anchor\" href=\"#1-秘钥处理\">#</a> 1、秘钥处理：</h4>\n<p>HmacSHA1 算法首先会对密钥进行处理，以确保其长度符合算法的要求。通常，密钥会被填充至 64 字节（512 位）的长度。<br />\n如果密钥长度小于 64 字节，算法会在密钥的末尾填充 0，直到达到所需的长度。<br />\n如果密钥长度大于 64 字节，算法会使用 SHA-1 哈希函数对密钥进行哈希处理，得到一个固定长度（20 字节，160 位）的哈希值，然后将其作为实际的密钥使用。</p>\n<h4 id=\"2-秘钥划分与填充\"><a class=\"anchor\" href=\"#2-秘钥划分与填充\">#</a> 2、秘钥划分与填充：</h4>\n<p>与 HmacMD5 类似，处理后的密钥会被划分为两个等长的子密钥，但由于 SHA-1 的块大小是 512 位（64 字节），这两个子密钥实际上是通过对原始密钥与特定的填充常量（如 ipad 和 opad）进行异或运算得到的。<br />\nipad（内部填充常量）和 opad（外部填充常量）是特定的字节序列，用于与密钥进行异或运算，以生成两个新的密钥：K1（内部密钥）和 K2（外部密钥）。</p>\n<h4 id=\"3-消息处理与哈希计算\"><a class=\"anchor\" href=\"#3-消息处理与哈希计算\">#</a> 3、消息处理与哈希计算：</h4>\n<p>消息在进行哈希之前，会被划分为多个块，每个块的大小与 SHA-1 算法的输入块大小相同（512 位）。最后一个块可能需要按照特定的方式进行填充。<br />\n对于每个消息块，算法会将其与子密钥 K1 一起作为输入，进行 SHA-1 哈希计算，得到一个中间哈希值。<br />\n然后，算法会取所有中间哈希值的串联（对于多个消息块的情况），与子密钥 K2 一起作为输入，进行另一次 SHA-1 哈希计算。最终得到的哈希值就是消息的 HmacSHA1 值。</p>\n<h4 id=\"4-安全性考虑\"><a class=\"anchor\" href=\"#4-安全性考虑\">#</a> 4、安全性考虑：</h4>\n<p>HmacSHA1 算法结合了 SHA-1 哈希函数的不可逆性和密钥作为干扰项的特点，使得攻击者无法轻易伪造出有效的 HmacSHA1 值。即使攻击者截获了消息和对应的 HmacSHA1 值，没有密钥的情况下也无法对消息进行篡改而不被发现。</p>\n<p>然而，需要注意的是，近年来对 SHA-1 的安全性也提出了一些质疑，特别是关于其潜在的碰撞性攻击风险。虽然在实际应用中尚未出现成功的攻击案例，但为了安全起见，许多组织已经开始逐步淘汰 SHA-1 和 HmacSHA1，转向使用更安全的哈希函数和相应的 Hmac 算法（如 SHA-256 和 HmacSHA256）。</p>\n<h2 id=\"三-hmacmd5算法\"><a class=\"anchor\" href=\"#三-hmacmd5算法\">#</a> 三、HmacMD5 算法</h2>\n<p>HmacMD5 是一种结合了密钥与 MD5 哈希函数的消息认证码（MAC）算法。它旨在通过引入密钥来增强 MD5 算法的安全性，从而提供数据的完整性和身份验证。HmacMD5 广泛应用于网络通信和数据存储等领域，以确保数据的机密性和完整性。</p>\n<h3 id=\"hmacmd5算法的工作原理\"><a class=\"anchor\" href=\"#hmacmd5算法的工作原理\">#</a> HmacMD5 算法的工作原理</h3>\n<h4 id=\"1-秘钥处理-2\"><a class=\"anchor\" href=\"#1-秘钥处理-2\">#</a> 1、秘钥处理：</h4>\n<p>HmacMD5 算法首先会对密钥进行处理，以确保其长度符合算法的要求。通常，密钥会被填充至 64 字节（512 位）的长度。<br />\n如果密钥长度小于 64 字节，算法会在密钥的末尾填充 0，直到达到所需的长度。<br />\n如果密钥长度大于 64 字节，算法会使用 MD5 哈希函数对密钥进行哈希处理，得到一个固定长度（16 字节，128 位）的哈希值，然后将其作为实际的密钥使用。</p>\n<h4 id=\"2-秘钥划分\"><a class=\"anchor\" href=\"#2-秘钥划分\">#</a> 2、秘钥划分：</h4>\n<p>经过处理的密钥会被划分为两个等长的子密钥，分别称为 K1 和 K2。<br />\n如果密钥是原始密钥的哈希值（16 字节），则 K1 是原始密钥与 ipad（一个特定的常量）的逐位异或结果，K2 是原始密钥与 opad（另一个特定的常量）的逐位异或结果。</p>\n<h4 id=\"3-消息处理\"><a class=\"anchor\" href=\"#3-消息处理\">#</a> 3、消息处理：</h4>\n<p>消息在进行哈希之前，通常会被划分为多个块，每个块的大小与 MD5 算法的输入块大小相同（64 字节）。对于最后一个可能不足 64 字节的块，需要按照特定的方式进行填充，以确保其长度达到 64 字节。填充的内容包括一个 “1”、多个 “0” 以及原始消息的长度（以 64 位二进制数表示）。</p>\n<h4 id=\"4-哈希计算\"><a class=\"anchor\" href=\"#4-哈希计算\">#</a> 4、哈希计算：</h4>\n<p>对于每个消息块，算法会将其与子密钥 K1 一起作为输入，计算出一个中间哈希值。这是通过将 K1 附加到消息块的前面或后面，并对整个输入应用 MD5 哈希函数来实现的。</p>\n<p>然后，算法会取所有中间哈希值的串联（对于多个消息块的情况），与子密钥 K2 一起作为输入，进行另一次 MD5 哈希计算。最终得到的哈希值就是消息的 HmacMD5 值。</p>\n<p>尽管 HmacMD5 算法通过引入密钥增强了 MD5 算法的安全性，但 MD5 算法本身存在已知的弱点，如潜在的碰撞性攻击风险。因此，在需要更高安全性的场景下，建议使用更安全的哈希函数和相应的 Hmac 算法，如 HmacSHA256。</p>\n<h3 id=\"md5\"><a class=\"anchor\" href=\"#md5\">#</a> MD5</h3>\n<ul>\n<li>MD5 信息摘要算法 (英语：MD5 Message-Digest Algorithm)，一种被广泛使用的密码散列函数，可以生产出一个 128 位 (16 字节) 的散列值 (hash value)，用于确保信息传输完整一致。</li>\n<li>MD5 将任意长度的 &quot;字符串&quot; 变换成 128 位 (4 个 32 位) 的大整数，它是一个不可逆的数据转换过程。</li>\n</ul>\n<h4 id=\"md5算法步骤\"><a class=\"anchor\" href=\"#md5算法步骤\">#</a> MD5 算法步骤</h4>\n<h5 id=\"步骤1补位\"><a class=\"anchor\" href=\"#步骤1补位\">#</a> 步骤 1：补位</h5>\n<p>将原始数据转换为二进制看，先在尾补一个 1，再补 0，再补一个 64 位的原始数据长度 (单位 bit)，补完后数据位数长度为 512 的倍数；</p>\n<p>注意：即便是这个数据的位数长度对 512 求模的结果正好是 448 也必须进行补位。总之，至少补 1 位，而最多可能补 512 位</p>\n<h5 id=\"步骤2分组\"><a class=\"anchor\" href=\"#步骤2分组\">#</a> 步骤 2：分组</h5>\n<p>以 512 位分组，每组又分为 16 个 32 位的子分组 M [0] ~ M [15]</p>\n<h5 id=\"步骤3每组计算\"><a class=\"anchor\" href=\"#步骤3每组计算\">#</a> 步骤 3：每组计算</h5>\n<ul>\n<li>\n<p>输入量</p>\n<p>每个 512 bit 分组都要经历一次 4 轮的逻辑处理；</p>\n<p>每 4 轮逻辑处理的输入量为：链接变量<mark> A，B，C，D</mark> 和每组的<mark> M [0] ~ M [15]</mark></p>\n<p>四个链接变量 A，B，C，D 初始值为：</p>\n<p>A = 0x12345678</p>\n<p>B = 0x89ABCDEF</p>\n<p>C = 0xFEDCBA98</p>\n<p>D = 0x76543210</p>\n<p>注意：初始的 A，B，C，D，4 个链接变量与每组的 M [0] ~ M [15] 在进入计算前要先经过 <mark>大小端处理</mark></p>\n</li>\n<li>\n<p>定义 4 个非线性函数 F，G，H，I</p>\n<p>每轮用一个非线性函数计算，即：</p>\n<p>在第一轮中，M [0] ~ M [15] 分别代入到函数 F 中运算；</p>\n<p>在第二轮中，M [0] ~ M [15] 分别代入到函数 G 中运算；</p>\n<p>在第三轮中，M [0] ~ M [15] 分别代入到函数 H 中运算；</p>\n<p>在第四轮中，M [0] ~ M [15] 分别代入到函数 I 中运算；</p>\n<p>那么 4 轮一共会进行 16 * 4 = 64 此运算。</p>\n</li>\n<li>\n<p>输出量</p>\n<p>每一个 512bit 分组经过 4 轮的逻辑处理后，会得到四个 32 位的值 a，b，c，d；将它们分别加上输入时的链接变量的值，就会得到新的链接变量的值，此值再继续输入参与下一 512bit 分组的 4 轮逻辑处理；</p>\n<p>A = a + A</p>\n<p>B = b + B</p>\n<p>C = c + C</p>\n<p>D = d + D</p>\n</li>\n</ul>\n<h5 id=\"步骤4最终结果输出\"><a class=\"anchor\" href=\"#步骤4最终结果输出\">#</a> 步骤 4：最终结果输出</h5>\n<p>经过了一系列的计算处理后，输出结果由 4 个 32 位数据组成，将这 4 个 32 位数据级联后将生成一个 128 位散列值，即为 MD5 值。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240615185746826.png\" alt=\"image-20240615185746826\" /></p>\n<p><strong>参考</strong>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzY1OTAwNDk=\">https://zhuanlan.zhihu.com/p/136590049</span> HMAC 算法及其应用</p>\n",
            "tags": [
                "计算机学科",
                "blog",
                "加密算法工具",
                "计算机学科",
                "blog"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/p6Spy/",
            "url": "https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/p6Spy/",
            "title": "数据库执行语句打印性能分析框架p6Spy的使用",
            "date_published": "2024-06-13T09:16:25.379Z",
            "content_html": "<h1 id=\"数据库执行语句打印-性能分析框架p6spy的使用\"><a class=\"anchor\" href=\"#数据库执行语句打印-性能分析框架p6spy的使用\">#</a> 数据库执行语句打印、性能分析框架（p6Spy 的使用）</h1>\n<h2 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h2>\n<blockquote>\n<p>我们在调式程序难免要输出执行<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1zcWwlRTglQUYlQUQlRTUlOEYlQTUmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\"> sql 语句</span>，可是使用 Mybatis 或者 JPA 等框架时，打印的的 sql 总是带着 <code>?</code>  占位符，不能直接在数据库执行并且不够直观。所以迫切需要一款专注打印可执行的 SQL 及执行时间的 sql 打印、性能分析框架 <code>p6Sql</code> 。</p>\n</blockquote>\n<h2 id=\"一-p6spy\"><a class=\"anchor\" href=\"#一-p6spy\">#</a> 一、p6spy</h2>\n<h3 id=\"1-介绍\"><a class=\"anchor\" href=\"#1-介绍\">#</a> 1、介绍</h3>\n<p>p6spy 是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的 sql 语句。</p>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wNnNweS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvaW5zdGFsbC5odG1s\">p6spy 官网</span></p>\n<h3 id=\"2-原理\"><a class=\"anchor\" href=\"#2-原理\">#</a> 2、原理</h3>\n<p>p6spy 将应用的数据源给劫持了，应用操作数据库其实在调用 p6spy 的数据源，p6spy 劫持到需要执行的 sql 或者 hql 之类的语句之后，它自己去调用一个 realDatasource，再去操作数据库。</p>\n<h3 id=\"3-应用场景\"><a class=\"anchor\" href=\"#3-应用场景\">#</a> 3、应用场景</h3>\n<p>p6spy 可以输出日志到文件中，控制台， 或者传递给 Log4j，而且还能配搭 SQL Profiler 或 IronTrackSQL 图形化监控 SQL 语句，监测到哪些语句的执行是耗时的，逐个优化。</p>\n<h2 id=\"二-使用\"><a class=\"anchor\" href=\"#二-使用\">#</a> 二、使用</h2>\n<h3 id=\"1-引入依赖\"><a class=\"anchor\" href=\"#1-引入依赖\">#</a> 1、引入依赖</h3>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>p6spy<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>p6spy<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.9.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"2-配置文件修改\"><a class=\"anchor\" href=\"#2-配置文件修改\">#</a> 2、配置文件修改</h3>\n<blockquote>\n<ol>\n<li>替换你的 JDBC Driver 为 com.p6spy.engine.spy.P6SpyDriver</li>\n<li>在原来 url jdbc: 后面添加 p6spy：。如：jdbc:p6spy:mysql://127.0.0.1:3306 <code>或</code>  jdbc:p6spy:oracle:thin:@localhost:1521:ORCL</li>\n<li>添加 p6spy 的配置文件 spy.properties</li>\n</ol>\n</blockquote>\n<h3 id=\"3-简单的spyproperties\"><a class=\"anchor\" href=\"#3-简单的spyproperties\">#</a> 3、简单的 spy.properties</h3>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">module.log</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 自定义日志打印</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">logMessageFormat</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.p6spy.engine.spy.appender.SingleLineFormat</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#customLogMessageFormat=%(currentTime) | SQL 耗时： %(executionTime) ms | 连接信息： %(category)-%(connectionId) | 执行语句： %(sql)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 使用控制台记录 sql</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">appender</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.p6spy.engine.spy.appender.StdoutLogger</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">## 配置记录 Log 例外</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">excludecategories</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">info,debug,result,batc,resultset</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 设置使用 p6spy driver 来做代理</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">deregisterdrivers</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 日期格式</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">dateformat</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">yyyy-MM-dd HH:mm:ss</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 实际驱动</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">driverlist</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 是否开启慢 SQL 记录</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">outagedetection</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 慢 SQL 记录标准 秒</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">outagedetectioninterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">2</span></pre></td></tr></table></figure><p>上面的的 <code>logMessageFormat</code>  是打印的格式 <code>SingleLineFormat</code>  最基础的配置是不会打印 sql 的。如果修改有两种方式：</p>\n<h3 id=\"1-使用内置自定义格式化器customlineformat手动配置打印格式\"><a class=\"anchor\" href=\"#1-使用内置自定义格式化器customlineformat手动配置打印格式\">#</a> 1、使用内置自定义格式化器 ( <code>CustomLineFormat</code> ) 手动配置打印格式</h3>\n<p><strong>使用示例</strong>：</p>\n<blockquote>\n<ol>\n<li>修改配置文件的格式化为自定义格式化 logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat</li>\n<li>配置文件中添加手动配置打印的格式，推荐示例：customLogMessageFormat=%(currentTime) | SQL 耗时： %(exceutionTime) ms | 连接信息： %(category)-%(connectionld) | 执行语句： %(sql)</li>\n</ol>\n</blockquote>\n<h3 id=\"2-自己创建类实现messageformattingstrategy接口重写formatmessage方法即可\"><a class=\"anchor\" href=\"#2-自己创建类实现messageformattingstrategy接口重写formatmessage方法即可\">#</a> 2、自己创建类实现 MessageFormattingStrategy 接口重写 formatMessage 方法即可</h3>\n<p><strong>使用示例</strong>：</p>\n<blockquote>\n<ol>\n<li>创建类 P6SpyLogger</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">P6SpyLogger</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MessageFormattingStrategy</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @Desc: 重写日志格式方法</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * now: 当前时间</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * elapsed: 执行耗时</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * category：执行分组</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * prepared：预编译 sql 语句</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * sql: 执行的真实 SQL 语句，已替换占位</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">formatMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> connectionId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> now<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> elapsed<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> category<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> prepared<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> sql<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"[ \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" ] --- | took \"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">+</span> elapsed <span class=\"token operator\">+</span> <span class=\"token string\">\"ms | \"</span> <span class=\"token operator\">+</span> category <span class=\"token operator\">+</span> <span class=\"token string\">\" | connection \"</span> <span class=\"token operator\">+</span> connectionId <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n \"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token operator\">+</span> sql <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<ol start=\"2\">\n<li>将配置文件中的格式化器属性改为自己的类<br />\n logMessageFormat=com.xxx.xxx.P6SpyLogger</li>\n</ol>\n</blockquote>\n<h2 id=\"p6spy有3种日志输出方式\"><a class=\"anchor\" href=\"#p6spy有3种日志输出方式\">#</a> p6spy 有 3 种日志输出方式</h2>\n<pre><code>#（推荐）使用Slf4j输出 配合SpringBoot使用日志门面\n#appender=com.p6spy.engine.spy.appender.Slf4JLogger\n# 仅控制台输出\n#appender=com.p6spy.engine.spy.appender.StdoutLogger\n# 文件输出，使用内置日志输出到文件\n#appender=com.p6spy.engine.spy.appender.FileLogger\n</code></pre>\n<h2 id=\"附录spyproperties详细说明\"><a class=\"anchor\" href=\"#附录spyproperties详细说明\">#</a> 附录：spy.properties 详细说明</h2>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 指定应用的日志拦截模块，默认为 com.p6spy.engine.spy.P6SpyFactory</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#modulelist=com.p6spy.engine.spy.P6SpyFactory,com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 真实 JDBC driver , 多个以 逗号 分割 默认为空</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#driverlist=</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 是否自动刷新 默认 flase</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#autoflush=false</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 配置 SimpleDateFormat 日期格式 默认为空</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#dateformat=</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 打印堆栈跟踪信息 默认 flase</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#stacktrace=false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 如果 stacktrace=true，则可以指定具体的类名来进行过滤。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#stacktraceclass=</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 监测属性配置文件是否进行重新加载</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#reloadproperties=false</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 属性配置文件重新加载的时间间隔，单位：秒 默认 60s</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#reloadpropertiesinterval=60</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 指定 Log 的 appender，取值：</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#appender=com.p6spy.engine.spy.appender.StdoutLogger</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#appender=com.p6spy.engine.spy.appender.FileLogger</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 指定 Log 的文件名 默认 spy.log</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#logfile=spy.log</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 指定是否每次是增加 Log，设置为 false 则每次都会先进行清空 默认 true</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#append=true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 指定日志输出样式  默认为 com.p6spy.engine.spy.appender.SingleLineFormat , 单行输出 不格式化语句</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#logMessageFormat=com.p6spy.engine.spy.appender.SingleLineFormat</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 也可以采用  com.p6spy.engine.spy.appender.CustomLineFormat 来自定义输出样式，默认值是 %(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 可用的变量为:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#   %(connectionId)            connection id</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#   %(currentTime)             当前时间</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#   %(executionTime)           执行耗时</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#   %(category)                执行分组</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#   %(effectiveSql)            提交的 SQL 换行</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#   %(effectiveSqlSingleLine)  提交的 SQL 不换行显示</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#   %(sql)                     执行的真实 SQL 语句，已替换占位</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#   %(sqlSingleLine)           执行的真实 SQL 语句，已替换占位 不换行显示</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#customLogMessageFormat=%(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># date 类型字段记录日志时使用的日期格式 默认 dd-MMM-yy</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#databaseDialectDateFormat=dd-MMM-yy</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># boolean 类型字段记录日志时使用的日期格式 默认 boolean 可选值 numeric</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#databaseDialectBooleanFormat=boolean</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 是否通过 jmx 暴露属性 默认 true</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">#jmx=true</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># 如果 jmx 设置为 true 指定通过 jmx 暴露属性时的前缀 默认为空</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># com.p6spy(.&lt;jmxPrefix>)?:name=&lt;optionsClassName></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">#jmxPrefix=</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 是否显示纳秒 默认 false</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">#useNanoTime=false</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\"># 实际数据源 JNDI</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">#realdatasource=/RealMySqlDS</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># 实际数据源 datasource class</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">#realdatasourceclass=com.mysql.jdbc.jdbc2.optional.MysqlDataSource</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\"># 实际数据源所携带的配置参数 以 k=v 方式指定 以 分号 分割</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">#realdatasourceproperties=port;3306,serverName;myhost,databaseName;jbossdb,foo;bar</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># jndi 数据源配置</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># 设置 JNDI 数据源的 NamingContextFactory。</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">#jndicontextfactory=org.jnp.interfaces.NamingContextFactory</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># 设置 JNDI 数据源的提供者的 URL。</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\">#jndicontextproviderurl=localhost:1099</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># 设置 JNDI 数据源的一些定制信息，以分号分隔。</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">#jndicontextcustom=java.naming.factory.url.pkgs;org.jboss.naming:org.jnp.interfaces</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># 是否开启日志过滤 默认 false， 这项配置是否生效前提是配置了 include/exclude/sqlexpression</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">#filter=false</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># 过滤 Log 时所包含的表名列表，以逗号分隔 默认为空</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\">#include=</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># 过滤 Log 时所排除的表名列表，以逗号分隔 默认为空</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">#exclude=</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\"># 过滤 Log 时的 SQL 正则表达式名称  默认为空</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\">#sqlexpression=</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\">#显示指定过滤 Log 时排队的分类列表，取值: error, info, batch, debug, statement,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\">#commit, rollback, result and resultset are valid values</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token comment\"># (默认 info,debug,result,resultset,batch)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">#excludecategories=info,debug,result,resultset,batch</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># 是否过滤二进制字段</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># (default is false)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">#excludebinary=false</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># P6Log 模块执行时间设置，整数值 (以毫秒为单位)，只有当超过这个时间才进行记录 Log。 默认为 0</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">#executionThreshold=</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\"># P6Outage 模块是否记录较长时间运行的语句 默认 false</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># outagedetection=true|false</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\"># P6Outage 模块执行时间设置，整数值 （以秒为单位)），只有当超过这个时间才进行记录 Log。 默认 30s</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># outagedetectioninterval=integer time (seconds)</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "database",
                "mybatis",
                "知识点",
                "mybatis",
                "计算机学科",
                "database",
                "知识点"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/MyBatis%E5%B7%A5%E5%85%B7%E7%B1%BBMetaObject%E4%B8%8EMetaClass/",
            "url": "https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/MyBatis%E5%B7%A5%E5%85%B7%E7%B1%BBMetaObject%E4%B8%8EMetaClass/",
            "title": "MyBatis工具类MetaObject与MetaClass",
            "date_published": "2024-06-11T11:48:16.765Z",
            "content_html": "<h1 id=\"mybatis工具类metaobject与metaclass\"><a class=\"anchor\" href=\"#mybatis工具类metaobject与metaclass\">#</a> MyBatis 工具类 MetaObject 与 MetaClass</h1>\n<h2 id=\"metaobject\"><a class=\"anchor\" href=\"#metaobject\">#</a> MetaObject</h2>\n<p>MetaObject 是 MyBatis 反射工具类，通过 MetaObject 获取和设置对象的属性值</p>\n<h2 id=\"metaobject主要方法\"><a class=\"anchor\" href=\"#metaobject主要方法\">#</a> MetaObject 主要方法</h2>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hashGetter(name)</td>\n<td>判断是否有属性 name 或 name 的 getter 方法。&lt;br /&gt; 若定义 userId，没定义 getUserId () 方法，hasGetter (&quot;userId&quot;) 则返回 true；&lt;br /&gt; 若定义方法 getUserId1 ()，没定义属性 userId1，hasGetter (&quot;userId1&quot;) 则返回 true。</td>\n</tr>\n<tr>\n<td>getGetterNames()</td>\n<td>获取含有 getter 相关的属性名称。&lt;br /&gt; 若定义 userId，没定义 getUserId () 方法，则 userId 会被返回；&lt;br /&gt; 若定义方法 getUserId1 ()，没定义属性 userId1, 则 userId1 会被返回。</td>\n</tr>\n<tr>\n<td>getGetterType(name)</td>\n<td>获取 getter 方法的返回类型。</td>\n</tr>\n<tr>\n<td>getValue(name)</td>\n<td>获取属性值。</td>\n</tr>\n<tr>\n<td>hasSetter(name)</td>\n<td>判断是否有属性 name 或 name 的 setter 方法。&lt;br /&gt; 若定义 userId，没定义 setUserId (userId) 方法，hasSetter (&quot;userId&quot;) 则返回 true；&lt;br /&gt; 若定义方法 setUserId1 (userId1)，没定义属性 userId1，hasSetter (&quot;userId1&quot;) 则返回 true。</td>\n</tr>\n<tr>\n<td>getSetterNames()</td>\n<td>获取含有 setter 相关的属性名称。&lt;br /&gt; 若定义 userId，没定义 setUserId (userId) 方法，则 userId 会被返回；&lt;br /&gt; 若定义方法 setUserId1 (userId1)，没定义属性 userId1, 则 userId1 会被返回。</td>\n</tr>\n<tr>\n<td>getSetterType(name)</td>\n<td>获取 setter 方法的参数类型。</td>\n</tr>\n<tr>\n<td>setValue(name, value)</td>\n<td>设置属性值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"备注\"><a class=\"anchor\" href=\"#备注\">#</a> 备注</h3>\n<p>跟 getter 相关的 name，为属性名称 或 isXXX () /getXXX () 中的 XXX 部分 (首字母小写)</p>\n<p>跟 setter 相关的 name，为属性名称 或 setXXX () 中的 XXX 部分 (首字母小写)</p>\n<h2 id=\"相关例子\"><a class=\"anchor\" href=\"#相关例子\">#</a> 相关例子</h2>\n<p>接下来我们通过例子讲解如何通过 MetaObject 获取和设置对象属性。</p>\n<h3 id=\"创建一个metaobject对象\"><a class=\"anchor\" href=\"#创建一个metaobject对象\">#</a> 创建一个 MetaObject 对象</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">MetaObject</span> metaObject <span class=\"token operator\">=</span> <span class=\"token class-name\">SystemMetaObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">forObject</span><span class=\"token punctuation\">(</span>company<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"判断是否有getter方法\"><a class=\"anchor\" href=\"#判断是否有getter方法\">#</a> 判断是否有 getter 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasGetter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"companyName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取含有getter方法的属性名\"><a class=\"anchor\" href=\"#获取含有getter方法的属性名\">#</a> 获取含有 getter 方法的属性名</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">getGetterNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取getter方法的返回类型\"><a class=\"anchor\" href=\"#获取getter方法的返回类型\">#</a> 获取 getter 方法的返回类型</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">getGetterType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"companyName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取值\"><a class=\"anchor\" href=\"#获取值\">#</a> 获取值</h3>\n<p>eg：获取 Person 列表中第一个 Person 的 personName</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"persons[0].personName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"判断是否有setter方法\"><a class=\"anchor\" href=\"#判断是否有setter方法\">#</a> 判断是否有 setter 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasSetter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"companyName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取含有setter方法的属性名\"><a class=\"anchor\" href=\"#获取含有setter方法的属性名\">#</a> 获取含有 setter 方法的属性名</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSetterNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取setter方法的参数类型\"><a class=\"anchor\" href=\"#获取setter方法的参数类型\">#</a> 获取 setter 方法的参数类型</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSetterType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"companyName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"设置值\"><a class=\"anchor\" href=\"#设置值\">#</a> 设置值</h3>\n<p>eg：将 Person 列表中第一个 Person 的 personName 设置为 &quot;小马&quot;</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaObject<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"persons[0].personName\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"小马\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"meataclass\"><a class=\"anchor\" href=\"#meataclass\">#</a> MeataClass</h2>\n<p>与 MetaObject 不同的是，MetaObject 用于获取和设置对象的属性值，而 MetaClass 则用于获取类相关的信息。</p>\n<h2 id=\"metaclass主要方法\"><a class=\"anchor\" href=\"#metaclass主要方法\">#</a> MetaClass 主要方法</h2>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>静态方法 forClass (type, reflectorFactory)</td>\n<td>创建 MetaClass 对象</td>\n</tr>\n<tr>\n<td>hasDefaultConstructor()</td>\n<td>判断是否有默认构造方法</td>\n</tr>\n<tr>\n<td>hasGetter(name)</td>\n<td>判断是否有属性 name 或 name 的 getter 方法。与 MetaObject 判断类似。</td>\n</tr>\n<tr>\n<td>getGetterNames()</td>\n<td>获取含有 getter 相关的属性名称。与 MetaObject 判断类似。</td>\n</tr>\n<tr>\n<td>getGetInvoker(name)</td>\n<td>name 的 getter 方法的 Invoker。</td>\n</tr>\n<tr>\n<td>hasSetter(name)</td>\n<td>判断是否有属性 name 或 name 的 setter 方法。与 MetaObject 判断类似。</td>\n</tr>\n<tr>\n<td>getSetterNames()</td>\n<td>获取含有 setter 相关的属性名称。与 MetaObject 判断类似。</td>\n</tr>\n<tr>\n<td>getSetterType(name)</td>\n<td>获取 setter 方法的参数类型。与 MetaObject 判断类似。</td>\n</tr>\n<tr>\n<td>getSetInvoker(name)</td>\n<td>name 的 setter 方法的 Invoker。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"备注-2\"><a class=\"anchor\" href=\"#备注-2\">#</a> 备注</h3>\n<ul>\n<li>跟 getter 相关的 name，为属性名称 或 isXXX ()/getXXX () 中的 xXX 部分（首字母小写）</li>\n<li>跟 setter 相关的 name，为属性名称 或 setXXX () 中的 xXX 部分（首字母小写）</li>\n</ul>\n<h2 id=\"相关例子-2\"><a class=\"anchor\" href=\"#相关例子-2\">#</a> 相关例子</h2>\n<h3 id=\"创建一个metaclass对象\"><a class=\"anchor\" href=\"#创建一个metaclass对象\">#</a> 创建一个 MetaClass 对象</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">MetaClass</span> metaClass <span class=\"token operator\">=</span> <span class=\"token class-name\">MetaClass</span><span class=\"token punctuation\">.</span><span class=\"token function\">forClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultReflectorFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"判断是否有默认构造方法\"><a class=\"anchor\" href=\"#判断是否有默认构造方法\">#</a> 判断是否有默认构造方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">hasDefaultConstructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"判断是否有getter方法-2\"><a class=\"anchor\" href=\"#判断是否有getter方法-2\">#</a> 判断是否有 getter 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">hasGetter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取含有getter方法的属性名-2\"><a class=\"anchor\" href=\"#获取含有getter方法的属性名-2\">#</a> 获取含有 getter 方法的属性名</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getGetterNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取getter方法的返回类型-2\"><a class=\"anchor\" href=\"#获取getter方法的返回类型-2\">#</a> 获取 getter 方法的返回类型</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getGetterType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取值-2\"><a class=\"anchor\" href=\"#获取值-2\">#</a> 获取值</h3>\n<p>eg：person 的 personName</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Invoker</span> invoker <span class=\"token operator\">=</span> metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getGetInvoker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Object</span> personName <span class=\"token operator\">=</span> invoker<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"判断是否有setter方法-2\"><a class=\"anchor\" href=\"#判断是否有setter方法-2\">#</a> 判断是否有 setter 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">hasSetter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取含有setter方法的属性名-2\"><a class=\"anchor\" href=\"#获取含有setter方法的属性名-2\">#</a> 获取含有 setter 方法的属性名</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getSetterNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取setter方法的参数类型-2\"><a class=\"anchor\" href=\"#获取setter方法的参数类型-2\">#</a> 获取 setter 方法的参数类型</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getSetterType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"设置值-2\"><a class=\"anchor\" href=\"#设置值-2\">#</a> 设置值</h3>\n<p>eg：person 的 personName 设置为 &quot;小马&quot;</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Invoker</span> invoker <span class=\"token operator\">=</span> metaClass<span class=\"token punctuation\">.</span><span class=\"token function\">getSetInvoker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"personName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>invoker<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"小马\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "database",
                "mybatis",
                "知识点",
                "mybatis",
                "计算机学科",
                "database",
                "知识点"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/essay/B%E7%AB%AF%E4%B8%8EC%E7%AB%AF%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/",
            "url": "https://pigpigletsgo.github.io/essay/B%E7%AB%AF%E4%B8%8EC%E7%AB%AF%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/",
            "title": "B端与C端的区别",
            "date_published": "2024-06-11T02:58:28.891Z",
            "content_html": "<h1 id=\"b端与c端的区别\"><a class=\"anchor\" href=\"#b端与c端的区别\">#</a> B 端与 C 端的区别</h1>\n<p>B 端：Business，通常为企业内部或商家使用的系统或平台。如：企业内部 ERP 管理系统，财务管理平台等。</p>\n<p>C 端：Consumber (也可理解为 Constomber)，通常为消费者，个人终端用户使用的客户端。</p>\n<p>B 端与 C 端的区别有很多，本文我们将从双方的定义，产品特性，产品设计和产品运营方面来阐述 B 端与 C 端的区别</p>\n<h3 id=\"一-b端和c端的定义\"><a class=\"anchor\" href=\"#一-b端和c端的定义\">#</a> 一、B 端和 C 端的定义</h3>\n<p>B 端：B 端，代表企业用户商家，英文是 Business，是互联网产品中的商家界面 (即：管理平台)。用户通过它进行日常的商业活动，例如企业存库管理，销售统计，员工出勤考核等等。可以说，用来解决企业需求的产品，都是 B 端产品</p>\n<p>C 端：Consumber (也可理解为 Constomer)，通常为消费者，个人终端用户使用的客户端。如：微信，淘宝，网易云音乐等。</p>\n<h3 id=\"二-产品特性的差异和不同\"><a class=\"anchor\" href=\"#二-产品特性的差异和不同\">#</a> 二、产品特性的差异和不同</h3>\n<h4 id=\"1-所处行业与场景需求\"><a class=\"anchor\" href=\"#1-所处行业与场景需求\">#</a> 1、所处行业与场景需求</h4>\n<p>C 端产品并没有明显的行业特征，比如微信社交，淘宝购物，美团点餐，高德导航，更多的是满足了使用者在 &quot;生活场景&quot; 下的各种个人日常需求。</p>\n<p>B 端产品通常行业特征相对明显，更多的是满足了企业相关用户在 &quot;工作场景&quot; 下完成协同工作的一些特定组织需求</p>\n<h4 id=\"2-用户量级与类型\"><a class=\"anchor\" href=\"#2-用户量级与类型\">#</a> 2、用户量级与类型</h4>\n<p>C 端产品的用户量级大而广，用户可具体到每一个 &quot;终端个体&quot; ，一般称之为 &quot;用户&quot;</p>\n<p>而 B 端产品的用户量级更小，相对也更垂直，用户类型通常是 &quot;组织群体&quot; ，包括决策者，管理者，普通员工，区别于一般 &quot;用户&quot;， 更多情况下是被称为 &quot;客户&quot;</p>\n<h4 id=\"3-展示方式\"><a class=\"anchor\" href=\"#3-展示方式\">#</a> 3、展示方式</h4>\n<p>C 端产品通常以手机端为主，PC 端为次</p>\n<p>B 端产品多数都集中在 PC 端使用，使用 &quot;左导航右内容&quot; 的布局</p>\n<h4 id=\"4-盈利模式\"><a class=\"anchor\" href=\"#4-盈利模式\">#</a> 4、盈利模式</h4>\n<p>C 端产品打都免费开放给用户，在提供免费功能的基础上，再通过 &quot;拉新，留存，促活&quot; 等手段，转化其中一小部分用户。像漏斗模型一样，最终为服务付费的这部分用户为产品贡献了收益。这一切得益于 C 端产品大量级的用户规模，所以靠的是 &quot;规模经济&quot;</p>\n<p>B 端产品没有用户量级上的优势，偏向于服务企业内部的工作协同，就需要为不同的生产关系和工作协作场景做个性化定制，靠企业对 &quot;定制付费&quot; 来获得收益</p>\n<h3 id=\"三-产品设计的差异和不同\"><a class=\"anchor\" href=\"#三-产品设计的差异和不同\">#</a> 三、产品设计的差异和不同</h3>\n<h4 id=\"1-功能设计\"><a class=\"anchor\" href=\"#1-功能设计\">#</a> 1、功能设计</h4>\n<p>对于 C 端产品而言，需要至少有一个核心的主要功能点能满足用户的某一项诉求。围绕这个具体的核心功能，再去考虑附加更好的用户体验和增值服务。</p>\n<p>B 端产品来说，要解决的主要是不同生产关系的协作沟通需求。在中心化的组织架构下，B 端产品需要满足不同层级和组织内外的协作沟通，功能呈现模块化。</p>\n<h4 id=\"2-角色设计\"><a class=\"anchor\" href=\"#2-角色设计\">#</a> 2、角色设计</h4>\n<p>C 端产品的用户虽然大致需求一致，但每个人的身份，年龄，兴趣，偏好都不尽相同，这就要求产品经理从大众多端用户中抽象出样本特征，形成不同的用户画像，有针对性的满足各类人群的个性需求。</p>\n<p>而 B 端产品的用户量级小，但用户角色众多 (决策者，管理者，普通员工) ，需要好好分析各角色的需求关注点，并做好角色分配和权限管理上的设计。</p>\n<p>比如在 B 端产品中的用户中，有 &quot;决策者， 管理者，普通员工股&quot; 的区分。它们同样是 B 端产品的用户，但对产品的期望和关注点是不同的：</p>\n<ul>\n<li>决策者 (老板)：关注企业的总体效率和成本</li>\n<li>管理者 (部门领导)：关注管理职责和工作成绩</li>\n<li>普通员工 (使用用户)：关注软件是否简单易上手，能否减轻工作负担</li>\n</ul>\n<h4 id=\"3-视觉体验设计\"><a class=\"anchor\" href=\"#3-视觉体验设计\">#</a> 3、视觉体验设计</h4>\n<p>C 端产品需要兼顾 &quot;用户体验&quot; 和 &quot;商业化变现&quot; 的平衡，所以会额外重试在视觉体验上的设计。不仅要让用户有快速流畅的使用体验，更要用趣味性的设计引导用户自发地做社交分享</p>\n<p>B 端产品需要满足用户集中精力完成具体的工作事项，不被打扰地进行严谨的流程操作。所以在视觉上多是保持干净简单的简介风</p>\n<h3 id=\"四-产品运营的差异和不同\"><a class=\"anchor\" href=\"#四-产品运营的差异和不同\">#</a> 四、产品运营的差异和不同</h3>\n<h4 id=\"1-运营目标\"><a class=\"anchor\" href=\"#1-运营目标\">#</a> 1、运营目标</h4>\n<p>在相同转化率的前提下，想到得到分子的增长，分母必须要等比例的更多增长。C 端产品的盈利模式决定了想要创造更大的价值，就需要依靠持续的用户量级的增长</p>\n<p>B 端产品相比 C 端，更看重看中稳定的专业能力，不求大起大落，只求不要出错，避免给企业带来损失</p>\n<h4 id=\"2-运营策略\"><a class=\"anchor\" href=\"#2-运营策略\">#</a> 2、运营策略</h4>\n<p>C 端产品依靠大量级用户盈利模式，决定了 C 端产品需要利用 &quot;红包 ，优惠卷&quot;，精神奖励 等营销方式，以利益激励用户主动在线上进行 &quot;对外分享传播&quot; ，实现以不断新增的日活来加持自身体量</p>\n<p>B 端产品有着天然的 &quot;封闭&quot; 特性，营销上也更传统，通常将线下 &quot;大型会议，峰会，行业展会&quot; 作为主要场地，近距离接近客户，通过树立行业级别内的 &quot;专业形象&quot; 来吸引企业客户的兴趣</p>\n<h4 id=\"3-运营程度\"><a class=\"anchor\" href=\"#3-运营程度\">#</a> 3、运营程度</h4>\n<p>C 端产品早已将运营转化，并细化到各维度的运营了，比如运营的工种可以细分为 &quot;活动运营岗，用户运营岗，增长裂变岗，内容运营岗&quot; 等等。</p>\n<p>B 端产品的运营往往不被重视，也没有 C 端那么专业化。在运营预算有限的情况下，通常是 &quot;运维多于运营&quot;，只集中精力关注用户对产品的认可度和系统问题的定位。</p>\n",
            "tags": [
                "essay",
                "文章"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/spring/blog/@PropertySource%E5%92%8C@ConfigurationProperties%E5%8C%BA%E5%88%AB/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/spring/blog/@PropertySource%E5%92%8C@ConfigurationProperties%E5%8C%BA%E5%88%AB/",
            "title": "PropertySource和ConfigurationProperties区别",
            "date_published": "2024-06-08T07:52:40.968Z",
            "content_html": "<h1 id=\"propertysource和configurationproperties区别\"><a class=\"anchor\" href=\"#propertysource和configurationproperties区别\">#</a> @PropertySource 和 @ConfigurationProperties 区别</h1>\n<p>@ConfigurationProperties<br />\n@ConfigurationProperties 是 springboot 中注解，用于将主配置文件 (application.properties 或者 “application.yml” ) 中的属性，映射到实体类中对应的属性。<br />\n意思就是把主配置文件中配置属性设置到对应的 Bean 属性上。</p>\n<p>常见使用方式：</p>\n<ol>\n<li>@ConfigurationProperties + @Component 注解到 bean 定义类上</li>\n<li>@ConfigurationProperties + @Bean 注解在配置类的 bean 定义方法上</li>\n<li>@ConfigurationProperties 注解到普通类然后通过 @EnableConfigurationProperties 定义为 bean</li>\n</ol>\n<p>@Bean,@Component 这种我们可以理解，两个注解都能标识一个 Bean.</p>\n<p>@EnableConfigurationProperties 是如何让其成为一个 bean 的呢？</p>\n<p><strong>@EnableConfigurationProperties 源码分析</strong>：<br />\n@EnableConfigurationProperties 注解会导入一个 EnableConfigurationPropertiesImportSelector 类，其 selectImports 方法返回的类，将注册为 beandefinition。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">selectImports</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t获取<span class=\"token annotation punctuation\">@EnableConfigurationProperties</span>的参数信息</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token class-name\">MultiValueMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> attributes <span class=\"token operator\">=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">getAllAnnotationAttributes</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">EnableConfigurationProperties</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> type <span class=\"token operator\">=</span> attributes <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t\t<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> attributes<span class=\"token punctuation\">.</span><span class=\"token function\">getFirst</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t参数没有值<span class=\"token punctuation\">,</span>注册<span class=\"token number\">1</span>个</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> type<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">ConfigurationPropertiesBindingPostProcessorRegistrar</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t参数有值，注册两个</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">ConfigurationPropertiesBeanRegistrar</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">ConfigurationPropertiesBindingPostProcessorRegistrar</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总的来说会注册两个类：</p>\n<ul>\n<li>ConfigurationPropertiesBindingPostProcessorRegistrar</li>\n<li>ConfigurationPropertiesBeanRegistrar</li>\n</ul>\n<ol>\n<li>ConfigurationPropertiesBindingPostProcessorRegistrar： 看名字我们也可以看出 ConfigurationPropertiesBindingPostProcessor 注册器，没错就是用来注册 ConfigurationPropertiesBindingPostProcessor 这个 BeanPostProcessor 的。BeanPostProcessor 会在创建 bean 的时候，被执行处理 Bean 相关信息。ConfigurationPropertiesBindingPostProcessor 这个 BeanPostProcessor 是就是用来解析 Bean 上的 @ConfigurationProperties 注解的。</li>\n</ol>\n<p>ConfigurationPropertiesBindingPostProcessor 会检查 Bean 是否有 @ConfigurationProperties，如果有就绑定相关配置属性到本 bean 的相关属性上。</p>\n<ol start=\"2\">\n<li>ConfigurationPropertiesBeanRegistrar： 看名字，ConfigurationPropertiesBean 注册器，ConfigurationPropertiesBeanRegistrar 是在 @ConfigurationProperties 的 value 属性有值的情况下注册的。<br />\n例如：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableConfigurationProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">EurekaDashboardProperties</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token class-name\">InstanceRegistryProperties</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>ConfigurationPropertiesBeanRegistrar 实现了 ImportBeanDefinitionRegistrar 接口，所以他的 registerBeanDefinitions 方法，也会注册 Bean. 注册就是 @EnableConfigurationProperties 的 value 值，例如例子中 EurekaDashboardProperties.class,InstanceRegistryProperties.class</p>\n<p>由此我们可以看出：<br />\n@Component， @Bean , ConfigurationPropertiesBeanRegistrar 都是为了告诉 spring，对应的类是一个 Bean，spring 要去加载，解析，创建 Bean.<br />\n 而 ConfigurationPropertiesBindingPostProcessor 的工作就是完成配置信息到 Bean 属性的绑定工作。</p>\n<p>@EnableConfigurationProperties 的目的</p>\n<ul>\n<li>保证容器中有解析 ConfigurationProperties 注解的 BeanPostProcessor</li>\n<li>向容器内注入 value 对应的 BeanDefinition</li>\n</ul>\n<blockquote>\n<p>idea 中，在主配置文件 ctrl + 鼠标 能看到这对应的属性被哪个 @ConfigurationProperties 修饰的属性类使用</p>\n</blockquote>\n<p>@ConfigurationProperties 是针对主配置文件的。但是我们不想所有的配置都放到主配置文件中怎么办？？？？</p>\n<p><strong>@PropertySource</strong><br />\n@PropertySource 是 spring 的注解<br />\n加载指定的属性文件的配置到 Spring 的 Environment 中。可以配合 @Value 和 @ConfigurationProperties 使用。</p>\n<p>用法：</p>\n<ol>\n<li>@Configuration+ @PropertySource+Environment</li>\n<li>@Configuration+ @PropertySource+@Value</li>\n<li>@Configuration+ @PropertySource+@ConfigurationProperties</li>\n</ol>\n<p>@Configuration 本质也是告诉 spring 这是一个 bean.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>my<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>helloworld</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my<span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span><span class=\"token number\">8</span></pre></td></tr></table></figure><p>@Configuration+ @PropertySource+Environment</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:hellword.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorldConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Environment</span> env<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>@Configuration+ @PropertySource+@Value</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:hellword.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorldConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>my<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>@Configuration+ @PropertySource+@ConfigurationProperties<br />\n@PropertySource 指定加载哪个文件，@ConfigurationProperties 指定加载文件中的哪一类属性。<br />\n@PropertySource+@ConfigurationProperties 在一起解决了 @ConfigurationProperties 只能加载主文件内属性问题。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:hellword.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"my\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorldConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结：</h4>\n<p>灵活利用这两个注解，能够把配置信息安排有层次感</p>\n",
            "tags": [
                "计算机学科",
                "java",
                "spring",
                "blog",
                "springboot",
                "计算机学科",
                "blog"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/tools/idea/idea%E7%94%9F%E6%88%90%E6%B3%A8%E9%87%8A/",
            "url": "https://pigpigletsgo.github.io/tools/idea/idea%E7%94%9F%E6%88%90%E6%B3%A8%E9%87%8A/",
            "title": "idea生成注释",
            "date_published": "2024-06-07T12:08:48.343Z",
            "content_html": "<h1 id=\"idea生成注释\"><a class=\"anchor\" href=\"#idea生成注释\">#</a> idea 生成注释</h1>\n<p>类的注释</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240607200549174.png\" alt=\"image-20240607200549174\" /></p>\n<pre><code>/**\n* $&#123;description&#125;\n*\n* @author: Gao Tianle\n*\n* @date: $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;\n**/\n</code></pre>\n<p>方法的注释</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240607200710657.png\" alt=\"image-20240607200710657\" /></p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240607200725121.png\" alt=\"image-20240607200725121\" /></p>\n<pre><code>/**\n * \n * @param \n * @return\n * @author Gao Tianle\n * @date $date$ $time$\n */\n</code></pre>\n",
            "tags": [
                "tools",
                "idea",
                "idea",
                "tools"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/tools/Interfacetesting/swaggerOrKnife4j/%E9%85%8D%E7%BD%AE%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3Swagger%E5%92%8CKnife4j%E6%95%99%E7%A8%8B/",
            "url": "https://pigpigletsgo.github.io/tools/Interfacetesting/swaggerOrKnife4j/%E9%85%8D%E7%BD%AE%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3Swagger%E5%92%8CKnife4j%E6%95%99%E7%A8%8B/",
            "title": "配置接口文档Swagger和Knife4j教程",
            "date_published": "2024-06-06T06:55:46.581Z",
            "content_html": "<h1 id=\"配置接口文档swagger和knife4j教程\"><a class=\"anchor\" href=\"#配置接口文档swagger和knife4j教程\">#</a> 配置接口文档 Swagger 和 Knife4j 教程</h1>\n<p>这里介绍了如何配置 <code>Swagger</code>  和 <code>Knife4j 3.0</code>  版本，强烈建议大家使用 <code>Knife4j</code> ，因为它的前身是 <code>swagger-bootstrap-ui</code> ，是在 <code>Swagger</code>  的基础上进行了界面的优化，使用起来比 <code>Swagger</code>  舒服了太多</p>\n<h2 id=\"配置swagger\"><a class=\"anchor\" href=\"#配置swagger\">#</a> 配置 Swagger</h2>\n<p>首先在 pom.xml 中加入依赖</p>\n<p>springboot 2.2.x 以下版本和 2.2.x 以上版本使用依赖不同</p>\n<pre><code>&lt;!--如果使用的springboot是 2.2.x 以下版本，需要同时配置springfox-swagger2 和 springfox-swagger-ui--&gt;\n &lt;dependencies&gt;\n\t&lt;dependency&gt;\n\t    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n\t    &lt;version&gt;2.1.3.RELEASE&lt;/version&gt;\n\t&lt;/dependency&gt;\n    \n\t&lt;dependency&gt;\n\t     &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n\t     &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;\n\t     &lt;version&gt;2.9.2&lt;/version&gt; &lt;!-- 这是一个与Spring Boot 2.1.x兼容的版本 --&gt;\n\t &lt;/dependency&gt;\n\t &lt;dependency&gt;\n\t     &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n\t     &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n\t     &lt;version&gt;2.9.2&lt;/version&gt; &lt;!-- 保持与springfox-swagger2的版本一致 --&gt;\n\t &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>\n<pre><code> &lt;!-- 如果使用的springboot是 2.2.x 以上版本，可以直接引入springfox-boot-starter--&gt;\ndependencies&gt;\n\t&lt;dependency&gt;\n\t    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n\t    &lt;version&gt;2.2.13.RELEASE&lt;/version&gt;\n\t&lt;/dependency&gt;\n    \n\t&lt;dependency&gt;\n\t    &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n\t    &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;\n\t    &lt;version&gt;3.0.0&lt;/version&gt;\n\t&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>\n<p>加入配置文件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiOperation</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiInfoBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathSelectors</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestHandlerSelectors</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableOpenApi</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiInfo</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Contact</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentationType</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Docket</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@EnableOpenApi</span>   <span class=\"token comment\">// 开启 Swagger 自定义接口文档</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span>   <span class=\"token comment\">// 相当于 Spring 配置中的 & lt;beans></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SwaggerConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 读取 yaml 中的配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger.enable&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> enable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span>   <span class=\"token comment\">// 相当于 Spring 配置中的 & lt;bean></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Docket</span> <span class=\"token function\">createRestApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Docket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">OAS_30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token comment\">// 配置 swagger 是否生效</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>enable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">withMethodAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApiOperation</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     <span class=\"token comment\">//           .apis (RequestHandlerSelectors.basePackage (\"com.yourcompany.yourproject.controller\")) // 替换为你的 controller 包路径  </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">paths</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// API 基础信息定义（就是更新 Swagger 默认页面上的信息）</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ApiInfo</span> <span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiInfoBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Swagger3接口文档测试\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这里是文档描述\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">contact</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Contact</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小盛\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"网址\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"邮箱\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v1.0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建一个 Controller</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/v2/user\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Api</span><span class=\"token punctuation\">(</span>tags <span class=\"token operator\">=</span> <span class=\"token string\">\"用户管理\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"分页查询\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"嘿嘿\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/haha\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"分页查询2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"花花\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"女\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打开网址 http://localhost:8080/swagger-ui/index.html 即可看到如下接口文档界面<br />\n其中 ip 和端口设置为你自己的即可</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606145007430.png\" alt=\"image-20240606145007430\" /></p>\n<p>yaml 配置，如果上生产了需要禁用 swagger，则改为 false 即可：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#是否激活 swagger true or false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">swagger</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h2 id=\"配置knife4j强烈推荐\"><a class=\"anchor\" href=\"#配置knife4j强烈推荐\">#</a> 配置<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1LbmlmZTRqJmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==\"> Knife4j</span>（强烈推荐）</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2MueGlhb21pbmZvLmNvbS9rbmlmZTRqL2RvY3VtZW50YXRpb24v\">Knife4j 使用文档</span></p>\n<pre><code>友情提示\n\n1、目前已经发行的Knife4j版本，Knife4j本身已经引入了springfox，开发者在使用时不用再单独引入Springfox的具体版本，否额会导致版本冲突。另外在网关层聚合(例如gateway)时，必须禁用Knife4j的增强模式\n\n2、使用Knife4j2.0.6及以上的版本，Spring Boot的版本必须大于等于2.2.x\n\n3、微服务聚合组件Knife4jAggregation强势发布，聚合OpenAPI文档太简单了,详见文档\n\n4、Knife4j独立运行版本Knife4jAggregationDesktop强势发布,使用Knife4j渲染OpenAPI文档很简单,详见文档\n</code></pre>\n<p>pom.xml 加入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 跟 swagger 类似，支持 springboot 2.2.x 以上版本 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.github.xiaoymin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>knife4j-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.0.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>配置文件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiInfoBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathSelectors</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestHandlerSelectors</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Contact</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DocumentationType</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Docket</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">springfox<span class=\"token punctuation\">.</span>documentation<span class=\"token punctuation\">.</span>swagger2<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableSwagger2WebMvc</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@EnableSwagger2WebMvc</span> <span class=\"token comment\">// 貌似被弃用，可以替换为 @EnableSwagger2</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Knife4jConfiguration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;swagger.enable&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> enable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"defaultApi2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Docket</span> <span class=\"token function\">defaultApi2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">Docket</span> docket<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Docket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DocumentationType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SWAGGER_2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        \t\t<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>enable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apiInfo</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                \t<span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiInfoBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//.title(\"swagger-bootstrap-ui-demo RESTful APIs\")</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t                <span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"# swagger-bootstrap-ui-demo RESTful APIs\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t                <span class=\"token punctuation\">.</span><span class=\"token function\">termsOfServiceUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.xx.com/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t                <span class=\"token punctuation\">.</span><span class=\"token function\">contact</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Contact</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小盛\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"504040410@qq.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t                <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token comment\">// 分组名称</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">groupName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2.X版本\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token comment\">// 这里指定你自己的 Controller 扫描包路径</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">apis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestHandlerSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">basePackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.example.demo.controller\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">paths</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PathSelectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> docket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编写 Controller</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/v2/user\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Api</span><span class=\"token punctuation\">(</span>tags <span class=\"token operator\">=</span> <span class=\"token string\">\"用户管理\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"分页查询\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"嘿嘿\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/haha\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"分页查询2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"花花\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"女\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问 http://localhost:8080/doc.html#/home，ip 和端口改为你自己的，接口文档界面如下</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606145144826.png\" alt=\"image-20240606145144826\" /></p>\n<p>yaml 配置，如果上生产了需要禁用 swagger，则改为 false 即可：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#是否激活 swagger true or false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">swagger</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h2 id=\"注解使用\"><a class=\"anchor\" href=\"#注解使用\">#</a> 注解使用</h2>\n<ul>\n<li>@Api：用在 controller 类上，描述 API 接口，例：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Api</span><span class=\"token punctuation\">(</span>tags <span class=\"token operator\">=</span> <span class=\"token string\">\"用户管理\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>@ApiOperation：用在 controller 的方法上，例：</li>\n<li>PS：如果接口使用了 @RequestMapping 的话它会生成 get，post，put，delete 不同的请求方式的接口，所以最好指定 RestFull</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"分页查询\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>@ApiModel：用在实体类上</li>\n<li>@ApiModelProperty：描述对象属性</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Accessors</span><span class=\"token punctuation\">(</span>chain <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 这个是 lombok 注解</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ApiModel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户实体类\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserEntity</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名称\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"性别\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以下三个注解实际上很少用</p>\n<ul>\n<li>@ApiImplicitParams：描述接口参数</li>\n<li>@ApiResponses：描述接口响应</li>\n<li>@ApiIgnore：忽略不显示接口参数</li>\n</ul>\n<h2 id=\"用swagger3替换swagger2注释\"><a class=\"anchor\" href=\"#用swagger3替换swagger2注释\">#</a> 用 Swagger3 替换 Swagger2 注释</h2>\n<p>(它已经包含在 springdoc-openapi-ui 依赖项中)。swagger3 注释的包是 io.swagger.v3.oas.annotations</p>\n<h3 id=\"依赖项\"><a class=\"anchor\" href=\"#依赖项\">#</a> 依赖项：</h3>\n<p>swagger3 只需要一个依赖即可</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.springfox<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>springfox-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"swagger2到swagger3的变化规则\"><a class=\"anchor\" href=\"#swagger2到swagger3的变化规则\">#</a> Swagger2 到 Swagger3 的变化规则：</h3>\n<pre><code>@Api → @Tag\n \n@ApiIgnore → @Parameter(hidden = true)或@Operation(hidden = true)或@Hidden\n \n@ApiImplicitParam → @Parameter\n \n@ApiImplicitParams → @Parameters\n \n@ApiModel → @Schema\n \n@ApiModelProperty(hidden = true) → @Schema(accessMode = READ_ONLY)\n \n@ApiModelProperty → @Schema(description = &quot;描述&quot;)\n \n@ApiOperation(value = &quot;foo&quot;, notes = &quot;bar&quot;) → @Operation(summary = &quot;foo&quot;, description = &quot;bar&quot;)\n \n@ApiParam → @Parameter\n \n@ApiResponse(code = 404, message = &quot;foo&quot;) → @ApiResponse(responseCode = &quot;404&quot;, description = &quot;foo&quot;)\n</code></pre>\n",
            "tags": [
                "tools",
                "Interfacetesting",
                "swaggerOrKnife4j",
                "tools",
                "Interfacetesting"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/tools/Interfacetesting/postman/postman%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80token%E8%AE%A4%E8%AF%81/",
            "url": "https://pigpigletsgo.github.io/tools/Interfacetesting/postman/postman%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80token%E8%AE%A4%E8%AF%81/",
            "title": "postman配置全局token认证",
            "date_published": "2024-06-06T06:40:56.101Z",
            "content_html": "<h1 id=\"postman配置全局token认证\"><a class=\"anchor\" href=\"#postman配置全局token认证\">#</a> postman 配置全局 token 认证</h1>\n<h2 id=\"定义全局authorization\"><a class=\"anchor\" href=\"#定义全局authorization\">#</a> 定义全局 Authorization</h2>\n<p>整个项目全局定义一个 bearer token</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143616604.png\" alt=\"image-20240606143616604\" /></p>\n<p>使用刚刚定义的 token 变量，这里也可以将变量改为其它的比如使用 Authorization 作为变量名都可以</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143703645.png\" alt=\"image-20240606143703645\" /></p>\n<p>单个认证中选择继承父级即可</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143728024.png\" alt=\"image-20240606143728024\" /></p>\n<p>登录接口下定义一个请求成功会执行的脚本</p>\n<p>选择一个执行完 post 请求成功之后会执行的回调脚本</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143823181.png\" alt=\"image-20240606143823181\" /></p>\n<p>书写脚本 (js)</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143845092.png\" alt=\"image-20240606143845092\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pm<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successful POST request\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> pm<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将返回的响应转成 json 格式返回</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pm<span class=\"token punctuation\">.</span>collectionVariables<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置一个全局的变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>每次响应成功之后都会更新全局变量 token</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240606143925352.png\" alt=\"image-20240606143925352\" /></p>\n",
            "tags": [
                "tools",
                "Interfacetesting",
                "postman",
                "tools",
                "Interfacetesting"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/database/postgreSQL12/pgAdmin4/%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/",
            "url": "https://pigpigletsgo.github.io/computer-science/database/postgreSQL12/pgAdmin4/%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/",
            "title": "备份数据",
            "date_published": "2024-06-05T08:09:42.875Z",
            "content_html": "<h1 id=\"备份数据\"><a class=\"anchor\" href=\"#备份数据\">#</a> 备份数据</h1>\n<p>右击数据库，点击备份</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240605160401460.png\" alt=\"image-20240605160401460\" /></p>\n<p>选择到导出的位置并命名一下导出的名称和格式为.buckup 格式</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240605160513738.png\" alt=\"image-20240605160513738\" /></p>\n<p>其它的选项如下然后直接点击备份就可以了</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240605160551086.png\" alt=\"image-20240605160551086\" /></p>\n",
            "tags": [
                "计算机学科",
                "database",
                "postgreSQL12",
                "pgAdmin4",
                "计算机学科",
                "database",
                "postgreSQL12"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/spring/springcloud/%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/spring/springcloud/%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/",
            "title": "微服务,使用心得",
            "date_published": "2024-06-04T06:33:06.392Z",
            "content_html": "<h1 id=\"使用心得\"><a class=\"anchor\" href=\"#使用心得\">#</a> 使用心得</h1>\n<h2 id=\"nacos\"><a class=\"anchor\" href=\"#nacos\">#</a> nacos</h2>\n<p>nacos 的配置管理和服务管理</p>\n<p>我们可以将 该模块的服务发现配置，配置到 nacos 中命名为 other.yml。随后我们在项目模块中创建的 bootstrap.yml 中进行配置 配置管理就可以了如下：</p>\n<p>bootstrap.yml</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.56.10<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> 213cbf4d<span class=\"token punctuation\">-</span>8431<span class=\"token punctuation\">-</span>4612<span class=\"token punctuation\">-</span>8037<span class=\"token punctuation\">-</span>4ccfd264fd94</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token key atrule\">ext-config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> oss.yml</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> other.yml</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gulimall<span class=\"token punctuation\">-</span>third<span class=\"token punctuation\">-</span>party</pre></td></tr></table></figure><p>nacos 中的配置</p>\n<p>先创建一个命名空间为该项目的比如：third-party</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240604142033810.png\" alt=\"image-20240604142033810\" /></p>\n<p>在这个 third-party 命名空间中来创建相关配置</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240604142118980.png\" alt=\"image-20240604142118980\" /></p>\n<p>oss 的主要就是配置了 oss 对象存储的一些配置，我们来看 other 的配置</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8877</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.56.10<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gulimall<span class=\"token punctuation\">-</span>third<span class=\"token punctuation\">-</span>party</pre></td></tr></table></figure><p>其中配置了该模块的基本信息和服务发现的配置</p>\n<p>PS：服务发现如果需要配合其它的模块那么它们最好在同一个命名空间中，如下：注意我说的是服务发现而不是配置，配置可以隔离</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240604142335059.png\" alt=\"image-20240604142335059\" /></p>\n<p>这里由于我其他的模块都需要通过网关负载均衡到 renren-fast 模块中，所以不能进行 命名空间的隔离否则就会 503</p>\n<h2 id=\"gateway\"><a class=\"anchor\" href=\"#gateway\">#</a> gateway</h2>\n<h3 id=\"重写url规则\"><a class=\"anchor\" href=\"#重写url规则\">#</a> 重写 URL 规则：</h3>\n<p>我需要将路径如：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDg4L2FwaS90aGlyZHBhcnR5L2dldFVwbG9hZA==\">http://localhost:8088/api/thirdparty/getUpload</span> 中的 api/thirdparty/ 进行过滤掉 替换为 http://localhost:8088/getUpload</p>\n<p>/api/thirdparty/ 是前端访问接口时必须的前缀</p>\n<p>可以进行如下配置：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8088</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.56.10<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token comment\"># 这里需要注意一下顺序，它会按照顺序来执行条件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> product_route</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//gulimail<span class=\"token punctuation\">-</span>product</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/api/product/<span class=\"token important\">**</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">-</span> RewritePath=/api/(<span class=\"token punctuation\">?</span>&lt;segment<span class=\"token punctuation\">></span>.<span class=\"token important\">*)</span><span class=\"token punctuation\">,</span>/$\\<span class=\"token punctuation\">&#123;</span>segment<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> third_party_route</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//gulimall<span class=\"token punctuation\">-</span>third<span class=\"token punctuation\">-</span>party</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/api/thirdparty/<span class=\"token important\">**</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">-</span> RewritePath=/api/thirdparty/(<span class=\"token punctuation\">?</span>&lt;segment<span class=\"token punctuation\">></span>.<span class=\"token important\">*)</span><span class=\"token punctuation\">,</span>/$\\<span class=\"token punctuation\">&#123;</span>segment<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> admin_route</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//renren<span class=\"token punctuation\">-</span>fast</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/api/<span class=\"token important\">**</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">-</span> RewritePath=/api/(<span class=\"token punctuation\">?</span>&lt;segment<span class=\"token punctuation\">></span>.<span class=\"token important\">*)</span><span class=\"token punctuation\">,</span>/renren<span class=\"token punctuation\">-</span>fast/$\\<span class=\"token punctuation\">&#123;</span>segment<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gulimail<span class=\"token punctuation\">-</span>gateway</pre></td></tr></table></figure><p>RewritePath=/api/(?&lt;segment&gt;.*),/renren-fast/${segment} 的解释如下：</p>\n<p><code>RewritePath=/api/thirdparty/(?&lt;segment&gt;.*),/$\\&#123;segment&#125;</code>  这一规则通常用于 URL 重写。在这种情况下，这条规则可能被应用在一个反向代理服务器或 API 网关中，目的是将请求的 URL 进行修改或重定向。</p>\n<p>让我们分解这条规则并详细解释其含义：</p>\n<ol>\n<li>\n<p><strong> <code>RewritePath</code> </strong>：这是一个重写路径的指令，表明接下来的内容将用于 URL 重写。</p>\n</li>\n<li>\n<p><code>/api/thirdparty/(?&lt;segment&gt;.*)</code></p>\n<p>：这是一个正则表达式，用于匹配请求的原始 URL。</p>\n<ul>\n<li><code>/api/thirdparty/</code> ：这是 URL 的固定部分，需要匹配这个前缀。</li>\n<li><code>(?&lt;segment&gt;.*)</code> ：这是一个命名捕获组，名为 <code>segment</code> 。 <code>.*</code>  表示匹配任意字符（包括没有字符），捕获的内容会被放入 <code>segment</code>  变量中。</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>,</code> </strong>：逗号用来分隔原始 URL 模式和重写后的目标 URL。</p>\n</li>\n<li>\n<p><code>/$&#123;segment&#125;</code></p>\n<p>：这是重写后的目标 URL。</p>\n<ul>\n<li><code>$&#123;segment&#125;</code> ：表示引用之前捕获的 <code>segment</code>  变量的内容。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"举例说明\"><a class=\"anchor\" href=\"#举例说明\">#</a> 举例说明</h3>\n<p>假设有一个原始请求 URL：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/api/thirdparty/service/data</pre></td></tr></table></figure><p>根据重写规则：</p>\n<ul>\n<li>匹配部分： <code>/api/thirdparty/</code>  和  <code>service/data</code> ，其中  <code>service/data</code>  会被捕获到  <code>segment</code>  变量中。</li>\n<li>重写部分： <code>$&#123;segment&#125;</code>  变成  <code>service/data</code> 。</li>\n</ul>\n<p>所以，重写后的 URL 将变成：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/service/data</pre></td></tr></table></figure><h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>这条规则的作用是将所有以 <code>/api/thirdparty/</code>  开头的请求路径重写为去掉 <code>/api/thirdparty/</code>  前缀的路径。即， <code>/api/thirdparty/xxx</code>  被重写为  <code>/xxx</code> 。</p>\n",
            "tags": [
                "计算机学科",
                "java",
                "spring",
                "springcloud",
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/spring/springcloud/Nacos/%E4%BD%BF%E7%94%A8/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/spring/springcloud/Nacos/%E4%BD%BF%E7%94%A8/",
            "title": "oss对象存储基本使用",
            "date_published": "2024-06-04T00:16:28.050Z",
            "content_html": "<h1 id=\"oss对象存储基本使用\"><a class=\"anchor\" href=\"#oss对象存储基本使用\">#</a> oss 对象存储基本使用</h1>\n<p>进入到阿里云的官网网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS8=\">https://www.aliyun.com/</span></p>\n<p>鼠标停留到 产品 处 ，再停留到 存储 处，点击对象存储</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603191801376.png\" alt=\"image-20240603191801376\" /></p>\n<p>此时就会跳转到开通的页面，点击开通</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603191828849.png\" alt=\"image-20240603191828849\" /></p>\n<p>点击 立即开通</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603191845955.png\" alt=\"image-20240603191845955\" /></p>\n<p>开通成功后点击 管理控制台 进入控制台页面</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603192101534.png\" alt=\"image-20240603192101534\" /></p>\n<p>进入如下页面说明开通成功</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603192326080.png\" alt=\"image-20240603192326080\" /></p>\n<p>首先要使用我们需要先了解一些专业术语</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603192909428.png\" alt=\"image-20240603192909428\" /></p>\n<p>下面创建一个 bucket，其中选择低频访问，因为只是测试项目，选择公共读因为私有的我们每次上传都需要携带账号和密码。最后点击  完成创建</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603194233168.png\" alt=\"image-20240603194233168\" /></p>\n<p>创建完成后我们点击进入这个 bucket 进行上传文件，点击扫描文件选择好要上传的文件后点击上传文件</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603194704666.png\" alt=\"image-20240603194704666\" /></p>\n<h2 id=\"java使用oss如下\"><a class=\"anchor\" href=\"#java使用oss如下\">#</a> java 使用 oss 如下：</h2>\n<h3 id=\"导入依赖\"><a class=\"anchor\" href=\"#导入依赖\">#</a> 导入依赖：</h3>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.aliyun.oss<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>aliyun-sdk-oss<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.15.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"文件上传\"><a class=\"anchor\" href=\"#文件上传\">#</a> 文件上传</h3>\n<p>引用上传文件的代码案例：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OSS</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OSSClientBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OSSException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PutObjectRequest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>oss<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PutObjectResult</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// Endpoint 以华东 1（杭州）为例，其它 Region 请按实际情况填写。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">String</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">\"https://oss-cn-hangzhou.aliyuncs.com\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 从环境变量中获取访问凭证。运行本代码示例之前，请确保已设置环境变量 OSS_ACCESS_KEY_ID 和 OSS_ACCESS_KEY_SECRET。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">EnvironmentVariableCredentialsProvider</span> credentialsProvider <span class=\"token operator\">=</span> <span class=\"token class-name\">CredentialsProviderFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">newEnvironmentVariableCredentialsProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 填写 Bucket 名称，例如 examplebucket。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">String</span> bucketName <span class=\"token operator\">=</span> <span class=\"token string\">\"examplebucket\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 填写 Object 完整路径，完整路径中不能包含 Bucket 名称，例如 exampledir/exampleobject.txt。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">String</span> objectName <span class=\"token operator\">=</span> <span class=\"token string\">\"exampledir/exampleobject.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 填写本地文件的完整路径，例如 D:\\\\localpath\\\\examplefile.txt。</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 如果未指定本地路径，则默认从示例程序所属项目对应本地路径中上传文件。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">String</span> filePath<span class=\"token operator\">=</span> <span class=\"token string\">\"D:\\\\localpath\\\\examplefile.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 创建 OSSClient 实例。</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">OSS</span> ossClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OSSClientBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">,</span> credentialsProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token comment\">// 创建 PutObjectRequest 对象。</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token class-name\">PutObjectRequest</span> putObjectRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PutObjectRequest</span><span class=\"token punctuation\">(</span>bucketName<span class=\"token punctuation\">,</span> objectName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// 如果需要上传时设置存储类型和访问权限，请参考以下示例代码。</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">// ObjectMetadata metadata = new ObjectMetadata();</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token comment\">// metadata.setHeader(OSSHeaders.OSS_STORAGE_CLASS, StorageClass.Standard.toString());</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">// metadata.setObjectAcl(CannedAccessControlList.Private);</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// putObjectRequest.setMetadata(metadata);</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// 上传文件。</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token class-name\">PutObjectResult</span> result <span class=\"token operator\">=</span> ossClient<span class=\"token punctuation\">.</span><span class=\"token function\">putObject</span><span class=\"token punctuation\">(</span>putObjectRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OSSException</span> oe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught an OSSException, which means your request made it to OSS, \"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token operator\">+</span> <span class=\"token string\">\"but was rejected with an error response for some reason.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Message:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Code:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Request ID:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Host ID:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getHostId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientException</span> ce<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught an ClientException, which means the client encountered \"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                    <span class=\"token operator\">+</span> <span class=\"token string\">\"a serious internal problem while trying to communicate with OSS, \"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    <span class=\"token operator\">+</span> <span class=\"token string\">\"such as not being able to access the network.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Message:\"</span> <span class=\"token operator\">+</span> ce<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ossClient <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                ossClient<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>首先我们需要知道自己的 endpoint，在对象存储页面的访问端口中可以看到</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603200950331.png\" alt=\"image-20240603200950331\" /></p>\n<p>将如下代码修改：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Endpoint 以华东 1（杭州）为例，其它 Region 请按实际情况填写。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">\"oss-cn-beijing.aliyuncs.com\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下面我们需要去查看自己的 AccessKey 的 Id 和 secret</p>\n<p>如果我们直接将 Id 和 secret 配置到代码中会很危险，所以阿里云建议我们在操作对象存储的时候专门对它有一个子账户，我们填写这个子账户的账号密码。子账户我们需要进行开通。如下是开通步骤：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603201331475.png\" alt=\"image-20240603201331475\" /></p>\n<p>点击 使用子用户的 AccessKey，第一次可能需要开通 RAM 直接开通就行了</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603201407769.png\" alt=\"image-20240603201407769\" /></p>\n<p>点击创建用户</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603201543903.png\" alt=\"image-20240603201543903\" /></p>\n<p>我们没目前只需要在代码里面进行使用我们只需要勾选上 OpenAPI 调用访问即可，点击确定并接受验证码进行确定</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603201710606.png\" alt=\"image-20240603201710606\" /></p>\n<p>子用户创建完成后就可以进行复制 AccessKey Id 和 AccessKey Secret 了</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603201850240.png\" alt=\"image-20240603201850240\" /></p>\n<p>我们在使用之前需要先对该子用户添加权限</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603214801883.png\" alt=\"image-20240603214801883\" /></p>\n<p>新版本我们需要将 AccessKeyID 和 Secret 配置到环境变量中</p>\n<h3 id=\"配置accesskeyid和secret到环境中\"><a class=\"anchor\" href=\"#配置accesskeyid和secret到环境中\">#</a> 配置 AccessKeyID 和 Secret 到环境中</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603225024245.png\" alt=\"image-20240603225024245\" /></p>\n<p>如果配置了还是报错：</p>\n<pre><code>com.aliyun.oss.common.auth.InvalidCredentialsException: Access key id should not be null or empty.\n</code></pre>\n<h4 id=\"解决方式\"><a class=\"anchor\" href=\"#解决方式\">#</a> 解决方式：</h4>\n<ol>\n<li>查看 idea 中使用的 jdk 与环境变量的 jdk 是否一致，不一致修改 jdk 环境变量一致然后重启电脑</li>\n<li>重启电脑</li>\n</ol>\n<h4 id=\"测试accesskeyid和secret的配置情况\"><a class=\"anchor\" href=\"#测试accesskeyid和secret的配置情况\">#</a> 测试 AccessKeyID 和 Secret 的配置情况：</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyuncs<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>ClientException</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">EnvironmentVariableCredentialsProvider</span> credentialsProvider <span class=\"token operator\">=</span> <span class=\"token class-name\">CredentialsProviderFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">newEnvironmentVariableCredentialsProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Credentials</span> credentials <span class=\"token operator\">=</span> credentialsProvider<span class=\"token punctuation\">.</span><span class=\"token function\">getCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AccessKeyID: \"</span> <span class=\"token operator\">+</span> credentials<span class=\"token punctuation\">.</span><span class=\"token function\">getAccessKeyId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AccessKeySecret: \"</span> <span class=\"token operator\">+</span> credentials<span class=\"token punctuation\">.</span><span class=\"token function\">getSecretAccessKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>AccessKeyID: LTAI5tGzZmmC8jxxxxDbEMD\nAccessKeySecret: 7jF2aIfwORf1xxxxxqxx47j5sVb\n</code></pre>\n<p>测试成功，接下来测试上传文件的代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>aliyuncs<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>ClientException</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// Endpoint 以华东 1（杭州）为例，其它 Region 请按实际情况填写。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">\"oss-cn-beijing.aliyuncs.com\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 从环境变量中获取访问凭证。运行本代码示例之前，请确保已设置环境变量 OSS_ACCESS_KEY_ID 和 OSS_ACCESS_KEY_SECRET。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">EnvironmentVariableCredentialsProvider</span> credentialsProvider <span class=\"token operator\">=</span> <span class=\"token class-name\">CredentialsProviderFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">newEnvironmentVariableCredentialsProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 填写 Bucket 名称，例如 examplebucket。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">String</span> bucketName <span class=\"token operator\">=</span> <span class=\"token string\">\"gulimall-dkx\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 填写 Object 完整路径，完整路径中不能包含 Bucket 名称，例如 exampledir/exampleobject.txt。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">String</span> objectName <span class=\"token operator\">=</span> <span class=\"token string\">\"gulimall-dkx/test.jpg\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 填写本地文件的完整路径，例如 D:\\\\localpath\\\\examplefile.txt。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 如果未指定本地路径，则默认从示例程序所属项目对应本地路径中上传文件。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token class-name\">String</span> filePath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\Administrator\\\\Pictures\\\\Camera Roll\\\\乡村之夜 房子 田野和稻田 黄昏 乡村小路 河流 风景 4k壁纸_彼岸图网.jpg\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 创建 OSSClient 实例。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">OSS</span> ossClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OSSClientBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">,</span> credentialsProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token comment\">// 创建 PutObjectRequest 对象。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token class-name\">PutObjectRequest</span> putObjectRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PutObjectRequest</span><span class=\"token punctuation\">(</span>bucketName<span class=\"token punctuation\">,</span> objectName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token comment\">// 如果需要上传时设置存储类型和访问权限，请参考以下示例代码。</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\">// ObjectMetadata metadata = new ObjectMetadata();</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\">// metadata.setHeader(OSSHeaders.OSS_STORAGE_CLASS, StorageClass.Standard.toString());</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\">// metadata.setObjectAcl(CannedAccessControlList.Private);</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token comment\">// putObjectRequest.setMetadata(metadata);</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token comment\">// 上传文件。</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token class-name\">PutObjectResult</span> result <span class=\"token operator\">=</span> ossClient<span class=\"token punctuation\">.</span><span class=\"token function\">putObject</span><span class=\"token punctuation\">(</span>putObjectRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result RequestId: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result ETag: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getETag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result VersionId: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getVersionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result Response: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result ClientCRC: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getClientCRC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result ServerCRC: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getServerCRC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OSSException</span> oe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught an OSSException, which means your request made it to OSS, \"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                         <span class=\"token operator\">+</span> <span class=\"token string\">\"but was rejected with an error response for some reason.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Message:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Code:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Request ID:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Host ID:\"</span> <span class=\"token operator\">+</span> oe<span class=\"token punctuation\">.</span><span class=\"token function\">getHostId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientException</span> ce<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught an ClientException, which means the client encountered \"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                         <span class=\"token operator\">+</span> <span class=\"token string\">\"a serious internal problem while trying to communicate with OSS, \"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                         <span class=\"token operator\">+</span> <span class=\"token string\">\"such as not being able to access the network.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Message:\"</span> <span class=\"token operator\">+</span> ce<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ossClient <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>         ossClient<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<pre><code>result RequestId: 665DD89377F3A93337E3FA45\nresult ETag: 508EA42B110937E48E9A6856948422E4\nresult VersionId: null\nresult Response: null\nresult ClientCRC: 6237137517066352504\nresult ServerCRC: 6237137517066352504\n</code></pre>\n<p>查看 oss 的存储内容</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603225234399.png\" alt=\"image-20240603225234399\" /></p>\n<p>上传成功</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240603225255837.png\" alt=\"image-20240603225255837\" /></p>\n<h2 id=\"更简单的方式springcloudalibaba\"><a class=\"anchor\" href=\"#更简单的方式springcloudalibaba\">#</a> 更简单的方式 SpringCloudAlibaba</h2>\n<h3 id=\"springcloudalibaba简介\"><a class=\"anchor\" href=\"#springcloudalibaba简介\">#</a> SpringCloudAlibaba 简介</h3>\n<p>SpringCloudAlibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必须组件，方便开发者通过 SpringCloud 编程模型轻松使用这些组件来开发分布式应用服务。</p>\n<p>依托 SpringCloudAlibaba，您只需要添加一些注解和少量配置，就可以将 SpringCloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvc3ByaW5nLWNsb3VkLWFsaWJhYmE=\">https://github.com/alibaba/spring-cloud-alibaba</span></p>\n",
            "tags": [
                "计算机学科",
                "java",
                "spring",
                "springcloud",
                "Nacos",
                "计算机学科",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%A1%86%E6%9E%B6/ruoyi/%E8%8B%A5%E4%BE%9D%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E6%A1%86%E6%9E%B6/ruoyi/%E8%8B%A5%E4%BE%9D%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/",
            "title": "若依分页功能",
            "date_published": "2024-05-30T03:45:39.374Z",
            "content_html": "<h1 id=\"若依分页功能\"><a class=\"anchor\" href=\"#若依分页功能\">#</a> 若依分页功能</h1>\n<p>分页的效果：分页处理一方面可以提高我们浏览数据的效率，符合我们浏览者的心里，减少大量数据存在的杂乱问题；另一方面用 sql 进行数据查询时就实现分页，如 mysql 的 limit，sql 查询结果是第几页的数据，十分的效率；同时分页技术也可以，降低带宽使用，提高访问速度。分页的原理：前端采用 pageNum 和 pageSize ；后端采用函数 startPage 和 getDataTable；</p>\n<h2 id=\"前端部分\"><a class=\"anchor\" href=\"#前端部分\">#</a> 前端部分：</h2>\n<p>先找到前端部分代码中的 ruoyi-ui/src/views/monitor/operlog/index.vue 中的这一串代码</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240530100313569.png\" alt=\"image-20240530100313569\" /></p>\n<p>初始化了 total 为 0 所返回的 total 的值取决于后台传来的数据条数；@pageination 所绑定的 getList 方法，负责处理所返回的数据 实现分页功能</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240530100433297.png\" alt=\"image-20240530100433297\" /></p>\n<p>getList 方法中调用了 List 函数</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240530100449423.png\" alt=\"image-20240530100449423\" /></p>\n<p>其中 method: 'get' 为请求的访问方式即对应后端的 GetMapping</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240530100518970.png\" alt=\"image-20240530100518970\" /></p>\n<p>页面端使用 F12 开发者工具查看了网络中的 XHR 和提取 可以看到 后端返回了</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240530100550091.png\" alt=\"image-20240530100550091\" /></p>\n<p>其中 pageNum 和 pageSize 分别为页面数和每页所存放数据条数</p>\n<h2 id=\"后端部分\"><a class=\"anchor\" href=\"#后端部分\">#</a> 后端部分：</h2>\n<p>实现分页的代码：</p>\n<p>controller</p>\n<p>要想使用 startPage 和 getDataTable 我们必须先继承 ruoyi 中的 BaseController 类，下面会讲到源码实现</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 查询 shp 文件信息添加数据并分页</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"查询shp文件信息添加数据并分页\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiImplicitParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"xkzh\"</span><span class=\"token punctuation\">,</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"许可证号\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@ApiResponses</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token annotation punctuation\">@ApiResponse</span><span class=\"token punctuation\">(</span>code <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> response <span class=\"token operator\">=</span> <span class=\"token class-name\">KsTcVo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Anonymous</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mineLayersController/mountDataAll\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TableDataInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTcVo</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">mountDataAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> xkzh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">TableDataInfo</span> dataTable <span class=\"token operator\">=</span> <span class=\"token function\">getDataTable</span><span class=\"token punctuation\">(</span>ksTcService<span class=\"token punctuation\">.</span><span class=\"token function\">mountDataAll</span><span class=\"token punctuation\">(</span>xkzh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTcVo</span><span class=\"token punctuation\">></span></span> ksTcVos <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyToList</span><span class=\"token punctuation\">(</span>dataTable<span class=\"token punctuation\">.</span><span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsTcVo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        dataTable<span class=\"token punctuation\">.</span><span class=\"token function\">setRows</span><span class=\"token punctuation\">(</span>ksTcVos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> dataTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>serviceImpl</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 查询 shp 文件信息添加数据并分页</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTc</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">mountDataAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> xkzh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTc</span><span class=\"token punctuation\">></span></span> ksTcs <span class=\"token operator\">=</span> ksTcxMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTc</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>xkzh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsTc</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">,</span> xkzh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> ksTcs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>startPage () 和 getDataTable (List) 分贝起到了分页功能的实现和返回数据库数据的功能，任何分页功能的实现都需要先执行 startPage 这个方法</p>\n<p>在 ruoyi 中 BaseController 的 startPage 和 getDataTable 代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   * 设置请求分页数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">PageUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   * 响应请求分页数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"rawtypes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">TableDataInfo</span> <span class=\"token function\">getDataTable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">TableDataInfo</span> rspData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TableDataInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        rspData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUCCESS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        rspData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        rspData<span class=\"token punctuation\">.</span><span class=\"token function\">setRows</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        rspData<span class=\"token punctuation\">.</span><span class=\"token function\">setTotal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PageInfo</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> rspData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先来解读下 startPage 里面的源代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   * 设置请求分页数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 返回封装好的分页对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">PageDomain</span> pageDomain <span class=\"token operator\">=</span> <span class=\"token class-name\">TableSupport</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildPageRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pageNum <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getPageNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pageSize <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">String</span> orderBy <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">escapeOrderBySql</span><span class=\"token punctuation\">(</span>pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Boolean</span> reasonable <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getReasonable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">PageHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">,</span> orderBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setReasonable</span><span class=\"token punctuation\">(</span>reasonable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 封装分页对象</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PageDomain</span> <span class=\"token function\">getPageDomain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">PageDomain</span> pageDomain <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageDomain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">setPageNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Convert</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PAGE_NUM</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">setPageSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Convert</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PAGE_SIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">setOrderByColumn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ORDER_BY_COLUMN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">setIsAsc</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">IS_ASC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">setReasonable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameterToBool</span><span class=\"token punctuation\">(</span><span class=\"token constant\">REASONABLE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> pageDomain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PageDomain</span> <span class=\"token function\">buildPageRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getPageDomain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>进入 ServletUtils.getParameter (PAGE_NUM)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 获取 HttpServlcetRequest 对象调用 getParamter 传入 String 参数获取请求头中对应的参数并返回</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   * 获取 request</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HttpServletRequest</span> <span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t  * 获取 RequestContextHolder.getRequestAttributes () 对象并返回</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t  */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ServletRequestAttributes</span> <span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">RequestAttributes</span> attributes <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequestAttributes</span><span class=\"token punctuation\">)</span> attributes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由此我们得知他从 HttpServletRequest 对象中获取对应的请求头的参数也就是 pageNum 和 pageSize 的参数，那么在 getPageDomain 方法中的 PageDomain 对象的参数都是这样进行构建的</p>\n<p>最终返回到 startPage</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 设置请求分页数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">PageDomain</span> pageDomain <span class=\"token operator\">=</span> <span class=\"token class-name\">TableSupport</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildPageRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pageNum <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getPageNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pageSize <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">String</span> orderBy <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">escapeOrderBySql</span><span class=\"token punctuation\">(</span>pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Boolean</span> reasonable <span class=\"token operator\">=</span> pageDomain<span class=\"token punctuation\">.</span><span class=\"token function\">getReasonable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">PageHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">,</span> orderBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setReasonable</span><span class=\"token punctuation\">(</span>reasonable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后使用 PageHelper 插件进行分页</p>\n",
            "tags": [
                "计算机学科",
                "java",
                "开源项目框架",
                "计算机学科",
                "开源项目框架"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/CommonsLang3/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/CommonsLang3/",
            "title": "Apache Commons-Lang3",
            "date_published": "2024-05-29T00:59:05.826Z",
            "content_html": "<h1 id=\"apache-commons-lang3\"><a class=\"anchor\" href=\"#apache-commons-lang3\">#</a> Apache Commons-Lang3</h1>\n<h2 id=\"关于apache-commons-lang3的使用\"><a class=\"anchor\" href=\"#关于apache-commons-lang3的使用\">#</a> 关于 Apache Commons-Lang3 的使用</h2>\n<p>在日常工作中，我们经常要使用到一些开源工具包，比如 String，Date 等等。有时候我们并不清楚有这些工具类的存在，造成在开发过程中重新实现导致时间浪费，并且开发的代码质量不佳。而 apache 其实已经提供了系列的工具包给我们使用，只是大多数人，平时没有注意到。我们从使用最多的 org.apache.commons.lang3 这个 jar 包开始讲起，lang3 这个开源 jar 包在真实工作中，算是使用最多，运用最广的一个开源包。如何我们彻底的掌握这个包的使用，那么必然给开发工作带来很多好处：节省时间，提高工作效率等等。</p>\n<ul>\n<li>lang3 整体的结构的一个概况及各个类的作用</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528205718289.png\" alt=\"image-20240528205718289\" /></p>\n<ul>\n<li>StringUtils</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528205739637.png\" alt=\"image-20240528205739637\" /></p>\n<ul>\n<li>ArrayUtils</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528205756624.png\" alt=\"image-20240528205756624\" /></p>\n<ul>\n<li>BooleanUtils</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528205815730.png\" alt=\"image-20240528205815730\" /></p>\n<ul>\n<li>ClassUtils</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528205832463.png\" alt=\"image-20240528205832463\" /></p>\n<h2 id=\"springboot-实战开发-commons-lang3\"><a class=\"anchor\" href=\"#springboot-实战开发-commons-lang3\">#</a> SpringBoot - 实战开发 - commons-lang3</h2>\n<h3 id=\"一-commons-lang3简介\"><a class=\"anchor\" href=\"#一-commons-lang3简介\">#</a> 一、commons-lang3 简介</h3>\n<p>commons-lang3 是 Apache 的 Jakarta commons 工程下具有一系列公共基础类。</p>\n<p>Apache 的 Jakarta commons 工程项目列表路径：<span class=\"exturl\" data-url=\"aHR0cDovL2NvbW1vbnMuYXBhY2hlLm9yZw==\">http://commons.apache.org</span></p>\n<p>Commons 基础类包基本上是基于 JDK API 开发而来，依赖微小，可重用性是 Jakarta 的灵魂所在</p>\n<p>Lang 组件主要是一些工具类，涉及到 数组工具类，字符串工具类，字符工具类，数学方面，时间日期工具类，异常，事件等工具类。</p>\n<h3 id=\"二-maven依赖\"><a class=\"anchor\" href=\"#二-maven依赖\">#</a> 二、Maven 依赖</h3>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.commons<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-lang3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"三-字符串的处理类stringutils\"><a class=\"anchor\" href=\"#三-字符串的处理类stringutils\">#</a> 三、字符串的处理类 (StringUtils)</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 缩短到某长度，用... 结尾。其实就是 (substring (str, 0, max-3) + \"...\")</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//public static String abbreviate(String str,int maxWidth)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">abbreviate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdefg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// ---\"abc...\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 字符串结尾的后缀是否与你要结尾的后缀匹配，若不匹配则添加后缀</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendIfMissing</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abcxyz\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendIfMissingIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcXYZ\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abcXYZ\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 首字母大小写转换</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">capitalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"Cat\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">uncapitalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"cat\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 字符串扩充至指定大小且居中（若扩充大小少于原字符大小则返回原字符，若扩充大小为 负数则为 0 计算 ）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcd\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//--- \"abcd\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//--- \"ab\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\" ab \"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"yayz\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"  abc  \"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 去除字符串中的 \"\\n\", \"\\r\", or \"\\r\\n\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">chomp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 判断一字符串是否包含另一字符串</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">containsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// 统计一字符串在另一字符串中出现次数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">countMatches</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---2</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 删除字符串中的梭有空格</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteWhitespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"   ab  c  \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">// 比较两字符串，返回不同之处。确切的说是返回第二个参数中与第一个参数所不同的字符串</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">difference</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abxyz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"xyz\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// 检查字符串结尾后缀是否匹配</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"def\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">endsWithIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEF\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"def\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">endsWithAny</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcxyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 检查起始字符串是否匹配</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWithIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEF\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWithAny</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcxyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// 判断两字符串是否相同</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">// 比较字符串数组内的所有元素的字符序列，起始一致则返回一致的字符串，若无则返回 \"\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCommonPrefix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abxyz\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"ab\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">// 正向查找字符在字符串中第一次出现的位置</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---2</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---5 (从角标 3 后查找)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">ordinalIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---1 (查找第 n 次出现的位置)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">// 反向查找字符串第一次出现的位置</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> ‘b‘<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---5</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> ‘b‘<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---2</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastOrdinalIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aabaabaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---1</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">// 判断字符串大写、小写</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAllUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAllLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">// 判断是否为空 (注：isBlank 与 isEmpty 区别)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNoneBlank</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNoneEmpty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">// 判断字符串数字</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNumeric</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNumeric</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false (不识别运算符号、小数点、空格……)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNumericSpace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---true</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">// 数组中加入分隔符号</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\">//StringUtils.join([1, 2, 3], ‘;‘);//---\"1;2;3\"</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">// 大小写转换</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">upperCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aBc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"ABC\"</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">lowerCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aBc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">swapCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The dog has a BONE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"tHE DOG HAS A bone\"</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">// 替换字符串内容……（replacePattern、replceOnce）</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"zbz\"</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">overlay</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"zz\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abzzef\"(指定区域)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceEach</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                        <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"wcte\"(多组指定替换 ab->w，d->t)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\">// 重复字符</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>‘e‘<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"eee\"</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\">// 反转字符串</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"tab\"</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">// 删除某字符</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"queued\"</span><span class=\"token punctuation\">,</span> ‘u‘<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"qeed\"</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">// 分割字符串</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a..b.c\"</span><span class=\"token punctuation\">,</span> ‘<span class=\"token punctuation\">.</span>‘<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---[\"a\", \"b\", \"c\"]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab:cd:ef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---[\"ab\", \"cd:ef\"]</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">splitByWholeSeparator</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab-!-cd-!-ef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-!-\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---[\"ab\", \"cd-!-ef\"]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">splitByWholeSeparatorPreserveAllTokens</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab::cd:ef\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//-[\"ab\",\" \",\"cd\",\"ef\"]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">// 去除首尾空格，类似 trim……（stripStart、stripEnd、stripAll、stripAccents）</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">strip</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" ab c \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"ab c\"</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">stripToNull</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---null</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">stripToEmpty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"\"</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\">// 截取字符串</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcd\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"cd\"</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdef\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"cd\"</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">//left、right 从左 (右) 开始截取 n 位字符</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">left</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"ab\"</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">right</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"bc\"</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">// 从第 n 位开始截取 m 位字符       n  m</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">mid</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcdefg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"cdef\"</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"a\"</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringBeforeLast</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringAfter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"cba\"</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringAfterLast</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcba\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"a\"</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringBetween</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tagabctag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">substringBetween</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yabczyabcz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---\"abc\"</span></pre></td></tr></table></figure><h3 id=\"四-随机数生成类randomstringutils\"><a class=\"anchor\" href=\"#四-随机数生成类randomstringutils\">#</a> 四、随机数生成类 (RandomStringUtils)</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 随机生成 n 位数数字</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">RandomStringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomNumeric</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 在指定字符串中生成长度为 n 的随机字符串</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">RandomStringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"abcdefghijk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 指定从字符或数字中生成随机字符串</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomStringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomStringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"五-数字类numberutils\"><a class=\"anchor\" href=\"#五-数字类numberutils\">#</a> 五、数字类 NumberUtils</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从数组中选出最大值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">NumberUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---4</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 判断字符串是否全是整数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">NumberUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDigits</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"153.4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//--false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 判断字符串是否是有效数字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">NumberUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNumber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0321.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//---false</span></pre></td></tr></table></figure><h3 id=\"六-数组类arrayutils\"><a class=\"anchor\" href=\"#六-数组类arrayutils\">#</a> 六、数组类 ArrayUtils</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token class-name\">ArrayUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 判断两个数据是否相等，如果内容相同， 顺序相同 则返回 true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">ArrayUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEquals</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 判断数组中是否包含某一对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">ArrayUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"33\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 二维数组转换成 MAP</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">Map</span> map <span class=\"token operator\">=</span> <span class=\"token class-name\">ArrayUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"RED\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#FF0000\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"GREEN\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#00FF00\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"BLUE\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#0000FF\"</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"七-日期类dateutils\"><a class=\"anchor\" href=\"#七-日期类dateutils\">#</a> 七、日期类 DateUtils</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 日期加 n 天</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">DateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">addDays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 判断是否同一天</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">DateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isSameDay</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">,</span> date2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 字符串时间转换为 Date</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">DateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDate</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> parsePatterns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"八-加密解密类\"><a class=\"anchor\" href=\"#八-加密解密类\">#</a> 八、加密解密类</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// MD5 加密</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> encodeStr<span class=\"token operator\">=</span><span class=\"token class-name\">DigestUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">md5Hex</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 密钥进行验证</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">String</span> md5Text <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>md5Text<span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5验证通过\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"九-运行环境的系统信息\"><a class=\"anchor\" href=\"#九-运行环境的系统信息\">#</a> 九、运行环境的系统信息</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">getArch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取电脑处理器体系结构 32 bit、64 bit、unknown</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回处理器类型 x86、ia64、ppc、unknown</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">is32Bit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 检查处理器是否为 32 位</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">is64Bit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 检查处理器是否为 64 位</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">isIA64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 检查是否是英特尔安腾处理器类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">isPPC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 检查处理器是否是电源 PC 类型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">isX86</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 检查处理器是否是 x86 类型</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "java",
                "第三方库",
                "计算机学科",
                "第三方库",
                "commonslang3"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/oshicore/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/oshicore/",
            "title": "获取系统信息(oshi-core)",
            "date_published": "2024-05-29T00:52:02.647Z",
            "content_html": "<h1 id=\"获取系统信息oshi-core\"><a class=\"anchor\" href=\"#获取系统信息oshi-core\">#</a> 获取系统信息 (oshi-core)</h1>\n<h2 id=\"1-maven\"><a class=\"anchor\" href=\"#1-maven\">#</a> 1、maven</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.github.oshi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>oshi-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"2-api\"><a class=\"anchor\" href=\"#2-api\">#</a> 2、API</h2>\n<table>\n<thead>\n<tr>\n<th>对象</th>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SystemInfo</td>\n<td>getOperatingSystem()</td>\n<td>获取操作系统信息，OperatingSystem</td>\n</tr>\n<tr>\n<td></td>\n<td>getHardware()</td>\n<td>获取硬件信息，HardwareAbstractionLayer</td>\n</tr>\n<tr>\n<td>OperatingSystem</td>\n<td>getFamily()</td>\n<td>获取操作系统名称，例如 Windows</td>\n</tr>\n<tr>\n<td></td>\n<td>getManufacturer()</td>\n<td>获取供货商，例如 Microsoft</td>\n</tr>\n<tr>\n<td></td>\n<td>getVersion()</td>\n<td>获取操作系统版本信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getFileSystem()</td>\n<td>获取系统硬盘信息，FileSystem</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcesses(int pId, OperatingSystem.ProcessSort var2)</td>\n<td>通过 进程 id 获取进程信息，并设置排序方式，OSProcess []</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcess(int pId)</td>\n<td>通过 进程 id 获取一个进程信息，OSProcess</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcesses(Collection&lt;Integer&gt; pId)</td>\n<td>获取多个进程信息，List&lt;OSProcess&gt;</td>\n</tr>\n<tr>\n<td></td>\n<td>getChildProcesses(int var1, int var2, OperatingSystem.ProcessSort var3)</td>\n<td>获取子进程，OSProcess []</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessId()</td>\n<td>获取进程 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessCount()</td>\n<td>获取进程数量</td>\n</tr>\n<tr>\n<td></td>\n<td>getThreadCount()</td>\n<td>获取线程数</td>\n</tr>\n<tr>\n<td></td>\n<td>getNetworkParams()</td>\n<td>获取网络相关参数，NetworkParams</td>\n</tr>\n<tr>\n<td>HardwareAbstractionLayer</td>\n<td>getComputerSystem()</td>\n<td>获取计算机系统信息，ComputerSystem</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessor()</td>\n<td>获取处理器信息，CentralProcessor</td>\n</tr>\n<tr>\n<td></td>\n<td>getMemory()</td>\n<td>获取内存信息，GlobalMemory</td>\n</tr>\n<tr>\n<td></td>\n<td>getPowerSources()</td>\n<td>获取电源信息，PowerSource</td>\n</tr>\n<tr>\n<td></td>\n<td>getDiskStores()</td>\n<td>获取硬件磁盘信息，HWDiskStore</td>\n</tr>\n<tr>\n<td></td>\n<td>getNetworkIFs()</td>\n<td>获取网络信息，NetworkIF</td>\n</tr>\n<tr>\n<td></td>\n<td>getDisplays()</td>\n<td>获取显示信息，Display</td>\n</tr>\n<tr>\n<td></td>\n<td>getSensors()</td>\n<td>获取传感器信息，Sensors</td>\n</tr>\n<tr>\n<td></td>\n<td>getUsbDevices(boolean var1)</td>\n<td>获取 USB 设备信息，UsbDevice</td>\n</tr>\n<tr>\n<td>OperatingSystemVersion</td>\n<td>getBuildNumber()</td>\n<td>获取内部编号</td>\n</tr>\n<tr>\n<td></td>\n<td>getCodeName()</td>\n<td>代码名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getVersion()</td>\n<td>获取版本</td>\n</tr>\n<tr>\n<td>FileSystem</td>\n<td>getMaxFileDescriptors()</td>\n<td>获取最大文件描述符</td>\n</tr>\n<tr>\n<td></td>\n<td>getOpenFileDescriptors()</td>\n<td>获取打开文件描述符</td>\n</tr>\n<tr>\n<td></td>\n<td>getFileStores()</td>\n<td>获取盘符相关信息</td>\n</tr>\n<tr>\n<td>OSProcess</td>\n<td>getName()</td>\n<td>进程程序名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getPath()</td>\n<td>进程程序所在位置</td>\n</tr>\n<tr>\n<td></td>\n<td>getCommandLine()</td>\n<td>获取命令行</td>\n</tr>\n<tr>\n<td></td>\n<td>getCurrentWorkingDirectory()</td>\n<td>获取当前工作目录</td>\n</tr>\n<tr>\n<td></td>\n<td>getUser()</td>\n<td>获取用户信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getUserID()</td>\n<td>获取用户 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getGroup()</td>\n<td>获取组信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getGroupID()</td>\n<td>获取组 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getState()</td>\n<td>状态</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessID()</td>\n<td>获取进程 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getParentProcessID()</td>\n<td>获取父进程 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getThreadCount()</td>\n<td>获取线程数</td>\n</tr>\n<tr>\n<td></td>\n<td>getPriority()</td>\n<td>优先级</td>\n</tr>\n<tr>\n<td></td>\n<td>getVirtualSize()</td>\n<td>虚拟大小</td>\n</tr>\n<tr>\n<td></td>\n<td>getResidentSetSize()</td>\n<td>实际使用物理内存</td>\n</tr>\n<tr>\n<td></td>\n<td>getKernelTime()</td>\n<td>内核时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getUserTime()</td>\n<td>用户时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getUpTime()</td>\n<td>正常运行时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getStartTime()</td>\n<td>开始时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getBytesRead()</td>\n<td>读取字节</td>\n</tr>\n<tr>\n<td></td>\n<td>getBytesWritten()</td>\n<td>写入字节</td>\n</tr>\n<tr>\n<td></td>\n<td>getOpenFiles()</td>\n<td>打开文件数量</td>\n</tr>\n<tr>\n<td>NetworkParams</td>\n<td>getDnsServers()</td>\n<td>获取域名地址</td>\n</tr>\n<tr>\n<td></td>\n<td>getHostName()</td>\n<td>获取主机名</td>\n</tr>\n<tr>\n<td></td>\n<td>getDomainName()</td>\n<td>获取域名</td>\n</tr>\n<tr>\n<td></td>\n<td>getIpv4DefaultGateway()</td>\n<td>获取默认 Ipv4</td>\n</tr>\n<tr>\n<td></td>\n<td>getIpv6DefaultGateway()</td>\n<td>获取默认 Ipv6</td>\n</tr>\n<tr>\n<td>OSFileStore</td>\n<td>getName()</td>\n<td>磁盘名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getVolume()</td>\n<td>文件集</td>\n</tr>\n<tr>\n<td></td>\n<td>getLogicalVolume()</td>\n<td>合理的文件集</td>\n</tr>\n<tr>\n<td></td>\n<td>getMount()</td>\n<td>盘符</td>\n</tr>\n<tr>\n<td></td>\n<td>getDescription()</td>\n<td>描述</td>\n</tr>\n<tr>\n<td></td>\n<td>getType()</td>\n<td>类型</td>\n</tr>\n<tr>\n<td></td>\n<td>getUUID()</td>\n<td>磁盘 UUID</td>\n</tr>\n<tr>\n<td></td>\n<td>getUsableSpace()</td>\n<td>可用空间</td>\n</tr>\n<tr>\n<td></td>\n<td>getTotalSpace()</td>\n<td>总空间</td>\n</tr>\n<tr>\n<td>ComputerSystem</td>\n<td>getManufacturer()</td>\n<td>获取制造商</td>\n</tr>\n<tr>\n<td></td>\n<td>getModel()</td>\n<td>获取型号</td>\n</tr>\n<tr>\n<td></td>\n<td>getSerialNumber()</td>\n<td>获取序列号</td>\n</tr>\n<tr>\n<td></td>\n<td>getFirmware()</td>\n<td>获取固件信息，Firmware</td>\n</tr>\n<tr>\n<td></td>\n<td>getBaseboard()</td>\n<td>获取外壳信息，Baseboard</td>\n</tr>\n<tr>\n<td>Firmware</td>\n<td>getManufacturer()</td>\n<td>获取制造商信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getName()</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getDescription()</td>\n<td>获取描述信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getVersion()</td>\n<td>获取版本</td>\n</tr>\n<tr>\n<td></td>\n<td>getReleaseDate()</td>\n<td>获取发布时间</td>\n</tr>\n<tr>\n<td>Baseboard</td>\n<td>getModel()</td>\n<td>获取型号</td>\n</tr>\n<tr>\n<td></td>\n<td>getVersion()</td>\n<td>获取版本信息</td>\n</tr>\n<tr>\n<td></td>\n<td>getSerialNumber()</td>\n<td>获取序列号</td>\n</tr>\n<tr>\n<td>CentralProcessor</td>\n<td>getVendor()</td>\n<td>获取供应商</td>\n</tr>\n<tr>\n<td></td>\n<td>getName()</td>\n<td>获取 cpu 名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getVendorFreq()</td>\n<td>获取供应商频率</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessorID()</td>\n<td>获取处理器 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getIdentifier()</td>\n<td>获取标识符</td>\n</tr>\n<tr>\n<td></td>\n<td>isCpu64bit()</td>\n<td>判断 cpu 是否为 64 位的</td>\n</tr>\n<tr>\n<td></td>\n<td>getStepping()</td>\n<td>获取 cpu 步进</td>\n</tr>\n<tr>\n<td></td>\n<td>getModel()</td>\n<td>获取型号</td>\n</tr>\n<tr>\n<td></td>\n<td>getFamily()</td>\n<td>获取家族</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemCpuLoadBetweenTicks()</td>\n<td>获取 cpu 负载间隔刻度</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemCpuLoadTicks()</td>\n<td>获取 cpu 负载刻度</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemCpuLoad()</td>\n<td>获取 cpu 负载</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemLoadAverage()</td>\n<td>获取 cpu 平均负载</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemLoadAverage(int var1)</td>\n<td>获取 cpu 平均负载</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessorCpuLoadBetweenTicks()</td>\n<td>获取处理器 cpu 负载间隔刻度</td>\n</tr>\n<tr>\n<td></td>\n<td>getProcessorCpuLoadTicks()</td>\n<td>获取处理器 cpu 负载刻度</td>\n</tr>\n<tr>\n<td></td>\n<td>getSystemUptime()</td>\n<td>获取正常运行时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getLogicalProcessorCount()</td>\n<td>获取逻辑处理器数量</td>\n</tr>\n<tr>\n<td></td>\n<td>getPhysicalProcessorCount()</td>\n<td>获取物理处理器数量</td>\n</tr>\n<tr>\n<td></td>\n<td>getPhysicalPackageCount()</td>\n<td>获取物理包装数量</td>\n</tr>\n<tr>\n<td></td>\n<td>getContextSwitches()</td>\n<td>获取上下文切换数量</td>\n</tr>\n<tr>\n<td></td>\n<td>getInterrupts()</td>\n<td>获取中断</td>\n</tr>\n<tr>\n<td>GlobalMemory</td>\n<td>getTotal()</td>\n<td>获取总内存</td>\n</tr>\n<tr>\n<td></td>\n<td>getAvailable()</td>\n<td>获取可用系统运行内存</td>\n</tr>\n<tr>\n<td></td>\n<td>getSwapTotal()</td>\n<td>获取可用虚拟总内存</td>\n</tr>\n<tr>\n<td></td>\n<td>getSwapUsed()</td>\n<td>获取已用虚拟总内存</td>\n</tr>\n<tr>\n<td>PowerSource</td>\n<td>getName()</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getRemainingCapacity()</td>\n<td>获取剩余容量</td>\n</tr>\n<tr>\n<td></td>\n<td>getTimeRemaining()</td>\n<td>获取剩余时间</td>\n</tr>\n<tr>\n<td>HWDiskStore</td>\n<td>getName()</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getModel()</td>\n<td>获取型号</td>\n</tr>\n<tr>\n<td></td>\n<td>getSerial()</td>\n<td>获取序列号</td>\n</tr>\n<tr>\n<td></td>\n<td>getSize()</td>\n<td>获取大小</td>\n</tr>\n<tr>\n<td></td>\n<td>getReads()</td>\n<td>（读长）是高通量测序中一个反应获得的测序序列</td>\n</tr>\n<tr>\n<td></td>\n<td>getReadBytes()</td>\n<td>读取字节</td>\n</tr>\n<tr>\n<td></td>\n<td>getWrites()</td>\n<td>写长</td>\n</tr>\n<tr>\n<td></td>\n<td>getWriteBytes()</td>\n<td>写入字节</td>\n</tr>\n<tr>\n<td></td>\n<td>getTransferTime()</td>\n<td>获取转移时间</td>\n</tr>\n<tr>\n<td></td>\n<td>getPartitions()</td>\n<td>获取分区，HWPartition</td>\n</tr>\n<tr>\n<td></td>\n<td>getTimeStamp()</td>\n<td>获取时间戳</td>\n</tr>\n<tr>\n<td>NetworkIF</td>\n<td>getName()</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getDisplayName()</td>\n<td>获取显示名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getMTU()</td>\n<td>获取最大传输单元</td>\n</tr>\n<tr>\n<td></td>\n<td>getMacaddr()</td>\n<td>获取 MAC 地址</td>\n</tr>\n<tr>\n<td></td>\n<td>getIPv4addr()</td>\n<td>获取 IPv4</td>\n</tr>\n<tr>\n<td></td>\n<td>getIPv6addr()</td>\n<td>获取 IPv6</td>\n</tr>\n<tr>\n<td></td>\n<td>getBytesRecv()</td>\n<td>获取接收字节数</td>\n</tr>\n<tr>\n<td></td>\n<td>getBytesSent()</td>\n<td>获取发送字节数</td>\n</tr>\n<tr>\n<td></td>\n<td>getPacketsRecv()</td>\n<td>获取接收数据包</td>\n</tr>\n<tr>\n<td></td>\n<td>getPacketsSent()</td>\n<td>获取发送数据包</td>\n</tr>\n<tr>\n<td></td>\n<td>getInErrors()</td>\n<td>是否可达，正常 0</td>\n</tr>\n<tr>\n<td></td>\n<td>getOutErrors()</td>\n<td>响应错误，无错误 0</td>\n</tr>\n<tr>\n<td></td>\n<td>getSpeed()</td>\n<td>获取速率</td>\n</tr>\n<tr>\n<td></td>\n<td>getTimeStamp()</td>\n<td>获取时间错</td>\n</tr>\n<tr>\n<td>Display</td>\n<td>getEdid()</td>\n<td>中文名称扩展显示器识别数据</td>\n</tr>\n<tr>\n<td>Sensors</td>\n<td>getCpuTemperature()</td>\n<td>获取 CPU 温度</td>\n</tr>\n<tr>\n<td></td>\n<td>getFanSpeeds()</td>\n<td>获取风扇速度</td>\n</tr>\n<tr>\n<td></td>\n<td>getCpuVoltage()</td>\n<td>获取 CPU 电压</td>\n</tr>\n<tr>\n<td>UsbDevice</td>\n<td>getName()</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td></td>\n<td>getVendor()</td>\n<td>获取供应商</td>\n</tr>\n<tr>\n<td></td>\n<td>getVendorId()</td>\n<td>获取供应商 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getProductId()</td>\n<td>获取商品 id</td>\n</tr>\n<tr>\n<td></td>\n<td>getSerialNumber()</td>\n<td>获取序列号</td>\n</tr>\n<tr>\n<td></td>\n<td>getConnectedDevices()</td>\n<td>获取连接设备</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>zp<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONArray</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONObject</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SystemInfo</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>hardware<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CentralProcessor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>hardware<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GlobalMemory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>hardware<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HardwareAbstractionLayer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>software<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileSystem</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>software<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OSFileStore</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>software<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OperatingSystem</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">oshi<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Util</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetAddress</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnknownHostException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DecimalFormat</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Properties</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>* 系统消息工具类</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>*</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>**/</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SystemInfoUtils</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">OSHI_WAIT_SECOND</span> <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SystemInfo</span> systemInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SystemInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HardwareAbstractionLayer</span> hardware <span class=\"token operator\">=</span> systemInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getHardware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">OperatingSystem</span> operatingSystem <span class=\"token operator\">=</span> systemInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getOperatingSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONObject</span> <span class=\"token function\">getCpuInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> cpuInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">CentralProcessor</span> processor <span class=\"token operator\">=</span> hardware<span class=\"token punctuation\">.</span><span class=\"token function\">getProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// CPU 信息</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> prevTicks <span class=\"token operator\">=</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemCpuLoadTicks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OSHI_WAIT_SECOND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ticks <span class=\"token operator\">=</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemCpuLoadTicks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">long</span> nice <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NICE</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NICE</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">long</span> irq <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IRQ</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IRQ</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">long</span> softirq <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOFTIRQ</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOFTIRQ</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">long</span> steal <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STEAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STEAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">long</span> cSys <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">long</span> user <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">USER</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">USER</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">long</span> iowait <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IOWAIT</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IOWAIT</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">long</span> idle <span class=\"token operator\">=</span> ticks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IDLE</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prevTicks<span class=\"token punctuation\">[</span><span class=\"token class-name\">CentralProcessor<span class=\"token punctuation\">.</span>TickType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IDLE</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">long</span> totalCpu <span class=\"token operator\">=</span> user <span class=\"token operator\">+</span> nice <span class=\"token operator\">+</span> cSys <span class=\"token operator\">+</span> idle <span class=\"token operator\">+</span> iowait <span class=\"token operator\">+</span> irq <span class=\"token operator\">+</span> softirq <span class=\"token operator\">+</span> steal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">//cpu 核数</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cpuNum\"</span><span class=\"token punctuation\">,</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">getLogicalProcessorCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">//cpu 系统使用率</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cSys\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>cSys <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> totalCpu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">//cpu 用户使用率</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> totalCpu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">//cpu 当前等待率</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iowait\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>iowait <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> totalCpu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">//cpu 当前使用率</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"idle\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>idle <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> totalCpu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> cpuInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     * 系统 jvm 信息</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONObject</span> <span class=\"token function\">getJvmInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> cpuInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token class-name\">Properties</span> props <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token class-name\">Runtime</span> runtime <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">long</span> jvmTotalMemoryByte <span class=\"token operator\">=</span> runtime<span class=\"token punctuation\">.</span><span class=\"token function\">totalMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">long</span> freeMemoryByte <span class=\"token operator\">=</span> runtime<span class=\"token punctuation\">.</span><span class=\"token function\">freeMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\">//jvm 总内存</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">totalMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">// 空闲空间</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"free\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">freeMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token comment\">//jvm 最大可申请</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">maxMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token comment\">//vm 已使用内存</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>jvmTotalMemoryByte <span class=\"token operator\">-</span> freeMemoryByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">//jvm 内存使用率</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usageRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jvmTotalMemoryByte <span class=\"token operator\">-</span> freeMemoryByte<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> jvmTotalMemoryByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\">//jdk 版本</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdkVersion\"</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.version\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\">//jdk 路径</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdkHome\"</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">return</span> cpuInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre> </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>     * 系统内存信息</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONObject</span> <span class=\"token function\">getMemInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> cpuInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token class-name\">GlobalMemory</span> memory <span class=\"token operator\">=</span> systemInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getHardware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token comment\">// 总内存</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">long</span> totalByte <span class=\"token operator\">=</span> memory<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token comment\">// 剩余</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">long</span> acaliableByte <span class=\"token operator\">=</span> memory<span class=\"token punctuation\">.</span><span class=\"token function\">getAvailable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token comment\">// 总内存</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>totalByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\">// 使用</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"used\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>totalByte <span class=\"token operator\">-</span> acaliableByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token comment\">// 剩余内存</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"free\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>acaliableByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\">// 使用率</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usageRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>totalByte <span class=\"token operator\">-</span> acaliableByte<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> totalByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">return</span> cpuInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre> </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     * 系统盘符信息</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONArray</span> <span class=\"token function\">getSysFileInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> cpuInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token class-name\">JSONArray</span> sysFiles <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token class-name\">FileSystem</span> fileSystem <span class=\"token operator\">=</span> operatingSystem<span class=\"token punctuation\">.</span><span class=\"token function\">getFileSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token class-name\">OSFileStore</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fsArray <span class=\"token operator\">=</span> fileSystem<span class=\"token punctuation\">.</span><span class=\"token function\">getFileStores</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OSFileStore</span> fs <span class=\"token operator\">:</span> fsArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            cpuInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token comment\">// 盘符路径</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dirName\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token comment\">// 盘符类型</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sysTypeName\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token comment\">// 文件类型</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"typeName\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token comment\">// 总大小</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token comment\">// 剩余大小</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"free\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">getUsableSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token comment\">// 已经使用量</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"used\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getUsableSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                <span class=\"token comment\">// 资源的使用率</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getUsableSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            sysFiles<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cpuInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">return</span> sysFiles<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre> </pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>     * 系统信息</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONObject</span> <span class=\"token function\">getSysInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">UnknownHostException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> cpuInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token class-name\">Properties</span> props <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token comment\">// 操作系统名</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"osName\"</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"os.name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token comment\">// 系统架构</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"osArch\"</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"os.arch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token comment\">// 服务器名称</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"computerName\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InetAddress</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocalHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHostName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token comment\">// 服务器 Ip</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"computerIp\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InetAddress</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocalHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHostAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token comment\">// 项目路径</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        cpuInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userDir\"</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token keyword\">return</span> cpuInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre> </pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>     * 所有系统信息</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSONObject</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">UnknownHostException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token class-name\">JSONObject</span> info <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        info<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cpuInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getCpuInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        info<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jvmInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getJvmInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        info<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getMemInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        info<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sysInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getSysInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        info<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sysFileInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getSysFileInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token keyword\">return</span> info<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre> </pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"171\"></td><td><pre>     * 单位转换</pre></td></tr><tr><td data-num=\"172\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">formatByte</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> byteNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>        <span class=\"token comment\">// 换算单位</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token keyword\">double</span> <span class=\"token constant\">FORMAT</span> <span class=\"token operator\">=</span> <span class=\"token number\">1024.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token keyword\">double</span> kbNumber <span class=\"token operator\">=</span> byteNumber <span class=\"token operator\">/</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kbNumber <span class=\"token operator\">&lt;</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##KB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>kbNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token keyword\">double</span> mbNumber <span class=\"token operator\">=</span> kbNumber <span class=\"token operator\">/</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mbNumber <span class=\"token operator\">&lt;</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##MB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>mbNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token keyword\">double</span> gbNumber <span class=\"token operator\">=</span> mbNumber <span class=\"token operator\">/</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gbNumber <span class=\"token operator\">&lt;</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##GB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>gbNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token keyword\">double</span> tbNumber <span class=\"token operator\">=</span> gbNumber <span class=\"token operator\">/</span> <span class=\"token constant\">FORMAT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#.##TB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>tbNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "java",
                "第三方库",
                "计算机学科",
                "第三方库",
                "oshicore"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E8%A7%A3%E6%9E%90shp%E6%96%87%E4%BB%B6/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E8%A7%A3%E6%9E%90shp%E6%96%87%E4%BB%B6/",
            "title": "解析shp文件",
            "date_published": "2024-05-28T09:32:37.067Z",
            "content_html": "<h1 id=\"解析shp文件\"><a class=\"anchor\" href=\"#解析shp文件\">#</a> 解析 shp 文件</h1>\n<p><strong>导入依赖</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- shp 文件解析 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.gdal<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gdal<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>net.postgis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>postgis-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.5.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">&lt;!-- 解析 shp 文件 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-shapefile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-epsg-wkt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-geojson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"controller\"><a class=\"anchor\" href=\"#controller\">#</a> controller</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 上传 zip 解压 shp 文件信息存入数据库</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"上传zip解压shp文件信息存入数据库\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Anonymous</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mineLayersController/uploadShp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">uploadShp</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"没有上传相关文件\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   ksTcService<span class=\"token punctuation\">.</span><span class=\"token function\">uploadShp</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"serviceimpl\"><a class=\"anchor\" href=\"#serviceimpl\">#</a> serviceImpl</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 上传 zip 解压 shp 文件信息存入数据库</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @param file</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  * @throws IOException</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">uploadShp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 创建临时目录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">Path</span> tempDir <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTempDirectory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 创建临时 ZIP 文件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token class-name\">File</span> zipFile <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTempFile</span><span class=\"token punctuation\">(</span>tempDir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".zip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   file<span class=\"token punctuation\">.</span><span class=\"token function\">transferTo</span><span class=\"token punctuation\">(</span>zipFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 判断是否为 zip 文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">ZipUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isZipFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请上传zip文件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token comment\">// 解压 ZIP 文件</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token class-name\">File</span> unzipDir <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTempDirectory</span><span class=\"token punctuation\">(</span>tempDir<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unzip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>ZipUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">unzip</span><span class=\"token punctuation\">(</span>zipFile<span class=\"token punctuation\">,</span> unzipDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 查找解压后的 SHP 文件</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token class-name\">File</span> shpFile <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>unzipDir<span class=\"token punctuation\">.</span><span class=\"token function\">toPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">-></span> path<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".shp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">findFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shapefile not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token comment\">// 读取 SHP 文件</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">,</span> shpFile<span class=\"token punctuation\">.</span><span class=\"token function\">toURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token comment\">// 处理编码问题</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"charset\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Charset</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token function\">getShapeFileCharsetName</span><span class=\"token punctuation\">(</span>shpFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid shapefile URL\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token comment\">// 创建工厂对象</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token class-name\">ShapefileDataStoreFactory</span> dataStoreFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShapefileDataStoreFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token class-name\">ShapefileDataStore</span> dataStore <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ShapefileDataStore</span><span class=\"token punctuation\">)</span> dataStoreFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createDataStore</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token comment\">// 读取要素</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SimpleFeatureIterator</span> iterator <span class=\"token operator\">=</span> dataStore<span class=\"token punctuation\">.</span><span class=\"token function\">getFeatureSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFeatures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">features</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         <span class=\"token class-name\">SimpleFeature</span> feature <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>         <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Property</span><span class=\"token punctuation\">></span></span> it <span class=\"token operator\">=</span> feature<span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>         <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> mapr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>         <span class=\"token class-name\">KsTc</span> ksTc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KsTc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\">Property</span> next <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 将解析 shp 文件的数据以 Key_Value 形式存储到 map 集合中</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            mapr<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>         <span class=\"token comment\">// 投影坐标转地理坐标的十进制度</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         <span class=\"token class-name\">String</span> geo <span class=\"token operator\">=</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">coordinateTransform</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">,</span> <span class=\"token number\">4490</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token comment\">// 添加 ks_tc 数据</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>         <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>mapr<span class=\"token punctuation\">,</span> ksTc<span class=\"token punctuation\">,</span> geo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token comment\">// 释放资源</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      dataStore<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  * 添加 ks_tc 数据</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  * @param mapr</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  * @param ksTc</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token annotation punctuation\">@SneakyThrows</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> mapr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsTc</span> ksTc<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> geo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>   <span class=\"token comment\">// 将 map 数据转换为 JSON 字符串</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>   <span class=\"token class-name\">String</span> jsonString <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>mapr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>   <span class=\"token comment\">// 将 json 格式的字符传转换为对象</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>   <span class=\"token class-name\">KsTcParam</span> ksTcParam <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>jsonString<span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsTcParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>   <span class=\"token comment\">// 设置对象属性数据</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setXkzh</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getXKZ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>   <span class=\"token class-name\">String</span> monthAndYaer <span class=\"token operator\">=</span> ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getYXQZ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> split <span class=\"token operator\">=</span> monthAndYaer<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setYear</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>split<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setLon</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getZBX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setGeom</span><span class=\"token punctuation\">(</span>geo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setLat</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getZBY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setWtlx</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getWTLX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setZdfs</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getZDFS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setKczt</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getKCZT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setZdmj</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getZDMJ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>   ksTc<span class=\"token punctuation\">.</span><span class=\"token function\">setDt</span><span class=\"token punctuation\">(</span>ksTcParam<span class=\"token punctuation\">.</span><span class=\"token function\">getDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>   <span class=\"token comment\">// 添加数据</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>   ksTcxMapper<span class=\"token punctuation\">.</span><span class=\"token function\">addData</span><span class=\"token punctuation\">(</span>ksTc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  * 设置字符编码</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  * @param file</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  * @throws Exception</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  * @author 窦凯欣</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getShapeFileCharsetName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token string\">\"GBK\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   <span class=\"token class-name\">String</span> encode <span class=\"token operator\">=</span> <span class=\"token string\">\"GBK\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>   <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      <span class=\"token class-name\">String</span> tempString <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      <span class=\"token comment\">// 一次读入一行，直到读入 null 为文件结束</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tempString <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>         <span class=\"token comment\">// 显示行号</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>tempString<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            encode <span class=\"token operator\">=</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>         <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>      reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>reader <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>         <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>   <span class=\"token keyword\">return</span> encode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"工具类\"><a class=\"anchor\" href=\"#工具类\">#</a> 工具类</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>ruoyi<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StrUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fhs<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>ruoyi<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServiceException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>ruoyi<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections4<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedMap</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>geotools<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JTS</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>geotools<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JTSFactoryFinder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>geotools<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WKTReader2</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>geotools<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CRS</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>geom<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ParseException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WKTReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>feature<span class=\"token punctuation\">.</span>simple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleFeature</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FactoryException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span>crs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CRSAuthorityFactory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span>crs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CoordinateReferenceSystem</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span>operation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MathTransform</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>opengis<span class=\"token punctuation\">.</span>referencing<span class=\"token punctuation\">.</span>operation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TransformException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> * 坐标工具</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> * @liuliya</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoordinateUtil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// WGS84 标准参考椭球中的地球长半径 (单位：米)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> <span class=\"token constant\">EARTH_RADIUS_WGS84</span> <span class=\"token operator\">=</span> <span class=\"token number\">6378137.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 十进制经度</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">LNG_PATTERN</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"^[\\\\-\\\\+]?(0(\\\\.\\\\d&#123;1,14&#125;)?|([1-9](\\\\d)?)(\\\\.\\\\d&#123;1,14&#125;)?|1[0-7]\\\\d&#123;1&#125;(\\\\.\\\\d&#123;1,14&#125;)?|180(\\\\.0&#123;1,14&#125;)?)$\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// 纬度</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">LAT_PATTERN</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"^[\\\\-\\\\+]?((0|([1-8]\\\\d?))(\\\\.\\\\d&#123;1,14&#125;)?|90(\\\\.0&#123;1,14&#125;)?)$\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     * 度分秒正则</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     * 每节的数字不能以 0 开头（比如不能写 08 度，而要写 8 度）；</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>     * 秒的数字可以是小数，小数点后最多有两位数字；</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>     * 分隔三个节的标志符可以是空格、中横线、逗号、分号、°′\" 或者度分秒；</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     * 取值范围，经度为 0 度 0 分 0 秒 至 180 度 0 分 0 秒；纬度为 0 度 0 分 0 秒 至 90 度 0 分 0 秒。</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     * */</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">// 经度</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">LNG_PATTERN_D</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"^((\\\\d|[1-9]\\\\d|1[0-7]\\\\d)[°](\\\\d|[0-5]\\\\d)[′](\\\\d|[0-5]\\\\d)(\\\\.\\\\d&#123;1,6&#125;)?[\\\\″]$)|(180[°]0[′]0[\\\\″]$)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// 纬度</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">LAT_PATTERN_D</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"^((\\\\d|[1-8]\\\\d)[°](\\\\d|[0-5]\\\\d)[′](\\\\d|[0-5]\\\\d)(\\\\.\\\\d&#123;1,6&#125;)?[\\\\″]$)|(90[°]0[′]0[\\\\″]$)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     * 计算两个坐标的距离 (粗略计算，单位：米)</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     * 计算公式参照 google map 的距离计算</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>     * @param lat1 坐标 1 纬度</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     * @param lng1 坐标 1 经度</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     * @param lat2 坐标 2 纬度</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>     * @param lng2 坐标 2 经度</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> lat1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> lng1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> lat2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> lng2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">double</span> radLat1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toRadians</span><span class=\"token punctuation\">(</span>lat1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">double</span> radLat2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toRadians</span><span class=\"token punctuation\">(</span>lat2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> radLat1 <span class=\"token operator\">-</span> radLat2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toRadians</span><span class=\"token punctuation\">(</span>lng1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toRadians</span><span class=\"token punctuation\">(</span>lng2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">double</span> s <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">asin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>radLat1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>radLat2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span> <span class=\"token constant\">EARTH_RADIUS_WGS84</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>     * 度分秒转十进制度</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>     * @param jwd</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">Dms2D</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 如果不为空并且存在度单位</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token comment\">// 计算前进行数据处理</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            jwd <span class=\"token operator\">=</span> jwd<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"N\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"：\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            d <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token comment\">// 不同单位的分，可扩展</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"′\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 正常的′</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                m <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"′\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 特殊的'</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                m <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token comment\">// 不同单位的秒，可扩展</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"″\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 正常的″</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                <span class=\"token comment\">// 有时候没有分 如：112°10.25″</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                s <span class=\"token operator\">=</span> jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"′\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"′\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"″\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"″\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"''\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 特殊的 ''</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                <span class=\"token comment\">// 有时候没有分 如：112°10.25''</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                s <span class=\"token operator\">=</span> jwd<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"''\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>jwd<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"°\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"''\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            jwd <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> m <span class=\"token operator\">/</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> s <span class=\"token operator\">/</span> <span class=\"token number\">60</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 计算并转换为 string</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">return</span> jwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>     * @param sourceGeometry</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>     * @param targetSrid</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>     * @author 窦凯欣</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">coordinateTransform</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Geometry</span> sourceGeometry<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceGeometry <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> sourceGeometry<span class=\"token punctuation\">.</span><span class=\"token function\">getSRID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> targetSrid <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token class-name\">CRSAuthorityFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAuthorityFactory</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> source <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> sourceGeometry<span class=\"token punctuation\">.</span><span class=\"token function\">getSRID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> target <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token class-name\">MathTransform</span> transform <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMathTransform</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token constant\">JTS</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>sourceGeometry<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                res<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FactoryException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">TransformException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>     * @param wkt</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>     * @param srid</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>     * @author 窦凯欣</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">createGeometry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> wkt<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> srid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token class-name\">WKTReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WKTReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            <span class=\"token class-name\">Geometry</span> geometry <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>srid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>     * 坐标转换</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>     * @param y</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>     * @param x</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>     * @param dh</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>     * @throws Exception</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">transTo4490fromProjectionByEpsg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> dh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token class-name\">String</span> epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>dh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token comment\">//6 度分带</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"13\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4491\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"14\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4492\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"15\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4493\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"16\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4494\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"17\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4495\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"18\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4496\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"19\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4497\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"20\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4498\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"21\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4499\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"22\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4500\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"23\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4501\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>            <span class=\"token comment\">//3 度分带</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"25\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4513\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"26\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4514\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"27\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4515\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"28\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4516\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"29\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4517\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"30\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4518\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"31\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4519\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"32\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4520\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"33\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4521\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"34\"</span><span class=\"token operator\">:</span>   <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4522\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"35\"</span><span class=\"token operator\">:</span>   <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4523\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"36\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4524\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"37\"</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4525\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"38\"</span><span class=\"token operator\">:</span>   <span class=\"token comment\">//'EPSG:':</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4526\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"39\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4527\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"40\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4528\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"41\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4529\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"42\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4530\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"43\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4531\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"44\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4532\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"45\"</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token char\">'EPSG:'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                epsgSource <span class=\"token operator\">=</span> <span class=\"token string\">\"EPSG:4533\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">transFromByEpsg</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> epsgSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"EPSG:4490\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"262\"></td><td><pre>     * 坐标投影转换</pre></td></tr><tr><td data-num=\"263\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"264\"></td><td><pre>     * @param x</pre></td></tr><tr><td data-num=\"265\"></td><td><pre>     * @param y</pre></td></tr><tr><td data-num=\"266\"></td><td><pre>     * @param epsgSource</pre></td></tr><tr><td data-num=\"267\"></td><td><pre>     * @param epsgTarget</pre></td></tr><tr><td data-num=\"268\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"269\"></td><td><pre>     * @throws Exception</pre></td></tr><tr><td data-num=\"270\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">transFromByEpsg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> epsgSource<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> epsgTarget<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>        <span class=\"token class-name\">Coordinate</span> sourceCoord <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>        <span class=\"token class-name\">Coordinate</span> targetCoord <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> crsSource <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>epsgSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> crsTarget <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>epsgTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>            <span class=\"token class-name\">MathTransform</span> transform <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMathTransform</span><span class=\"token punctuation\">(</span>crsSource<span class=\"token punctuation\">,</span> crsTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>            <span class=\"token constant\">JTS</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>sourceCoord<span class=\"token punctuation\">,</span> targetCoord<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>            <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> targetCoords <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>targetCoord<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>targetCoord<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>            <span class=\"token keyword\">return</span> targetCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TransformException</span> te<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"坐标系转换错误：TransformException:\"</span> <span class=\"token operator\">+</span> te<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FactoryException</span> fe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"坐标系转换错误：FactoryException:\"</span> <span class=\"token operator\">+</span> fe<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"坐标系转换错误：Exception:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre></pre></td></tr><tr><td data-num=\"290\"></td><td><pre></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"292\"></td><td><pre>     * 创建点坐标</pre></td></tr><tr><td data-num=\"293\"></td><td><pre>     * @param x 经度</pre></td></tr><tr><td data-num=\"294\"></td><td><pre>     * @param y 纬度</pre></td></tr><tr><td data-num=\"295\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"296\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Double</span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>        <span class=\"token comment\">// 创建几何工厂</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>        <span class=\"token class-name\">GeometryFactory</span> geometryFactory <span class=\"token operator\">=</span> <span class=\"token class-name\">JTSFactoryFinder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getGeometryFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        <span class=\"token comment\">// 创建一个几何坐标</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>        <span class=\"token class-name\">Coordinate</span> coordinate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>        <span class=\"token keyword\">return</span> geometryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span>coordinate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"306\"></td><td><pre>     * 将要素的坐标系转为相对应的坐标系</pre></td></tr><tr><td data-num=\"307\"></td><td><pre>     * @param feature 要素类</pre></td></tr><tr><td data-num=\"308\"></td><td><pre>     * @param targetSrid 坐标系 id</pre></td></tr><tr><td data-num=\"309\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"310\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">coordinateTransform</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SimpleFeature</span> feature<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>            <span class=\"token class-name\">CRSAuthorityFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAuthorityFactory</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> target <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>            <span class=\"token class-name\">CoordinateReferenceSystem</span> coordinateReferenceSystem <span class=\"token operator\">=</span> feature<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultGeometryProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coordinateReferenceSystem <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>                <span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Geometry</span><span class=\"token punctuation\">)</span>feature<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultGeometry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>                res<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>                <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>            <span class=\"token class-name\">MathTransform</span> transform <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMathTransform</span><span class=\"token punctuation\">(</span>coordinateReferenceSystem<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>            <span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token constant\">JTS</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Geometry</span><span class=\"token punctuation\">)</span>feature<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultGeometry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                res<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FactoryException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">TransformException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre></pre></td></tr><tr><td data-num=\"336\"></td><td><pre></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"338\"></td><td><pre>     * 面坐标处理解析成 WKT 格式</pre></td></tr><tr><td data-num=\"339\"></td><td><pre>     * 第一种方式</pre></td></tr><tr><td data-num=\"340\"></td><td><pre>     * @param coordinatesStr 一串坐标</pre></td></tr><tr><td data-num=\"341\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"342\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"343\"></td><td><pre>     * 4348121.92,38610084.30</pre></td></tr><tr><td data-num=\"344\"></td><td><pre>     * 4348076.60,38611233.20</pre></td></tr><tr><td data-num=\"345\"></td><td><pre>     * 4347543.64,38611157.40</pre></td></tr><tr><td data-num=\"346\"></td><td><pre>     * 4347515.09,38611985.26</pre></td></tr><tr><td data-num=\"347\"></td><td><pre>     * 4346651.97,38612040.25</pre></td></tr><tr><td data-num=\"348\"></td><td><pre>     * 4346493.69,38611280.02</pre></td></tr><tr><td data-num=\"349\"></td><td><pre>     * 4346043.13,38610778.17</pre></td></tr><tr><td data-num=\"350\"></td><td><pre>     * 4345917.48,38609708.95</pre></td></tr><tr><td data-num=\"351\"></td><td><pre>     * 4346602.51,38609067.42</pre></td></tr><tr><td data-num=\"352\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">CoordinateDisposeWKT1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> coordinatesStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>        coordinatesStr <span class=\"token operator\">=</span> coordinatesStr<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>        <span class=\"token comment\">// 分割文本获取所有的点坐标</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pointCollection <span class=\"token operator\">=</span> coordinatesStr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\\t\\n\\r]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>        <span class=\"token comment\">// 一个面最少三个点</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pointCollection<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>        <span class=\"token comment\">// 判断当前坐标串用那种方式解析 1. 十进制度、2. 度分秒、3. 投影</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>        <span class=\"token class-name\">Integer</span> analysisType <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_type</span><span class=\"token punctuation\">(</span>pointCollection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        <span class=\"token comment\">// 存储创建好的点坐标几何</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>        <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span>pointCollection<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>        <span class=\"token comment\">// 循环每个坐标，验真坐标的正确性</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pointCollection<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>            <span class=\"token comment\">// 根据 \",\" 分割 x y</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pointStr <span class=\"token operator\">=</span> pointCollection<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pointStr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>            <span class=\"token class-name\">Point</span> point <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_point</span><span class=\"token punctuation\">(</span>pointStr<span class=\"token punctuation\">,</span> analysisType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>            <span class=\"token comment\">// 其中有一个点存在错误该图形不正确</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>            <span class=\"token comment\">// 创建点几何</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>            coordinates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> point<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>        <span class=\"token class-name\">Polygon</span> polygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygon</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>        <span class=\"token comment\">// 创建多面类型</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>        <span class=\"token class-name\">MultiPolygon</span> multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>polygon<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>        <span class=\"token comment\">// 检查图形的有效性</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>        <span class=\"token keyword\">return</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"391\"></td><td><pre>     * 面坐标处理解析成 WKT 格式</pre></td></tr><tr><td data-num=\"392\"></td><td><pre>     * 第二种方式</pre></td></tr><tr><td data-num=\"393\"></td><td><pre>     * @param coordinatesStr 一串坐标</pre></td></tr><tr><td data-num=\"394\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"395\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"396\"></td><td><pre>     * 1,4203487.48,38515918.33, ,</pre></td></tr><tr><td data-num=\"397\"></td><td><pre>     * 2,4203491.25,38516654.34, ,</pre></td></tr><tr><td data-num=\"398\"></td><td><pre>     * 3,4203431.04,38516773.13, ,</pre></td></tr><tr><td data-num=\"399\"></td><td><pre>     * 4,4203336.43,38516829.18, ,</pre></td></tr><tr><td data-num=\"400\"></td><td><pre>     * 5,4203273.42,38516862.76, ,</pre></td></tr><tr><td data-num=\"401\"></td><td><pre>     * 6,4203217.14,38516856.54, ,</pre></td></tr><tr><td data-num=\"402\"></td><td><pre>     * 7,4203189.85,38516751.12, ,</pre></td></tr><tr><td data-num=\"403\"></td><td><pre>     * 8,4203189.85,38516663.19, ,</pre></td></tr><tr><td data-num=\"404\"></td><td><pre>     * 9,4203093.83,38516717.14, ,</pre></td></tr><tr><td data-num=\"405\"></td><td><pre>     * 10,4203050.36,38516838.10, ,</pre></td></tr><tr><td data-num=\"406\"></td><td><pre>     * 11,4202394.67,38516765.61, ,</pre></td></tr><tr><td data-num=\"407\"></td><td><pre>     * 12,4202312.69,38516211.71, ,</pre></td></tr><tr><td data-num=\"408\"></td><td><pre>     * *,632.5,350, ,1</pre></td></tr><tr><td data-num=\"409\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">CoordinateDisposeWKT2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> coordinatesStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinatesArry <span class=\"token operator\">=</span> coordinatesStr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>        <span class=\"token comment\">// 判断当前坐标串用那种方式解析 1. 十进制度、2. 度分秒、3. 投影</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>        <span class=\"token class-name\">Integer</span> analysisType <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_type</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>        <span class=\"token comment\">// 坐标面集合</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">CoordinateList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>        <span class=\"token comment\">// 坐标点集合</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">></span></span> pointList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>        <span class=\"token comment\">// 坐标解析</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> coordinatesArry<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>            <span class=\"token class-name\">String</span> sign <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>            sign <span class=\"token operator\">=</span> sign<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>            <span class=\"token comment\">// 结束符</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>                <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> end <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>                <span class=\"token class-name\">CoordinateList</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>pointList<span class=\"token punctuation\">,</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>                pointList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>            <span class=\"token class-name\">String</span> x <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>            <span class=\"token class-name\">String</span> y <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>            <span class=\"token class-name\">Point</span> point <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> analysisType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>            pointList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>        <span class=\"token comment\">// 坐标转为面</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> multiPolygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> polygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">></span></span> k <span class=\"token operator\">:</span> <span class=\"token class-name\">CoordinateList</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>            <span class=\"token comment\">// 获取结束值</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>            <span class=\"token class-name\">Integer</span> v <span class=\"token operator\">=</span> <span class=\"token class-name\">CoordinateList</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>            <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygon</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>                multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygonList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>                polygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>            polygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>        multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>        multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygonList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>        <span class=\"token comment\">// 处理多面或面带洞</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>        polygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">:</span> multiPolygonList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                polygonList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>            <span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> linearRings <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre>                linearRings<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExteriorRing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygonWithHoles <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygonWithHoles</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExteriorRing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> linearRings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>            polygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygonWithHoles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>        <span class=\"token comment\">// 创建多面</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>        <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> polygons <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span>polygonList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>        <span class=\"token class-name\">MultiPolygon</span> multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span>polygonList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>polygons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>        <span class=\"token keyword\">return</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"471\"></td><td><pre>     * 面坐标处理解析成 WKT 格式</pre></td></tr><tr><td data-num=\"472\"></td><td><pre>     * 第三种方式</pre></td></tr><tr><td data-num=\"473\"></td><td><pre>     * @param coordinatesStr 一串坐标</pre></td></tr><tr><td data-num=\"474\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"475\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"476\"></td><td><pre>     * 2,5,1,4421028.05,39571109.36,2,4421062.05,39571064.36,3,4421110.05,39571178.36,4,4421088.05,39571236.36,5,4421024.05,39571217.36,103,47,,1,3,7,4420967.05,39571412.36,8,4420819.05,39571421.36,6,4420876.05,39571372.36,103,47,,1,</pre></td></tr><tr><td data-num=\"477\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">CoordinateDisposeWKT3</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> coordinatesStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinatesArry <span class=\"token operator\">=</span> coordinatesStr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>        <span class=\"token comment\">// 判断当前坐标串用那种方式解析 1. 十进制度、2. 度分秒、3. 投影</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>        <span class=\"token class-name\">Integer</span> analysisType <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_type</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre>        <span class=\"token comment\">// 面的个数</span></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>        <span class=\"token class-name\">Integer</span> polygonNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>        <span class=\"token comment\">// 第一个面的点个数</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pointNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre>        <span class=\"token comment\">// 第一个 X 点</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>        <span class=\"token class-name\">Integer</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>        <span class=\"token comment\">// 第一个 Y 点</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>        <span class=\"token class-name\">Integer</span> y <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>        <span class=\"token comment\">// 存放多个面</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> multiPolygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre>        <span class=\"token comment\">// 存放为洞的面</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> holePolygon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> polygonNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>            <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span>pointNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> pointNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>                <span class=\"token comment\">//x 点</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>                <span class=\"token class-name\">String</span> lon <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>                <span class=\"token comment\">//y 点</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>                <span class=\"token class-name\">String</span> lat <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre>                <span class=\"token comment\">// 转为点</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>                <span class=\"token class-name\">Point</span> point <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>lon<span class=\"token punctuation\">,</span>lat<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> analysisType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>                coordinates<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> point<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>            <span class=\"token comment\">// 创建面</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygon</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>            <span class=\"token comment\">// 判断是多面或带洞的面</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>            <span class=\"token class-name\">Integer</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>                holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre>                multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> polygonNum<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre>                <span class=\"token comment\">// 第二个或更多面的点数</span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre>                pointNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>                x<span class=\"token operator\">+=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>                y<span class=\"token operator\">+=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>        <span class=\"token class-name\">MultiPolygon</span> multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span>multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span>multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre>        <span class=\"token comment\">// 存在带洞的情况</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">></span></span> linearRingList <span class=\"token operator\">=</span> holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>hole <span class=\"token operator\">-></span> hole<span class=\"token punctuation\">.</span><span class=\"token function\">getExteriorRing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>            <span class=\"token comment\">// 创建带洞的面</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre>            <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre>            <span class=\"token class-name\">GeometryFactory</span> geometryFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GeometryFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>            <span class=\"token class-name\">LinearRing</span> ring <span class=\"token operator\">=</span> geometryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createLinearRing</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygonWithHoles <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygonWithHoles</span><span class=\"token punctuation\">(</span>ring<span class=\"token punctuation\">,</span> linearRingList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">[</span>holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>            multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>polygonWithHoles<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre>        <span class=\"token comment\">// 检查图形的有效性</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"537\"></td><td><pre>        <span class=\"token keyword\">return</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre></pre></td></tr><tr><td data-num=\"540\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"541\"></td><td><pre>     * 面坐标处理解析成 WKT 格式</pre></td></tr><tr><td data-num=\"542\"></td><td><pre>     * 第四种方式</pre></td></tr><tr><td data-num=\"543\"></td><td><pre>     * @param coordinatesStr 一串坐标</pre></td></tr><tr><td data-num=\"544\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"545\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"546\"></td><td><pre>     * 2,4,114.0643000,41.0300000,114.0820000,41.0300000,114.0820000,41.0200000,114.0643000,41.0200000,0,0,0,4,114.0721000,41.0219000,114.0725000,41.0214000,114.0707000,41.0203000,114.0703000,41.0207000,-1,0,0,</pre></td></tr><tr><td data-num=\"547\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"548\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">CoordinateDisposeWKT4</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> coordinatesStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"549\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinatesArry <span class=\"token operator\">=</span> coordinatesStr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"550\"></td><td><pre>        <span class=\"token comment\">// 判断当前坐标串用那种方式解析 1. 十进制度、2. 度分秒、3. 投影</span></pre></td></tr><tr><td data-num=\"551\"></td><td><pre>        <span class=\"token class-name\">Integer</span> analysisType <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_type</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"552\"></td><td><pre>        <span class=\"token comment\">// 面的个数</span></pre></td></tr><tr><td data-num=\"553\"></td><td><pre>        <span class=\"token class-name\">Integer</span> polygonNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"554\"></td><td><pre>        <span class=\"token comment\">// 第一个面的点个数</span></pre></td></tr><tr><td data-num=\"555\"></td><td><pre>        <span class=\"token class-name\">Integer</span> pointNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"556\"></td><td><pre>        <span class=\"token comment\">// 第一个 X 点</span></pre></td></tr><tr><td data-num=\"557\"></td><td><pre>        <span class=\"token class-name\">Integer</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"558\"></td><td><pre>        <span class=\"token comment\">// 第一个 Y 点</span></pre></td></tr><tr><td data-num=\"559\"></td><td><pre>        <span class=\"token class-name\">Integer</span> y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"560\"></td><td><pre>        <span class=\"token comment\">// 存放多个面</span></pre></td></tr><tr><td data-num=\"561\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> multiPolygonList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"562\"></td><td><pre>        <span class=\"token comment\">// 存放为洞的面</span></pre></td></tr><tr><td data-num=\"563\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">></span></span> holePolygon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"564\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> polygonNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"565\"></td><td><pre>            <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span>pointNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"566\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> pointNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"567\"></td><td><pre>                <span class=\"token comment\">//x 点</span></pre></td></tr><tr><td data-num=\"568\"></td><td><pre>                <span class=\"token class-name\">String</span> lon <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"569\"></td><td><pre>                <span class=\"token comment\">//y 点</span></pre></td></tr><tr><td data-num=\"570\"></td><td><pre>                <span class=\"token class-name\">String</span> lat <span class=\"token operator\">=</span> coordinatesArry<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"571\"></td><td><pre>                <span class=\"token comment\">// 转为点</span></pre></td></tr><tr><td data-num=\"572\"></td><td><pre>                <span class=\"token class-name\">Point</span> point <span class=\"token operator\">=</span> <span class=\"token function\">polygonAnalysis_point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>lon<span class=\"token punctuation\">,</span>lat<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> analysisType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"573\"></td><td><pre>                coordinates<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> point<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"574\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"575\"></td><td><pre>            <span class=\"token comment\">// 创建面</span></pre></td></tr><tr><td data-num=\"576\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygon</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"577\"></td><td><pre>            <span class=\"token comment\">// 判断是多面或带洞的面</span></pre></td></tr><tr><td data-num=\"578\"></td><td><pre>            <span class=\"token class-name\">Integer</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"579\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"580\"></td><td><pre>                holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"582\"></td><td><pre>                multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"584\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> polygonNum<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"585\"></td><td><pre>                <span class=\"token comment\">// 第二个或更多面的点数</span></pre></td></tr><tr><td data-num=\"586\"></td><td><pre>                pointNum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>coordinatesArry<span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"587\"></td><td><pre>                x<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"588\"></td><td><pre>                y<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"589\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"591\"></td><td><pre></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>        <span class=\"token class-name\">MultiPolygon</span> multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span>multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span>multiPolygonList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"593\"></td><td><pre>        <span class=\"token comment\">// 存在带洞的情况</span></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">></span></span> linearRingList <span class=\"token operator\">=</span> holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>hole <span class=\"token operator\">-></span> hole<span class=\"token punctuation\">.</span><span class=\"token function\">getExteriorRing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>            <span class=\"token comment\">// 创建带洞的面</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>            <span class=\"token class-name\">Coordinate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> coordinates <span class=\"token operator\">=</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">getCoordinates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>            <span class=\"token class-name\">GeometryFactory</span> geometryFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GeometryFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"599\"></td><td><pre>            <span class=\"token class-name\">LinearRing</span> ring <span class=\"token operator\">=</span> geometryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createLinearRing</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"600\"></td><td><pre>            <span class=\"token class-name\">Polygon</span> polygonWithHoles <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPolygonWithHoles</span><span class=\"token punctuation\">(</span>ring<span class=\"token punctuation\">,</span> linearRingList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LinearRing</span><span class=\"token punctuation\">[</span>holePolygon<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"601\"></td><td><pre>            multiPolygon <span class=\"token operator\">=</span> <span class=\"token class-name\">GeometryUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createMultiPolygon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Polygon</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>polygonWithHoles<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre>        <span class=\"token comment\">// 检查图形的有效性</span></pre></td></tr><tr><td data-num=\"604\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"605\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"606\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"607\"></td><td><pre>        <span class=\"token keyword\">return</span> multiPolygon<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"608\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"609\"></td><td><pre></pre></td></tr><tr><td data-num=\"610\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"611\"></td><td><pre>     * 根据解析类型创建点 (面解析方法中使用)</pre></td></tr><tr><td data-num=\"612\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"613\"></td><td><pre>     * @param pointStr     坐标点 x y 数组</pre></td></tr><tr><td data-num=\"614\"></td><td><pre>     * @param analysisType 解析类型 1. 十进制度、2. 度分秒、3. 投影</pre></td></tr><tr><td data-num=\"615\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"616\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"617\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">polygonAnalysis_point</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pointStr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> analysisType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"618\"></td><td><pre>        <span class=\"token comment\">// 根据得到的类型解析每个点</span></pre></td></tr><tr><td data-num=\"619\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>analysisType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"620\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"621\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">pointDecimalism</span><span class=\"token punctuation\">(</span>pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"622\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"623\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">pointDFM</span><span class=\"token punctuation\">(</span>pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"624\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"625\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">pointEPSG4490</span><span class=\"token punctuation\">(</span>pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointStr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"626\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"627\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"628\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"629\"></td><td><pre></pre></td></tr><tr><td data-num=\"630\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"631\"></td><td><pre>     * 获取坐标解析类型 1. 十进制度、2. 度分秒、3. 投影 0. 错误类型</pre></td></tr><tr><td data-num=\"632\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"633\"></td><td><pre>     * @param pointIndex1 坐标 x y 数组</pre></td></tr><tr><td data-num=\"634\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"635\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"636\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">polygonAnalysis_type</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pointIndex1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"637\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pointIndex1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"638\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"639\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"640\"></td><td><pre>        <span class=\"token class-name\">Point</span> pointDecimalism <span class=\"token operator\">=</span> <span class=\"token function\">pointDecimalism</span><span class=\"token punctuation\">(</span>pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"641\"></td><td><pre>        <span class=\"token class-name\">Point</span> pointDFM <span class=\"token operator\">=</span> <span class=\"token function\">pointDFM</span><span class=\"token punctuation\">(</span>pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"642\"></td><td><pre>        <span class=\"token class-name\">Point</span> pointEPSG4490 <span class=\"token operator\">=</span> <span class=\"token function\">pointEPSG4490</span><span class=\"token punctuation\">(</span>pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointIndex1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"643\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotNull</span><span class=\"token punctuation\">(</span>pointDecimalism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"644\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"645\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"646\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotNull</span><span class=\"token punctuation\">(</span>pointDFM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"647\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"648\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"649\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotNull</span><span class=\"token punctuation\">(</span>pointEPSG4490<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"650\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"651\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"652\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"653\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"654\"></td><td><pre></pre></td></tr><tr><td data-num=\"655\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"656\"></td><td><pre>     * 检查输入的十进制度点坐标</pre></td></tr><tr><td data-num=\"657\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"658\"></td><td><pre>     * @param x 经度</pre></td></tr><tr><td data-num=\"659\"></td><td><pre>     * @param y 纬度</pre></td></tr><tr><td data-num=\"660\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"661\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">pointDecimalism</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"662\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BasicUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDouble</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LNG_PATTERN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">BasicUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDouble</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LAT_PATTERN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"663\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"664\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"665\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"666\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"667\"></td><td><pre></pre></td></tr><tr><td data-num=\"668\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"669\"></td><td><pre>     * 检查输入的度分秒点坐标</pre></td></tr><tr><td data-num=\"670\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"671\"></td><td><pre>     * @param x 经度</pre></td></tr><tr><td data-num=\"672\"></td><td><pre>     * @param y 纬度</pre></td></tr><tr><td data-num=\"673\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"674\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">pointDFM</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"675\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BasicUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPattern</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LNG_PATTERN_D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">BasicUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPattern</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LAT_PATTERN_D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"676\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"677\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"678\"></td><td><pre>        <span class=\"token comment\">// 转为十进制度</span></pre></td></tr><tr><td data-num=\"679\"></td><td><pre>        <span class=\"token keyword\">double</span> lon <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CoordinateUtil<span class=\"token punctuation\">.</span>Dms2D</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"680\"></td><td><pre>        <span class=\"token keyword\">double</span> lat <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CoordinateUtil<span class=\"token punctuation\">.</span>Dms2D</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"681\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span>lon<span class=\"token punctuation\">,</span> lat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"682\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"683\"></td><td><pre></pre></td></tr><tr><td data-num=\"684\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"685\"></td><td><pre>     * 检查输入的 2000 大地点坐标</pre></td></tr><tr><td data-num=\"686\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"687\"></td><td><pre>     * @param x 经度</pre></td></tr><tr><td data-num=\"688\"></td><td><pre>     * @param y 纬度</pre></td></tr><tr><td data-num=\"689\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"690\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">pointEPSG4490</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"691\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"692\"></td><td><pre>            <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> doubles <span class=\"token operator\">=</span> <span class=\"token class-name\">CoordinateUtil</span></pre></td></tr><tr><td data-num=\"693\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">transTo4490fromProjectionByEpsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"694\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">CoordinateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span>doubles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> doubles<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"695\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"696\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"697\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"698\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"699\"></td><td><pre></pre></td></tr><tr><td data-num=\"700\"></td><td><pre></pre></td></tr><tr><td data-num=\"701\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"702\"></td><td><pre>     * 读取 WKT 格式数据</pre></td></tr><tr><td data-num=\"703\"></td><td><pre>     * @param WKT</pre></td></tr><tr><td data-num=\"704\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"705\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"706\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">readWKT</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token constant\">WKT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"707\"></td><td><pre>        <span class=\"token comment\">// 读取坐标</span></pre></td></tr><tr><td data-num=\"708\"></td><td><pre>        <span class=\"token class-name\">WKTReader2</span> wktReader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WKTReader2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"709\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"710\"></td><td><pre>            <span class=\"token keyword\">return</span> wktReader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WKT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"711\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ParseException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"712\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"713\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"714\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"715\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"716\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"查询geometry数据进行数据转换\"><a class=\"anchor\" href=\"#查询geometry数据进行数据转换\">#</a> 查询 geometry 数据进行数据转换</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>ruoyi<span class=\"token punctuation\">.</span>xuexiao</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>geom<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Geometry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WKBReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WKBWriter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>locationtech<span class=\"token punctuation\">.</span>jts<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WKTWriter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WKBToWKTConverter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// WKB hex string</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">String</span> wkbHex <span class=\"token operator\">=</span> <span class=\"token string\">\"01060000000200000001030000000100000039000000745A181CEEE65C408D3DDA56F17244400E9FE57FEEE65C40EDBA566AEE7244400B9FE57FEEE65C40561F8713EC724440C5FCFE4DEEE65C40FC259EEEE972444095AB0B35EEE65C404D8ACE97E77244408492BFCAEEE65C406CBC666CE67244402CD78C2EEFE65C406B656479E47244406E797360EFE65C40ED522FEAE27244406AC02C6DEFE65C404FE69339E17244406598CEA4F0E65C4045B75F93E072444076D07553F1E65C40AD1B903CDE724440A721696CF1E65C40D50F7288DA7244403A6636D0F1E65C40C5616DA2D6724440A521696CF1E65C407B81D0E7D3724440ECCE15FCEFE65C4064CE02B5D372444075B11A0FF0E65C408D9A1C52D3724440596027F6EFE65C405B11828AD2724440BFC4579FEDE65C408D431A5FD1724440B886A116EBE65C409D5C66C9D07244405D8DB8F1E8E65C40F5FE4CFBD0724440EE7A8362E7E65C40BCCCB426D27244408DA0F581E6E65C40E53C0384D3724440ABB941ECE5E65C403CDFE9B5D37244405CF8FF75E4E65C404CF83520D37244401637BEFFE2E65C40632ACEF4D1724440F08EC8F3E0E65C4036A1332DD17244406044ECB5DEE65C406ED3CB01D07244406C06362DDCE65C4076EC176CCF7244404C96E7CFDAE65C40D58EFE9DCF7244402E073E2ED8E65C408E431A5FD17244401478948CD5E65C403EDFE9B5D372444064DCC435D3E65C408D2FD5CDD772444084B75A17D0E65C40C64D2811DD724440ED728DB3CFE65C4036471136DF724440CD219A9ACFE65C4025DCC9B1E3724440341574E5CFE65C40E5CE9BFBE7724440AF084E30D0E65C402FAF38B6EA724440C440F5DED0E65C404E768906EE724440BE5F5023D2E65C40FD11595DF07244400440EDDDD4E65C40CEDFC088F1724440E56457FCD7E65C400D2BA5C7EF7244405FCE8E7EDBE65C40465D3D9CEE724440034B0391DCE65C40DEA10A00EF724440B2C777A3DDE65C40FC11595DF0724440AAAE2B39DEE65C4014C05D43F47244400289B919DFE65C40F48DC56EF5724440BF3DD5DAE0E65C4023176036F6724440FD1D7295E3E65C409D42E12FF7724440DA42DCB3E6E65C407C10495BF87244402A568613E9E65C40B5D393AFF972444043746C87E9E65C40D5093280FA72444084FD064FEAE65C406B4EFFE3FA72444060CB6E7AEBE65C406D4EFFE3FA724440783BBDD7ECE65C40D5B22F8DF872444017808A3BEDE65C405CA0FAFDF6724440FB663ED1EDE65C40BD1D7711F4724440745A181CEEE65C408D3DDA56F17244400103000000010000002F0000001FDB0F8515E75C40CB2C4404D372444015840D9213E75C40DB45906ED27244406C07997F12E75C401BE876A0D27244407F84919211E75C402207D2E4D372444027E2AA6011E75C4064C8135BD57244406B4CEAE310E75C409C700967D7724440F758109910E75C4013BBE5A4D9724440F558109910E75C40AB1E0E4DDB724440CEA370D710E75C403A69EA8ADD7244401D46570911E75C40C4CC1233DF7244402D7EFEB711E75C4083498745E072444000B0128C12E75C40624F961FE2724440E9321A7913E75C402A1DFE4AE37244407DFAEEC914E75C4064C5F356E572444006C2C31A16E75C409B6DE962E77244408838A55217E75C407473F83CE972444065BBAC3F18E75C409BE3469AEA7244400D9CCDFA18E75C409B02A2DEEB724440AE7CEEB519E75C40CB8B3CA6EC7244405E5D0F711AE75C407B08B1B8ED724440CCEC3C131BE75C40945FB3ABEF724440232B779C1BE75C403B332AB1F27244400676D7DA1BE75C4064C2D352F57244400B122B321CE75C40095EA3A9F7724440C60B98571CE75C40BAF97200FA724440AF56F8951CE75C40415D9BA8FB72444027E625381DE75C4061CDE905FD724440656FC0FF1DE75C40BA6FD037FD724440DC629A4A1EE75C40212B03D4FC72444093F85AC71EE75C40BA5075F3FB72444037A1D4D31EE75C409B8924A3F87244404B5674951EE75C40EAED544CF6724440BC11A7311EE75C40EB77F714F372444015CDD9CD1DE75C40198B34A5F07244400D3186761DE75C407C08B1B8ED724440C88E9F441DE75C40220FC893EB724440E4DF925D1DE75C40D92E2BD9E87244400B3186761DE75C40833542B4E672444075880C6A1DE75C40291DFE4AE372444027E625381DE75C401B6FF964DF724440DEA7EBAE1CE75C405A9B825FDC724440577C6AB51BE75C40C3FFB208DA724440EC05897D1AE75C40CBF9A32ED8724440402568C219E75C40042C3C03D772444045060D7E18E75C4062C8135BD5724440D7F3D7EE16E75C402207D2E4D37244401FDB0F8515E75C40CB2C4404D3724440\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// Convert WKB hex string to byte array</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> wkbBytes <span class=\"token operator\">=</span> <span class=\"token function\">hexStringToByteArray</span><span class=\"token punctuation\">(</span>wkbHex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// Create a WKBReader instance</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">WKBReader</span> wkbReader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WKBReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// Read the geometry from the WKB byte array</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">Geometry</span> geometry <span class=\"token operator\">=</span> wkbReader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>wkbBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// Convert the geometry to WKT</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">WKTWriter</span> wktWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WKTWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\">String</span> wkt <span class=\"token operator\">=</span> wktWriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>geometry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">// Print the WKT</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// Helper method to convert hex string to byte array</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">hexStringToByteArray</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span>len <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">digit</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                                <span class=\"token operator\">+</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">digit</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p>\n<pre><code>MULTIPOLYGON (((115.60828306558852 40.89799008995315, 115.60830686019855 40.89790086016533, 115.60830686019851 40.897829476335275, 115.6082949628936 40.897764041157615, 115.60828901424095 40.89769265732739, 115.60832470615611 40.89765696541221, 115.60834850076634 40.89759747888714, 115.6083603980712 40.89754988966693, 115.60836343164706 40.89749831887877, 115.60843773055383 40.89747850583675, 115.60847937112143 40.89740712200669, 115.60848531977409 40.897294097608814, 115.60850911438402 40.89717512455858, 115.60848531977406 40.89709184342333, 115.60839750413624 40.89708578717253, 115.60840203863866 40.89707399746576, 115.6083960899863 40.897050202855745, 115.60825332232615 40.8970145109407, 115.60809865736053 40.896996664983114, 115.6079677870052 40.8970026136357, 115.60787260856497 40.897038305550694, 115.60781907069232 40.897079946118346, 115.60778337877734 40.897085894770925, 115.60769414898954 40.89706804881334, 115.60760491920186 40.8970323568981, 115.60747999749924 40.89700856228812, 115.60734317849119 40.89697287037312, 115.60718851352584 40.896955024415476, 115.60710523239067 40.89696097306811, 115.60694461877276 40.89701451094071, 115.6067840051549 40.89708589477094, 115.60664123749444 40.89721081647358, 115.60645088061398 40.89737143009147, 115.60642708600399 40.897436865269285, 115.60642113735157 40.897573684276985, 115.60643898330892 40.89770455463239, 115.60645682926655 40.89778783576764, 115.60649846983421 40.89788896286028, 115.60657580231688 40.8979603466905, 115.60674236458732 40.89799603860557, 115.6069327214678 40.89794250073292, 115.6071468729583 40.89790680881792, 115.60721230813583 40.89791870612292, 115.60727774331352 40.897960346690496, 115.6073134352288 40.89807931974079, 115.60736697310134 40.89811501165596, 115.60747404884658 40.898138806265955, 115.6076406111169 40.89816854952844, 115.60783096799733 40.89820424144361, 115.60797584646994 40.8982448074161, 115.60800347892022 40.89826967662126, 115.60805106814047 40.89828157392625, 115.60812245197076 40.89828157392626, 115.60820573310582 40.8982101900962, 115.60822952771592 40.89816260087602, 115.60826521963092 40.89807337108821, 115.60828306558852 40.89799008995315)), ((115.61068846271927 40.89706471756798, 115.610569489669 40.89704687161039, 115.6105040544914 40.89705282026281, 115.61044754229259 40.89709148650424, 115.61043564498742 40.89713610139805, 115.61040590172495 40.897198562249486, 115.61038805576742 40.89726697175333, 115.61038805576739 40.89731753529971, 115.61040292739855 40.89738594480373, 115.6104148247036 40.89743650835001, 115.61045646527118 40.89746922593897, 115.61050702881766 40.897525738137816, 115.61056354101642 40.89756143005282, 115.61064384782544 40.89762389090427, 115.61072415463431 40.8976863517557, 115.61079851279112 40.897742863954505, 115.6108550249897 40.89778450452214, 115.61089963988361 40.89782317076352, 115.61094425477742 40.897846965373525, 115.61098886967144 40.897879682962376, 115.61102753591257 40.897939169487614, 115.6110602535014 40.89803137360146, 115.61107512513271 40.898111680410494, 115.61109594541647 40.89818306424065, 115.61110486839524 40.89825444807089, 115.61111974002664 40.89830501161715, 115.6111584062679 40.898346652184735, 115.6112059954881 40.89835260083733, 115.61122384144568 40.89834070353232, 115.61125358470808 40.89831393459595, 115.61125655903457 40.898212807503306, 115.61124168740314 40.89814142367307, 115.61121789279326 40.89804327090663, 115.61119409818305 40.89796891275018, 115.61117327789925 40.89787968296238, 115.61116138059435 40.89781424778472, 115.61116732924671 40.89773096664948, 115.61117327789923 40.89766553147185, 115.61117030357293 40.89756143005281, 115.6111584062679 40.89744245700259, 115.61112568867927 40.89735025288856, 115.6110662021541 40.8972788690585, 115.61099184399762 40.89722235685948, 115.61094722910366 40.897186664944485, 115.61086989662097 40.89713610139803, 115.61077471818076 40.89709148650424, 115.61068846271927 40.89706471756798)))\n</code></pre>\n",
            "tags": [
                "计算机学科",
                "java",
                "第三方库",
                "计算机学科",
                "第三方库",
                "geotools"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/java%E5%9F%BA%E4%BA%8Egeotools%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%87%A0%E4%BD%95%E5%9B%BE%E5%BD%A2%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2%E9%80%9A%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BBgeotools%E5%87%A0%E4%BD%95%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2java%E5%87%A0%E4%BD%95%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/",
            "url": "https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/java%E5%9F%BA%E4%BA%8Egeotools%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%87%A0%E4%BD%95%E5%9B%BE%E5%BD%A2%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2%E9%80%9A%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BBgeotools%E5%87%A0%E4%BD%95%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2java%E5%87%A0%E4%BD%95%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/",
            "title": "java基于geotools实现的几何图形坐标系转换通用工具类geotools几何坐标转换java几何坐标转换",
            "date_published": "2024-05-28T09:23:40.387Z",
            "content_html": "<h1 id=\"java基于geotools实现的几何图形坐标系转换通用工具类geotools几何坐标转换java几何坐标转换\"><a class=\"anchor\" href=\"#java基于geotools实现的几何图形坐标系转换通用工具类geotools几何坐标转换java几何坐标转换\">#</a> java 基于 geotools 实现的几何图形坐标系转换通用工具类 geotools 几何坐标转换 java 几何坐标转换</h1>\n<p><strong>导入依赖</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- shp 文件解析 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.gdal<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gdal<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>net.postgis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>postgis-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.5.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">&lt;!-- 解析 shp 文件 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-shapefile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-epsg-wkt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.geotools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>gt-geojson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>25.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在 gis 开发中，前端地图通常使用地理坐标，而后端在计算几何面积等操作时，需要使用投影坐标。这个过程中需要进行坐标转换。下面带来了一个 java 基于 geotools 开发的坐标转换工具类，支持点，线，面等几何图形进行地理坐标与投影坐标间互相转换</p>\n<h2 id=\"一-转换效果\"><a class=\"anchor\" href=\"#一-转换效果\">#</a> 一、转换效果</h2>\n<p>下图是使用工具类进行地理坐标转投影坐标，投影坐标转地理坐标，带号投影坐标与无带号投影坐标间转换的示例效果</p>\n<p>如下是 转换效果图</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528171256811.png\" alt=\"image-20240528171256811\" /></p>\n<h2 id=\"二-实现过程\"><a class=\"anchor\" href=\"#二-实现过程\">#</a> 二、实现过程</h2>\n<p>为便于使用，定义了通用的几何坐标转换方法 coordinateTransform (Geometry sourceGeometry,int targetSrid)，传入源几何对象和目标坐标 gis 即可</p>\n<h3 id=\"1-固定坐标系轴方向\"><a class=\"anchor\" href=\"#1-固定坐标系轴方向\">#</a> 1、固定坐标系轴方向</h3>\n<p>通过下面代码固定坐标系轴方向，如果不对坐标系轴方向进行固定，则会使不同运行环境的坐标系 x，y 方向不同，进而可能出现本地开发时坐标转换正常，但是部署到服务器后坐标转换结果异常的迷之 bug</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">CRSAuthorityFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAuthorityFactory</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"2-创建转换坐标系\"><a class=\"anchor\" href=\"#2-创建转换坐标系\">#</a> 2、创建转换坐标系</h3>\n<p>通过下面代码创建源坐标系和目标坐标系，这里从传递进来的源几何参数 (Geometry sourceGeometry) 中获取源坐标系 srid (srid 指空间参照标识符，每个坐标系定义均有一个唯一的标识，通常为 4 位整数值)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">CoordinateReferenceSystem</span> source <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> sourceGeometry<span class=\"token punctuation\">.</span><span class=\"token function\">getSRID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">CoordinateReferenceSystem</span> target <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"3-建立坐标转换\"><a class=\"anchor\" href=\"#3-建立坐标转换\">#</a> 3、建立坐标转换</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">MathTransform</span> transform <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMathTransform</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"4-进行坐标转换\"><a class=\"anchor\" href=\"#4-进行坐标转换\">#</a> 4、进行坐标转换</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token constant\">JTS</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>sourceGeometry<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"5-完整坐标转换方法代码\"><a class=\"anchor\" href=\"#5-完整坐标转换方法代码\">#</a> 5、完整坐标转换方法代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">coordinateTransform</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Geometry</span> sourceGeometry<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceGeometry <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> sourceGeometry<span class=\"token punctuation\">.</span><span class=\"token function\">getSRID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> targetSrid <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">CRSAuthorityFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAuthorityFactory</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token class-name\">CoordinateReferenceSystem</span> source <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> sourceGeometry<span class=\"token punctuation\">.</span><span class=\"token function\">getSRID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token class-name\">CoordinateReferenceSystem</span> target <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createCoordinateReferenceSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EPSG:\"</span> <span class=\"token operator\">+</span> targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token class-name\">MathTransform</span> transform <span class=\"token operator\">=</span> <span class=\"token constant\">CRS</span><span class=\"token punctuation\">.</span><span class=\"token function\">findMathTransform</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token constant\">JTS</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>sourceGeometry<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         res<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>targetSrid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FactoryException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">TransformException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"三-工具类使用\"><a class=\"anchor\" href=\"#三-工具类使用\">#</a> 三、工具类使用</h2>\n<h3 id=\"1-创建几何对象\"><a class=\"anchor\" href=\"#1-创建几何对象\">#</a> 1、创建几何对象</h3>\n<p>这里使用 wkt 格式几何坐标串进行实例演示坐标转换，这里写一个 wkt 转几何对象的通用方法 createGeometry (String wkt,int srid)，传入 wkt 和坐标系 srid 即可，实现代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Geometry</span> <span class=\"token function\">createGeometry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> wkt<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> srid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">WKTReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WKTReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token class-name\">Geometry</span> geometry <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setSRID</span><span class=\"token punctuation\">(</span>srid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2-坐标转换示例\"><a class=\"anchor\" href=\"#2-坐标转换示例\">#</a> 2、坐标转换示例</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">String</span> wkt <span class=\"token operator\">=</span> <span class=\"token string\">\"POINT (106.61 25.32)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Geometry</span> source <span class=\"token operator\">=</span> <span class=\"token function\">createGeometry</span><span class=\"token punctuation\">(</span>wkt<span class=\"token punctuation\">,</span><span class=\"token number\">4490</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Geometry</span> res <span class=\"token operator\">=</span> <span class=\"token function\">coordinateTransform</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token number\">4524</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用示例代码结果图</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240528172022861.png\" alt=\"image-20240528172022861\" /></p>\n",
            "tags": [
                "计算机学科",
                "java",
                "第三方库",
                "计算机学科",
                "第三方库",
                "geotools"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/bug/windows/NpcapLoopbackAdapter%E6%B2%A1%E6%9C%89%E6%9C%89%E6%95%88%E7%9A%84IP%E9%85%8D%E7%BD%AE/",
            "url": "https://pigpigletsgo.github.io/bug/windows/NpcapLoopbackAdapter%E6%B2%A1%E6%9C%89%E6%9C%89%E6%95%88%E7%9A%84IP%E9%85%8D%E7%BD%AE/",
            "title": "NpcapLoopbackAdapter没有有效的IP配置",
            "date_published": "2024-05-27T00:24:21.870Z",
            "content_html": "<h1 id=\"npcap-loopback-adapter没有有效的-ip-配置\"><a class=\"anchor\" href=\"#npcap-loopback-adapter没有有效的-ip-配置\">#</a> &quot;Npcap Loopback Adapter&quot; 没有有效的 IP 配置</h1>\n<p>电脑能连上 wifi，但是不能使用有线，疑难解答显示如下</p>\n<p><img data-src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240527082239396.png\" alt=\"image-20240527082239396\" /></p>\n<h4 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法：</h4>\n<p><strong>1、查看相关服务是否被禁用：</strong></p>\n<p>打开【运行】（Win+R 组合键），输入 services.msc 点击确定，打开服务界面。</p>\n<p>在服务界面中找到【Wired AutoConfig】和【WLan AutoConfig】两个服务。如果未运行，首先右击选择【属性】，将 “启动类型” 修改为 “自动”，点击【应用】，然后点击【启动】—【确定】即可。</p>\n<p><strong>2、重新启用网络：</strong></p>\n<p>在开始菜单上单击鼠标右键，在弹出的菜单中点击 “网络连接”。</p>\n<p>在 “以太网” 点击右键，选择【禁用】，然后双击重新启用。</p>\n<p><strong>3、重置 Winsock 目录</strong></p>\n<p>在开始菜单上点击鼠标右键，在弹出的菜单中点击 “命令提示符 (管理员)”。</p>\n<p>在命令提示符框中输入：netsh winsock reset 按下回车键，会提示：成功地重置 Winsock 目录（电脑中安装了杀毒软件的可能会弹出阻止窗口，选择【允许操作】即可）。</p>\n<p>重启电脑后一般可以解决问题。</p>\n<p>总结：方法 1，如果被禁用的话根本搜不到 Wi-Fi 也无法连接，方法 2 主要用于解决网络不稳定产生的问题，还可以利用 “疑难解答”，快速解决网络问题，在方法 2 的 “以太网” 右击，选择【疑难解答】，系统会自动检测问题，并进行修复。我是使用方法 3 之后解决的。</p>\n",
            "tags": [
                "问题总汇",
                "windows",
                "问题总汇",
                "windows"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-day2024-05-26/",
            "url": "https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-day2024-05-26/",
            "title": "sql-blog-day2024-05-26(查询列表性能代码问题)",
            "date_published": "2024-05-26T12:35:46.950Z",
            "content_html": "<h1 id=\"sql-blog-day2024-05-26\"><a class=\"anchor\" href=\"#sql-blog-day2024-05-26\">#</a> sql-blog-day2024-05-26</h1>\n<h2 id=\"场景\"><a class=\"anchor\" href=\"#场景\">#</a> 场景：</h2>\n<p>今天写了一个数据量大的列表查询业务代码，需求是 查询一个 3 千多数据的表还要根据这个表的字段去查询另一个表对应的总数量。一对多关系的，然后在数据查询出来处理数据的时候使用 map 去处理数据结果是每条数据都要进行查询计算总数极大的影响都了性能问题，下面记录解决方式</p>\n<h2 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码：</h2>\n<h3 id=\"coontroller\"><a class=\"anchor\" href=\"#coontroller\">#</a> coontroller</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * 分页查询矿山图层管理数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @param mineLayerDataDto</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Anonymous</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/getAll\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TableDataInfo</span> <span class=\"token function\">dataAll</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">MineLayerDataDto</span> mineLayerDataDto<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">return</span> ksJbxxhzService<span class=\"token punctuation\">.</span><span class=\"token function\">dataAll</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"dto类\"><a class=\"anchor\" href=\"#dto类\">#</a> dto 类</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@NoArgsConstructor</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">KsTcCountDto</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> xkzh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"mapper\"><a class=\"anchor\" href=\"#mapper\">#</a> mapper</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 查询挂载数量</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @param xkzhList</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script>\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"SELECT xkzh, COUNT(*) as count FROM ks_tc \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"WHERE xkzh IN \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">\"&lt;foreach item='item' index='index' collection='list' open='(' separator=',' close=')'>\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">\"#&#123;item&#125;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">\"&lt;/foreach> \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">\"GROUP BY xkzh\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">\"&lt;/script>\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTcCountDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectCountByXkzhBatch</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> xkzhList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"service\"><a class=\"anchor\" href=\"#service\">#</a> service</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 分页查询矿山图层管理数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param mineLayerDataDto</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">TableDataInfo</span> <span class=\"token function\">dataAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MineLayerDataDto</span> mineLayerDataDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"serviceimpl\"><a class=\"anchor\" href=\"#serviceimpl\">#</a> serviceImpl</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 分页查询矿山图层管理数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param mineLayerDataDto</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TableDataInfo</span> <span class=\"token function\">dataAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MineLayerDataDto</span> mineLayerDataDto<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">TableDataInfo</span> tableDataInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TableDataInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPageNo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Wrappers</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">ge</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">le</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> records <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token comment\">// 判断是否查询已挂载数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getGstate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getGstate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KsflEnum</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MOUNTED</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token class-name\">String</span> data <span class=\"token operator\">=</span> ksTcService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-></span> r<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      records <span class=\"token operator\">=</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token comment\">//todo 优化代码，增加请求速度 (finish)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token comment\">// Step 1: 从记录中提取所有不同的 Xkzh 值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> xkzhList <span class=\"token operator\">=</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token comment\">// Step 2: 执行批处理查询以获取计数</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> xkzhCountMap <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">countByXkzhBatch</span><span class=\"token punctuation\">(</span>xkzhList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token comment\">// Step 3: 设置每条记录的 Qishu 值</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   records<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">-></span> v<span class=\"token punctuation\">.</span><span class=\"token function\">setQishu</span><span class=\"token punctuation\">(</span>xkzhCountMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUCCESS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setRows</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setTotal</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token keyword\">return</span> tableDataInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  * 根据许可证号集合查询总数并返回</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  * @param xkzhList</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  * @return</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">countByXkzhBatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> xkzhList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   <span class=\"token keyword\">return</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectCountByXkzhBatch</span><span class=\"token punctuation\">(</span>xkzhList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KsTcCountDto</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsTcCountDto</span><span class=\"token operator\">::</span><span class=\"token function\">getCount</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>之前写的代码如下 (OUT)：性能极差</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">TableDataInfo</span> <span class=\"token function\">dataAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MineLayerDataDto</span> mineLayerDataDto<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">TableDataInfo</span> tableDataInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TableDataInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPageNo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Wrappers</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKsfl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getKqlx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getSzxzqmc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">,</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">ge</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                                 <span class=\"token punctuation\">.</span><span class=\"token function\">le</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KsJbxxhz</span><span class=\"token operator\">::</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getYxqz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsJbxxhz</span><span class=\"token punctuation\">></span></span> records <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 判断是否查询已挂载数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getGstate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> mineLayerDataDto<span class=\"token punctuation\">.</span><span class=\"token function\">getGstate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KsflEnum</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MOUNTED</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token class-name\">String</span> data <span class=\"token operator\">=</span> ksTcService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-></span> r<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      records <span class=\"token operator\">=</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">-></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>         v<span class=\"token punctuation\">.</span><span class=\"token function\">setQishu</span><span class=\"token punctuation\">(</span>ksTcService<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Wrappers</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">KsTc</span><span class=\"token punctuation\">></span></span><span class=\"token function\">lambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KsTc</span><span class=\"token operator\">::</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getXkzh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUCCESS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setRows</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   tableDataInfo<span class=\"token punctuation\">.</span><span class=\"token function\">setTotal</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token keyword\">return</span> tableDataInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "blog",
                "sql",
                "计算机学科",
                "blog - sql"
            ]
        }
    ]
}