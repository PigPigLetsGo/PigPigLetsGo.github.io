<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>D の Java</title>
  
  <subtitle>别怕路长梦远</subtitle>
  <link href="https://pigpigletsgo.github.io/atom.xml" rel="self"/>
  
  <link href="https://pigpigletsgo.github.io/"/>
  <updated>2024-05-26T06:57:09.525Z</updated>
  <id>https://pigpigletsgo.github.io/</id>
  
  <author>
    <name>D</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>maven仓库找不到jar包情况</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/maven%E4%BB%93%E5%BA%93%E6%89%BE%E4%B8%8D%E5%88%B0jar%E5%8C%85%E6%83%85%E5%86%B5/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/maven%E4%BB%93%E5%BA%93%E6%89%BE%E4%B8%8D%E5%88%B0jar%E5%8C%85%E6%83%85%E5%86%B5/</id>
    <published>2024-05-26T06:55:16.074Z</published>
    <updated>2024-05-26T06:57:09.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven仓库找不到jar包情况"><a class="anchor" href="#maven仓库找不到jar包情况">#</a> maven 仓库找不到 jar 包情况</h1><p>如果是下载的 jar 包，在 maven 仓库中找不到的话也会出现这种错误</p><p>假如你要是用如下 jar 包</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.gdal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gdal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>net.postgis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>postgis-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>此时可以使用如下方式解决问题：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>或者去 maven 的配置文件里面修改 settings.conf 文件的 mirror 配置</p><pre><code>   &lt;mirror&gt;       &lt;id&gt;alimaven&lt;/id&gt;       &lt;name&gt;aliyun maven&lt;/name&gt;       &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;       &lt;mirrorOf&gt;*,!osgeo,!maven2-repository.dev.java.net,!boundless&lt;/mirrorOf&gt;     &lt;/mirror&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;maven仓库找不到jar包情况&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#maven仓库找不到jar包情况&quot;&gt;#&lt;/a&gt; maven 仓库找不到 jar 包情况&lt;/h1&gt;
&lt;p&gt;如果是下载的 jar 包，在 maven 仓库中找不到的话也会出现这种错误</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>解决解决mavenNopluginfoundforprefixhelpinthecurrentprojectandintheplugin</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E8%A7%A3%E5%86%B3mavenNopluginfoundforprefixhelpinthecurrentprojectandintheplugin/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E8%A7%A3%E5%86%B3mavenNopluginfoundforprefixhelpinthecurrentprojectandintheplugin/</id>
    <published>2024-05-26T06:32:46.021Z</published>
    <updated>2024-05-26T06:39:38.838Z</updated>
    
    <content type="html"><![CDATA[<p>更换阿里仓库源</p><p>在父工程创建子工程时报错</p><pre><code>&lt;mirror&gt;  &lt;id&gt;aliyunmaven&lt;/id&gt;  &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;  &lt;name&gt;阿里云公共仓库&lt;/name&gt;  &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;&lt;/mirror&gt;</code></pre><p>如果上面不可用建议去网上找</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更换阿里仓库源&lt;/p&gt;
&lt;p&gt;在父工程创建子工程时报错&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;mirror&amp;gt;
  &amp;lt;id&amp;gt;aliyunmaven&amp;lt;/id&amp;gt;
  &amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt;
  &amp;lt;n</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>解决不支持发行版5</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8F%91%E8%A1%8C%E7%89%885/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8F%91%E8%A1%8C%E7%89%885/</id>
    <published>2024-05-26T06:32:45.995Z</published>
    <updated>2024-05-26T06:39:17.137Z</updated>
    
    <content type="html"><![CDATA[<p>点击 <code>File --&gt; ProjectStructure</code></p><p>选择 8</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-13-11-13-02_20230225095537.png" alt="image_2023-01-13-11-13-02" /></p><p>再将全部的项目都设置为 8</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-13-11-13-59_20230225095549.png" alt="image_2023-01-13-11-13-59" /></p><p>打开 <code>File --&gt; setttings</code>  搜索 java 选择 <code>java Compiler</code>  , 将其选为 8</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-13-11-15-59_20230225095601.png" alt="image_2023-01-13-11-15-59" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;点击 &lt;code&gt;File --&amp;gt; ProjectStructure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;选择 8&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://raw.githubusercontent.com/PigPigLetsGo/imeages/mas</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>解决报错Maven打包项目为war报错</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E6%8A%A5%E9%94%99Maven%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE%E4%B8%BAwar%E6%8A%A5%E9%94%99/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3%E6%8A%A5%E9%94%99Maven%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE%E4%B8%BAwar%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-26T06:32:45.972Z</published>
    <updated>2024-05-26T06:39:27.858Z</updated>
    
    <content type="html"><![CDATA[<p>描述:</p><pre><code>在项目web-demo上执行目标org.apache.maven.plugins:maven-war:2.2:war失败:无法加载插件org.apache.maven.plugins:maven-war:2.2中的mojo 'war'，因为API不兼容:org.codehaus.plexus.component.repository. exception.com componentlookupexception:无法访问属性的默认字段</code></pre><p>解决办法:</p><p>在 pom.xml 文件的中添加如下插件:</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token comment">&lt;!-- To define the plugin version in your parent POM --></span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-war-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token comment">&lt;!-- To use the plugin goals in your POM or parent POM --></span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-war-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>可以查找在目录位置</p><p>maven Repository: org.apache.maven.plugins.maven-war-plugin</p><p><img data-src="%E8%A7%A3%E5%86%B3%E6%8A%A5%E9%94%99Maven%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE%E4%B8%BAwar%E6%8A%A5%E9%94%99_md_files/image-20230307142148554_20230307151758.png?v=1&amp;type=image&amp;token=V1:cjzE3l6D9VnYPuj3vI1NNkOb1g-FeAfOGu9ZKWvv90U" alt="image-20230307142148554" /></p><p>按照导入 Build 的常规操作将其导入到报错项目的 pom 中</p><p>格式:</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-war-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><ul><li>配置忽略 web.xml 文件</li></ul><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-war-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">&lt;!--              忽略 web.xml 的检查 --></span></pre></td></tr><tr><td data-num="8"></td><td><pre>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>failOnMissingWebXml</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>failOnMissingWebXml</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;描述:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;在项目web-demo上执行目标org.apache.maven.plugins:maven-war:2.2:war失败:无法加载插件org.apache.maven.plugins:maven-war:2.2中的mojo &#39;war&#39;，</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>解决GeneratingprojectinInteractivemode</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3GeneratingprojectinInteractivemode/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3GeneratingprojectinInteractivemode/</id>
    <published>2024-05-26T06:32:45.951Z</published>
    <updated>2024-05-26T06:39:04.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决创建maven项目时出现generating-project-in-interactive-mode一直卡住"><a class="anchor" href="#解决创建maven项目时出现generating-project-in-interactive-mode一直卡住">#</a> 解决创建 maven 项目时出现 Generating project in Interactive mode 一直卡住</h2><p>执行命令创建项目:</p><pre><code>mvn archetype:generate -DarchetypeCatalog=internal</code></pre><p>让其不从远程服务器上取 catalog</p><p>一般情况下就可以创建成功</p><p>最终命令: <code>mvn archetype:generate -DgroupId=com.cyf -DartifactId=cms -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeCatalog=internal</code></p><p>如果参考网上的其它方案，可能出现如下问题</p><p><code>Generating project in Batch mode</code></p><p>这个问题是在命令后面加了: <code>-DinteractiveMode=false</code></p><p>如果不想一直卡住，同样在命令中添加: <code> -DarchetypeCatalog=internal</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决创建maven项目时出现generating-project-in-interactive-mode一直卡住&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#解决创建maven项目时出现generating-project-in-interactive-m</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>解决Failed-to-execute-goal-org-apache-maven-plugins-maven-surefire-plugin</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3Failed-to-execute-goal-org-apache-maven-plugins-maven-surefire-plugin/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3Failed-to-execute-goal-org-apache-maven-plugins-maven-surefire-plugin/</id>
    <published>2024-05-26T06:32:45.928Z</published>
    <updated>2024-05-26T06:38:46.725Z</updated>
    
    <content type="html"><![CDATA[<p>报错描述:</p><pre><code>Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4</code></pre><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-17-16-31-11_20230225095430.png" alt="image_2023-01-17-16-31-11" /></p><p>解决方案:</p><p>在 pom.xml 中加入插件:</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="6"></td><td><pre>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-17-16-32-19_20230225095501.png" alt="image_2023-01-17-16-32-19" /></p><p>完成！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;报错描述:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&quot;https:/</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>编码</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E7%BC%96%E7%A0%81/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E7%BC%96%E7%A0%81/</id>
    <published>2024-05-26T06:32:45.907Z</published>
    <updated>2024-05-26T06:38:28.560Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述:</p><pre><code>Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform depend</code></pre><ul><li>项目在编译时报错:</li></ul><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-31-14-32-51_20230225095405.png" alt="image_2023-01-31-14-32-51" /></p><p>在项目 pom.xml 文件中配置如下:</p><pre><code>&lt;properties&gt;    &lt;!--编译编码--&gt;    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&lt;/properties&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform depend
&lt;/code&gt;&lt;/pre&gt;
&lt;ul</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>边框maven不见或者不存在</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%BE%B9%E6%A1%86maven%E4%B8%8D%E8%A7%81%E6%88%96%E8%80%85%E4%B8%8D%E5%AD%98%E5%9C%A8/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E8%BE%B9%E6%A1%86maven%E4%B8%8D%E8%A7%81%E6%88%96%E8%80%85%E4%B8%8D%E5%AD%98%E5%9C%A8/</id>
    <published>2024-05-26T06:32:45.881Z</published>
    <updated>2024-05-26T06:39:49.757Z</updated>
    
    <content type="html"><![CDATA[<p>右键 pom.xml 文件点击 <code>Add maven project</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;右键 pom.xml 文件点击 &lt;code&gt;Add maven project&lt;/code&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat启动报错</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Tomcat%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Tomcat%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-26T06:32:45.856Z</published>
    <updated>2024-05-26T06:38:04.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a-child-container-failed-during-start"><a class="anchor" href="#a-child-container-failed-during-start">#</a> A child container failed during start</h1><blockquote><p>排查方案，把.xml 内无关的所有注释掉，启动程序，如果成功了，就一点点代码还原 + 重启，直至找到致命的那行代码！（比如 web.xml、pom.xml）</p></blockquote><p>可能引发错误的问题，如果导入了 tomcat7 的坐标又导入了 servlet-api 坐标那么可能就会发生错误</p><p>1.servlet-api 包冲突</p><ul><li>出现这个问题的原因是导入了 servlet-api 包，与 tomcat7 的依赖包 servlet-api 冲突</li><li>检查 pom.xml 是否导入 servlet-api</li><li>加上 &lt;scope&gt;provided&lt;/scope &gt; 之后再次运行成功</li></ul><p>问题引出：在 SpringMVC 项目中如果我们直接删除了 Servlet-api 这个坐标后可能会引发启动时的报错如下</p><pre><code>无法访问javax.servlet.ServletException</code></pre><p>此时我们需要加上 Servlet-api 这个一样然后将其在打包时排除即在下面再添加一项 &lt;scope&gt;provided&lt;/scope&gt;</p><p>具体如下:</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!--servlet-api--></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;a-child-container-failed-during-start&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#a-child-container-failed-during-start&quot;&gt;#&lt;/a&gt; A child container faile</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>tomcat-mave启动自动关闭</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/tomcat-mave%E5%90%AF%E5%8A%A8%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/tomcat-mave%E5%90%AF%E5%8A%A8%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD/</id>
    <published>2024-05-26T06:32:45.832Z</published>
    <updated>2024-05-26T06:37:50.870Z</updated>
    
    <content type="html"><![CDATA[<p>查看打包方式是否为 war 包，否则会出现启动 tomcat7:run 后自动就关闭了，访问不到项目因为 tomcat 关闭了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查看打包方式是否为 war 包，否则会出现启动 tomcat7:run 后自动就关闭了，访问不到项目因为 tomcat 关闭了&lt;/p&gt;
</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>The desired archetype does not exist</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/The%20desired%20archetype%20does%20not%20exist/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/The%20desired%20archetype%20does%20not%20exist/</id>
    <published>2024-05-26T06:32:45.807Z</published>
    <updated>2024-05-26T06:37:37.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="the-desired-archetype-does-not-exist"><a class="anchor" href="#the-desired-archetype-does-not-exist">#</a> The desired archetype does not exist</h1><p>可能出现该问题的原因：</p><ul><li>maven 中配置了 nexus</li><li>nexus 配合在了 maven 中而且 nexus 没有开启</li></ul><p>解决办法：</p><ul><li>打开 nexusji'ke</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;the-desired-archetype-does-not-exist&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-desired-archetype-does-not-exist&quot;&gt;#&lt;/a&gt; The desired archetype doe</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven在Idea中运行Tomcat报错</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E5%9C%A8Idea%E4%B8%AD%E8%BF%90%E8%A1%8CTomcat%E6%8A%A5%E9%94%99/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E5%9C%A8Idea%E4%B8%AD%E8%BF%90%E8%A1%8CTomcat%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-26T06:32:45.786Z</published>
    <updated>2024-05-26T06:36:50.442Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述:</p><pre><code>Maven打包报错Unknown lifecycle phase “mvn“. You must specify a valid lifecycleUnknown lifecycle phase &quot;mvn&quot;. You must specify a valid lifecycle phase or a </code></pre><p>原因:</p><p>在 idea 中 command line 已经有一个 mvn 命令，然后再输入 mvn, 其实就相当于: <code>mvn mvn tomcat:run</code>  , 这么写就会报错</p><p>解决方案：将前面的 mvn 去掉如下:</p><p><code>tomcat:run</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Maven打包报错Unknown lifecycle phase “mvn“. You must specify a valid lifecycle
Unknown lifecycle phase &amp;quot;mvn&amp;quot;. </summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven项目中pom.xml全部报红，依赖导入不成功，jar包不下载或者出现.lastUpdated文件 等类似问题，迄今为止所有解决方案</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E9%A1%B9%E7%9B%AE%E4%B8%ADpom.xml%E5%85%A8%E9%83%A8%E6%8A%A5%E7%BA%A2%EF%BC%8C%E4%BE%9D%E8%B5%96%E5%AF%BC%E5%85%A5%E4%B8%8D%E6%88%90%E5%8A%9F%EF%BC%8Cjar%E5%8C%85%E4%B8%8D%E4%B8%8B%E8%BD%BD%E6%88%96%E8%80%85%E5%87%BA%E7%8E%B0.lastUpdated%E6%96%87%E4%BB%B6%20%E7%AD%89%E7%B1%BB%E4%BC%BC%E9%97%AE%E9%A2%98%EF%BC%8C%E8%BF%84%E4%BB%8A%E4%B8%BA%E6%AD%A2%E6%89%80%E6%9C%89%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E9%A1%B9%E7%9B%AE%E4%B8%ADpom.xml%E5%85%A8%E9%83%A8%E6%8A%A5%E7%BA%A2%EF%BC%8C%E4%BE%9D%E8%B5%96%E5%AF%BC%E5%85%A5%E4%B8%8D%E6%88%90%E5%8A%9F%EF%BC%8Cjar%E5%8C%85%E4%B8%8D%E4%B8%8B%E8%BD%BD%E6%88%96%E8%80%85%E5%87%BA%E7%8E%B0.lastUpdated%E6%96%87%E4%BB%B6%20%E7%AD%89%E7%B1%BB%E4%BC%BC%E9%97%AE%E9%A2%98%EF%BC%8C%E8%BF%84%E4%BB%8A%E4%B8%BA%E6%AD%A2%E6%89%80%E6%9C%89%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2024-05-26T06:32:45.762Z</published>
    <updated>2024-05-26T06:37:16.722Z</updated>
    
    <content type="html"><![CDATA[<p>相信大家在导入新的项目时候会遇到 pom 文件报红，或者右侧依赖报红等类似情况，博主将这种错误的所有解决方案都陈列了出来，希望对你有帮助</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121408496.png" alt="image-20231012140814363" /></p><h4 id="第一种"><a class="anchor" href="#第一种">#</a> 第一种</h4><p>将 pom 文件中的中文删掉，注释的也全部删掉，亲测有效</p><h4 id="第二种"><a class="anchor" href="#第二种">#</a> 第二种</h4><p>将 pom 文件中或者右侧 MavenProject 报红的地方所对应的依赖全部删除掉然后再撤回，亲测有效</p><h4 id="第三种"><a class="anchor" href="#第三种">#</a> 第三种</h4><p>直接换掉 Maven 仓库，新创建一个 Maven 仓库，记着改配置文件以及更换 IDEA 的配置</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>G:\javatools\repository3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121408599.png" alt="image-20231012140851699" /></p><h4 id="第四种"><a class="anchor" href="#第四种">#</a> 第四种</h4><p>添加阿里云镜像，可以解决外网上不去下载依赖不成功，或者下载慢问题，也会导致全部报红<br />在 Maven 文件夹下，conf 文件夹内的 setting.xml 的标签内添加如下配置</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121409937.png" alt="image-20231012140905990" /></p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 阿里镜像仓库 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>         http://maven.aliyun.com/nexus/content/groups/public/</pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>第五种<br />去掉国内镜像<br />对每个人情况可能有所不同（至少我试了所有办法后这样又成功了）<br />去掉镜像直接把 setting 文件中的 mirror 标签内容全部去掉就可以了<br />（这一点我要做特别说明）<br />博主最近遇到的错误就是，更换 Maven 仓库改了几次，把上面的方法都试了一遍，全部不行，<br />新 maven 仓库内一直出现.lastUpdated 这种文件或者这一个文件（百度搜索到的解答全在说加上镜像就好了，但是我本身就有镜像，所以原本没在意）<br />随后我尝试把镜像删除了<br />然后就成功了，这个方法是我新发现的，我百度了各大论坛都没有这种情况，被我遇上了，然后成功改了出来</p><p>第六种<br />查看 pom 文件，中报红的位置，可能是不同电脑配置不同，版本不同出现的错误，需要从新改正，这也是一种情况，博主也遇到过，比如 JDK 版本导入项目为 1.7，而自身是 JDK1.8</p><p>上述六种方法每次尝试后，需要右键 maven-&gt;Reimport</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121409411.png" alt="image-20231012140938560" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相信大家在导入新的项目时候会遇到 pom 文件报红，或者右侧依赖报红等类似情况，博主将这种错误的所有解决方案都陈列了出来，希望对你有帮助&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://raw.githubusercontent.com/PigPigLetsGo</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven编译可通过但是IDEA报程序包不存在解决方法</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E7%BC%96%E8%AF%91%E5%8F%AF%E9%80%9A%E8%BF%87%E4%BD%86%E6%98%AFIDEA%E6%8A%A5%E7%A8%8B%E5%BA%8F%E5%8C%85%E4%B8%8D%E5%AD%98%E5%9C%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Maven%E7%BC%96%E8%AF%91%E5%8F%AF%E9%80%9A%E8%BF%87%E4%BD%86%E6%98%AFIDEA%E6%8A%A5%E7%A8%8B%E5%BA%8F%E5%8C%85%E4%B8%8D%E5%AD%98%E5%9C%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2024-05-26T06:32:45.745Z</published>
    <updated>2024-05-26T06:37:03.556Z</updated>
    
    <content type="html"><![CDATA[<p>情况说明:</p><pre><code>1.代码编辑器中无编译错误2.确信包依赖无冲突且成功依赖3.maven 进行clean 、compile、package等操作都没问题4.启动项目报错，错误如下：</code></pre><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-14-12-11-04_20230225095223.png" alt="image_2023-01-14-12-11-04" /></p><p><strong>解决方案一</strong></p><p>在项目根目录执行: <code>mvn idea:idea</code>  (生成 idea 项目) 此时会生成两个.ipr 与.iws 后缀的两个文件</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-14-12-12-25_20230225095235.png" alt="image_2023-01-14-12-12-25" /></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-14-12-12-47_20230225095248.png" alt="image_2023-01-14-12-12-47" /></p><p>idea 情况缓存重启</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-14-12-13-34_20230225095300.png" alt="image_2023-01-14-12-13-34" /></p><p><strong>解决方案二</strong></p><p>因为 idea 的 build 编译操作是其自身自带的环境，与 Maven 的 compile 编译不是同的环境</p><p>所以设置 idea 构建 / 运行操作委托给 maven</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-14-12-14-57_20230225095314.png" alt="image_2023-01-14-12-14-57" /></p><p><strong>解决方案三</strong></p><p>升级 idea 版本或更换 idea 版本</p><p>在一次 pull 项目后进行重新启动时，又遇到这个问题，maven 一般操作均无效，最初便怀疑是 idea 原因，果断升级，重启项目成功！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;情况说明:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.代码编辑器中无编译错误
2.确信包依赖无冲突且成功依赖
3.maven 进行clean 、compile、package等操作都没问题
4.启动项目报错，错误如下：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Dependencies报红但是里面的jar包并没有报错</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Dependencies%E6%8A%A5%E7%BA%A2%E4%BD%86%E6%98%AF%E9%87%8C%E9%9D%A2%E7%9A%84jar%E5%8C%85%E5%B9%B6%E6%B2%A1%E6%9C%89%E6%8A%A5%E9%94%99/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Dependencies%E6%8A%A5%E7%BA%A2%E4%BD%86%E6%98%AF%E9%87%8C%E9%9D%A2%E7%9A%84jar%E5%8C%85%E5%B9%B6%E6%B2%A1%E6%9C%89%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-26T06:32:45.728Z</published>
    <updated>2024-05-26T06:36:32.504Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述:</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-02-22-16-15-48_20230225095146.png" alt="image_2023-02-22-16-15-48" /></p><p>查看本地仓库:jar 包已经存在</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-02-22-16-16-11_20230225095158.png" alt="image_2023-02-22-16-16-11" /></p><p>解决方式:</p><p>把对应项目的 pom.xml 中相关依赖剪切，刷新 pom 后在将相关依赖复制回去再刷新 pom</p><p>总结:</p><p>当不是由于引入 jar 包不存在的情况的时候，就要考虑到这种情况问题 (IDEA 的 BUG), 先删除 pom.xml 文件的依赖，然后执行 Maven 的 clean 方法，最后撤回删除的 pom.xml 文件的依赖，即可成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-02-22-16-15-48_20230225095146.png&quot; a</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Cannot-resolve-org-mybatis-mybatis-3-5-2</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Cannot-resolve-org-mybatis-mybatis-3-5-2/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/Cannot-resolve-org-mybatis-mybatis-3-5-2/</id>
    <published>2024-05-26T06:32:45.711Z</published>
    <updated>2024-05-26T06:36:11.408Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述</p><pre><code>Cannot resolve org.mybatis:mybatis:3.5.2</code></pre><p>B 在 settings--&gt;uild, Execution, Deployment--&gt;Build Tools--&gt;maven--&gt;Runner 中配置如下代码:</p><pre><code>-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true</code></pre><p>如果还是报错则更换版本</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Cannot resolve org.mybatis:mybatis:3.5.2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;B 在 settings--&amp;gt;uild, Execution, Deployment--&amp;gt;Build To</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>私服上传报错</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E7%A7%81%E6%9C%8D%E4%B8%8A%E4%BC%A0%E6%8A%A5%E9%94%99/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/maven/%E9%97%AE%E9%A2%98/%E7%A7%81%E6%9C%8D%E4%B8%8A%E4%BC%A0%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-26T06:32:45.695Z</published>
    <updated>2024-05-26T06:38:16.982Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述</p><pre><code> Failed to deploy artifacts: Could not transfer artifact com.dkx.spring:maven-spring-fu01:pom:1.0-RELEASE from/to dkx-release (http://localhost:8081/repository/dkx-release/): Transfer failed for http://localhost:8081/repository/dkx-release/com/dkx/spring/maven-spring-fu01/1.0-RELEASE/maven-spring-fu01-1.0-RELEASE.pom 400 Repository does not allow updating assets: dkx-release</code></pre><p>解决方案:</p><p>将要上传的私服仓库权限更改</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-03-07-21-54-58.png" alt="image_2023-03-07-21-54-58" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Failed to deploy artifacts: Could not transfer artifact com.dkx.spring:maven-spring-fu01:pom:1.0-RELEASE from/to dkx</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/"/>
    
    <category term="问题" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/maven/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>自定义注解</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E5%9F%BA%E7%A1%80-%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E5%9F%BA%E7%A1%80-%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/</id>
    <published>2024-05-26T04:01:41.061Z</published>
    <updated>2024-05-26T06:07:22.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自定义注解"><a class="anchor" href="#自定义注解">#</a> 自定义注解</h1><p>前提，了解注解是什么</p><h2 id="1-注解"><a class="anchor" href="#1-注解">#</a> 1、注解</h2><p>@Override 告诉服务器这个方法是覆盖父类的方法。</p><p>@WebServlet (&quot;/test&quot;) 表示某个类是一个 Servlet，Web 容器就会识别这个注解，在运行的时候调用它。</p><p>@Controller (&quot;/test&quot;) 表示某个类是一个控制器，告诉 Spring 框架该类是一个容器。</p><p>注释是给开发人员看的，不会影响程序的编译和运行。注解并不是给开发人员看的，是用于给程序看的，会影响程序的编译和运行。</p><h3 id="12-target指定注解针对的地方"><a class="anchor" href="#12-target指定注解针对的地方">#</a> 1.2 @Target 指定注解针对的地方</h3><h4 id="elementtype"><a class="anchor" href="#elementtype">#</a> ElementType:</h4><p>1、ElementType.TYPE: 针对类，接口</p><p>2、ElementType.FIELD: 针对字段 (成员变量)</p><p>3、ElementType.MONTHD: 针对方法</p><p>4、ElementType.PARAMETER: 针对方法参数</p><p>5、ElementType.CONSTRUCTOR: 针对构造器</p><p>6、ElementType.PACKAGE: 针对包</p><p>7、ElementType.ANNOTATION_TYPE: 针对注解</p><h3 id="13-retention-指定注解的保留域"><a class="anchor" href="#13-retention-指定注解的保留域">#</a> 1.3 @Retention 指定注解的保留域</h3><h4 id="retentionpolicy"><a class="anchor" href="#retentionpolicy">#</a> RetentionPolicy:</h4><p>1、RetentionPolicy.SOURCE: 源代码级别，由编译器处理，处理之后就不再保留</p><p>2、RetentionPolicy.CLASS: 字节码文件级别，注解信息保留到类对应的 class 文件中</p><p>3、RetentionPolicy.RUNTIME:  JVM 级别，由 JVM 读取，运行时使用</p><p><mark>PS</mark>：自定义注解要和反射一起使用</p><h2 id="代码案例"><a class="anchor" href="#代码案例">#</a> 代码案例:</h2><p>创建注解类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">InitMethod</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>创建使用注解的类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InitDemo</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token annotation punctuation">@InitMethod</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"init..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>创建测试类编写注解的响应处理代码</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">try</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token comment">// 通过反射获取 Class 对象</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.InitDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token comment">// 获取类上的注解方式</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token class-name">Annotation</span> annotaion <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">clazz<span class="token punctuation">.</span></span>Annotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>annotaion <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                <span class="token comment">//... 进行操作</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment">// 获取当前 Class 对象的所有方法 (不包括父类)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> method <span class="token operator">:</span> methods<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                    <span class="token comment">// 判断方法是否有指定注解</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                    <span class="token keyword">boolean</span> annotationPresent <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">InitMethod</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotationPresent<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                        <span class="token comment">// 如果有就调用方法</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                        method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p><pre><code>public void com.InitDemo.init()init...public void com.InitDemo.test()</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自定义注解&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#自定义注解&quot;&gt;#&lt;/a&gt; 自定义注解&lt;/h1&gt;
&lt;p&gt;前提，了解注解是什么&lt;/p&gt;
&lt;h2 id=&quot;1-注解&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#1-注解&quot;&gt;#&lt;/a&gt; 1、注解&lt;/h</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="基础-核心类库" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E5%9F%BA%E7%A1%80-%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/java/"/>
    
    <category term="基础" scheme="https://pigpigletsgo.github.io/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot上传图片url回显</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/spring/%E6%8B%A6%E6%88%AA%E5%99%A8/SpringBoot%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87url%E5%9B%9E%E6%98%BE/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/spring/%E6%8B%A6%E6%88%AA%E5%99%A8/SpringBoot%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87url%E5%9B%9E%E6%98%BE/</id>
    <published>2024-05-24T08:47:56.662Z</published>
    <updated>2024-05-24T08:48:33.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="springboot上传图片url回显"><a class="anchor" href="#springboot上传图片url回显">#</a> SpringBoot 上传图片 url 回显</h1><p>在 application.yml 中进行配置存储路径</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240524163702247.png" alt="image-20240524163702247" /></p><p>创建图片上传的 controller 类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dkx<span class="token punctuation">.</span>mpj<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre> </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre> </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre> </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> imgController <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="19"></td><td><pre>     * 时间格式化</pre></td></tr><tr><td data-num="20"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">SimpleDateFormat</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy/MM/dd/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre> </pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="24"></td><td><pre>     * 图片保存路径，自动从 yml 文件中获取数据</pre></td></tr><tr><td data-num="25"></td><td><pre>     *   示例： E:/images/</pre></td></tr><tr><td data-num="26"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="27"></td><td><pre> </pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;file-save-path&#125;"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> fileSavePath<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token comment">// 后半段目录：  2020/03/15</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token class-name">String</span> directory <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token comment">/**</pre></td></tr><tr><td data-num="36"></td><td><pre>         * 文件保存目录  E:/images/2020/03/15/</pre></td></tr><tr><td data-num="37"></td><td><pre>         * 如果目录不存在，则创建</pre></td></tr><tr><td data-num="38"></td><td><pre>         */</span></pre></td></tr><tr><td data-num="39"></td><td><pre> </pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token class-name">File</span> dir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileSavePath <span class="token operator">+</span> directory<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            dir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片上传，保存位置："</span> <span class="token operator">+</span> fileSavePath <span class="token operator">+</span> directory<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">// 给文件重新设置一个名字</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token comment">// 后缀</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token class-name">String</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token class-name">String</span> newFileName<span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">+</span>suffix<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre> </pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token comment">// 创建这个新文件</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileSavePath <span class="token operator">+</span> directory <span class="token operator">+</span> newFileName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token comment">// 复制操作</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            file<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>newFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            <span class="token comment">// 协议 ://ip 地址 ：端口号 / 文件目录 (/images/2020/03/15/xxx.jpg)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token class-name">String</span> url <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"://"</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getServerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getServerPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/images/"</span> <span class="token operator">+</span> directory <span class="token operator">+</span> newFileName<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图片上传，访问URL："</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>            <span class="token keyword">return</span> url<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><strong>配置映射路径 (重点)</strong></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240524163519757.png" alt="image-20240524163519757" /></p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>dkx<span class="token punctuation">.</span>mpj<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResourceHandlerRegistry</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebMvcConfigurer</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre> </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token annotation punctuation">@Configuration</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre> </pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="12"></td><td><pre>     * 图片保存路径，自动从 yml 文件中获取数据</pre></td></tr><tr><td data-num="13"></td><td><pre>     *   示例： E:/images/</pre></td></tr><tr><td data-num="14"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;file-save-path&#125;"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> fileSavePath<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre> </pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">/**</pre></td></tr><tr><td data-num="21"></td><td><pre>         * 配置资源映射</pre></td></tr><tr><td data-num="22"></td><td><pre>         * 意思是：如果访问的资源路径是以 “/images/” 开头的，</pre></td></tr><tr><td data-num="23"></td><td><pre>         * 就给我映射到本机的 “E:/images/” 这个文件夹内，去找你要的资源</pre></td></tr><tr><td data-num="24"></td><td><pre>         * 注意：E:/images/ 后面的 “/” 一定要带上</pre></td></tr><tr><td data-num="25"></td><td><pre>         */</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/images/**"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"file:"</span><span class="token operator">+</span>fileSavePath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>这里需要说明一下，如果使用了 security 那么就会拦截接口，此时我们需要在 security 的配置类中去放行 /images/** 路径即可</p><p>测试结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240524163804296.png" alt="image-20240524163804296" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;springboot上传图片url回显&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#springboot上传图片url回显&quot;&gt;#&lt;/a&gt; SpringBoot 上传图片 url 回显&lt;/h1&gt;
&lt;p&gt;在 application.yml 中进行配置存储路径&lt;</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="spring" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/spring/"/>
    
    <category term="拦截器" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/spring/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="spring" scheme="https://pigpigletsgo.github.io/tags/spring/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/tags/%E6%A1%88%E4%BE%8BDemo/"/>
    
    <category term="拦截器" scheme="https://pigpigletsgo.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Element-ui Tree节点可拖拽更新节点数据</title>
    <link href="https://pigpigletsgo.github.io/computer-science/web/vue/%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B/Element-ui%20Tree%E8%8A%82%E7%82%B9%E5%8F%AF%E6%8B%96%E6%8B%BD%E6%9B%B4%E6%96%B0%E8%8A%82%E7%82%B9%E6%95%B0%E6%8D%AE/"/>
    <id>https://pigpigletsgo.github.io/computer-science/web/vue/%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B/Element-ui%20Tree%E8%8A%82%E7%82%B9%E5%8F%AF%E6%8B%96%E6%8B%BD%E6%9B%B4%E6%96%B0%E8%8A%82%E7%82%B9%E6%95%B0%E6%8D%AE/</id>
    <published>2024-05-21T10:01:27.624Z</published>
    <updated>2024-05-22T02:06:10.771Z</updated>
    
    <content type="html"><![CDATA[<h1 id="element-ui-tree节点可拖拽更新节点数据"><a class="anchor" href="#element-ui-tree节点可拖拽更新节点数据">#</a> Element-ui Tree 节点可拖拽更新节点数据</h1><h2 id="业务介绍"><a class="anchor" href="#业务介绍">#</a> 业务介绍：</h2><p>如下图，树形菜单是可以进行拖拽的，我需要让其拖拽到指定位置的时候更新当前节点的 parent_cid (父节点) 和 cat_level (层级) 还有 sort (排序)</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/PixPin_2024-05-21_10-57-13.gif" alt="PixPin_2024-05-21_10-57-13" /></p><p>要做这个功能我们首先需要监听拖拽成功这个事件，当我们拖拽成功以后我们就可以将所有收集到的数据拿来发给数据库，这样的事件我们可以参考 Element-ui 的文档 <span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNuLyMvemgtQ04vY29tcG9uZW50L3RyZWU=">https://element.eleme.cn/#/zh-CN/component/tree</span></p><p>在文档中的 Events 中有一个 node-drop 属性如下介绍：</p><table><thead><tr><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>拖拽成功完成时触发的事件</td><td>共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点、被拖拽节点的放置位置（before、after、inner）、event</td></tr></tbody></table><p>添加到代码中：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240521110839368.png" alt="image-20240521110839368" /></p><p>在 method 函数中添加回调函数，具体文档中有如下：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240521111052747.png" alt="image-20240521111052747" /></p><p>函数中有三个参数其中 draggingNode 是当前 拖拽的节点，dropNode 是被拖拽到的节点，dropType 进入到该节点的什么位置比如前后左右 (英文表示的)</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/PixPin_2024-05-21_11-13-25.gif" alt="PixPin_2024-05-21_11-13-25" /></p><p>此时第一个 Node 就是我们当前正在拖拽的节点 也就是 手机通讯</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240521111507576.png" alt="image-20240521111507576" /></p><p>此时第二个 Node 就是进入到哪个节点 最后面是位置 (英文的) after 意思也就是 港台图书 之后</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240521111630428.png" alt="image-20240521111630428" /></p><h2 id="代码实现"><a class="anchor" href="#代码实现">#</a> 代码实现</h2><p>通过如上的信息我们需要获取如下数据：</p><ol><li>当前节点最新的父节点 id</li><li>当前拖拽节点的最新顺序</li><li>当前拖拽节点的最新层级</li></ol><p>第一步：</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> dropType<span class="token punctuation">,</span> ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>      <span class="token comment">// 1、当前节点最新的父节点 id 的变量</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token keyword">let</span> pCid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token comment">// 记录拖拽到的节点的节点集合 (为第二步做准备)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token keyword">let</span> siblings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token comment">// 1.2、判断如果是上下关系就记录当前拖拽到的节点的父节点的 catId 和 childNodes 集合</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>dropType <span class="token operator">==</span> <span class="token string">"before"</span> <span class="token operator">||</span> dropType <span class="token operator">==</span> <span class="token string">"after"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token comment">// 使用逻辑中断防止拖拽到的节点的父节点 catId 为 unidefed</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 如果是左右关系就记录当前拖拽到的节点的 catId 和 childNodes</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>第二步：</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> dropType<span class="token punctuation">,</span> ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">//=========================== 第一步 ===========================</span></pre></td></tr><tr><td data-num="3"></td><td><pre>     <span class="token comment">// 1、当前节点最新的父节点 id 的变量</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token keyword">let</span> pCid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token comment">// 记录拖拽到的节点的节点集合 (为第二步做准备)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token keyword">let</span> siblings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token comment">// 1.2、判断如果是上下关系就记录当前拖拽到的节点的父节点的 catId 和 childNodes 集合</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>dropType <span class="token operator">==</span> <span class="token string">"before"</span> <span class="token operator">||</span> dropType <span class="token operator">==</span> <span class="token string">"after"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token comment">// 使用逻辑中断防止拖拽到的节点的父节点 catId 为 unidefed</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token comment">// 如果是左右关系就记录当前拖拽到的节点的 catId 和 childNodes</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">//=============================== 第二步 ===============================</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token comment">// 2、当前拖拽节点的最新顺序</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> siblings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">// 2.1、判断遍历的是否为当前拖拽的节点</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">==</span> draggingNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>          <span class="token comment">// 2.2、当前拖拽的节点需要改顺序和它的父节点的 id</span></pre></td></tr><tr><td data-num="23"></td><td><pre>          <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>             <span class="token comment">// 表示正在处理哪条数据 catId 是唯一性的</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token literal-property property">sort</span><span class="token operator">:</span> i<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token literal-property property">parentCid</span><span class="token operator">:</span> pCid<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token literal-property property">catLevel</span><span class="token operator">:</span> catLevel<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>          <span class="token comment">// 而其它节点需要更新顺序</span></pre></td></tr><tr><td data-num="32"></td><td><pre>          <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>其中 updateNodes 是保存所有需要修改的节点</p><p>在 data () 中添加</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240521151613419.png" alt="image-20240521151613419" /></p><p>第三步：</p><p>创建修改当前节点的子节点以及子子节点层级方法</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 修改当前节点的子节点层级方法</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">updateChildNodeLevel</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token comment">// 遍历当前节点的子节点</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>         <span class="token comment">// 遍历子节点的数据</span></pre></td></tr><tr><td data-num="7"></td><td><pre>         <span class="token keyword">let</span> cNode <span class="token operator">=</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>         <span class="token comment">// 更新子节点的层级</span></pre></td></tr><tr><td data-num="9"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token literal-property property">catId</span><span class="token operator">:</span> cNode<span class="token punctuation">.</span>catId<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token literal-property property">catLevel</span><span class="token operator">:</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>         <span class="token comment">// 深入调用更新子子节点的层级</span></pre></td></tr><tr><td data-num="14"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChildNodeLevel</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>继续回到第二步的循环中的判断遍历节点是否是当前拖拽节点的 if 里面进行 判断如果层级与当前节点的层级不同就调用函数进行修改</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> dropType<span class="token punctuation">,</span> ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">//=========================== 第一步 ===========================</span></pre></td></tr><tr><td data-num="3"></td><td><pre>     <span class="token comment">// 1、当前节点最新的父节点 id 的变量</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token keyword">let</span> pCid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token comment">// 记录拖拽到的节点的节点集合 (为第二步做准备)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token keyword">let</span> siblings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token comment">// 1.2、判断如果是上下关系就记录当前拖拽到的节点的父节点的 catId 和 childNodes 集合</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>dropType <span class="token operator">==</span> <span class="token string">"before"</span> <span class="token operator">||</span> dropType <span class="token operator">==</span> <span class="token string">"after"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token comment">// 使用逻辑中断防止拖拽到的节点的父节点 catId 为 unidefed</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token comment">// 如果是左右关系就记录当前拖拽到的节点的 catId 和 childNodes</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">//=============================== 第二步 ===============================</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token comment">// 2、当前拖拽节点的最新顺序</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> siblings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">// 2.1、判断遍历的是否为当前拖拽的节点</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">==</span> draggingNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token comment">//=============================== 第三步 ===============================</span></pre></td></tr><tr><td data-num="23"></td><td><pre>           <span class="token comment">// 定义当前节点的默认层级变量</span></pre></td></tr><tr><td data-num="24"></td><td><pre>  <span class="token keyword">let</span> catLevel <span class="token operator">=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  <span class="token comment">// 2.3、如果遍历的是当前节点而且层级发生了变化</span></pre></td></tr><tr><td data-num="26"></td><td><pre>  <span class="token comment">// 2.4、 判断如果当前层级和默认层级不一样，说明当前层级发生了变化</span></pre></td></tr><tr><td data-num="27"></td><td><pre>  <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">!=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>     <span class="token comment">// 更新最新层级</span></pre></td></tr><tr><td data-num="29"></td><td><pre>     catLevel <span class="token operator">=</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>     <span class="token comment">// 如果当前节点的层级发生变化了，那么子节点的层级肯定会发生变化</span></pre></td></tr><tr><td data-num="31"></td><td><pre>     <span class="token comment">// 修改子节点的层级以及子节点的子节点层级 (递归)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>     <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChildNodeLevel</span><span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment">//=================================================================</span></pre></td></tr><tr><td data-num="35"></td><td><pre>          <span class="token comment">// 2.5、当前拖拽的节点需要改顺序和它的父节点的 id</span></pre></td></tr><tr><td data-num="36"></td><td><pre>          <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>             <span class="token comment">// 表示正在处理哪条数据 catId 是唯一性的</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token literal-property property">sort</span><span class="token operator">:</span> i<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token literal-property property">parentCid</span><span class="token operator">:</span> pCid<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token literal-property property">catLevel</span><span class="token operator">:</span> catLevel<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>          <span class="token comment">// 而其它节点只需要更新顺序</span></pre></td></tr><tr><td data-num="45"></td><td><pre>          <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>最后我们需要对接接口来更新数据库中的数据来持久化</p><p>后端需要提供一个批量修改的接口</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * 批量修改排序</pre></td></tr><tr><td data-num="3"></td><td><pre> * @param category</pre></td></tr><tr><td data-num="4"></td><td><pre> * @return</pre></td></tr><tr><td data-num="5"></td><td><pre> */</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/update/sort"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// @RequiresPermissions("product:category:update")</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">updateSort</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">CategoryEntity</span><span class="token punctuation">[</span><span class="token punctuation">]</span> category<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   categoryService<span class="token punctuation">.</span><span class="token function">updateBatchById</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>前端调用接口</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> dropType<span class="token punctuation">,</span> ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token comment">// 1、当前节点最新的父节点 id 的变量</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">let</span> pCid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token comment">// 记录拖拽到的节点的节点集合 (为第二步做准备)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token keyword">let</span> siblings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token comment">// 1.2、判断如果是上下关系就记录当前拖拽到的节点的父节点的 catId 和 childNodes 集合</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token keyword">if</span> <span class="token punctuation">(</span>dropType <span class="token operator">==</span> <span class="token string">"before"</span> <span class="token operator">||</span> dropType <span class="token operator">==</span> <span class="token string">"after"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token comment">// 使用逻辑中断防止拖拽到的节点的父节点 catId 为 unidefed</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 如果是左右关系就记录当前拖拽到的节点的 catId 和 childNodes</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token comment">// 2、当前拖拽节点的最新顺序</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> siblings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token comment">// 2.1、判断遍历的是否为当前拖拽的节点</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">==</span> draggingNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>         <span class="token comment">// 定义当前节点的默认层级变量</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token keyword">let</span> catLevel <span class="token operator">=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>         <span class="token comment">// 2.3、如果遍历的是当前节点而且层级发生了变化</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token comment">// 2.4、 判断如果当前层级和默认层级不一样，说明当前层级发生了变化</span></pre></td></tr><tr><td data-num="24"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">!=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token comment">// 更新最新层级</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            catLevel <span class="token operator">=</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token comment">// 如果当前节点的层级发生变化了，那么子节点的层级肯定会发生变化</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token comment">// 修改子节点的层级以及子节点的子节点层级 (递归)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChildNodeLevel</span><span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>         <span class="token comment">// 2.5、当前拖拽的节点需要改顺序和它的父节点的 id</span></pre></td></tr><tr><td data-num="32"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 表示正在处理哪条数据 catId 是唯一性的</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token literal-property property">sort</span><span class="token operator">:</span> i<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token literal-property property">parentCid</span><span class="token operator">:</span> pCid<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token literal-property property">catLevel</span><span class="token operator">:</span> catLevel<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>         <span class="token comment">// 而其它节点只需要更新顺序</span></pre></td></tr><tr><td data-num="41"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">//=========================== 调用批量修改接口 ===========================</span></pre></td></tr><tr><td data-num="45"></td><td><pre>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$http</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornUrl</span><span class="token punctuation">(</span><span class="token string">"/product/category/update/sort"</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="48"></td><td><pre>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>         <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"菜单顺序修改成功"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>         <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>      <span class="token comment">// 刷新菜单数据</span></pre></td></tr><tr><td data-num="55"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>      <span class="token comment">// 设置默认展开的菜单</span></pre></td></tr><tr><td data-num="57"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>expandedKey <span class="token operator">=</span> <span class="token punctuation">[</span>pCid<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>为防止误操作拖拽节点，我们可以加上一个开关进行控制</p><p>在 element-ui 文档中找到 switch 开关的模块复制源码</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240522090847878.png" alt="image-20240522090847878" /></p><pre><code class="language-vue">&lt;el-switch v-model=&quot;value1&quot; active-text=&quot;按月付费&quot; inactive-text=&quot;按年付费&quot;&gt;&lt;/el-switch&gt;</code></pre><p>定义一个与开关关联的属性在 Tree 拖拽节点的代码中</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240522091112687.png" alt="image-20240522091112687" /></p><p>这个 draggable 是 true 则能拖拽，是 false 则不能拖拽，在 data () 中定义 draggable 的默认值</p><p>下面是效果展示：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/PixPin_2024-05-22_09-13-29.gif" alt="PixPin_2024-05-22_09-13-29" /></p><h2 id="批量保存拖拽的数据"><a class="anchor" href="#批量保存拖拽的数据">#</a> 批量保存拖拽的数据</h2><p>在做这个功能时我们需要改动一些代码：</p><p>首先前端添加一个批量保存的按钮</p><p>使用 v-if 来判断如果开启了拖拽功能才显示批量保存的按钮否则不显示</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240522093124769.png" alt="image-20240522093124769" /></p><p>更改代码如下：</p><p>将批量更新数据库数据的操作放到点击按钮后触发的函数 batchSave 里</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">batchSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$http</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornUrl</span><span class="token punctuation">(</span><span class="token string">"/product/category/update/sort"</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>         <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"菜单顺序修改成功"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>         <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 刷新菜单数据</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token comment">// 设置默认展开的菜单</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>expandedKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pCid<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>我们发现批量保存函数中需要 pCid 而又没有提供，所以我们需要将 pCid 在 data () 中写一个并给默认值为 [] 数组 然后再 拖拽函数中 给 this.pCid 赋值</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240522093814787.png" alt="image-20240522093814787" /></p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> dropType<span class="token punctuation">,</span> ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token comment">// 1、当前节点最新的父节点 id 的变量</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">let</span> pCid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token comment">// 记录拖拽到的节点的节点集合 (为第二步做准备)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token keyword">let</span> siblings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token comment">// 1.2、判断如果是上下关系就记录当前拖拽到的节点的父节点的 catId 和 childNodes 集合</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token keyword">if</span> <span class="token punctuation">(</span>dropType <span class="token operator">==</span> <span class="token string">"before"</span> <span class="token operator">||</span> dropType <span class="token operator">==</span> <span class="token string">"after"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token comment">// 使用逻辑中断防止拖拽到的节点的父节点 catId 为 unidefed</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 如果是左右关系就记录当前拖拽到的节点的 catId 和 childNodes</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      pCid <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      siblings <span class="token operator">=</span> dropNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token keyword">this</span><span class="token punctuation">.</span>pCid<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pCid<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token comment">// 2、当前拖拽节点的最新顺序</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> siblings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token comment">// 2.1、判断遍历的是否为当前拖拽的节点</span></pre></td></tr><tr><td data-num="20"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId <span class="token operator">==</span> draggingNode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token comment">// 定义当前节点的默认层级变量</span></pre></td></tr><tr><td data-num="22"></td><td><pre>         <span class="token keyword">let</span> catLevel <span class="token operator">=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token comment">// 2.3、如果遍历的是当前节点而且层级发生了变化</span></pre></td></tr><tr><td data-num="24"></td><td><pre>         <span class="token comment">// 2.4、 判断如果当前层级和默认层级不一样，说明当前层级发生了变化</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">!=</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token comment">// 更新最新层级</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            catLevel <span class="token operator">=</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token comment">// 如果当前节点的层级发生变化了，那么子节点的层级肯定会发生变化</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token comment">// 修改子节点的层级以及子节点的子节点层级 (递归)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChildNodeLevel</span><span class="token punctuation">(</span>siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>         <span class="token comment">// 2.5、当前拖拽的节点需要改顺序和它的父节点的 id</span></pre></td></tr><tr><td data-num="33"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token comment">// 表示正在处理哪条数据 catId 是唯一性的</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token literal-property property">sort</span><span class="token operator">:</span> i<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token literal-property property">parentCid</span><span class="token operator">:</span> pCid<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token literal-property property">catLevel</span><span class="token operator">:</span> catLevel<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>         <span class="token comment">// 而其它节点只需要更新顺序</span></pre></td></tr><tr><td data-num="42"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span>updateNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">catId</span><span class="token operator">:</span> siblings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>catId<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>我们再进行批量保存的时候就会报错需要修改如下代码：</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">allowDrop</span><span class="token punctuation">(</span><span class="token parameter">draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token comment">// 被拖动的当前节点，以及所在的父节点总层数不能大于 3</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 被拖动的当前节点总层数</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"allowDrop: "</span><span class="token punctuation">,</span> draggingNode<span class="token punctuation">,</span> dropNode<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 计算当前节点的总层数</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">countNodeLevel</span><span class="token punctuation">(</span>draggingNode<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token comment">// 当前正在拖动的节点 + 父节点所在的深度不大于 3 即可</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token comment">// 最大深度 - 当前深度 + 1 = 当前节点的深度</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token keyword">let</span> deep <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel <span class="token operator">-</span> draggingNode<span class="token punctuation">.</span>level<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"深度："</span><span class="token punctuation">,</span> deep<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">"inner"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token keyword">return</span> deep <span class="token operator">+</span> dropNode<span class="token punctuation">.</span>level <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      <span class="token keyword">return</span> deep <span class="token operator">+</span> dropNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>level <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token function">countNodeLevel</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token comment">// 找到所有子节点，求出最大深度</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>               <span class="token keyword">this</span><span class="token punctuation">.</span>maxLevel <span class="token operator">=</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">countNodeLevel</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/PixPin_2024-05-22_09-40-50.gif" alt="PixPin_2024-05-22_09-40-50" /></p><h2 id="批量删除数据"><a class="anchor" href="#批量删除数据">#</a> 批量删除数据</h2><p>提供批量删除的接口</p><p>逻辑删除什么字段不重要主要看自己</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * 删除</pre></td></tr><tr><td data-num="3"></td><td><pre> */</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/delete"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// @RequiresPermissions("product:category:delete")</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> catIds<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   categoryService<span class="token punctuation">.</span><span class="token function">removeMenuByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>catIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>前端代码：</p><p>添加批量删除按钮</p><pre><code class="language-vue">&lt;el-button type=&quot;danger&quot; @click=&quot;batchDel&quot;&gt;批量删除&lt;/el-button&gt;</code></pre><p>逻辑代码：</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">batchDel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token keyword">let</span> catIds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token keyword">let</span> checkedNodes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>menuTree<span class="token punctuation">.</span><span class="token function">getCheckedNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"被选中的元素: "</span><span class="token punctuation">,</span> checkedNodes<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> checkedNodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      catIds<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>checkedNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>catId<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      name<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>checkedNodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">此操作将永久批量删除[ </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> ]菜单, 是否继续?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token string">"提示"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>         <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">"确定"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>         <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">"取消"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>         <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"warning"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$http</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornUrl</span><span class="token punctuation">(</span><span class="token string">"/product/category/delete"</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>         <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">adornData</span><span class="token punctuation">(</span>catIds<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"菜单删除成功"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;element-ui-tree节点可拖拽更新节点数据&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#element-ui-tree节点可拖拽更新节点数据&quot;&gt;#&lt;/a&gt; Element-ui Tree 节点可拖拽更新节点数据&lt;/h1&gt;
&lt;h2 id=&quot;业务介绍</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="web" scheme="https://pigpigletsgo.github.io/categories/computer-science/web/"/>
    
    <category term="vue" scheme="https://pigpigletsgo.github.io/categories/computer-science/web/vue/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="介绍" scheme="https://pigpigletsgo.github.io/tags/%E4%BB%8B%E7%BB%8D/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/tags/%E6%A1%88%E4%BE%8BDemo/"/>
    
    <category term="vue3" scheme="https://pigpigletsgo.github.io/tags/vue3/"/>
    
  </entry>
  
</feed>
