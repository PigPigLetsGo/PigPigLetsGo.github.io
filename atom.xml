<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>D の Java</title>
  
  <subtitle>别怕路长梦远</subtitle>
  <link href="https://pigpigletsgo.github.io/atom.xml" rel="self"/>
  
  <link href="https://pigpigletsgo.github.io/"/>
  <updated>2024-08-11T11:21:54.128Z</updated>
  <id>https://pigpigletsgo.github.io/</id>
  
  <author>
    <name>D</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>poi的介绍和使用</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/poi%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/poi%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</id>
    <published>2024-08-11T11:21:15.689Z</published>
    <updated>2024-08-11T11:21:54.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="poi的介绍和使用"><a class="anchor" href="#poi的介绍和使用">#</a> poi 的介绍和使用</h1><h2 id="poi不同版本的介绍"><a class="anchor" href="#poi不同版本的介绍">#</a> poi 不同版本的介绍</h2><p><code>poi-tl</code> ， <code>poi</code>  和 <code>poi-ooxml</code>  是 Apache POI 的不同子库，它们各自用于不同的功能和文件格式</p><ol><li>Apache POI( <code>poi</code> )：<ul><li>功能：提供对 <code>Microsoft Office 97-2003</code>  格式 (如 <code>.xls</code> ) 文件的读写支持</li><li>文件格式：主要用于处理 <code>.xls</code>  文件，这些文件是基于 HSSF ( <code>Horrible SpreadSheet Format</code> ) 的</li></ul></li><li>Apache POI-OOXML( <code>poi-ooxml</code> )<ul><li>功能：提供对 <code> Microsoft Office 2007</code>  及以后版本的文件格式 (如 <code>.xlsx</code> ) 的读写支持</li><li>文件格式：主要用于处理 <code>.xlsx</code>  文件，这些文件是基于 XSSF ( <code>XML Spreadsheet Format</code> ) 的</li><li>依赖：这个库依赖于 <code>poi</code>  库，因为它需要处理 <code>.xls</code>  文件中的一些老旧格式</li></ul></li><li>poi-tl：<ul><li>功能：主要用于处理和生成 <code> Microsoft Word</code>  文件 ( <code>.docx</code> )，并且是 Apache POI 的扩展库，简化了模版文档的处理</li><li>文件格式：主要用于处理 <code>.docx</code>  文件，可以通过模版生成文档，使得生成文档更加简洁和高效</li></ul></li></ol><p><strong>总结</strong>：</p><ul><li><code>poi</code>  主要用于处理旧版 Excel 文件 ( <code>.xls</code> )</li><li><code>poi-ooxml</code>  主要用于处理新版 Excel 文件 ( <code>.xlsx</code> )</li><li><code>poi-tl</code>  主要用于处理 Word 文档 ( <code>.docx</code> )，特别是当你需要模版支持</li></ul><h2 id="poi的使用"><a class="anchor" href="#poi的使用">#</a> poi 的使用</h2><h3 id="创建excel"><a class="anchor" href="#创建excel">#</a> 创建 excel</h3><ol><li><p>创建 excel 文档</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 创建 name.xlsx 文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 创建 name.xls 文件</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li><li><p>创建 sheet 页</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 创建安全表名称</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">String</span> safeName <span class="token operator">=</span> <span class="token class-name">WorkbookUtil</span><span class="token punctuation">.</span><span class="token function">createSafeSheetName</span><span class="token punctuation">(</span><span class="token string">"[O'Brien's sales*?]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet页名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li><li><p>对 sheet 页的某索引处创建行对象</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Row</span> header <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li><li><p>在改行的某索引处创建单元格并设置名称</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre>header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li><li><p>获取某行的全部单元格数量</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">int</span> rowTotal <span class="token operator">=</span> header<span class="token punctuation">.</span><span class="token function">getPhysicalNumberOfCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure></li></ol><h3 id="创建特殊数据类型对象"><a class="anchor" href="#创建特殊数据类型对象">#</a> 创建特殊数据类型对象</h3><ol><li><p>创建带有富文本格式的字符串 (可以对其某个字体设置不同的样式)</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">XSSFCreationHelper</span> creationHelper <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getCreationHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">XSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">XSSFRichTextString</span> hyperlinkString <span class="token operator">=</span> creationHelper<span class="token punctuation">.</span><span class="token function">createRichTextString</span><span class="token punctuation">(</span><span class="token string">"abcdefghijk"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">// 创建字体对象</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token class-name">XSSFFont</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置粗体</span></pre></td></tr><tr><td data-num="7"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置颜色</span></pre></td></tr><tr><td data-num="8"></td><td><pre>hyperlinkString<span class="token punctuation">.</span><span class="token function">applyFont</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> font<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token class-name">XSSFFont</span> fontTwo <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>fontTwo<span class="token punctuation">.</span><span class="token function">setItalic</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>fontTwo<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>hyperlinkString<span class="token punctuation">.</span><span class="token function">applyFont</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> fontTwo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token class-name">XSSFCell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"click to url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果单元格的值 都设置在同一个的话会被 最后一个覆盖</span></pre></td></tr><tr><td data-num="17"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>hyperlinkString<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810172109727.png" alt="image-20240810172109727" /></p></li><li><p>创建超链接</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">XSSFCreationHelper</span> creationHelper <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getCreationHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">XSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">XSSFHyperlink</span> hyperlinkURL <span class="token operator">=</span> creationHelper<span class="token punctuation">.</span><span class="token function">createHyperlink</span><span class="token punctuation">(</span><span class="token class-name">HyperlinkType</span><span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>hyperlinkURL<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置跳转的路径</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token class-name">XSSFCell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"click to url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将单元格的值 和 超链接添加到 当前行中</span></pre></td></tr><tr><td data-num="7"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setHyperlink</span><span class="token punctuation">(</span>hyperlinkURL<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>效果：<br /><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/PixPin_2024-08-10_17-25-35.gif" alt="PixPin_2024-08-10_17-25-35" /></p></li><li><p>创建时间类型</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">XSSFCreationHelper</span> creationHelper <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getCreationHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">XSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">XSSFCellStyle</span> style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建样式对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>creationHelper<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"m/d/y h:mm"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 格式化式样样式</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token class-name">XSSFCell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 添加时间值</span></pre></td></tr><tr><td data-num="6"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token class-name">XSSFCell</span> cellTwo <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>cellTwo<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>cellTwo<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810173752112.png" alt="image-20240810173752112" /></p></li><li><p>创建多种格式的单元格</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">XSSFWorkbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">String</span> safeSheetName <span class="token operator">=</span> <span class="token class-name">WorkbookUtil</span><span class="token punctuation">.</span><span class="token function">createSafeSheetName</span><span class="token punctuation">(</span><span class="token string">"[O'Brien's sales*?]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">XSSFSheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>safeSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token class-name">XSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 类型：数字 (double)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// 类型：日期 (Date)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">// 类型：日期 (Calendar)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">// 类型：字符串 (string)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"a string"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">// 类型：布尔 (boolean)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">// 类型：错误 (error)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellType</span><span class="token punctuation">(</span><span class="token class-name">CellType</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810174113454.png" alt="image-20240810174113454" /></p></li></ol><h3 id="设置样式"><a class="anchor" href="#设置样式">#</a> 设置样式</h3><ol><li><p>通过 excel 文档对象创建样式对象</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">CellStyle</span> cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li><li><p>设置字体样式</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Font</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">// 创建字体对象</span></pre></td></tr><tr><td data-num="2"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 加粗</span></pre></td></tr><tr><td data-num="3"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 设置字体大小</span></pre></td></tr><tr><td data-num="4"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">// 设置字体</span></pre></td></tr><tr><td data-num="5"></td><td><pre>cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// 向样式里添加字体设置</span></pre></td></tr></table></figure><h2 id="files和inputstream-excel文件读取操作"><a class="anchor" href="#files和inputstream-excel文件读取操作">#</a> Files 和 InputStream  (excel 文件读取操作)</h2><p>当打开 WorkBook (.xls  HSSFWorkbook 或.xlsx  XSSFWorkbook) 时，可以从 File 或 InputStream 加载工作簿</p><p>使用 File 对象可以减少内存消耗，而 InputStream 需要更多内存，因为它必须缓冲整个文件</p><p>如果使用 WorkbookFactory，则使用其中一个非常容易：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// Use a file</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"MyExcel.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// Use an InputStream, needs more memory</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"MyExcel.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>代码案例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token class-name">Workbook</span> workbookTwo <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newInputStream</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 获取第一个工作表</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 读取第 1 行，第 1 个单元格的内容</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token class-name">String</span> stringCellValue <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getStringCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token class-name">Cell</span> cellTwo <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">double</span> numericCellValue <span class="token operator">=</span> cellTwo<span class="token punctuation">.</span><span class="token function">getNumericCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token class-name">Cell</span> cellThree <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">boolean</span> booleanCellValue <span class="token operator">=</span> cellThree<span class="token punctuation">.</span><span class="token function">getBooleanCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第1行，第1个单元格的内容是 = "</span> <span class="token operator">+</span> stringCellValue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第1行，第1个单元格的内容是 = "</span> <span class="token operator">+</span> numericCellValue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第1行，第1个单元格的内容是 = "</span> <span class="token operator">+</span> booleanCellValue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token comment">// 可以获取到 Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"workbook="</span> <span class="token operator">+</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token comment">// 可以获取到 Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"workbookTwo="</span> <span class="token operator">+</span> workbookTwo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p>下面是我们要读取的 excel 表格内容</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810203902511.png" alt="image-20240810203902511" /></p><p>读取的结果：</p><pre><code>第1行，第1个单元格的内容是 = a string text第1行，第1个单元格的内容是 = 1.1第1行，第1个单元格的内容是 = trueworkbook=Name: /xl/workbook.xml - Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xmlworkbookTwo=Name: /xl/workbook.xml - Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml</code></pre><p>如果直接使用 HSSFWorkbook 或 XSSFWorkbook，通常应遍历 POIFSileSystem 或 OPCPackage，以完全控制生命周期 (包括完成后关闭文件)</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// HSSFWorkbook, File</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token class-name">POIFSFileSystem</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">POIFSFileSystem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token class-name">HSSFWorkbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"wb = "</span> <span class="token operator">+</span> wb<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// HSSFWorkbook, InputStream, needs more memory</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token class-name">POIFSFileSystem</span> fs1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">POIFSFileSystem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token class-name">HSSFWorkbook</span> wb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    fs1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment">// XSSFWorkbook, File</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token class-name">OPCPackage</span> pkg <span class="token operator">=</span> <span class="token class-name">OPCPackage</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token class-name">XSSFWorkbook</span> wb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> wb2<span class="token punctuation">.</span><span class="token function">getNumberOfSheets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token class-name">XSSFSheet</span> sheet <span class="token operator">=</span> wb2<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sheetName = "</span> <span class="token operator">+</span> sheet<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Row</span> row <span class="token operator">:</span> sheet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cell</span> cell <span class="token operator">:</span> row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                   <span class="token keyword">switch</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getCellType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                       <span class="token keyword">case</span> <span class="token constant">STRING</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"string = "</span> <span class="token operator">+</span> cell<span class="token punctuation">.</span><span class="token function">getStringCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                           <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                       <span class="token keyword">case</span> <span class="token constant">NUMERIC</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"numeric = "</span> <span class="token operator">+</span> cell<span class="token punctuation">.</span><span class="token function">getNumericCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                           <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                       <span class="token keyword">case</span>  <span class="token constant">BOOLEAN</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"boolean = "</span> <span class="token operator">+</span> cell<span class="token punctuation">.</span><span class="token function">getBooleanCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                           <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                       <span class="token keyword">case</span> <span class="token constant">FORMULA</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"formula = "</span> <span class="token operator">+</span> cell<span class="token punctuation">.</span><span class="token function">getCellFormula</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                           <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                       <span class="token keyword">default</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"没有任何数据"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    pkg<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token comment">// XSSFWorkbook, InputStream, needs more memory</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token class-name">OPCPackage</span> pkg1 <span class="token operator">=</span> <span class="token class-name">OPCPackage</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token class-name">XSSFWorkbook</span> wb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>pkg<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    pkg1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>我们还是读取上次读取的 excel 文件内容结果如下：</p><pre><code>sheetName = Name: /xl/worksheets/sheet1.xml - Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xmlstring = a string textnumeric = 1.1boolean = true</code></pre><h2 id="不同的对齐方式"><a class="anchor" href="#不同的对齐方式">#</a> 不同的对齐方式</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">padding</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">try</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//or new HSSFWorkbook();</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token comment">// 设置行的高度为 30 榜</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            row<span class="token punctuation">.</span><span class="token function">setHeightInPoints</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token comment">// 设置字体  左右 (居中) 上下 (底部)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token comment">// 设置字体 左右 (中心选定对齐)  上下 (底部)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER_SELECTION</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token comment">// 设置字体 左右 (填充对齐)  上下 (居中)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">FILL</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token comment">// 设置字体  左右 (默认对齐)  上下 (居中)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">GENERAL</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token comment">// 设置字体  左右 (拉伸对齐)  上下 (拉伸对齐)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">JUSTIFY</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">JUSTIFY</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment">// 设置字体  左右 (左对齐)  上下 (顶部)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token comment">// 设置字体  左右 (右对齐)  上下 (顶部)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token function">createCell</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> row<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=test1.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createCell</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb<span class="token punctuation">,</span> <span class="token class-name">Row</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> column<span class="token punctuation">,</span> <span class="token class-name">HorizontalAlignment</span> halign<span class="token punctuation">,</span> <span class="token class-name">VerticalAlignment</span> valign<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"Align It"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token class-name">CellStyle</span> cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token comment">// 设置左右对齐方式</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>halign<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token comment">// 设置上下对齐方式</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>valign<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810210433997.png" alt="image-20240810210433997" /></p><h2 id="设置边框"><a class="anchor" href="#设置边框">#</a> 设置边框</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"new sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token comment">// Create a row and put some cells in it. Rows are 0 based.</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// Create a cell and put a value in it.</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// Style the cell with borders all around.</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">CellStyle</span> style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token comment">// 设置底部的线 和 样式 为 细线</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span><span class="token class-name">BorderStyle</span><span class="token punctuation">.</span><span class="token constant">THIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// 设置底部的线的颜色为蓝色</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setBottomBorderColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 设置左侧的线 和 样式 为 细线</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span><span class="token class-name">BorderStyle</span><span class="token punctuation">.</span><span class="token constant">THIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// 设置左侧的线的颜色为绿色</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setLeftBorderColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 设置右侧的线 和 样式为 细线</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span><span class="token class-name">BorderStyle</span><span class="token punctuation">.</span><span class="token constant">THIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token comment">// 设置右侧的线的颜色为 蓝色</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setRightBorderColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// 设置顶部的线 和 样式为 中等粗细的虚线边框</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span><span class="token class-name">BorderStyle</span><span class="token punctuation">.</span><span class="token constant">MEDIUM_DASHED</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token comment">// 设置顶部的线的颜色为黑色</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setTopBorderColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">// 应用到 单元格中</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=test2.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240810211419981.png" alt="image-20240810211419981" /></p><h2 id="遍历行和单元格"><a class="anchor" href="#遍历行和单元格">#</a> 遍历行和单元格</h2><p>有时，可能只想遍历工作簿中的所有工作表中的所有行或行中的所有单元格。这可以通过简单的 for 循环来实现。</p><p>通过调用 workbook.sheetIterator ()，sheet.rowIterator () 和 row.cellIterator () 或隐式使用 for-each 循环，可以使用这些迭代器。请注意，rowIterator 和 cellIterator 遍历已创建的行或单元格，会跳过空的行和单元格</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Sheet</span> sheet <span class="token operator">:</span> wb <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Row</span> row <span class="token operator">:</span> sheet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cell</span> cell <span class="token operator">:</span> row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token comment">// Do something here</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="遍历单元格控制丢失空白的单元格"><a class="anchor" href="#遍历单元格控制丢失空白的单元格">#</a> 遍历单元格，控制丢失 / 空白的单元格</h2><p>在某些情况下，进行迭代时，您需要完全控制如何处理丢失或空白的行和单元格，并且需要确保访问每个单元格，而不仅仅是访问文件中定义的那些单元格。(CellIterator 将仅返回文件中定义的单元格，这在很大程度上是具有值或样式的单元格，但取决于 Excel)</p><p>在这种情况下，应获取一行的第一列和最后一列信息，然后调用 getCell (int ,MissingCellPolicy) 来获取单元格。使用 MissingCellPolicy 控制空白或单元格的处理方式</p><p>MissingCellPolicy 策略如下：</p><p><code>Row.MissingCellPolicy</code>  是一个枚举，定义了处理缺失单元格的不同策略。常用的枚举值包括：</p><ol><li><strong> <code>RETURN_NULL_AND_BLANK</code> </strong>:<ul><li>返回的单元格可能是  <code>null</code> ，也可能是  <code>BLANK</code>  类型。 <code>null</code>  表示单元格不存在，而  <code>BLANK</code>  表示单元格存在但为空白。</li></ul></li><li><strong> <code>CREATE_NULL_AS_BLANK</code> </strong>:<ul><li>如果单元格不存在，会创建一个  <code>BLANK</code>  类型的单元格并返回。</li></ul></li><li><strong> <code>RETURN_BLANK_AS_NULL</code> </strong>:<ul><li>如果单元格不存在或为空白（即  <code>BLANK</code>  类型），则返回  <code>null</code> 。</li></ul></li><li><strong> <code>RETURN_MISSING_AS_BLANK</code> </strong>:<ul><li>如果单元格不存在，会返回一个  <code>BLANK</code>  类型的单元格，但不会创建它。</li></ul></li></ol><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MY_MINIMUM_COLUMN_COUNT</span> <span class="token operator">=</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processExcel</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newInputStream</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test2.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">int</span> rowStart <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> sheet<span class="token punctuation">.</span><span class="token function">getFirstRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">int</span> rowEnd <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span> sheet<span class="token punctuation">.</span><span class="token function">getLastRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> rowNum <span class="token operator">=</span> rowStart<span class="token punctuation">;</span> rowNum <span class="token operator">&lt;</span> rowEnd<span class="token punctuation">;</span> rowNum<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token class-name">Row</span> r <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>rowNum<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token comment">// 处理空行，例如记录日志或跳过</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rowNum <span class="token operator">+</span> <span class="token string">" 处为空行 = "</span> <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token keyword">int</span> lastColumn <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MY_MINIMUM_COLUMN_COUNT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cn <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> cn <span class="token operator">&lt;</span> lastColumn<span class="token punctuation">;</span> cn<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token comment">// 如果单元格不存在则返回 从枚举中获取的策略如果不存在不是返回空白 (即 BLANK 类型) 而是返回 NULL</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                <span class="token class-name">Cell</span> c <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>cn<span class="token punctuation">,</span> <span class="token class-name">Row<span class="token punctuation">.</span>MissingCellPolicy</span><span class="token punctuation">.</span><span class="token constant">RETURN_BLANK_AS_NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                    <span class="token comment">// 处理空单元格，例如填充默认值或跳过</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>cn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"ohhhhhhhhhhhh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                    <span class="token comment">// 对单元格内容进行操作，例如打印内容或修改数据</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Cell Value: "</span> <span class="token operator">+</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=test3.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811103737832.png" alt="image-20240811103737832" /></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811103835302.png" alt="image-20240811103835302" /></p><h2 id="获取单元格内容"><a class="anchor" href="#获取单元格内容">#</a> 获取单元格内容</h2><p>要获取单元格的内容，您首先需要知道它是哪种单元格 (例如：将字符串单元格作为其数字内容将获得 NumberFormatException)。因此，您将需要打开单元格的类型，然后为该单元格调用适当的 getter</p><p>在下面代码中，我们遍历一张纸中的每个单元格，打印出该单元格的引用 (例如 A3)，然后打印出该单元格的内容</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">CellContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newInputStream</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token comment">// import org.apache.poi.ss.usermodel.*;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">DataFormatter</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Sheet</span> sheet1 <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Row</span> row <span class="token operator">:</span> sheet1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cell</span> cell <span class="token operator">:</span> row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token comment">// 根据 行 列 坐标获取当前 单元格的位置 比如 A1, B1, A2, B2 等</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token class-name">CellReference</span> cellRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellReference</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cell<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>cellRef<span class="token punctuation">.</span><span class="token function">formatAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" - "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                <span class="token comment">// get the text that appears in the cell by getting the cell value and applying any data formats (Date, 0.00, 1.23e9, $1.23, etc)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                <span class="token class-name">String</span> text <span class="token operator">=</span> formatter<span class="token punctuation">.</span><span class="token function">formatCellValue</span><span class="token punctuation">(</span>cell<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token comment">// Alternatively, get the value and format it yourself</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getCellType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                    <span class="token keyword">case</span> <span class="token constant">STRING</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getRichStringCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                        <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                    <span class="token keyword">case</span> <span class="token constant">NUMERIC</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">isCellDateFormatted</span><span class="token punctuation">(</span>cell<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getDateCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getNumericCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                        <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                    <span class="token keyword">case</span> <span class="token constant">BOOLEAN</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getBooleanCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                        <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token keyword">case</span> <span class="token constant">FORMULA</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getCellFormula</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                        <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                    <span class="token keyword">case</span> <span class="token constant">BLANK</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                        <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token keyword">default</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811110405815.png" alt="image-20240811110405815" /></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811110416854.png" alt="image-20240811110416854" /></p><h2 id="文字提取"><a class="anchor" href="#文字提取">#</a> 文字提取</h2><p>对于大多数文本提取要求，标准 ExcelExtractor 类应提供您所需要的全部</p><h3 id="介绍"><a class="anchor" href="#介绍">#</a> 介绍：</h3><p>ExcelExtractor：是用来从 Excel 文件中提取文本内容的。以下是这两行代码的详细解释</p><p>setFormulasNotResults：该设置决定了在提取文本时，Excel 文件中的公式应该被提取为公式本身，还是被提取为公式计算的结果</p><ul><li><p><strong> <code>true</code> </strong>: 提取公式本身。例如，如果单元格包含公式  <code>=SUM(A1:B1)</code> ，提取的内容将是  <code>=SUM(A1:B1)</code> 。</p></li><li><p><strong> <code>false</code> </strong>: 提取公式计算的结果。例如，如果单元格包含公式  <code>=SUM(A1:B1)</code> ，并且计算结果为  <code>10</code> ，提取的内容将是  <code>10</code> 。</p></li></ul><p>setIncludeSheetNames：该设置决定了在提取文本时，是否包括工作表的名称</p><ul><li><code>true</code> ：在提取的文本中包括工作表的名称</li><li><code>false</code> ：不包括工作表的名称，提取的文本将只包含单元格内容</li></ul><p>提取 xls 文件代码案例如下：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">HSSExtractTheText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token class-name">POIFSFileSystem</span> poifsFileSystem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">POIFSFileSystem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\testx.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token class-name">HSSFWorkbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span>poifsFileSystem<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">ExcelExtractor</span> excelExtractor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelExtractor</span><span class="token punctuation">(</span>workbook<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        excelExtractor<span class="token punctuation">.</span><span class="token function">setFormulasNotResults</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        excelExtractor<span class="token punctuation">.</span><span class="token function">setIncludeSheetNames</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token class-name">String</span> text <span class="token operator">=</span> excelExtractor<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HSSF content = "</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811145254670.png" alt="image-20240811145254670" /></p><p>提取 xlsx 文件代码案例如下：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">XSSExtractTheText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">OPCPackage</span> <span class="token keyword">open</span> <span class="token operator">=</span> <span class="token class-name">OPCPackage</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\dkx\\Downloads\\test.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">XSSFWorkbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token keyword">open</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token class-name">XSSFExcelExtractor</span> extractor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFExcelExtractor</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            extractor<span class="token punctuation">.</span><span class="token function">setFormulasNotResults</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            extractor<span class="token punctuation">.</span><span class="token function">setIncludeSheetNames</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token class-name">String</span> text <span class="token operator">=</span> extractor<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"XSSF content = "</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811145827037.png" alt="image-20240811145827037" /></p><blockquote><p>对于非常精美的文本提取，XLS 到 CSV 等，请查看</p><p>/src/examples/src/org/apache/poi/examples/hssf/eventusermodel/XLS2CSVmra.java</p></blockquote><h2 id="填充和颜色"><a class="anchor" href="#填充和颜色">#</a> 填充和颜色</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">paddingTwo</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"new sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token comment">// Create a row and put some cells in it. Rows are 0 based.</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// Aqua background</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">CellStyle</span> style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillBackgroundColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">AQUA</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span><span class="token class-name">FillPatternType</span><span class="token punctuation">.</span><span class="token constant">BIG_SPOTS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// Orange "foreground", foreground being the fill foreground not the font color.</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">ORANGE</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span><span class="token class-name">FillPatternType</span><span class="token punctuation">.</span><span class="token constant">SOLID_FOREGROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">// Write the output to a file</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=test123.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811151115986.png" alt="image-20240811151115986" /></p><h2 id="合并单元格"><a class="anchor" href="#合并单元格">#</a> 合并单元格</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"new sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"This is a test of merging"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 通过坐标位置来进行区域的单元格合并从起始 到 结束 进行合并 不能将坐标都设置一样，因为这样不能合并会报错</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//first row (0-based)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">//last row  (0-based)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//first column (0-based)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                <span class="token number">4</span>  <span class="token comment">//last column  (0-based)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// Write the output to a file</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=test321.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811152253234.png" alt="image-20240811152253234" /></p><h2 id="设置字体"><a class="anchor" href="#设置字体">#</a> 设置字体</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"new sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token comment">// Create a row and put some cells in it. Rows are 0 based.</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// Create a new font and alter it.</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">Font</span> font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token comment">// 字体大小</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 设置字体</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setItalic</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// 删除线</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setStrikeout</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 加粗</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// 颜色</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// Fonts are set into a style so create a new one to use.</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token class-name">CellStyle</span> style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token comment">// 向样式里添加字体设置</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// Create a cell and put a value in it.</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"This is a test of fonts"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">// Write the output to a file</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=ttt.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811153535715.png" alt="image-20240811153535715" /></p><blockquote><p>请注意，工作簿中唯一字体的最大数限制为 32767。您应该在应用程序中重新使用字体，而不是为每个单元格创建字体</p></blockquote><p>例子：</p><p>错误的写法：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token class-name">CellStyle</span> style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token class-name">Font</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    font<span class="token punctuation">.</span><span class="token function">setBoldweight</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLDWEIGHT_BOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>正确的写法：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">CellStyle</span> style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Font</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>font<span class="token punctuation">.</span><span class="token function">setBoldweight</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLDWEIGHT_BOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="自定义颜色"><a class="anchor" href="#自定义颜色">#</a> 自定义颜色</h2><p>HSSF (.xls 文件)</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">diyColor</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">HSSFWorkbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">HSSFSheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">HSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">HSSFCell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">HSSFPalette</span> palette <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getCustomPalette</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 通过 Excel 中的 调色板 来设置 指定 RED 颜色 的 RGB 方案</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        palette<span class="token punctuation">.</span><span class="token function">setColorAtIndex</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">153</span><span class="token punctuation">,</span>  <span class="token comment">//RGB red (0-255)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token comment">//RGB green</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">0</span>     <span class="token comment">//RGB blue</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// 通过 Excel 中的 调色板 来设置 指定 LIME 颜色 的 RGB 方案</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        palette<span class="token punctuation">.</span><span class="token function">setColorAtIndex</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined</span><span class="token punctuation">.</span><span class="token constant">LIME</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 将 调整的 指定颜色设置到字体中</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token class-name">HSSFFont</span> font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token class-name">HSSFCellStyle</span> style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 设置填充色前景</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined</span><span class="token punctuation">.</span><span class="token constant">LIME</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token comment">// 设置填充方案为实心前景</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span><span class="token class-name">FillPatternType</span><span class="token punctuation">.</span><span class="token constant">SOLID_FOREGROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"Modified Palette"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=qwe.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811183303747.png" alt="image-20240811183303747" /></p><p>XSSF (.xlsx 文件)</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">diyColorX</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">XSSFWorkbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">XSSFSheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">XSSFRow</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">XSSFCell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">XSSFCellStyle</span> style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 设置填充前景颜色</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XSSFColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span>Color</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DefaultIndexedColorMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 设置填充方案为实心前景</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span><span class="token class-name">FillPatternType</span><span class="token punctuation">.</span><span class="token constant">SOLID_FOREGROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"custom XSSF colors"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=qwe.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811184204629.png" alt="image-20240811184204629" /></p><h2 id="读和写workbooks"><a class="anchor" href="#读和写workbooks">#</a> 读和写 WorkBooks</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> inp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"workbook.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">//InputStream inp = new FileInputStream("workbook.xlsx");</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cell <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellType</span><span class="token punctuation">(</span><span class="token class-name">CellType</span><span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"a test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment">// Write the output to a file</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">OutputStream</span> fileOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"workbook.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileOut<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="在单元格中使用换行符"><a class="anchor" href="#在单元格中使用换行符">#</a> 在单元格中使用换行符</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">lineBreaks</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">//or new HSSFWorkbook();</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"Use \n with word wrap on to create a new line"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token comment">//to enable newlines you need set a cell styles with wrap=true</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token class-name">CellStyle</span> cs <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 运行换行展示</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        cs<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// 设置行高</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">setHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> sheet<span class="token punctuation">.</span><span class="token function">getDefaultRowHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 自动调整列宽，从 索引 2 开始</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=qwe.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811190225813.png" alt="image-20240811190225813" /></p><h2 id="数据格式化"><a class="anchor" href="#数据格式化">#</a> 数据格式化</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dataFormat</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"format sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">CellStyle</span> style<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">DataFormat</span> format <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">Row</span> row<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">Cell</span> cell<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">int</span> rowNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">int</span> colNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>rowNum<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>colNum<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">11111.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 保留一位小数</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>format<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"0.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>rowNum<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>colNum<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">11111.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        style <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token comment">// #,## 数字部分以，分隔。保留四位小数</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>format<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"#,##0.0000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=qwe.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240811190840875.png" alt="image-20240811190840875" /></p><h2 id="将工作表调整为一页打印相关配置"><a class="anchor" href="#将工作表调整为一页打印相关配置">#</a> 将工作表调整为一页 (打印相关配置)</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 创建一个新的 Excel 工作簿（.xls 格式）</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"format sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 获取当前工作表的打印设置</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token class-name">PrintSetup</span> ps <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getPrintSetup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    </pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 自动分页</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    sheet<span class="token punctuation">.</span><span class="token function">setAutobreaks</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment">// 设置打印页面的高度和宽度为 1 页</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    ps<span class="token punctuation">.</span><span class="token function">setFitHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    ps<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token comment">// 设置 HTTP 响应的内容类型为 Excel 2003 格式</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    </pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token comment">// 设置文件下载时的名称</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=qwe.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token comment">// 将工作簿写入 HTTP 响应输出流</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="设置打印区域"><a class="anchor" href="#设置打印区域">#</a> 设置打印区域</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">//sets the print area for the first sheet</span></pre></td></tr><tr><td data-num="4"></td><td><pre>wb<span class="token punctuation">.</span><span class="token function">setPrintArea</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"$A$1:$C$2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">//Alternatively:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>wb<span class="token punctuation">.</span><span class="token function">setPrintArea</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//sheet index</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//start column</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//end column</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//start row</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token number">0</span>  <span class="token comment">//end row</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">OutputStream</span> fileOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"workbook.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileOut<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>wb<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><h2 id="设置页脚页数"><a class="anchor" href="#设置页脚页数">#</a> 设置页脚页数</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Workbook</span> wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// or new XSSFWorkbook();</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"format sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">Footer</span> footer <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getFooter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>footer<span class="token punctuation">.</span><span class="token function">setRight</span><span class="token punctuation">(</span> <span class="token string">"Page "</span> <span class="token operator">+</span> <span class="token class-name">HeaderFooter</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" of "</span> <span class="token operator">+</span> <span class="token class-name">HeaderFooter</span><span class="token punctuation">.</span><span class="token function">numPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// Create various cells and rows for spreadsheet.</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">OutputStream</span> fileOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"workbook.xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileOut<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>wb<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li></ol><h3 id="poi导出excel的基本使用"><a class="anchor" href="#poi导出excel的基本使用">#</a> poi 导出 excel 的基本使用</h3><p>使用步骤：</p><ol><li>查询需要导出的数据</li><li>创建 excel 文档  (new XSSFWorkbook ()  返回  Workbook 对象)</li><li>创建存放数据的 sheet 页  (workbook.createSheet (&quot;管段信息&quot;)  返回  Sheet  对象)</li><li>创建行对象，提供创建这个行所处的索引位置  (sheet.createRow (0)  返回  Row  对象)</li><li>对行进行添加标题数据  (row.createCell (0).setCellValue (&quot;管线名称&quot;) 创建单元格  设置 row 行的索引为 0 处的数据)</li><li>对行进行添加实际数据  (可以遍历对象来通过循环值当作创建行的索引位置 然后对这个行进行添加数据)</li><li>对标题进行设置样式 (通过 workbook 对象创建 workbook.createCellStyle () 返回 CellStyle 对象)</li><li>对字体进行设置</li><li>遍历某行的所有单元格 (header.getPhysicalNumberOfCells ()   for 循环) 并将字体的设置应用上 (row.getCell (i).setCellStyle (cellStyle))</li></ol><p>代码如下：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportSection</span><span class="token punctuation">(</span><span class="token class-name">String</span> layoutId<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 查询数据</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasPipeSection</span><span class="token punctuation">></span></span> facGasPipeSections <span class="token operator">=</span> facGasPipeSectionMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasStationYard</span><span class="token punctuation">></span></span> facGasStationYards <span class="token operator">=</span> facGasStationYardMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 创建 Excel 文档</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">// 创建两个 Sheet 分别存放不同的数据</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token function">createPipeSectionSheet</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> facGasPipeSections<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token function">createStationYardSheet</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> facGasStationYards<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 设置 Content-Type 为 Excel</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=export.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token comment">// 将 Excel 写入响应输出流</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createPipeSectionSheet</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasPipeSection</span><span class="token punctuation">></span></span> facGasPipeSections<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"管段信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token class-name">Row</span> header <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token comment">// 创建标题行</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"管线名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"管线编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"管段名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"管段编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"管段长度"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"建设状态"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token function">fontStyle</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> header<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token comment">// 填充数据</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> facGasPipeSections<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token class-name">FacGasPipeSection</span> section <span class="token operator">=</span> facGasPipeSections<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getPipelineName</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getPipelineCode</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getPipeSectionName</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getPipeSectionCode</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getPipeSectionLength</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0D</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>section<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span><span class="token operator">::</span><span class="token function">getBuildStatus</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createStationYardSheet</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasStationYard</span><span class="token punctuation">></span></span> facGasStationYards<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"站场信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token class-name">Row</span> header <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token comment">// 创建标题行</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"站场名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"站场编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"站场类型"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"站场功能"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"等级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    header<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"建设状态"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre></pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token function">fontStyle</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> header<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token comment">// 填充数据</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> facGasStationYards<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token class-name">FacGasStationYard</span> yard <span class="token operator">=</span> facGasStationYards<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getStationName</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getStationCode</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getStationType</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getStationFun</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getGrade</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>yard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FacGasStationYard</span><span class="token operator">::</span><span class="token function">getBuildStatus</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="79"></td><td><pre></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token comment">// 设置 excel 字体样式</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fontStyle</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook<span class="token punctuation">,</span> <span class="token class-name">Row</span> header<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token class-name">CellStyle</span> cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>    <span class="token class-name">Font</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>    font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 加粗</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 设置字体大小</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">// 设置字体</span></pre></td></tr><tr><td data-num="87"></td><td><pre>    cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// 向样式里添加字体设置</span></pre></td></tr><tr><td data-num="88"></td><td><pre></pre></td></tr><tr><td data-num="89"></td><td><pre>    <span class="token comment">// 将样式应用到标题行的每个单元格</span></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> header<span class="token punctuation">.</span><span class="token function">getPhysicalNumberOfCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        header<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;poi的介绍和使用&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#poi的介绍和使用&quot;&gt;#&lt;/a&gt; poi 的介绍和使用&lt;/h1&gt;
&lt;h2 id=&quot;poi不同版本的介绍&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#poi不同版本的介绍&quot;&gt;#&lt;/a&gt; </summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="第三方库" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="第三方库" scheme="https://pigpigletsgo.github.io/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    <category term="poi" scheme="https://pigpigletsgo.github.io/tags/poi/"/>
    
  </entry>
  
  <entry>
    <title>前后端联调总</title>
    <link href="https://pigpigletsgo.github.io/essay/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%81%94%E8%B0%83%E6%80%BB/"/>
    <id>https://pigpigletsgo.github.io/essay/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%81%94%E8%B0%83%E6%80%BB/</id>
    <published>2024-08-11T08:29:40.408Z</published>
    <updated>2024-08-11T10:27:16.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前后端联调总"><a class="anchor" href="#前后端联调总">#</a> 前后端联调总</h1><h2 id="为什么需要联调"><a class="anchor" href="#为什么需要联调">#</a> 为什么需要联调</h2><blockquote><p>联调就是</p></blockquote><blockquote><ol><li>联调是前后端一起见证靠谱的测试结果</li><li>给需求方提供一个正确的需求验证环境</li><li>尽早暴漏前后端实现的问题</li></ol></blockquote><h2 id="如何有效的联调"><a class="anchor" href="#如何有效的联调">#</a> 如何有效的联调</h2><h3 id="联调前工作"><a class="anchor" href="#联调前工作">#</a> 联调前工作</h3><h4 id="1需求分析"><a class="anchor" href="#1需求分析">#</a> 1，需求分析</h4><ul><li>理解需求：与产品经理或需求方沟通，明确功能需求，理解业务逻辑，确保无遗漏或误解</li><li>API 接口设计：确定功能需要的 API 接口，包括接口的路径，请求方式 (GET，POST 等)，请求参数 (考虑能不能传，是否需要传)，返回值结构和状态码 (提前沟通前端返回什么样的数据格式比较合适)</li></ul><h4 id="2业务逻辑实现"><a class="anchor" href="#2业务逻辑实现">#</a> 2，业务逻辑实现</h4><ul><li>Service 层开发：实现具体的业务逻辑，包括数据处理，校验，事务管理等。</li><li>Repository/DAO 层开发：实现数据访问层，编写数据查询，插入，更新等操作</li><li>测试用例编写：为业务逻辑编写单元测试用例，确保代码功能正确</li></ul><h4 id="3api开发"><a class="anchor" href="#3api开发">#</a> 3，API 开发</h4><ul><li>控制器开发：开发对应的控制器，编写处理请求的接口逻辑，调用 Service 层完成业务处理</li><li>数据校验：对请求参数进行校验，确保数据格式和内容符合要求</li><li>异常处理：编写全局异常处理，确保当发生错误时返回统一的错误信息</li></ul><h4 id="4接口文档编写"><a class="anchor" href="#4接口文档编写">#</a> 4，接口文档编写</h4><ul><li>API 文档编写：使用 Swagger，Postman 等工具生成 API 文档，详细描述接口的使用方法，参数，返回结果等，方便前端和测试人员参考</li><li>Mock 数据提供：提供接口的 Mock 数据，帮助前端在后端接口尚未完成时进行开发和测试</li></ul><h3 id="自测"><a class="anchor" href="#自测">#</a> 自测</h3><blockquote><p>联调的时候小问题不断，大问题加班</p><p>问题：联调之前前端不知道后端返回过来的数据结构大概是什么样的，调用后端接口时小问题不断，数据不完整，流程走不下去，连一个能正常走下去的测试数据都拿不出来</p></blockquote><blockquote><p>解决方案：自测自测自测！！！，重要的事情说 3 遍，如果自测发现，解决问题耗时为 1，那么联调发现，解决的问题绝对不是 1 + 1 那么简单。一定要有一个人知道数据的返回结构大概是什么样子，保证后端每个判断分支测试跑到位，哪些地方返回值没有是正确的，哪些地方没有返回值是不正确的</p></blockquote><h2 id="快速定位问题"><a class="anchor" href="#快速定位问题">#</a> 快速定位问题</h2><blockquote><p>前端对于接口调用的反馈就是一句话，接口有问题！</p><p>问题：遇到问题啥也不说来，404 找不到接口路径？500 内部服务器错误？还是提示传入参数格式不对，参数名称错误？完全不知道，问题难以定位，简单问题复杂化</p></blockquote><blockquote><p>解决方案：F12 看一下，找不到接口，swagger 页面找一下。返回错误提示截个图，swagger 调用接口路径和参数发一下，后端自行排查</p></blockquote><h2 id="责任边界"><a class="anchor" href="#责任边界">#</a> 责任边界</h2><blockquote><p>后端 A 想把判断放到前端 B 做，前端 B 想把数据格式放到后端 A 做</p><p>问题：A 在忙，就想 B 来做。A 反正也在该类似的，就想 A 把 B 的逻辑写在前端。A 不愿意改，凭什么我改，就想 B 来改。A 觉得 B 菜，拒绝沟通 --&gt; 我不管反正我是好的</p></blockquote><blockquote><p>解决方案：判断尽量放到后端做，数据格式化都能做，这都是常规好分清的。难就难在两人职位一致，没有高低之分，老大只看结果不管谁去做。本身两人可能就是第一次配合不够默契，可能能力也差点互相嫌弃，性子又都比较急，工期紧张催的很急，没有人具体跟进，责任边界不明显谁也指挥不了谁。这个时候一定要划分责任边界，不仅仅是进度，还要到具体细节，甚至是具体到某一个参数</p></blockquote><h2 id="及时反馈"><a class="anchor" href="#及时反馈">#</a> 及时反馈</h2><blockquote><p>后端：接口都没问题，前端：页面都没问题，最终交付 = 加班</p><p>问题：后端：页面画的啥，数据怎么放？前端：数据给的啥？</p></blockquote><blockquote><p>解决问题：后端数据库里面一定要有测试数据，而不是已跑通不报错为目的。前端一定要根据当初约定好的数据格式要求后端，该要数组要数组，该要树结构要树结构。接口没有返回数据一定要反馈前端，不要以不报错为目的，数据感觉不对不要不管不问，甚至于去其他页面 &quot;借&quot; 一些莫无须有的值</p></blockquote><h1 id="真正的联调"><a class="anchor" href="#真正的联调">#</a> 真正的联调</h1><ol><li>前端完成自测</li><li>后端完成自测</li><li>前，后端都明确知道需求方想要什么，一起验证需求的实现，有一定自己的看法</li></ol><h2 id="建议"><a class="anchor" href="#建议">#</a> 建议</h2><h3 id="远离关键路径合理调配时间"><a class="anchor" href="#远离关键路径合理调配时间">#</a> 远离关键路径，合理调配时间</h3><blockquote><p>按时完成任务，留足时间自测，别拖后腿</p></blockquote><h3 id="把握全局进度提高整体效率"><a class="anchor" href="#把握全局进度提高整体效率">#</a> 把握全局进度，提高整体效率</h3><blockquote><p>给了你项目的权利，就要肩负起项目的推动，别任由前后端扯皮浪费时间</p></blockquote><h3 id="积极沟通交流主动推进联调"><a class="anchor" href="#积极沟通交流主动推进联调">#</a> 积极沟通交流，主动推进联调</h3><blockquote><p>主动沟通，项目除了问题不是一个人的事情，是大家的事情，别甩锅，也许这次你的责任比较小，但是你的态度已经决定了很多人对你的态度</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前后端联调总&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#前后端联调总&quot;&gt;#&lt;/a&gt; 前后端联调总&lt;/h1&gt;
&lt;h2 id=&quot;为什么需要联调&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#为什么需要联调&quot;&gt;#&lt;/a&gt; 为什么需要联调&lt;/h2&gt;
&lt;bl</summary>
      
    
    
    
    <category term="essay" scheme="https://pigpigletsgo.github.io/categories/essay/"/>
    
    
    <category term="文章" scheme="https://pigpigletsgo.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>geometry-shp文件导出</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/geometry/geometry-shp%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/geometry/geometry-shp%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA/</id>
    <published>2024-08-09T06:51:33.464Z</published>
    <updated>2024-08-09T09:13:00.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="geometry-shp文件导出"><a class="anchor" href="#geometry-shp文件导出">#</a> geometry-shp 文件导出</h1><p>1，导入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-shapefile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-swing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-geojson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools.jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-jdbc-postgis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-epsg-hsql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-opengis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;geotools.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>2，导入工具类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>supermap<span class="token punctuation">.</span>jczcpt<span class="token punctuation">.</span>pipe<span class="token punctuation">.</span>manage<span class="token punctuation">.</span>planninganalysis<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>data<span class="token punctuation">.</span></span><span class="token class-name">FeatureWriter</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>data<span class="token punctuation">.</span></span><span class="token class-name">Transaction</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shapefile<span class="token punctuation">.</span></span><span class="token class-name">ShapefileDataStore</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shapefile<span class="token punctuation">.</span></span><span class="token class-name">ShapefileDataStoreFactory</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>feature<span class="token punctuation">.</span>simple<span class="token punctuation">.</span></span><span class="token class-name">SimpleFeatureTypeBuilder</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>geotools<span class="token punctuation">.</span>referencing<span class="token punctuation">.</span>crs<span class="token punctuation">.</span></span><span class="token class-name">DefaultGeographicCRS</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>locationtech<span class="token punctuation">.</span>jts<span class="token punctuation">.</span>geom<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>opengis<span class="token punctuation">.</span>feature<span class="token punctuation">.</span>simple<span class="token punctuation">.</span></span><span class="token class-name">SimpleFeature</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>opengis<span class="token punctuation">.</span>feature<span class="token punctuation">.</span>simple<span class="token punctuation">.</span></span><span class="token class-name">SimpleFeatureType</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre> </pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">ZipEntry</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">ZipOutputStream</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre> </pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShapeUtil</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre> </pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="24"></td><td><pre>     * 生成 shape 文件</pre></td></tr><tr><td data-num="25"></td><td><pre>     *</pre></td></tr><tr><td data-num="26"></td><td><pre>     * @param shpPath 生成 shape 文件路径（包含文件名称）</pre></td></tr><tr><td data-num="27"></td><td><pre>     * @param encode  编码</pre></td></tr><tr><td data-num="28"></td><td><pre>     * @param geoType 图幅类型，Point 和 Rolygon</pre></td></tr><tr><td data-num="29"></td><td><pre>     * @param geoms   图幅集合</pre></td></tr><tr><td data-num="30"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write2Shape</span><span class="token punctuation">(</span><span class="token class-name">String</span> shpPath<span class="token punctuation">,</span> <span class="token class-name">String</span> encode<span class="token punctuation">,</span> <span class="token class-name">String</span> geoType<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Geometry</span><span class="token punctuation">></span></span> geoms<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 创建 shape 文件对象</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>shpPath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ShapefileDataStoreFactory</span><span class="token punctuation">.</span><span class="token constant">URLP</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token class-name">ShapefileDataStore</span> ds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ShapefileDataStore</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">ShapefileDataStoreFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createNewDataStore</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token comment">// 定义图形信息和属性信息</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token class-name">SimpleFeatureTypeBuilder</span> tb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleFeatureTypeBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            tb<span class="token punctuation">.</span><span class="token function">setCRS</span><span class="token punctuation">(</span><span class="token class-name">DefaultGeographicCRS</span><span class="token punctuation">.</span><span class="token constant">WGS84</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            tb<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"shapefile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre> </pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"Polygon"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">Polygon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiPolygon"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiPolygon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"Point"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">Point</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiPoint"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiPoint</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"LineString"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">LineString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiLineString"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiLineString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"Geometry中没有该类型："</span> <span class="token operator">+</span> geoType<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre> </pre></td></tr><tr><td data-num="59"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">createSchema</span><span class="token punctuation">(</span>tb<span class="token punctuation">.</span><span class="token function">buildFeatureType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token comment">// 设置编码</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            <span class="token class-name">Charset</span> charset <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">setCharset</span><span class="token punctuation">(</span>charset<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token comment">// 设置 Writer</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token class-name">FeatureWriter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleFeatureType</span><span class="token punctuation">,</span> <span class="token class-name">SimpleFeature</span><span class="token punctuation">></span></span> writer <span class="token operator">=</span> ds<span class="token punctuation">.</span><span class="token function">getFeatureWriter</span><span class="token punctuation">(</span>ds<span class="token punctuation">.</span><span class="token function">getTypeNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Transaction</span><span class="token punctuation">.</span><span class="token constant">AUTO_COMMIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Geometry</span> geom <span class="token operator">:</span> geoms<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token comment">//String type = geom.getGeometryType();</span></pre></td></tr><tr><td data-num="67"></td><td><pre> </pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token comment">// 写下一条</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                <span class="token class-name">SimpleFeature</span> feature <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre> </pre></td></tr><tr><td data-num="71"></td><td><pre>                feature<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> geom<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre> </pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="82"></td><td><pre>     * 生成 shape 文件</pre></td></tr><tr><td data-num="83"></td><td><pre>     *</pre></td></tr><tr><td data-num="84"></td><td><pre>     * @param shpPath  生成 shape 文件路径（包含文件名称）</pre></td></tr><tr><td data-num="85"></td><td><pre>     * @param encode   编码</pre></td></tr><tr><td data-num="86"></td><td><pre>     * @param geoType  图幅类型，Point 和 Rolygon</pre></td></tr><tr><td data-num="87"></td><td><pre>     * @param shpKey   data 中图幅的 key</pre></td></tr><tr><td data-num="88"></td><td><pre>     * @param attrKeys 属性 key 集合</pre></td></tr><tr><td data-num="89"></td><td><pre>     * @param data     图幅和属性集合</pre></td></tr><tr><td data-num="90"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="91"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write2Shape</span><span class="token punctuation">(</span><span class="token class-name">String</span> shpPath<span class="token punctuation">,</span> <span class="token class-name">String</span> encode<span class="token punctuation">,</span> <span class="token class-name">String</span> geoType<span class="token punctuation">,</span> <span class="token class-name">String</span> shpKey<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> attrKeys<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>                <span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>            <span class="token comment">// 创建 shape 文件对象</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>shpPath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ShapefileDataStoreFactory</span><span class="token punctuation">.</span><span class="token constant">URLP</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>            <span class="token class-name">ShapefileDataStore</span> ds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ShapefileDataStore</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">ShapefileDataStoreFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createNewDataStore</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre> </pre></td></tr><tr><td data-num="102"></td><td><pre>            <span class="token comment">// 定义图形信息和属性信息</span></pre></td></tr><tr><td data-num="103"></td><td><pre>            <span class="token class-name">SimpleFeatureTypeBuilder</span> tb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleFeatureTypeBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>            tb<span class="token punctuation">.</span><span class="token function">setCRS</span><span class="token punctuation">(</span><span class="token class-name">DefaultGeographicCRS</span><span class="token punctuation">.</span><span class="token constant">WGS84</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>            tb<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"shapefile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="106"></td><td><pre> </pre></td></tr><tr><td data-num="107"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"Polygon"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">Polygon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiPolygon"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiPolygon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"Point"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">Point</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiPoint"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiPoint</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"LineString"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="116"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">LineString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"MultiLineString"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>geoType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="118"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> <span class="token class-name">MultiLineString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="119"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"Geometry中没有该类型："</span> <span class="token operator">+</span> geoType<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="122"></td><td><pre> </pre></td></tr><tr><td data-num="123"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> field <span class="token operator">:</span> attrKeys<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="124"></td><td><pre>                tb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="125"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="126"></td><td><pre> </pre></td></tr><tr><td data-num="127"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">createSchema</span><span class="token punctuation">(</span>tb<span class="token punctuation">.</span><span class="token function">buildFeatureType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="128"></td><td><pre>            <span class="token comment">// 设置编码</span></pre></td></tr><tr><td data-num="129"></td><td><pre>            <span class="token class-name">Charset</span> charset <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="130"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">setCharset</span><span class="token punctuation">(</span>charset<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="131"></td><td><pre>            <span class="token comment">// 设置 Writer</span></pre></td></tr><tr><td data-num="132"></td><td><pre>            <span class="token class-name">FeatureWriter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleFeatureType</span><span class="token punctuation">,</span> <span class="token class-name">SimpleFeature</span><span class="token punctuation">></span></span> writer <span class="token operator">=</span> ds<span class="token punctuation">.</span><span class="token function">getFeatureWriter</span><span class="token punctuation">(</span>ds<span class="token punctuation">.</span><span class="token function">getTypeNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Transaction</span><span class="token punctuation">.</span><span class="token constant">AUTO_COMMIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="133"></td><td><pre>            <span class="token comment">// 写入文件信息</span></pre></td></tr><tr><td data-num="134"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="135"></td><td><pre>                <span class="token class-name">SimpleFeature</span> feature <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="136"></td><td><pre>                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> row <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="137"></td><td><pre>                <span class="token class-name">Geometry</span> geom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Geometry</span><span class="token punctuation">)</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>shpKey<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="138"></td><td><pre>                feature<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"the_geom"</span><span class="token punctuation">,</span> geom<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="139"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> row<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="140"></td><td><pre>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>shpKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="141"></td><td><pre>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="142"></td><td><pre>                            feature<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="143"></td><td><pre>                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="144"></td><td><pre>                            feature<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="145"></td><td><pre>                        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="146"></td><td><pre>                    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="147"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="148"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="149"></td><td><pre>            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="150"></td><td><pre>            writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="151"></td><td><pre>            ds<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="152"></td><td><pre> </pre></td></tr><tr><td data-num="153"></td><td><pre>            <span class="token comment">// 添加到压缩文件</span></pre></td></tr><tr><td data-num="154"></td><td><pre>            <span class="token comment">//zipShapeFile(shpPath);</span></pre></td></tr><tr><td data-num="155"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="156"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="158"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="159"></td><td><pre> </pre></td></tr><tr><td data-num="160"></td><td><pre> </pre></td></tr><tr><td data-num="161"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="162"></td><td><pre>     * 压缩 shape 文件</pre></td></tr><tr><td data-num="163"></td><td><pre>     *</pre></td></tr><tr><td data-num="164"></td><td><pre>     * @param shpPath shape 文件路径（包含 shape 文件名称）</pre></td></tr><tr><td data-num="165"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="166"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">zipShapeFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> shpPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="167"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="168"></td><td><pre>            <span class="token class-name">File</span> shpFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>shpPath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="169"></td><td><pre>            <span class="token class-name">String</span> shpRoot <span class="token operator">=</span> shpFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="170"></td><td><pre>            <span class="token class-name">String</span> shpName <span class="token operator">=</span> shpFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> shpFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="171"></td><td><pre> </pre></td></tr><tr><td data-num="172"></td><td><pre>            <span class="token class-name">String</span> zipPath <span class="token operator">=</span> shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".zip"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="173"></td><td><pre>            <span class="token class-name">File</span> zipFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="174"></td><td><pre>            <span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="175"></td><td><pre>            <span class="token class-name">ZipOutputStream</span> zipOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>zipFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="176"></td><td><pre>            <span class="token comment">//zip 的名称为</span></pre></td></tr><tr><td data-num="177"></td><td><pre>            zipOut<span class="token punctuation">.</span><span class="token function">setComment</span><span class="token punctuation">(</span>shpName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="178"></td><td><pre>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shpFiles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="179"></td><td><pre>                    shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".dbf"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="180"></td><td><pre>                    shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".prj"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="181"></td><td><pre>                    shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".shp"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="182"></td><td><pre>                    shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".shx"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="183"></td><td><pre>                    shpRoot <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> shpName <span class="token operator">+</span> <span class="token string">".fix"</span></pre></td></tr><tr><td data-num="184"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="185"></td><td><pre> </pre></td></tr><tr><td data-num="186"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shpFiles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="187"></td><td><pre>                <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>shpFiles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="188"></td><td><pre>                input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="189"></td><td><pre>                zipOut<span class="token punctuation">.</span><span class="token function">putNextEntry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ZipEntry</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="190"></td><td><pre>                <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="191"></td><td><pre>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="192"></td><td><pre>                    zipOut<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="193"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="194"></td><td><pre>                input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="195"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="196"></td><td><pre>            zipOut<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="197"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="198"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="199"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="200"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="201"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>supermap<span class="token punctuation">.</span>jczcpt<span class="token punctuation">.</span>pipe<span class="token punctuation">.</span>manage<span class="token punctuation">.</span>planninganalysis<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>locationtech<span class="token punctuation">.</span>jts<span class="token punctuation">.</span>geom<span class="token punctuation">.</span></span><span class="token class-name">Geometry</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>locationtech<span class="token punctuation">.</span>jts<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ParseException</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>locationtech<span class="token punctuation">.</span>jts<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">WKTReader</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>locationtech<span class="token punctuation">.</span>jts<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">WKTWriter</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="9"></td><td><pre> * @ClassName WKTUtil</pre></td></tr><tr><td data-num="10"></td><td><pre> * @Description @TODO</pre></td></tr><tr><td data-num="11"></td><td><pre> * @Date 2019/11/18 12:01</pre></td></tr><tr><td data-num="12"></td><td><pre> * @Version v1.0</pre></td></tr><tr><td data-num="13"></td><td><pre> **/</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WKTUtil</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre> </pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">geomToWkt</span><span class="token punctuation">(</span><span class="token class-name">Geometry</span> geometry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token class-name">String</span> wkt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token class-name">WKTWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WKTWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        wkt <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>geometry<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">return</span> wkt<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre> </pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Geometry</span> <span class="token function">wktToGeom</span><span class="token punctuation">(</span><span class="token class-name">String</span> wkt<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token class-name">Geometry</span> geometry <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token class-name">WKTReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WKTReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            geometry <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>wkt<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParseException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token comment">//geometry.setSRID(4326);</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token keyword">return</span> geometry<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>导出 web 下载</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre>     * 将管段数据导出为 shp 文件</pre></td></tr><tr><td data-num="3"></td><td><pre>     * @param</pre></td></tr><tr><td data-num="4"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="5"></td><td><pre>     * @author dkx</pre></td></tr><tr><td data-num="6"></td><td><pre>     * @date 2024/8/8 23:36</pre></td></tr><tr><td data-num="7"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/exportShp"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">"将管段数据导出为shp文件"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ids"</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">"id集合"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportShp</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"ids"</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> ids<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token class-name">String</span> val <span class="token operator">=</span> <span class="token function">formatListToString</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token string">"\'"</span><span class="token punctuation">,</span> <span class="token string">"\'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasPipeSection</span><span class="token punctuation">></span></span> sectionGeo <span class="token operator">=</span> facGasPipeSectionMapper<span class="token punctuation">.</span><span class="token function">getSectionGeo</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>sectionGeo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span>sectionGeo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Geometry</span><span class="token punctuation">></span></span> geometryList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                <span class="token class-name">Geometry</span> geom <span class="token operator">=</span> <span class="token class-name">WKTUtil</span><span class="token punctuation">.</span><span class="token function">wktToGeom</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                geometryList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>geom<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">// 临时生成 Shape 文件并压缩为 zip</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token class-name">String</span> tempDir <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.io.tmpdir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token class-name">String</span> shapeFilePath <span class="token operator">=</span> tempDir <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">"ceshi2222.shp"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token class-name">String</span> zipFilePath <span class="token operator">=</span> tempDir <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">"ceshi2222.zip"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token comment">// 写入 Shape 文件并压缩为 ZIP</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token class-name">ShapeUtil</span><span class="token punctuation">.</span><span class="token function">write2Shape</span><span class="token punctuation">(</span>shapeFilePath<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">,</span> <span class="token string">"Polygon"</span><span class="token punctuation">,</span> geometryList<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token class-name">ShapeUtil</span><span class="token punctuation">.</span><span class="token function">zipShapeFile</span><span class="token punctuation">(</span>shapeFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 确保文件正确生成</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token class-name">File</span> zipFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>zipFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>zipFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token comment">// 设置响应头，提示浏览器下载文件</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/zip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment; filename=ceshi2222.zip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                response<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> zipFile<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>                <span class="token comment">// 将文件写入响应流</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                     <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>zipFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>                    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                    <span class="token keyword">int</span> bytesRead<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>bytesRead <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token comment">// 删除临时文件</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">deleteIfExists</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>shapeFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">deleteIfExists</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>zipFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span><span class="token constant">SC_INTERNAL_SERVER_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Error generating the ZIP file."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            <span class="token comment">// 处理无数据的情况</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span><span class="token constant">SC_NO_CONTENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FacGasPipeSection</span><span class="token punctuation">></span></span> sectionGeo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FacGasPipeSection</span> dwdProFacGasPipeSection <span class="token operator">:</span> sectionGeo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dwdProFacGasPipeSection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>dwdProFacGasPipeSection<span class="token punctuation">.</span><span class="token function">getGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                    <span class="token comment">// 解析 JSON 字符串</span></pre></td></tr><tr><td data-num="72"></td><td><pre>                    <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>dwdProFacGasPipeSection<span class="token punctuation">.</span><span class="token function">getGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>                    <span class="token comment">// 获取 geometry 对象</span></pre></td></tr><tr><td data-num="74"></td><td><pre>                    <span class="token class-name">JSONObject</span> geometry <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"geometry"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                    <span class="token comment">// 获取 coordinates 数组</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                    <span class="token class-name">JSONArray</span> coordinates <span class="token operator">=</span> geometry<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">"coordinates"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                    <span class="token comment">// 将 coordinates 数组转换为字符串</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                    <span class="token class-name">String</span> result <span class="token operator">=</span> coordinates<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token keyword">return</span> list<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="85"></td><td><pre></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="87"></td><td><pre>     * 将列表转换为以指定分隔符分隔的字符串，并在每个元素之前和之后添加指定的前缀和后缀。</pre></td></tr><tr><td data-num="88"></td><td><pre>     * @param list 要转换的列表</pre></td></tr><tr><td data-num="89"></td><td><pre>     * @param delimiter 分隔符</pre></td></tr><tr><td data-num="90"></td><td><pre>     * @param prefix 每个元素的前缀</pre></td></tr><tr><td data-num="91"></td><td><pre>     * @param suffix 每个元素的后缀</pre></td></tr><tr><td data-num="92"></td><td><pre>     * @return 格式化后的字符串</pre></td></tr><tr><td data-num="93"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="94"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">String</span> <span class="token function">formatListToString</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> list<span class="token punctuation">,</span> <span class="token class-name">String</span> delimiter<span class="token punctuation">,</span> <span class="token class-name">String</span> prefix<span class="token punctuation">,</span> <span class="token class-name">String</span> suffix<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-></span> prefix <span class="token operator">+</span> item<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span>delimiter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;geometry-shp文件导出&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#geometry-shp文件导出&quot;&gt;#&lt;/a&gt; geometry-shp 文件导出&lt;/h1&gt;
&lt;p&gt;1，导入依赖&lt;/p&gt;
&lt;figure class=&quot;highlight xml</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="geometry" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/geometry/"/>
    
    
    <category term="计算机学科 - blog - geometry" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91-blog-geometry/"/>
    
  </entry>
  
  <entry>
    <title>maven中geo tools的引入 - maven的repository与mirror</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/maven/maven%E4%B8%ADgeotools%E7%9A%84%E5%BC%95%E5%85%A5maven%E7%9A%84repository%E4%B8%8Emirror/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/maven/maven%E4%B8%ADgeotools%E7%9A%84%E5%BC%95%E5%85%A5maven%E7%9A%84repository%E4%B8%8Emirror/</id>
    <published>2024-08-09T06:50:25.886Z</published>
    <updated>2024-08-09T06:51:11.938Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven中geo-tools的引入-maven的repository与mirror"><a class="anchor" href="#maven中geo-tools的引入-maven的repository与mirror">#</a> maven 中 geo tools 的引入 - maven 的 repository 与 mirror</h1><h2 id="maven中geo-tools的引入-maven的repository与mirror-2"><a class="anchor" href="#maven中geo-tools的引入-maven的repository与mirror-2">#</a> maven 中 geo tools 的引入 - maven 的 repository 与 mirror</h2><h2 id="一问题描述"><a class="anchor" href="#一问题描述">#</a> 一，问题描述</h2><p>起因是这样的，我想要引入 GeoTools 包，却发现即使按照官方 quick start 来操作，也没有引入成功，始终是找不到 jar 包，百思不得其解。</p><p>按照官网和谷歌百度搜索的结果看<br />要使用 GeoTools，首先引入需要的 GeoTools 的模块。GeoTools 有很多模块，如 shapefile，csv 等。<br />这个是我要引入的 geojson 模块</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.geotools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gt-geojson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>19.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>然后添加 geo tools 官方的仓库</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Snapshot Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/snapshot/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>但就是找不到 jar 包</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809142140245.png" alt="image-20240809142140245" /></p><p>dependencies 也是报错</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809142410052.png" alt="image-20240809142410052" /></p><p>后来尝试将仓库以镜像的方式写入到 settings.xml 之中，结果发现可行了。<strong>（当然后续发现这种方法是错误的解决方案，正确的做法在后面）</strong></p><h2 id="二原理说明"><a class="anchor" href="#二原理说明">#</a> 二，原理说明</h2><p>出错原因： 没有理解清楚 maven 的 repository 与 mirror 的关系，错误地将阿里云镜像的 mirrorOf 参数值设置为 *（星号，通配符，表示匹配全部仓库）（正确的参数值为 central）</p><p>为了让各位更好地理解这个问题，有必要占用一些篇幅介绍一下 maven 的基本信息和相关概念</p><h3 id="21-maven的主要功能"><a class="anchor" href="#21-maven的主要功能">#</a> 2.1 maven 的主要功能</h3><p>以下描述摘自维基百科</p><blockquote><p>Maven 是一个主要用于 Java 项目的构建自动化工具。Maven 还可以用来构建和管理使用 c#、Ruby、Scala 和其他语言编写的项目。Maven 项目由 Apache 软件基金会托管，它以前是 Jakarta 项目的一部分。</p></blockquote><blockquote><p>Maven 解决了构建软件的两个方面：如何构建软件及其依赖关系。</p></blockquote><p>maven 的主要功能有两个：一个是解决<strong>项目的构建</strong>：包括<strong>编译（build）</strong>、<strong>测试（test）</strong>、** 打包（package）<strong>和</strong>部署（deploy）** 等，maven 使用生命周期的概念描述这一过程，并通过插件实现和控制项目构建各个阶段的执行。</p><p>下图为完整的 maven 生命周期</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809143214955.png" alt="image-20240809143214955" /></p><p>maven 的另一个功能就是解决项目之间的依赖关系并从仓库 (repository) 自动下载需要的 jar 包。maven 使用项目对象模型 (Project Object Model，POM) 实现对项目的抽象和管理。</p><blockquote><p>项目对象模型 (POM) 提供了单个项目的所有配置。一般配置包括项目的名称（name）、所有者（owner）及其对其他项目的依赖关系（dependencies）。还可以配置构建过程的各个阶段，这些阶段以插件（plugins）的形式实现。</p></blockquote><blockquote><p>默认情况下，所有的 POM 都继承自超级 POM。超级 POM 提供默认配置，比如默认源目录、默认插件等等。</p></blockquote><p>maven 将约定大于配置作为其设计理念，约定一一些默认的配置，如项目的默认结构，对某个项目坐标，依赖和插件的规定的配置方法 (IDE 通常会帮助检查配置项的正确性) 等。</p><p>下图表示默认的 maven 项目 目录</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809143516603.png" alt="image-20240809143516603" /></p><h3 id="22-仓库"><a class="anchor" href="#22-仓库">#</a> 2.2 仓库</h3><p>所有的 maven 项目都存储在服务器上，改服务器被抽象为仓库 (repository)，当用户需要某些 jar 包时就可以从仓库中下载。</p><p>maven 通过超级 POM 机制配置了默认的仓库。由于所有的 POM 都隐式地继承自超级 POM，超级仓库中配置了中央仓库，因此所有的项目默认配置了中央仓库。</p><blockquote><p>对于 Maven3，超级 POM 在文件 % MAVEN_HOME%/lib/maven-model-builder-x.x.x.jar 中的<br /> org/apache/maven/model/pom-4.0.0.xml 路径下、</p><p>对于 Maven2，超级 POM 在文件 % MAVEN_HOME%/lib/maven-x.x.x-uber.jar 中的<br /> org/apache/maven/project/pom-4.0.0.xml 目录下。</p></blockquote><p>默认配置的部分内容如下：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Central Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.maven.apache.org/maven2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Central Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.maven.apache.org/maven2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">></span></span>never<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>我们可以自己添加仓库，如我添加了提供 GeoTools 相关包的仓库，id 为 <code>osgeo</code> ，url 地址为 <code>https://repo.osgeo.org/repository/release/</code> 。</p><p>在项目的 pom.xml 中加入仓库配置：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="23-镜像"><a class="anchor" href="#23-镜像">#</a> 2.3 镜像</h3><p>由于 maven 的中央仓库在国外，国内访问速度较慢，一般我们采用配置镜像（mirror）的方式从国内的镜像服务器中下载资源。</p><p>maven 根据 setting.xml 文件中配置的镜像拦截发往原仓库的请求，并将其转发到镜像仓库。</p><p>即：当一个镜像的 mirrodOf 参数与某个仓库的 id 参数相匹配，就向该镜像请求资源，否则向原仓库请求资源。</p><p>阿里云镜像是常用的 maven 镜像之一，其镜像了中央仓库的所有资源。</p><p>setting.xml 文件中阿里云镜像的配置如下：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 阿里云镜像 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>在<strong> setting.xml 文件</strong>中，我们设置阿里云镜像的 <code>mirrorOf</code>  属性为 <code>central</code> ，以此去匹配 <code>id</code>  属性为 <code>central</code>  的中央仓库。这样所有对中央仓库发起的请求，都会被转发给阿里云镜像，大大提高了资源的下载速度。</p><h3 id="24-仓库与镜像的关系"><a class="anchor" href="#24-仓库与镜像的关系">#</a> 2.4 仓库与镜像的关系</h3><p>当我们配置了多个仓库和多个镜像时，maven 执行的策略为：</p><p>1，maven 根据镜像配置文件（setting.xml）自上至下地依次查看所有的镜像，对每一个仓库依次进行匹配，并使用第一个匹配上的镜像。被镜像匹配的仓库，仓库的 url 被替换为镜像的 url，没有匹配的仓库，url 不变。</p><p>2，查询各仓库是否包请求的资源（项目），如都没有，则报错（如未找到），否则从第一个匹配上的仓库拉取资源。<br /><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809143954175.png" alt="image-20240809143954175" /></p><h2 id="三解决方案与小技巧"><a class="anchor" href="#三解决方案与小技巧">#</a> 三，解决方案与小技巧</h2><p>1，不是所有的 jar 包都被包含在 maven 中央仓库中，如果中央仓库没有该资源，就需要配置第三方仓库（也可以理解为别人的公开私服）。maven 中央仓库不包含 GeoTools 的相关资源，因此需要单独配置 OSGeo Release Repository 仓库。</p><p>2，阿里镜像和清华镜像只提供对中央仓库的资源镜像，其 mirrorOf 属性的值只能设置为 central，不要设置为 * 。如果设置为 *，则所有仓库的 url 都会被替换，对于本文的情况，就是本来应当发往 OSGeo Release Repository 仓库的请求被发往阿里云镜像，而阿里云镜像不包含 GeoTools 的资源，自然是找不到了。正确的做法是每个镜像的 mirrorOf 属性应与该镜像对应的仓库的 id 属性保持一致。</p><p>3，还有一种骚操作（错误操作），就是在 setting.xml 将仓库作为镜像配置进去。由于 maven 的镜像机制，仓库的 url 会被替换为第一个匹配上的镜像，那么在阿里云镜像之前添加一个（伪）仓库镜像，也可以解决问题。但是这个方法肯定是错误用法（但是很骚）。</p><h3 id="错误配置"><a class="anchor" href="#错误配置">#</a> 错误配置</h3><p>setting.xml</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 阿里云镜像 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 正确的属性为 central --></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>或者</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- osgeo（伪）镜像 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>mirror-osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Mirror Osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">&lt;!-- 阿里云镜像 --></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 正确的属性为 central --></span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="正确配置"><a class="anchor" href="#正确配置">#</a> 正确配置</h3><p>setting.xml</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 阿里云镜像 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>osgeo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>OSGeo Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.osgeo.org/repository/release/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h2 id="四如何知道是否需要配置仓库"><a class="anchor" href="#四如何知道是否需要配置仓库">#</a> 四，如何知道是否需要配置仓库？</h2><p>在 maven 的官网可以查询相关项目的信息，<strong>项目页面的标签栏标识了存储了该项目的仓库</strong>，只要是存储在中央仓库的项目都会标识 <code>Central</code>  标签，此时就不用配置新的仓库。</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809144253604.png" alt="image-20240809144253604" /></p><p>如果标签栏中没有标识 Central 仓库，说明中央仓库不包含该项目，需要配置新的仓库。<br />如对于 GeoTools 包，从图中我们可知，由于 Central 仓库不包含该包，我们就需要从其标签栏标识的 GeoSolutions 仓库、Geomajas 仓库、Boundless 仓库或 OSGeo 仓库拉取 GeoTools 包的资源<br /><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809144310027.png" alt="image-20240809144310027" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;maven中geo-tools的引入-maven的repository与mirror&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#maven中geo-tools的引入-maven的repository与mirror&quot;&gt;#&lt;/a&gt; maven 中 geo t</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="maven" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/maven/"/>
    
    
    <category term="计算机学科 - blog - maven" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91-blog-maven/"/>
    
  </entry>
  
  <entry>
    <title>修改电脑用户名为英文（win11、win10修改用户名）</title>
    <link href="https://pigpigletsgo.github.io/bug/windows/%E4%BF%AE%E6%94%B9%E7%94%B5%E8%84%91%E7%94%A8%E6%88%B7%E5%90%8D%E4%B8%BA%E8%8B%B1%E6%96%87/"/>
    <id>https://pigpigletsgo.github.io/bug/windows/%E4%BF%AE%E6%94%B9%E7%94%B5%E8%84%91%E7%94%A8%E6%88%B7%E5%90%8D%E4%B8%BA%E8%8B%B1%E6%96%87/</id>
    <published>2024-08-09T01:50:36.298Z</published>
    <updated>2024-08-09T01:51:58.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改电脑用户名为英文win11-win10修改用户名"><a class="anchor" href="#修改电脑用户名为英文win11-win10修改用户名">#</a> 修改电脑用户名为英文（win11、win10 修改用户名）</h1><h2 id="第一步"><a class="anchor" href="#第一步">#</a> 第一步</h2><p>开启管理员账户。以管理员身份运行 cmd</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093150220.png" alt="image-20240809093150220" /></p><p>输入以下命令：</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>net user administrator /active:yes</pre></td></tr></table></figure><p>此时在你的开始中会多一个 管理员账户，如果没有也不用急，你点击切换用户后应该可以看到多出来的管理员账户的</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093243690.png" alt="image-20240809093243690" /></p><p>我们切换到管理员账户中去</p><h2 id="第二步"><a class="anchor" href="#第二步">#</a> 第二步</h2><p>完成第一步后并不需要重启电脑。只需要先把当前用户 (需要修改的用户) 注销（注销之前要保证里面的重要文件已经保存好了，最好就是开机之后不要运行任何东西，直接执行第一步的操作），然后在登录页面选择 Administrator 身份登录。</p><p>​    此时找到 C:\Users 下面，更改直接的中文名称的用户文件夹</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093409723.png" alt="image-20240809093409723" /></p><p>这次就别再改成中文了，直接改成英文名。（上图我是已经修改好的了）</p><blockquote><p>如果 把当前用户 (需要修改的用户) 注销了但是还是依旧提示进程被使用，那么就需要进行下面操作。</p></blockquote><p>修改用户名的时候可能会出现 “文件夹或里面的文件正在被占用，无法更改” 的问题</p><p>此时也不需要重启电脑啥的，网上有用的博客很少。这是因为笔记本里某些应用依旧使用着你这个用户目录下的文件，只需要把这个进程关掉就可以了。具体方法如下</p><p>首先：esc+shift+ctrl 进入任务管理器，然后点击性能，再到性能页面下面找到资源监视器</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093732516.png" alt="image-20240809093732516" /></p><p>在这个页面的 CPU 选项下，找到 “关联的句柄”，然后搜索需要重命名的文件夹，再右键结束进程即可，这样子就能重命名你的用户文件夹了</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093757206.png" alt="image-20240809093757206" /></p><h2 id="第三步"><a class="anchor" href="#第三步">#</a> 第三步</h2><p>修改注册表</p><p>win+r 打开运行 输入 regedit</p><p>进入注册表编辑器</p><p>找到这个目录：</p><blockquote><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList，</p></blockquote><p>然后选择尾巴一长串的对应文件夹，依次点击，找到包含 C:\Users\ 冤种的路径，将冤种替换为 duan，这只是一个示范，具体看你怎么改，反正就是英文替换原中文名</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093845274.png" alt="image-20240809093845274" /></p><p>在 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Usermanager</code>  目录下做出同样的修改</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809093910270.png" alt="image-20240809093910270" /></p><h2 id="第四步"><a class="anchor" href="#第四步">#</a> 第四步</h2><p>关闭管理员账户</p><p>重复第一步的操作，只不过是把后面的 yes 改成 no</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>net user administrator /active:no</pre></td></tr></table></figure><h2 id="第五步切换到要修改的用户"><a class="anchor" href="#第五步切换到要修改的用户">#</a> 第五步：切换到要修改的用户</h2><p>修改环境变量</p><p>此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量</p><p>进入环境变量后，选择用户变量，将所有原来的中文用户名改成你刚刚修改的英文名</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809094005956.png" alt="image-20240809094005956" /></p><h2 id="第六步"><a class="anchor" href="#第六步">#</a> 第六步</h2><p>修改用户名</p><p>win+r 打开运行，输入:control userpasswords2 点击确定，进入【用户账户】界面，选择要更改的账户，点击【属性】，修改此时的中文用户名即可，修改后记得点击应用。</p><p>然后注销当前账号，重启计算机，重新登录即可。</p><p>修改完后 onedrive 账号将不可用，会报路径错误，但是没有关系，咱们先将 Onedrive 账户退出，看接下来的第七步操作。</p><p>此时也可以通过 cmd 输入 set username 查看当前用户名是否已经改变</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240809094147663.png" alt="image-20240809094147663" /></p><h2 id="第七步重要"><a class="anchor" href="#第七步重要">#</a> 第七步：重要！！！</h2><p>软件路径修复</p><p>因为修改了用户文件名，很多软件的存储路径依旧包含你这个旧的中文用户名。因此我们需要修复。特别是在前面进行了修改步骤之后，你重启计算机之后，桌面只剩下此电脑和回收站了。而且还会报路径错误。</p><p><strong>修改的办法有两个 - 任选其一就行</strong></p><p>1，重复第一步，在 cmd 中键入</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre>mklink /d C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>老用户名 C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>新用户名</pre></td></tr></table></figure><p>点击确定，即可。此举是将 C:\Users\ 老用户名 的路径全部挂钩到 C:\Users\ 新用户名 上。因此你重新打开 C 盘的用户目录下会发现老用户名文件夹下多了一个超级链接标识</p><p>2，使用系统自带的修复程序 (repair)，软件设置等选项可能包含修复、软件卸载或安装程序运行时可能弹出修复选项</p><p><strong>推荐使用第一个方法</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;修改电脑用户名为英文win11-win10修改用户名&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#修改电脑用户名为英文win11-win10修改用户名&quot;&gt;#&lt;/a&gt; 修改电脑用户名为英文（win11、win10 修改用户名）&lt;/h1&gt;
&lt;h2 id=&quot;第一</summary>
      
    
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/categories/bug/"/>
    
    <category term="windows" scheme="https://pigpigletsgo.github.io/categories/bug/windows/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="windows" scheme="https://pigpigletsgo.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Idea插件推荐</title>
    <link href="https://pigpigletsgo.github.io/tools/idea/Idea%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>https://pigpigletsgo.github.io/tools/idea/Idea%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</id>
    <published>2024-08-02T00:58:32.000Z</published>
    <updated>2024-08-02T00:58:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idea插件推荐"><a class="anchor" href="#idea插件推荐">#</a> Idea 插件推荐</h1><ol><li>AceJump</li><li>Atom Material Icons</li><li>Free MyBatis Tool</li><li>Grep Console</li><li>Idea Vim</li><li>IdeaVim-EsayMotion</li><li>IdeaVimExtension</li><li>Maven Helper</li><li>PMD</li><li>RestfulTool</li><li>PlantUML Integration</li><li>Rainbow Brackets</li><li>JRebel and XRebel</li><li>EditStarters</li><li>GenerateAllSetter</li><li>Java Bean to Json</li><li>GsonFormatPlus</li><li>sequenceDiagram</li><li>Quick Request</li><li>Bean Assistant</li><li>Rename Files Refactor Batch</li><li>amplicode<br />PS：教程 <span class="exturl" data-url="aHR0cHM6Ly9hbXBsaWNvZGUucnUvZG9jdW1lbnRhdGlvbi9pbnN0YWxsYXRpb24tZ3VpZGUtaW50ZWxsaWov">https://amplicode.ru/documentation/installation-guide-intellij/</span></li><li>Code Reading Note</li><li>CodeGlance</li><li>CamelCase</li><li>Extra ToolWindow Colorful Icons</li><li>Background Image Plus</li><li>jclasslib Bytecode Viewer</li><li>TONGYI Lingma - Your AI Coding Assistant.​ Type less,​ Code more.（通义灵码）</li><li>MyBatisX</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;idea插件推荐&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#idea插件推荐&quot;&gt;#&lt;/a&gt; Idea 插件推荐&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;AceJump&lt;/li&gt;
&lt;li&gt;Atom Material Icons&lt;/li&gt;
&lt;li&gt;Free MyBati</summary>
      
    
    
    
    <category term="tools" scheme="https://pigpigletsgo.github.io/categories/tools/"/>
    
    <category term="idea" scheme="https://pigpigletsgo.github.io/categories/tools/idea/"/>
    
    
    <category term="idea" scheme="https://pigpigletsgo.github.io/tags/idea/"/>
    
    <category term="tools" scheme="https://pigpigletsgo.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>java压缩与解压文件-加密与解密文件</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/java-io/java%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6-%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E6%96%87%E4%BB%B6/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/java-io/java%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6-%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E6%96%87%E4%BB%B6/</id>
    <published>2024-07-31T10:35:44.000Z</published>
    <updated>2024-07-31T10:35:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java压缩与解压文件-加密与解密文件"><a class="anchor" href="#java压缩与解压文件-加密与解密文件">#</a> java 压缩与解压文件 - 加密与解密文件</h1><h2 id="java-keygenerator加密的概述"><a class="anchor" href="#java-keygenerator加密的概述">#</a> Java KeyGenerator 加密的概述：</h2><p>AES/CBC/PKCS5Padding 是一种常见的加密配置组合，用于加密和解密数据。以下是每个部分的详细解释</p><h3 id="aesadvanced-encryption-standard"><a class="anchor" href="#aesadvanced-encryption-standard">#</a> AES(Advanced Encryption Standard)</h3><p>AES (高级加密标准) 是一种对称加密算法，用于加密和解密数据。它支持三种不同的密钥长度：</p><blockquote><p>128 位，192 位和 256 位。AES 是一种分组密码，每次处理固定长度的数据块 (128 位，即 16 字节)</p></blockquote><h3 id="cbccipher-block-chaining"><a class="anchor" href="#cbccipher-block-chaining">#</a> CBC(Cipher Block Chaining)</h3><p>CBC (密码分组链接) 是一种分组密码的工作模式。在 CBC 模式中，每个明文块在加密之前会与前一个密文块进行异或 (XOR) 操作。这使得相同的明文块在加密后会生成不同的密文块，从而增强了安全性。</p><ul><li>初始向量 (IV)：CBC 模式需要一个初始向量 (IV) 来开始第一个明文块的加密过程。IV 必须是唯一且不可预测的，但不需要保密。IV 的长度与分组大小相同 (对于 AES 是 16 字节)</li><li>加密过程：第一个明文块与 IV 进行异或后加密，生成第一个密文块。第二个明文块与第一个密文块异或后加密，生成第二个密文块，以此类推</li></ul><h3 id="pkcs5padding"><a class="anchor" href="#pkcs5padding">#</a> PKCS5Padding</h3><p>PKCS5Padding 是一种填充 (Padding) 方案，用于确保待加密数据的长度是分组大小的整数倍。</p><p>AES 是一种分组密码，需要数据块的长度是分组大小的整数倍 (16 字节)。如果待加密数据的长度不是 16 字节的整数倍，就需要填充。</p><ul><li>填充规则：PKCS5Padding 规定每个填充字节的值等于填充的字节数。例如，如果需要填充 4 个字节，则每个填充字节的值等于填充的字节数。例如，如果需要填充 4 个字节，则每个填充字节的值为 <code>0x04</code> 。如果需要填充 1 个字节，则填充值为 <code>0x01</code> 。如果数据长度正好是分组大小的整数倍，则添加一个完整的填充块 (16 字节，每个字节值为 <code>0x10</code> )</li></ul><h3 id="结合在一起"><a class="anchor" href="#结合在一起">#</a> 结合在一起</h3><p>AES/CBC/PKCS5Padding 结合使用时，数据先经过填充 (如果需要)，然后分块。每个数据块在加密前会与前一个密文块异或，增强了安全性</p><pre><code>明文 -&gt; 填充 -&gt; 分块 -&gt; AES加密 (使用CBC模式和IV)</code></pre><h3 id="总结"><a class="anchor" href="#总结">#</a> 总结：</h3><p>AES/CBC/PKCS5Padding 是一种安全的加密方案，适用于许多应用场景。AES 提供强大的加密能力，CBC 模式通过链式加密提高安全性，PKCS5Padding 确保数据块的长度适合加密处理。</p><h2 id="代码如下"><a class="anchor" href="#代码如下">#</a> 代码如下：</h2><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">IvParameterSpec</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">SecretKeySpec</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Files</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">SecureRandom</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">ZipEntry</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">ZipInputStream</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">ZipOutputStream</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="15"></td><td><pre> * zipIO 学习</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @author: 窦凯欣</pre></td></tr><tr><td data-num="18"></td><td><pre> * @date: 2024-07-30 11:20</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"all"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">// 加密算法</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ALGORITHM</span> <span class="token operator">=</span> <span class="token string">"AES"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token comment">// 转型</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TRANSFORMATION</span> <span class="token operator">=</span> <span class="token string">"AES/CBC/PKCS5Padding"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token comment">// 加密秘钥大小</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">KEY_SIZE</span> <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">IV_SIZE</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token comment">// 压缩文件</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token string">"D:\\决策支持平台\\五年规划报告模板"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token class-name">String</span> descName <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\刚压缩.zip"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zipFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> descName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"压缩文件完毕！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token comment">// 解压缩文件</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token class-name">String</span> zipFileName <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\刚压缩.zip"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token class-name">String</span> descFileName <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>         <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unzipFile</span><span class="token punctuation">(</span>zipFileName<span class="token punctuation">,</span> descFileName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件解压缩完毕！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token comment">// 生成密钥</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token class-name">SecretKey</span> secretKey <span class="token operator">=</span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">// 将密钥保存到磁盘</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token function">saveKey</span><span class="token punctuation">(</span>secretKey<span class="token punctuation">,</span> <span class="token string">"D:\\secret.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token comment">// 生成 IV</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token class-name">IvParameterSpec</span> iv <span class="token operator">=</span> <span class="token function">generateIv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token comment">// IV 保存到磁盘</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token function">saveIv</span><span class="token punctuation">(</span>iv<span class="token punctuation">,</span> <span class="token string">"D:\\iv.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密钥与IV生成并保存磁盘完毕，请做检查。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>        <span class="token comment">// 加密文件</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token class-name">String</span> fileNamePwd <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\五年规划报告模板\\0-天然气管网业务“XX五”发展规划-发展基础（1-43）.docx"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token class-name">String</span> descFileNamePwd <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\加密文件.dat"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">BugFixes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encryptFile</span><span class="token punctuation">(</span>secretKey<span class="token punctuation">,</span> iv<span class="token punctuation">,</span> fileNamePwd<span class="token punctuation">,</span> descFileNamePwd<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件加密完毕！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token comment">// 从文件加载密钥和 IV</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token class-name">SecretKey</span> secretKeyHF <span class="token operator">=</span> <span class="token function">loadKey</span><span class="token punctuation">(</span><span class="token string">"D:\\secret.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token class-name">IvParameterSpec</span> ivHF <span class="token operator">=</span> <span class="token function">loadIv</span><span class="token punctuation">(</span><span class="token string">"D:\\iv.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"secretKeyHF = "</span> <span class="token operator">+</span> secretKeyHF<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token comment">// 解密文件</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token class-name">String</span> fileNameHF <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\加密文件.dat"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token class-name">String</span> descFileNameHF <span class="token operator">=</span> <span class="token string">"D:\\解压缩目录\\解密文件.docx"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">BugFixes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decryptFile</span><span class="token punctuation">(</span>secretKeyHF<span class="token punctuation">,</span> ivHF<span class="token punctuation">,</span> fileNameHF<span class="token punctuation">,</span> descFileNameHF<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件解密完毕！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre>    <span class="token comment">// 压缩文件</span></pre></td></tr><tr><td data-num="72"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">zipFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> srcDir<span class="token punctuation">,</span> <span class="token class-name">String</span> zipFileName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>zipFileName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>             <span class="token class-name">ZipOutputStream</span> zos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipOutputStream</span><span class="token punctuation">(</span>fos<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>            <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>srcDir<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>            <span class="token function">compressDirectoryToZipFile</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> srcFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zos<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token comment">// 递归目录中的文件进行处理</span></pre></td></tr><tr><td data-num="83"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">compressDirectoryToZipFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> rootDir<span class="token punctuation">,</span> <span class="token class-name">String</span> srcDir<span class="token punctuation">,</span> <span class="token class-name">ZipOutputStream</span> zos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> srcDir<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>            <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> srcFile<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>files <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>                        <span class="token function">compressDirectoryToZipFile</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> srcDir <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zos<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>                        <span class="token function">compressFileToZipFile</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> srcDir <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zos<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>                    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token function">compressFileToZipFile</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> srcDir<span class="token punctuation">,</span> zos<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="100"></td><td><pre></pre></td></tr><tr><td data-num="101"></td><td><pre>    <span class="token comment">// 将传入的文件进行压缩</span></pre></td></tr><tr><td data-num="102"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">compressFileToZipFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> rootDir<span class="token punctuation">,</span> <span class="token class-name">String</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">ZipOutputStream</span> zos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>rootDir<span class="token punctuation">,</span> srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>             <span class="token class-name">BufferedInputStream</span> bis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>fis<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>            <span class="token class-name">ZipEntry</span> zipEntry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipEntry</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="107"></td><td><pre>            zos<span class="token punctuation">.</span><span class="token function">putNextEntry</span><span class="token punctuation">(</span>zipEntry<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>            <span class="token keyword">int</span> len<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> bis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>                zos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>            zos<span class="token punctuation">.</span><span class="token function">closeEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="116"></td><td><pre></pre></td></tr><tr><td data-num="117"></td><td><pre>    <span class="token comment">// 解压缩文件</span></pre></td></tr><tr><td data-num="118"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unzipFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> zipFileName<span class="token punctuation">,</span> <span class="token class-name">String</span> descFileName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="119"></td><td><pre>        <span class="token class-name">String</span> descFileNames <span class="token operator">=</span> descFileName<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>descFileNames<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>            descFileNames <span class="token operator">=</span> descFileNames <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="122"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="124"></td><td><pre>                <span class="token class-name">InputStream</span> fileStream <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newInputStream</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>zipFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="125"></td><td><pre>                <span class="token class-name">ZipInputStream</span> zipInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipInputStream</span><span class="token punctuation">(</span>fileStream<span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"GBK"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="126"></td><td><pre>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="127"></td><td><pre>            <span class="token comment">// 根据 ZIP 文件创建 ZipInputStream 对象</span></pre></td></tr><tr><td data-num="128"></td><td><pre>            <span class="token class-name">ZipEntry</span> entry<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="129"></td><td><pre>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>entry <span class="token operator">=</span> zipInputStream<span class="token punctuation">.</span><span class="token function">getNextEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="130"></td><td><pre>                <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="131"></td><td><pre>                    <span class="token comment">// 如果是文件夹，创建目录</span></pre></td></tr><tr><td data-num="132"></td><td><pre>                    <span class="token keyword">boolean</span> mkdir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>descFileNames <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="133"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"创建目录"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>mkdir <span class="token operator">?</span> <span class="token string">"成功"</span> <span class="token operator">:</span> <span class="token string">"失败"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="134"></td><td><pre>                    <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="135"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="136"></td><td><pre>                <span class="token comment">// 创建输出文件</span></pre></td></tr><tr><td data-num="137"></td><td><pre>                <span class="token class-name">File</span> outFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>descFileNames <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="138"></td><td><pre>                <span class="token comment">// 创建父目录</span></pre></td></tr><tr><td data-num="139"></td><td><pre>                <span class="token keyword">boolean</span> mkdir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>outFile<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="140"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"创建父目录"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>mkdir <span class="token operator">?</span> <span class="token string">"成功"</span> <span class="token operator">:</span> <span class="token string">"失败"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="141"></td><td><pre>                <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedOutputStream</span> bufferedOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newOutputStream</span><span class="token punctuation">(</span>outFile<span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="142"></td><td><pre>                    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="143"></td><td><pre>                    <span class="token keyword">int</span> readByte<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="144"></td><td><pre>                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>readByte <span class="token operator">=</span> zipInputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="145"></td><td><pre>                        bufferedOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> readByte<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="146"></td><td><pre>                    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="147"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="148"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="149"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="150"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="151"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="152"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="153"></td><td><pre></pre></td></tr><tr><td data-num="154"></td><td><pre>    <span class="token comment">// 生成密钥</span></pre></td></tr><tr><td data-num="155"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SecretKey</span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="156"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>            <span class="token class-name">KeyGenerator</span> keyGen <span class="token operator">=</span> <span class="token class-name">KeyGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="158"></td><td><pre>            keyGen<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token constant">KEY_SIZE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="159"></td><td><pre>            <span class="token keyword">return</span> keyGen<span class="token punctuation">.</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="160"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="161"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="162"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="163"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="164"></td><td><pre></pre></td></tr><tr><td data-num="165"></td><td><pre>    <span class="token comment">// 保存密钥到磁盘</span></pre></td></tr><tr><td data-num="166"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveKey</span><span class="token punctuation">(</span><span class="token class-name">SecretKey</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="167"></td><td><pre>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">getEncoded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="168"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="169"></td><td><pre>            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="170"></td><td><pre>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"keyBytes = "</span> <span class="token operator">+</span> keyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="171"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="172"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="173"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="174"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="175"></td><td><pre></pre></td></tr><tr><td data-num="176"></td><td><pre>    <span class="token comment">// 生成 IV</span></pre></td></tr><tr><td data-num="177"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IvParameterSpec</span> <span class="token function">generateIv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="178"></td><td><pre>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> iv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token constant">IV_SIZE</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="179"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextBytes</span><span class="token punctuation">(</span>iv<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="180"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IvParameterSpec</span><span class="token punctuation">(</span>iv<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="181"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="182"></td><td><pre></pre></td></tr><tr><td data-num="183"></td><td><pre>    <span class="token comment">// 将 IV 保存到磁盘</span></pre></td></tr><tr><td data-num="184"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveIv</span><span class="token punctuation">(</span><span class="token class-name">IvParameterSpec</span> iv<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="185"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="186"></td><td><pre>            <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> iv<span class="token punctuation">.</span><span class="token function">getIV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="187"></td><td><pre>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"iv.getIV() = "</span> <span class="token operator">+</span> iv<span class="token punctuation">.</span><span class="token function">getIV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="188"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="189"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="190"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="191"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="192"></td><td><pre></pre></td></tr><tr><td data-num="193"></td><td><pre>    <span class="token comment">// 加密文件</span></pre></td></tr><tr><td data-num="194"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">encryptFile</span><span class="token punctuation">(</span><span class="token class-name">SecretKey</span> secretKey<span class="token punctuation">,</span> <span class="token class-name">IvParameterSpec</span> iv<span class="token punctuation">,</span> <span class="token class-name">String</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">String</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="195"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="196"></td><td><pre>            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="197"></td><td><pre>            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">ENCRYPT_MODE</span><span class="token punctuation">,</span> secretKey<span class="token punctuation">,</span> iv<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="198"></td><td><pre>            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="199"></td><td><pre>                 <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="200"></td><td><pre>                 <span class="token class-name">CipherOutputStream</span> cos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherOutputStream</span><span class="token punctuation">(</span>fos<span class="token punctuation">,</span> cipher<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="201"></td><td><pre>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="202"></td><td><pre>                <span class="token keyword">int</span> read<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="203"></td><td><pre>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="204"></td><td><pre>                    cos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> read<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="205"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="206"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="207"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="208"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="209"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="210"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="211"></td><td><pre></pre></td></tr><tr><td data-num="212"></td><td><pre>    <span class="token comment">// 从文件加载密钥</span></pre></td></tr><tr><td data-num="213"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SecretKey</span> <span class="token function">loadKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="214"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="215"></td><td><pre>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="216"></td><td><pre>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">,</span> <span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="217"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="218"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="219"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="220"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="221"></td><td><pre></pre></td></tr><tr><td data-num="222"></td><td><pre>    <span class="token comment">// 从文件加载 IV</span></pre></td></tr><tr><td data-num="223"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IvParameterSpec</span> <span class="token function">loadIv</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="224"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="225"></td><td><pre>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ivBytes <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="226"></td><td><pre>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IvParameterSpec</span><span class="token punctuation">(</span>ivBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="227"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="228"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="229"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="230"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="231"></td><td><pre></pre></td></tr><tr><td data-num="232"></td><td><pre>    <span class="token comment">// 解密文件</span></pre></td></tr><tr><td data-num="233"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decryptFile</span><span class="token punctuation">(</span><span class="token class-name">SecretKey</span> secretKey<span class="token punctuation">,</span> <span class="token class-name">IvParameterSpec</span> iv<span class="token punctuation">,</span> <span class="token class-name">String</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">String</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="234"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="235"></td><td><pre>            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="236"></td><td><pre>            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> secretKey<span class="token punctuation">,</span> iv<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="237"></td><td><pre>            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="238"></td><td><pre>                 <span class="token class-name">CipherInputStream</span> cis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherInputStream</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> cipher<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="239"></td><td><pre>                 <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>destFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="240"></td><td><pre>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="241"></td><td><pre>                <span class="token keyword">int</span> read<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="242"></td><td><pre>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> cis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="243"></td><td><pre>                    fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> read<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="244"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="245"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="246"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="247"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="248"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="249"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="250"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>效果如下：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240731151628904.png" alt="image-20240731151628904" /></p><p>加密文件时会在指定位置生成加密的密钥和 IV (保持加密的一致性)</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240731151819543.png" alt="image-20240731151819543" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java压缩与解压文件-加密与解密文件&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#java压缩与解压文件-加密与解密文件&quot;&gt;#&lt;/a&gt; java 压缩与解压文件 - 加密与解密文件&lt;/h1&gt;
&lt;h2 id=&quot;java-keygenerator加密的概述&quot;</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="java-io" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/java-io/"/>
    
    
    <category term="计算机学科 - blog - java-io" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91-blog-java-io/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL的generate_serise的函数应用</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/sql/%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90%E5%BA%8F%E5%88%97/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/sql/%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90%E5%BA%8F%E5%88%97/</id>
    <published>2024-07-24T09:47:20.000Z</published>
    <updated>2024-07-24T09:47:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="postgresql的generate_serise的函数应用"><a class="anchor" href="#postgresql的generate_serise的函数应用">#</a> PostgreSQL 的 generate_serise 的函数应用</h1><h2 id="简介"><a class="anchor" href="#简介">#</a> 简介</h2><p>PostgreSQL 中有一个很有用处的内置函数 generate_serise，可以按不同的规则产生一系列的填充数据</p><h2 id="语法"><a class="anchor" href="#语法">#</a> 语法</h2><table><thead><tr><th>函数</th><th>参数类型</th><th>返回类型</th><th>描述</th></tr></thead><tbody><tr><td>generate_serise(start，stop)</td><td>int 或 bigint</td><td>setof  int 或 setof  bigint (与参数类型相同)</td><td>生成一个数值序列，从 start 到 stop，&lt;br /&gt; 步进为 1</td></tr><tr><td>generate_serise(start，stop，step)</td><td>int 或 bigint</td><td>setof  int 或 setof  bigint (与参数类型相同)</td><td>生成一个数值序列，从 start 到 stop,&lt;br /&gt; 步进为 step</td></tr><tr><td>generate_serise(start，stop，step_interval)</td><td>timestamp or timestamp with time zone</td><td>timestamp 或 timestamp with time zone (same as argument type)</td><td>生成一个数值序列，从 &lt;br /&gt;start 到 stop，步进为 step</td></tr></tbody></table><h2 id="实例"><a class="anchor" href="#实例">#</a> 实例</h2><h3 id="int-类型"><a class="anchor" href="#int-类型">#</a> int 类型</h3><ol><li>不写步进时默认为 1</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> generate_series </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre>               <span class="token number">1</span></pre></td></tr><tr><td data-num="6"></td><td><pre>               <span class="token number">2</span></pre></td></tr><tr><td data-num="7"></td><td><pre>               <span class="token number">3</span></pre></td></tr><tr><td data-num="8"></td><td><pre>               <span class="token number">4</span></pre></td></tr><tr><td data-num="9"></td><td><pre>               <span class="token number">5</span></pre></td></tr><tr><td data-num="10"></td><td><pre>               <span class="token number">6</span></pre></td></tr><tr><td data-num="11"></td><td><pre>               <span class="token number">7</span></pre></td></tr><tr><td data-num="12"></td><td><pre>               <span class="token number">8</span></pre></td></tr><tr><td data-num="13"></td><td><pre>               <span class="token number">9</span></pre></td></tr><tr><td data-num="14"></td><td><pre>              <span class="token number">10</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="2"><li>设置步进</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> generate_series </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre>               <span class="token number">1</span></pre></td></tr><tr><td data-num="6"></td><td><pre>               <span class="token number">4</span></pre></td></tr><tr><td data-num="7"></td><td><pre>               <span class="token number">7</span></pre></td></tr><tr><td data-num="8"></td><td><pre>              <span class="token number">10</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">(</span><span class="token number">4</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="3"><li>如果 step 是正数，而 start 大于 stop，那么返回零行。相反，如果 step 是负数，start 小于 stop，则返回零行。如果是 NULL 输入，也产生零行。step 为零则是一个错误</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> generate_series </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">(</span><span class="token number">0</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>NULL inputs</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> generate_series </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">(</span><span class="token number">0</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>step 为零</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>ERROR:  step size cannot equal zero</pre></td></tr></table></figure><p>start 大于 stop，step 是负数</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> generate_series </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-----------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre>               <span class="token number">5</span></pre></td></tr><tr><td data-num="6"></td><td><pre>               <span class="token number">4</span></pre></td></tr><tr><td data-num="7"></td><td><pre>               <span class="token number">3</span></pre></td></tr><tr><td data-num="8"></td><td><pre>               <span class="token number">2</span></pre></td></tr><tr><td data-num="9"></td><td><pre>               <span class="token number">1</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">(</span><span class="token number">5</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>时间类型</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'7 days'</span><span class="token punctuation">,</span> <span class="token string">'1 day'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">-------------------------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        generate_series        </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">-------------------------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="6"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">04</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="8"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="9"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">07</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="10"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">08</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="11"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="12"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">14</span>:<span class="token number">22</span>:<span class="token number">26.391852</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">(</span><span class="token number">8</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> generate_series<span class="token punctuation">(</span>to_date<span class="token punctuation">(</span><span class="token string">'20130403'</span><span class="token punctuation">,</span><span class="token string">'yyyymmdd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to_date<span class="token punctuation">(</span><span class="token string">'20130404'</span><span class="token punctuation">,</span><span class="token string">'yyyymmdd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'3 hours'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">------------------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    generate_series     </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">------------------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="6"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">03</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">06</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="8"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">09</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="9"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">12</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="10"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="11"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">18</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="12"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">21</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="13"></td><td><pre> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">04</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">00</span><span class="token operator">+</span><span class="token number">08</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">(</span><span class="token number">9</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="ip类型"><a class="anchor" href="#ip类型">#</a> IP 类型</h3><ol><li>建表</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> tbl_david<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> ip_start inet<span class="token punctuation">,</span> ip_stop inet<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><ol start="2"><li>插入数据</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> tbl_david <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'192.168.1.6'</span><span class="token punctuation">,</span> <span class="token string">'192.168.1.10'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> tbl_david <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'192.168.2.16'</span><span class="token punctuation">,</span> <span class="token string">'192.168.2.20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> tbl_david <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'192.168.3.116'</span><span class="token punctuation">,</span> <span class="token string">'192.168.3.120'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><ol start="3"><li>查询数据</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tbl_david <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">----+---------------+---------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> id <span class="token operator">|</span>   ip_start    <span class="token operator">|</span>    ip_stop    </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">----+---------------+---------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span>   <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.16</span>  <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.20</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.116</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.120</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="4"><li>generate_serise 生成序列</li></ol><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> id<span class="token punctuation">,</span> generate_series<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ip_stop<span class="token operator">-</span>ip_start<span class="token punctuation">)</span><span class="token operator">+</span>ip_start <span class="token keyword">as</span> ip_new <span class="token keyword">from</span> tbl_david<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">----+---------------</span></pre></td></tr><tr><td data-num="3"></td><td><pre> id <span class="token operator">|</span>    ip_new     </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">----+---------------</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.7</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.8</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.9</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.16</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.17</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.18</span></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.19</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.20</span></pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.116</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.117</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.118</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.119</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.120</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">(</span><span class="token number">15</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>搞不懂这是为什么我们可以进行拆解</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">-- sql 执行将 192.168.1.6-192.168.1.10=4 的值 + 192.168.1.6=192.168.1.10</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">SELECT</span> <span class="token punctuation">(</span>ip_stop <span class="token operator">-</span> ip_start<span class="token punctuation">)</span><span class="token operator">+</span>ip_start <span class="token keyword">as</span> ip_new <span class="token keyword">FROM</span> tbl_david</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">---------------</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    ip_new     </pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">---------------</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.20</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.120</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">-- 上面的 sql 也类似于如下：</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">select</span> id<span class="token punctuation">,</span> generate_series<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>ip_start <span class="token keyword">as</span> ip_new <span class="token keyword">from</span> tbl_david<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">----+---------------</span></pre></td></tr><tr><td data-num="13"></td><td><pre> id <span class="token operator">|</span>    ip_new     </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">----+---------------</span></pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.7</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.8</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.9</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.16</span></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.17</span></pre></td></tr><tr><td data-num="22"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.18</span></pre></td></tr><tr><td data-num="23"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.19</span></pre></td></tr><tr><td data-num="24"></td><td><pre>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.20</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.116</span></pre></td></tr><tr><td data-num="26"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.117</span></pre></td></tr><tr><td data-num="27"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.118</span></pre></td></tr><tr><td data-num="28"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.119</span></pre></td></tr><tr><td data-num="29"></td><td><pre>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.120</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">(</span><span class="token number">15</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="总结"><a class="anchor" href="#总结">#</a> 总结</h2><p>PostgreSQL 的 generate_serise 函数对生成测试数据，批量更新一定规则的数据有比较多的应用场景，使用得当可提升发开效率，另外 IP 的序列生成也是 PG 的一个亮点</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;postgresql的generate_serise的函数应用&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#postgresql的generate_serise的函数应用&quot;&gt;#&lt;/a&gt; PostgreSQL 的 generate_serise 的函数应用&lt;</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/sql/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/tags/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>MyBatisPlus编写SQL中#与$的使用区别</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/sql/MyBatisPlus%E7%BC%96%E5%86%99SQL%E4%B8%AD%E8%B0%81%E7%A0%B4%E4%B8%8E%E5%88%80%E4%B9%90%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%88%AB/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/sql/MyBatisPlus%E7%BC%96%E5%86%99SQL%E4%B8%AD%E8%B0%81%E7%A0%B4%E4%B8%8E%E5%88%80%E4%B9%90%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%88%AB/</id>
    <published>2024-07-24T08:33:00.000Z</published>
    <updated>2024-07-24T08:33:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mybatis-plus编写sql中与的使用区别"><a class="anchor" href="#mybatis-plus编写sql中与的使用区别">#</a> MyBatis-plus 编写 SQL 中 #与 $ 的使用区别</h1><h2 id="今天看到了一个sql如下"><a class="anchor" href="#今天看到了一个sql如下">#</a> 今天看到了一个 sql 如下：</h2><p>dao</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre>     * 根据 price 和多个 name 来查询信息</pre></td></tr><tr><td data-num="3"></td><td><pre>     * @param </pre></td></tr><tr><td data-num="4"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="5"></td><td><pre>     * @author 窦凯欣</pre></td></tr><tr><td data-num="6"></td><td><pre>     * @date 2024 年 07 月 09 日 0009 17:38:31</pre></td></tr><tr><td data-num="7"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token variable">@Select</span><span class="token punctuation">(</span>&#123;</pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token string">"SELECT"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token string">"id, name"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token string">"FROM tab_class"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token string">"WHERE"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token string">"price = #&#123;price&#125; and"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token string">"name in"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token string">"($&#123;res&#125;)"</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            &#125;<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    List<span class="token operator">&lt;</span>ClassEntity<span class="token operator">></span> getClassAll<span class="token punctuation">(</span>String res<span class="token punctuation">,</span> <span class="token keyword">Integer</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><h2 id="三层代码如下"><a class="anchor" href="#三层代码如下">#</a> 三层代码如下：</h2><p>controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/classAll"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassEntity</span><span class="token punctuation">></span></span> <span class="token function">getClassAll</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> className<span class="token punctuation">,</span> <span class="token class-name">Integer</span> price<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">String</span> res <span class="token operator">=</span> className<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>r <span class="token operator">-></span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"'"</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                    <span class="token keyword">return</span> sb<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">return</span> classService<span class="token punctuation">.</span><span class="token function">getClassAll</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>service</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassEntity</span><span class="token punctuation">></span></span> <span class="token function">getClassAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> res<span class="token punctuation">,</span> <span class="token class-name">Integer</span> price<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">return</span> classDao<span class="token punctuation">.</span><span class="token function">getClassAll</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>请求传参：</p><p>json</p><pre><code>[    &quot;数学&quot;,&quot;语文&quot;]</code></pre><p>param</p><pre><code>price=10</code></pre><p>查询结果：</p><pre><code>[    &#123;        &quot;id&quot;: 1,        &quot;name&quot;: &quot;数学&quot;    &#125;,    &#123;        &quot;id&quot;: 2,        &quot;name&quot;: &quot;语文&quot;    &#125;]</code></pre><h2 id="问题"><a class="anchor" href="#问题">#</a> 问题：</h2><p>为什么 price 条件接收参数使用的是 <code>#</code> 而 name 却是 <code>$</code>  呢？我可以换成 <code>#</code> 吗？</p><p>PS：不合适！</p><p>解释如下：</p><p>原因分析：</p><ol><li><p><code>#</code> 参数替换特点</p><p><code>#</code> 会将参数安全替换并转义为一个字符串，因此适用于单个值的传递</p><p>但对于像 <code>in</code>  子句中的列表，需要直接将参数拼接到 SQL 语句中，而不是作为一个单独的字符串</p></li><li><p><code>$</code>  参数拼接特点</p><p><code>$</code>  直接拼接参数到 SQL 语句中，适用于动态生成的 SQL 片段，例如 <code>in</code>  子句中的列表</p><p>这样可以确保列表中的每个值都是一个独立的元素，而不是被当作单个字符串处理</p></li></ol><p>例举说明：</p><p>假设 <code>res</code>  的值是 <code>'数学'</code> ， <code>'语文'</code></p><h3 id="使用"><a class="anchor" href="#使用">#</a> 使用 <code>#</code></h3><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token variable">@Select</span><span class="token punctuation">(</span>&#123;</pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token string">"SELECT"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token string">"id, name"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token string">"FROM tab_class"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token string">"WHERE"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token string">"price = #&#123;price&#125; and"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token string">"name in"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token string">"(#&#123;res&#125;)"</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    &#125;<span class="token punctuation">)</span></pre></td></tr></table></figure><p>如果 <code>res</code>  的值是 <code>'数学'</code> ， <code>'语文'</code> ，MyBatis 会将其转义为一个字符串，导致生成的 SQL 类似于</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>administrative_division_code <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'\'001\', \'002\', \'003\''</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>这显然是不正确的，因为它将整个列表当作一个单独的字符串</p><h3 id="使用-2"><a class="anchor" href="#使用-2">#</a> 使用 <code>$</code></h3><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token variable">@Select</span><span class="token punctuation">(</span>&#123;</pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token string">"SELECT"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token string">"id, name"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token string">"FROM tab_class"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token string">"WHERE"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token string">"price = #&#123;price&#125; and"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token string">"name in"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token string">"($&#123;res&#125;)"</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    &#125;<span class="token punctuation">)</span></pre></td></tr></table></figure><p>如果 <code>res</code>  的值是 <code>'数学'</code> ， <code>'语文'</code> ，MyBatis 会直接将其拼接到 SQL 语句中，生成的 SQL 类似于</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>administrative_division_code <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span> <span class="token string">'002'</span><span class="token punctuation">,</span> <span class="token string">'003'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>这是正确的，因为它将列表中的每个值都作为单独的元素处理</p><h2 id="总结"><a class="anchor" href="#总结">#</a> 总结</h2><p><code>#&#123;&#125;</code>  用于安全替换单个值，防止 SQL 注入，但不适合替换包含多个值的列表</p><p><code>$&#123;&#125;</code>  用于直接拼接 SQL 片段，适合动态生成的 SQL 语句片段，例如 <code>in</code>  子句中的列表</p><p>因此，在 <code>in</code>  子句中传递动态列表时，需要使用 <code>$&#123;&#125;</code>  来确保生成的 SQL 是正确的。使用 <code>#&#123;&#125;</code>  会导致生成的 SQL 不符合预期，甚至可能引发错误</p><h2 id="替代方案"><a class="anchor" href="#替代方案">#</a> 替代方案</h2><p>如果您担心 SQL 注入，可以考虑使用以下方式：</p><ol><li>传递 List 参数</li></ol><p>在 MyBatis 映射文件中使用 <code>&lt;foreach&gt;</code>  标签</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre>@Select(&#123;</pre></td></tr><tr><td data-num="2"></td><td><pre>            "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>",</pre></td></tr><tr><td data-num="3"></td><td><pre>            "SELECT",</pre></td></tr><tr><td data-num="4"></td><td><pre>            "id, name",</pre></td></tr><tr><td data-num="5"></td><td><pre>            "FROM tab_class",</pre></td></tr><tr><td data-num="6"></td><td><pre>            "WHERE",</pre></td></tr><tr><td data-num="7"></td><td><pre>            "price = #&#123;price&#125; and",</pre></td></tr><tr><td data-num="8"></td><td><pre>            "name in",</pre></td></tr><tr><td data-num="9"></td><td><pre>            "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>res<span class="token punctuation">'</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>item<span class="token punctuation">'</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>(<span class="token punctuation">'</span></span> <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>)<span class="token punctuation">'</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>,<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>",</pre></td></tr><tr><td data-num="10"></td><td><pre>            "#&#123;item&#125;",</pre></td></tr><tr><td data-num="11"></td><td><pre>            "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span>",</pre></td></tr><tr><td data-num="12"></td><td><pre>            "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>"</pre></td></tr><tr><td data-num="13"></td><td><pre>    &#125;)</pre></td></tr><tr><td data-num="14"></td><td><pre>    List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ClassEntity</span><span class="token punctuation">></span></span> getClassAll(@Param("res") List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String</span><span class="token punctuation">></span></span> res,@Param("price") Integer price);</pre></td></tr></table></figure><p>在 java 代码中传递 <code>List&lt;String&gt;</code>  参数</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/classAll"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassEntity</span><span class="token punctuation">></span></span> <span class="token function">getClassAll</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> className<span class="token punctuation">,</span> <span class="token class-name">Integer</span> price<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">return</span> classService<span class="token punctuation">.</span><span class="token function">getClassAll</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>[    &#123;        &quot;id&quot;: 1,        &quot;name&quot;: &quot;数学&quot;    &#125;,    &#123;        &quot;id&quot;: 2,        &quot;name&quot;: &quot;语文&quot;    &#125;]</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mybatis-plus编写sql中与的使用区别&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#mybatis-plus编写sql中与的使用区别&quot;&gt;#&lt;/a&gt; MyBatis-plus 编写 SQL 中 #与 $ 的使用区别&lt;/h1&gt;
&lt;h2 id=&quot;今天看</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/sql/"/>
    
    
    <category term="计算机学科 - blog - sql" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91-blog-sql/"/>
    
  </entry>
  
  <entry>
    <title>leftjion的使用注意事项</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/sql/leftjion%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/sql/leftjion%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2024-07-24T06:48:02.000Z</published>
    <updated>2024-07-24T06:48:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="left-join-的使用注意事项"><a class="anchor" href="#left-join-的使用注意事项">#</a> left-join 的使用注意事项</h1><p>在很多场景下我们需要同时查询多张表进行关联查询出我们想要的数据</p><p>下面是错误的写法：</p><p>说明：</p><blockquote><p>为什么说这是错误的写法，原因是当 sql 往下执行的时候走到了左连接查询此时并无其它的条件，而只有一个条件那么就是 <code>resource_code</code>  是相同的数据我们就查，然后左连接查询出了关联 <code>resource_code</code>  的所有数据在往下执行走到 <code>WHERE</code>  的时候在进行条件筛选，此时又会过滤掉一些数据。</p></blockquote><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">SELECT</span> T</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">.</span>ID<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>T<span class="token punctuation">.</span>project_id<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>T<span class="token punctuation">.</span>analysis_id<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>T<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>T<span class="token punctuation">.</span>resource_code<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>T<span class="token punctuation">.</span>resource_name<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>T<span class="token punctuation">.</span>administrative_division_name<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>T<span class="token punctuation">.</span>main_body<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>T<span class="token punctuation">.</span>gas_type<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">(</span> A<span class="token punctuation">.</span>plan_supply_num <span class="token operator">-</span> T<span class="token punctuation">.</span>surrounding_sales_num <span class="token operator">-</span> T<span class="token punctuation">.</span>self_use_num <span class="token punctuation">)</span> <span class="token keyword">AS</span> one_access_volume<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>T<span class="token punctuation">.</span>surrounding_sales_num<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>T<span class="token punctuation">.</span>self_use_num </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="15"></td><td><pre>pro_bala_year_province_d_u_increase_china_gas T <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> pro_bala_sup_year_china_gas_supply A </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">ON</span> A<span class="token punctuation">.</span>resource_code <span class="token operator">=</span> T<span class="token punctuation">.</span>resource_code </pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">WHERE</span></pre></td></tr><tr><td data-num="18"></td><td><pre>T<span class="token punctuation">.</span>analysis_id <span class="token operator">=</span> <span class="token string">'123'</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token operator">AND</span> A<span class="token punctuation">.</span><span class="token keyword">YEAR</span> <span class="token operator">=</span> T<span class="token punctuation">.</span><span class="token keyword">YEAR</span> </pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token operator">AND</span> T<span class="token punctuation">.</span>analysis_id <span class="token operator">=</span> A<span class="token punctuation">.</span>analysis_id </pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token operator">AND</span> T<span class="token punctuation">.</span>administrative_division_code <span class="token operator">=</span> A<span class="token punctuation">.</span>administrative_division_code </pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">ORDER</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="23"></td><td><pre>T<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>T<span class="token punctuation">.</span>resource_code<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="25"></td><td><pre>T<span class="token punctuation">.</span>resource_name <span class="token keyword">ASC</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>下面是正确的写法</p><p>说明：</p><blockquote><p>sql 往下执行走到左连接的时候，先按照指定的条件筛选过滤掉想要的数据，再往下走筛选主表的数据查询出我们想要的数据，这种写法在走到左连接查询的时候并不是一口气把所有只有一个条件的数据都查询出来再往下执行 <code>WHERE</code>  的过滤条件的</p></blockquote><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">SELECT</span> T</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">.</span>ID<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>T<span class="token punctuation">.</span>project_id<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>T<span class="token punctuation">.</span>analysis_id<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>T<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>T<span class="token punctuation">.</span>resource_code<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>T<span class="token punctuation">.</span>resource_name<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>T<span class="token punctuation">.</span>administrative_division_name<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>T<span class="token punctuation">.</span>main_body<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>T<span class="token punctuation">.</span>gas_type<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">(</span> A<span class="token punctuation">.</span>plan_supply_num <span class="token operator">-</span> T<span class="token punctuation">.</span>surrounding_sales_num <span class="token operator">-</span> T<span class="token punctuation">.</span>self_use_num <span class="token punctuation">)</span> <span class="token keyword">AS</span> one_access_volume<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>T<span class="token punctuation">.</span>surrounding_sales_num<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>T<span class="token punctuation">.</span>self_use_num </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="15"></td><td><pre>pro_bala_year_province_d_u_increase_china_gas T <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> pro_bala_sup_year_china_gas_supply A </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">ON</span> A<span class="token punctuation">.</span>resource_code <span class="token operator">=</span> T<span class="token punctuation">.</span>resource_code </pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token operator">AND</span> A<span class="token punctuation">.</span><span class="token keyword">YEAR</span> <span class="token operator">=</span> T<span class="token punctuation">.</span><span class="token keyword">YEAR</span> </pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token operator">AND</span> T<span class="token punctuation">.</span>analysis_id <span class="token operator">=</span> A<span class="token punctuation">.</span>analysis_id </pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token operator">AND</span> T<span class="token punctuation">.</span>administrative_division_code <span class="token operator">=</span> A<span class="token punctuation">.</span>administrative_division_code </pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">WHERE</span></pre></td></tr><tr><td data-num="21"></td><td><pre>T<span class="token punctuation">.</span>analysis_id <span class="token operator">=</span> <span class="token string">'123'</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">ORDER</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="23"></td><td><pre>T<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>T<span class="token punctuation">.</span>resource_code<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="25"></td><td><pre>T<span class="token punctuation">.</span>resource_name <span class="token keyword">ASC</span><span class="token punctuation">;</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;left-join-的使用注意事项&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#left-join-的使用注意事项&quot;&gt;#&lt;/a&gt; left-join 的使用注意事项&lt;/h1&gt;
&lt;p&gt;在很多场景下我们需要同时查询多张表进行关联查询出我们想要的数据&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/sql/"/>
    
    
    <category term="计算机学科 - blog - sql" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91-blog-sql/"/>
    
  </entry>
  
  <entry>
    <title>Java8-StringJoiner</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/Java8-StringJoiner/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/Java8-StringJoiner/</id>
    <published>2024-07-17T08:05:10.000Z</published>
    <updated>2024-07-17T08:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java8-stringjoiner"><a class="anchor" href="#java8-stringjoiner">#</a> Java8-StringJoiner</h1><p>引言：在阅读项目代码时，突然看到了 StringJoiner 这个类的使用，感觉很有意思，对实际开发中也有用，实际上是运用了 StringBuilder 的一个拼接字符串的封装处理</p><h2 id="介绍"><a class="anchor" href="#介绍">#</a> 介绍</h2><p>StringJoiner 是 java8 新出的一个类，用于构造由分隔符的字符序列，并可选择性地从提供的前缀开始和以提供的后缀结尾。省的我们开发人员再次通过 StringBuffer 或者 StringBuilder 拼接</p><p>我们查看一下代码，试着猜一下</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">StringJoiner</span> sj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringJoiner</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> <span class="token string">"["</span><span class="token punctuation">,</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>sj<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"George"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Sally"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Fred"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">String</span> desiredString <span class="token operator">=</span> sj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>代码输出为 <code>[George:Sally:Fred]</code></p><h2 id="源码"><a class="anchor" href="#源码">#</a> 源码</h2><p>这个类的源码很简单，大家很容易就可以看明白。</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">StringJoiner</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> prefix<span class="token punctuation">;</span><span class="token comment">// 前缀</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> delimiter<span class="token punctuation">;</span><span class="token comment">// 间隔符</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> suffix<span class="token punctuation">;</span><span class="token comment">// 后缀</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> value<span class="token punctuation">;</span><span class="token comment">// 值</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> emptyValue<span class="token punctuation">;</span><span class="token comment">// 空值</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">StringJoiner</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> delimiter<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">(</span>delimiter<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 默认前缀和后缀为 "", 重载调用</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">StringJoiner</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> delimiter<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                        <span class="token class-name">CharSequence</span> prefix<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                        <span class="token class-name">CharSequence</span> suffix<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 间隔符，前缀和后缀判断是否为 null，null 将抛出异常</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> <span class="token string">"The prefix must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>delimiter<span class="token punctuation">,</span> <span class="token string">"The delimiter must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>suffix<span class="token punctuation">,</span> <span class="token string">"The suffix must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">// 成员变量赋值</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">=</span> prefix<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>delimiter <span class="token operator">=</span> delimiter<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>suffix <span class="token operator">=</span> suffix<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>emptyValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>suffix<span class="token punctuation">;</span><span class="token comment">// 空值被设置为只有前后缀</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>   </pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token comment">// 设置空值，检查是否为 null</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">StringJoiner</span> <span class="token function">setEmptyValue</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> emptyValue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>emptyValue <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>emptyValue<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token string">"The empty value must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token keyword">return</span> emptyValue<span class="token punctuation">;</span><span class="token comment">// 没有值将返回空值或者后续设置的空值</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>suffix<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 后缀为 "" 直接返回字符串，不用添加</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            <span class="token comment">// 后缀不为 ""，添加后缀，然后直接返回字符串，修改长度</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token keyword">int</span> initialLength <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token class-name">String</span> result <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>suffix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token comment">// reset value to pre-append initialLength</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                value<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span>initialLength<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token keyword">return</span> result<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    初始化，先添加前缀，有了之后每次先添加间隔符，<span class="token class-name">StringBuilder</span>后续append字符串</pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">StringJoiner</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> newElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token function">prepareBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>newElement<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>   </pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token comment">// 合并 StringJoiner，注意后面 StringJoiner 的前缀就不要了，后面的 appen 进来</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">StringJoiner</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">StringJoiner</span> other<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>other<span class="token punctuation">.</span>value <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token keyword">final</span> <span class="token keyword">int</span> length <span class="token operator">=</span> other<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// lock the length so that we can seize the data to be appended</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token comment">// before initiate copying to avoid interference, especially when</span></pre></td></tr><tr><td data-num="66"></td><td><pre>            <span class="token comment">// merge 'this'</span></pre></td></tr><tr><td data-num="67"></td><td><pre>            <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token function">prepareBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>value<span class="token punctuation">,</span> other<span class="token punctuation">.</span>prefix<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>   </pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token comment">// 初始化，先添加前缀，有了之后每次先添加间隔符</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> <span class="token function">prepareBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>            value<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>delimiter<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>            value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>        <span class="token keyword">return</span> value<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        <span class="token comment">// Remember that we never actually append the suffix unless we return</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token comment">// the full (present) value or some sub-string or length of it, so that</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment">// we can add on more if we need to.</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token comment">// 不忘添加后缀的长度</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token keyword">return</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span></pre></td></tr><tr><td data-num="89"></td><td><pre>                emptyValue<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java8-stringjoiner&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#java8-stringjoiner&quot;&gt;#&lt;/a&gt; Java8-StringJoiner&lt;/h1&gt;
&lt;p&gt;引言：在阅读项目代码时，突然看到了 StringJoiner 这个类</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E6%A1%88%E4%BE%8BDemo/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/tags/%E6%A1%88%E4%BE%8BDemo/"/>
    
  </entry>
  
  <entry>
    <title>x-y柱状-折线图返回数据</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/x-y%E6%9F%B1%E7%8A%B6-%E6%8A%98%E7%BA%BF%E5%9B%BE%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/x-y%E6%9F%B1%E7%8A%B6-%E6%8A%98%E7%BA%BF%E5%9B%BE%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/</id>
    <published>2024-07-17T08:02:38.000Z</published>
    <updated>2024-07-17T08:02:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240715095923286.png" alt="image-20240715095923286" /></p><p>图表类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * 图表类</pre></td></tr><tr><td data-num="3"></td><td><pre> * @Author: lizheng</pre></td></tr><tr><td data-num="4"></td><td><pre> * @Date: 2023/10/21 17:28</pre></td></tr><tr><td data-num="5"></td><td><pre> */</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token annotation punctuation">@Data</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token annotation punctuation">@NoArgsConstructor</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token annotation punctuation">@AllArgsConstructor</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"图表"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Chart</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"x轴数据集合"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> xData<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"y轴数据集合"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">YData</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span><span class="token punctuation">></span></span> yData<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>y 轴数据类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Data</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token annotation punctuation">@NoArgsConstructor</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token annotation punctuation">@AllArgsConstructor</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"y轴数据"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"显示名称"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"字段名称"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> key<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"图表类型(柱状、折线等)"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"数据"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> data<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>x 轴数据，我们需要进行遍历年，业务代码如下：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Chart</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span></span> <span class="token function">naturalGasSupplyAndDemandBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">MPJLambdaWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompGasBalance</span><span class="token punctuation">></span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MPJLambdaWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompGasBalance</span><span class="token punctuation">></span></span> compGasBalances <span class="token operator">=</span> compGasBalanceMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>compGasBalances<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token comment">//y 轴数据</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">YData</span><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span><span class="token punctuation">></span></span> yData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">//x 轴数据</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> xData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token comment">//revenue</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span></span> supplyNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">//increase</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span></span> gasNeedTotal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CompGasBalance</span> compGasBalance <span class="token operator">:</span> compGasBalances<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            xData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>compGasBalance<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            supplyNum<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>compGasBalance<span class="token punctuation">.</span><span class="token function">getSupplyNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            gasNeedTotal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>compGasBalance<span class="token punctuation">.</span><span class="token function">getGasNeedTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        yData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">YData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token string">"收入"</span><span class="token punctuation">,</span><span class="token string">"revenue"</span><span class="token punctuation">,</span> <span class="token class-name">ChartTypeConstants</span><span class="token punctuation">.</span>line<span class="token punctuation">,</span>supplyNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        yData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">YData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token string">"增长"</span><span class="token punctuation">,</span><span class="token string">"increase"</span><span class="token punctuation">,</span> <span class="token class-name">ChartTypeConstants</span><span class="token punctuation">.</span>line<span class="token punctuation">,</span>gasNeedTotal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Chart</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>xData<span class="token punctuation">,</span>yData<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240715095923286.png&quot; alt=&quot;image-20240715095923286&quot; /</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E6%A1%88%E4%BE%8BDemo/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/tags/%E6%A1%88%E4%BE%8BDemo/"/>
    
  </entry>
  
  <entry>
    <title>Function函数式接口</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/lambda/%E5%A6%99%E7%94%A8Function%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E6%B6%88%E7%81%ADif-else/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/lambda/%E5%A6%99%E7%94%A8Function%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E6%B6%88%E7%81%ADif-else/</id>
    <published>2024-07-16T00:25:44.000Z</published>
    <updated>2024-07-16T00:25:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="function函数式接口"><a class="anchor" href="#function函数式接口">#</a> Function 函数式接口</h2><p>使用注解：<mark>@FunctionalInterface</mark> 标识，并且只包含一个 <mark>抽象方法</mark> 的接口是 <mark>函数式接口</mark>。<mark>函数式接口</mark> 主要分为<mark> supplier</mark> 供给类型函数，<mark>Consumer</mark> 消费型函数，<mark>Runnable</mark> 无参无返回型函数和 <mark>Function</mark> 有参又返回型函数。</p><blockquote><p>Function 可以看做转换型函数。</p></blockquote><h2 id="supplier供给型函数"><a class="anchor" href="#supplier供给型函数">#</a> supplier 供给型函数</h2><p><mark>supplier</mark> 的表现形式为不接受参数，只返回数据</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/952ffda3e6f874663fdd9610dd729814.png" alt="img" /></p><h2 id="consumber消费型函数"><a class="anchor" href="#consumber消费型函数">#</a> Consumber 消费型函数</h2><p>Consumber 消费型函数</p><p>Consumber 消费型函数和 Supplier 刚好相反，Consumber 接收一个参数，没有返回值。</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/f63e05bfc0cccc6dbf81746853f5b18e.png" alt="img" /></p><h2 id="runnable-无参无返回型函数"><a class="anchor" href="#runnable-无参无返回型函数">#</a> Runnable 无参无返回型函数</h2><p>Runnable 的表现形式为既没有参数也没有返回值</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/a19d3d82293cb90485074e0cad4e0700.png" alt="img" /></p><p>Runnable 无参无返回型函数</p><p>Function 函数的表现形式为接收一个参数，并返回一个值。Supplier，Consumer 和 Runnable 可以看做 Function 的一种特殊表现形式</p><p><img data-src="https://ask.qcloudimg.com/http-save/yehe-1453135/abc99db8954da6fba7ae801c9d9db54c.png" alt="img" /></p><p>@FunctionalInterface</p><h2 id="使用小技巧"><a class="anchor" href="#使用小技巧">#</a> 使用小技巧</h2><h3 id="处理抛出异常的if"><a class="anchor" href="#处理抛出异常的if">#</a> 处理抛出异常的 if</h3><ol><li><p>定义函数</p><p>定义一个抛出异常的形式的 函数式接口 ，这个接口只有参数没有返回值是个 消费型接口。</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@FunctionalInterface</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ThrowExceptionFunction</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">void</span> <span class="token function">throwMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>编写判断方法</p><p>创建工具类，并创建一个 isTrue 方法，方法的返回值为刚才定义的 函数式接口，ThrowExceptionFunction 的接口实现逻辑为当参数 b 为 false 时抛出异常</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FunctionUtils</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThrowExceptionFunction</span> <span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">return</span> errorMessage <span class="token operator">-></span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>使用方式</p><p>调用工具类参数后，调用 函数式接口 的 throwMessage 方法传入异常信息，当出入的参数为 false 是正常执行</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">throwMessage</span><span class="token punctuation">(</span><span class="token string">"报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402092802512.png" alt="image-20240402092802512" /></p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">throwMessage</span><span class="token punctuation">(</span><span class="token string">"报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402092838100.png" alt="image-20240402092838100" /></p></li></ol><h3 id="处理if分支操作"><a class="anchor" href="#处理if分支操作">#</a> 处理 if 分支操作</h3><ol><li><p>定义函数式接口</p><p>创建一个名为 BranchHandle 的函数式接口，接口的参数为两个 Runnable 接口。这两个 Runnable 的接口分别代表了为 true 或 false 时要进行的操作</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@FunctionalInterface</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BranchHandle</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="5"></td><td><pre>     *  分支操作</pre></td></tr><tr><td data-num="6"></td><td><pre>     * @param trueHandle 为 true 时要进行的操作</pre></td></tr><tr><td data-num="7"></td><td><pre>     * @param falseHandle 为 false 时要进行的操作</pre></td></tr><tr><td data-num="8"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">void</span> <span class="token function">trueOrFalseHandle</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> trueHandle<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> falseHandle<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>编写判断方法</p><p>在工具类创建一个名为 isTrueOrFalse 的方法，方法返回值为刚才定义的 函数式接口 - BranchHandle。</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BranchHandle</span> <span class="token function">isTrueOrFalse</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token punctuation">(</span>trueHandle<span class="token punctuation">,</span> falseHandle<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>         trueHandle<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>         falseHandle<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>使用方式</p><p>参数为 true 时，执行 trueHandle，参数为 false 时，执行 falseHandle</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isTrueOrFalse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trueOrFalseHandle</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"既然没报错"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"又报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402093740772.png" alt="image-20240402093740772" /></p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isTrueOrFalse</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trueOrFalseHandle</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"既然没报错"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"又报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402093815667.png" alt="image-20240402093815667" /></p></li></ol><h3 id="判断是否有值"><a class="anchor" href="#判断是否有值">#</a> 判断是否有值</h3><ol><li><p>定义函数</p><p>创建一个名为 PresentOrElseHandler 的函数式接口，接口的参数一个为 Consumer 接口。一个为 Runnable 分别代表值不为空时执行消费操作和值为空时执行的其它操作</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@FunctionalInterface</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PresentOrElseHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="5"></td><td><pre>     * 值不为空时执行消费操作</pre></td></tr><tr><td data-num="6"></td><td><pre>     * 值为空时执行其它操作</pre></td></tr><tr><td data-num="7"></td><td><pre>     * @param action  值不为空时执行消费操作</pre></td></tr><tr><td data-num="8"></td><td><pre>     * @param emptyAction 值为空时执行其它操作</pre></td></tr><tr><td data-num="9"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">void</span> <span class="token function">presentOrElseHandle</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">></span></span> action<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> emptyAction<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>编写判断方法</p><p>在工具类创建一个名为 isBlankOrNoBlank 的方法，方法的返回值为刚才定义的 函数式接口 - PresentOrElseHandler</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PresentOrElseHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">isBlankOrNoBlank</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token punctuation">(</span>consumer<span class="token punctuation">,</span> runnable<span class="token punctuation">)</span> <span class="token operator">-></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>         runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token keyword">else</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>         consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li><li><p>使用方式</p><p>调用工具类参数后，调用 函数式接口 的 PresentOrElseHandle 方法传入一个 Consumer 和 Runnable 参数不为空时，打印参数</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isBlankOrNoBlank</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">presentOrElseHandle</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402094834029.png" alt="image-20240402094834029" /></p><p>传入一个空值</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">FunctionUtils</span><span class="token punctuation">.</span><span class="token function">isBlankOrNoBlank</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">presentOrElseHandle</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"报错了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>打印结果：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240402094923939.png" alt="image-20240402094923939" /></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;function函数式接口&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#function函数式接口&quot;&gt;#&lt;/a&gt; Function 函数式接口&lt;/h2&gt;
&lt;p&gt;使用注解：&lt;mark&gt;@FunctionalInterface&lt;/mark&gt; 标识，并且只包含一</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    <category term="lambda" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E7%9F%A5%E8%AF%86%E7%82%B9/lambda/"/>
    
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    <category term="lambda" scheme="https://pigpigletsgo.github.io/tags/lambda/"/>
    
  </entry>
  
  <entry>
    <title>pgsql从5张不同表查询字段数据并综合返回</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-2024-7-4-pgsql%E4%BB%8E5%E5%BC%A0%E4%B8%8D%E5%90%8C%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E5%B9%B6%E7%BB%BC%E5%90%88%E8%BF%94%E5%9B%9E/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/sql/sql-blog-2024-7-4-pgsql%E4%BB%8E5%E5%BC%A0%E4%B8%8D%E5%90%8C%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E5%B9%B6%E7%BB%BC%E5%90%88%E8%BF%94%E5%9B%9E/</id>
    <published>2024-07-09T11:18:56.000Z</published>
    <updated>2024-07-09T11:18:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pgsql从5张不同表查询字段数据并综合返回"><a class="anchor" href="#pgsql从5张不同表查询字段数据并综合返回">#</a> pgsql 从 5 张不同表查询字段数据并综合返回</h1><p>编写的查询数据库表的 sql</p><p><mark>思路</mark>：从 5 张不同的表中，它们的结构大致相同。我们从 5 张表中拿到不同的字段的数据并返回</p><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">SELECT</span> </pre></td></tr><tr><td data-num="2"></td><td><pre>    cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cr<span class="token punctuation">.</span>operating_income<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_operating_income<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>nr<span class="token punctuation">.</span>total_profit<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_total_profit<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>nr<span class="token punctuation">.</span>net_profit<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_net_profit<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span>asset_liability_ratio<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_asset_liability_ratio<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span>return_on_equity<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_return_on_equity<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span>operate_cash_ratio<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_operate_cash_ratio<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span>assets<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_assets<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span>operating_activities_cash_flow<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_operating_activities_cash_flow<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    CAST<span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>dr<span class="token punctuation">.</span>liabilities<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_liabilities</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">SELECT</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>operating_income<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> operating_income</pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        pro_va_mea_province_cash_flow_financing_income_costs_result</pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">)</span> <span class="token keyword">AS</span> cr</pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> </pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">SELECT</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>total_profit<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> total_profit<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>net_profit<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> net_profit</pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        pro_va_mea_province_cost_profit_net_result</pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">)</span> <span class="token keyword">AS</span> nr <span class="token keyword">ON</span> cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span> <span class="token operator">=</span> nr<span class="token punctuation">.</span><span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> </pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">SELECT</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>asset_liability_ratio<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> asset_liability_ratio<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>return_on_equity<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> return_on_equity<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>operate_cash_ratio<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> operate_cash_ratio<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>assets<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> assets<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>operating_activities_cash_flow<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> operating_activities_cash_flow</pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        pro_va_mea_province_equity_ratio_cash_flow</pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token punctuation">)</span> <span class="token keyword">AS</span> cf <span class="token keyword">ON</span> cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span> <span class="token operator">=</span> cf<span class="token punctuation">.</span><span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> </pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token keyword">SELECT</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token keyword">YEAR</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token function">SUM</span><span class="token punctuation">(</span>liabilities<span class="token punctuation">)</span> :: <span class="token keyword">NUMERIC</span> <span class="token keyword">AS</span> liabilities</pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token keyword">FROM</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        pro_va_mea_province_liabilities_depreciation_result</pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token punctuation">)</span> <span class="token keyword">AS</span> dr <span class="token keyword">ON</span> cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span> <span class="token operator">=</span> dr<span class="token punctuation">.</span><span class="token keyword">YEAR</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token keyword">GROUP</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span> </pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token keyword">ORDER</span> <span class="token keyword">BY</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    cr<span class="token punctuation">.</span><span class="token keyword">YEAR</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>返回 List&lt;Map&lt;String, Object&gt;&gt;<br /> 返回结果：</p><pre><code>[&#123;  year=2021,  total_net_profit=0.00,  total_asset_liability_ratio=0.00,  total_return_on_equity=0.00,  total_assets=0.00,  total_operating_activities_cash_flow=0.00,  total_liabilities=0.00,  total_operating_income=0.00,  total_total_profit=0.00,  total_operate_cash_ratio=0.00&#125;&#123;  year=2022,  total_net_profit=0.00,  total_asset_liability_ratio=0.00,  total_return_on_equity=0.00,  total_assets=0.00,  total_operating_activities_cash_flow=0.00,  total_liabilities=0.00,  total_operating_income=0.00,  total_total_profit=0.00,  total_operate_cash_ratio=0.00&#125;&#123;  year=2023,  total_net_profit=0.00,  total_asset_liability_ratio=0.00,  total_return_on_equity=0.00,  total_assets=0.00,  total_operating_activities_cash_flow=0.00,  total_liabilities=0.00,  total_operating_income=0.00,  total_total_profit=0.00,  total_operate_cash_ratio=0.00&#125;]</code></pre><p>对数据进行格式转换：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">formatAnnualEvaluation</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> annualEvaluation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> formattedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token comment">// 需要显示的字段列表</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token class-name">AnnualEvaluationF</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token class-name">AnnualEvaluationF</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">String</span> fielder <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> fielder<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 遍历每个字段</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token comment">// 初始化一个 Map 用于存储当前字段的数据</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> fieldData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            fieldData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">,</span> field<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 遍历每个年份，将当前字段的值按年份填充到 fieldData 中</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> entry <span class="token operator">:</span> annualEvaluation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token class-name">Integer</span> year <span class="token operator">=</span> <span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"year"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"year"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token class-name">Object</span> value <span class="token operator">=</span> <span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> entry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                fieldData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>year<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token comment">// 将当前字段的数据添加到 formattedData 中</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            formattedData<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fieldData<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">return</span> formattedData<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>[  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_asset_liability_ratio&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_net_profit&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_return_on_equity&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_assets&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_operating_activities_cash_flow&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_liabilities&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_operating_income&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_total_profit&quot;  &#125;,  &#123;    2023=0.00,    2022=0.00,    2021=0.00,    field=&quot;total_operate_cash_ratio&quot;  &#125;]</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pgsql从5张不同表查询字段数据并综合返回&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#pgsql从5张不同表查询字段数据并综合返回&quot;&gt;#&lt;/a&gt; pgsql 从 5 张不同表查询字段数据并综合返回&lt;/h1&gt;
&lt;p&gt;编写的查询数据库表的 sql&lt;/p&gt;
</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/sql/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/tags/blog/"/>
    
    <category term="sql" scheme="https://pigpigletsgo.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Java使用代码调用接口(HttpClient详细使用实例)</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/httprequest/Java%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%A0%81%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3(HttpClient%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B)/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/httprequest/Java%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%A0%81%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3(HttpClient%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B)/</id>
    <published>2024-07-09T02:37:28.000Z</published>
    <updated>2024-07-09T02:37:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java使用代码调用接口httpclient详细使用实例"><a class="anchor" href="#java使用代码调用接口httpclient详细使用实例">#</a> Java 使用代码调用接口 (HttpClient 详细使用实例)</h1><p><strong>了解什么是 HttpClient</strong>：</p><p>Java 中的 HttpClient 是用于进行 HTTP 请求和响应的类库。它提供了一种<mark>简单，灵活，可扩展的方式来发送 HTTP 请求</mark> ==，并处理 HTTP 响应 ==。HttpClient 的<mark>核心</mark>功能包括<mark>创建 HTTP 请求，设置请求参数，发送请求，接收响应，处理响应数据以及处理异常情况</mark>。它使得在 Java 应用程序中实现<mark> HTTP 通信</mark>变得更加<mark>方便和高效</mark>。</p><p><strong>HttpClient 的主要功能</strong>：</p><p>实现了所有 HTTP 的方法 (GET,POST,PUT,DELETE,HEAD,OPTIONS) 等</p><p>支持 HTTPS 协议</p><p>支持自动 (跳转) 转向</p><p>. . .</p><h2 id="1-引入依赖"><a class="anchor" href="#1-引入依赖">#</a> 1 引入依赖</h2><h3 id="11-引入httpclient的依赖"><a class="anchor" href="#11-引入httpclient的依赖">#</a> 1.1 引入 HttpClient 的依赖</h3><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>httpclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.5.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="12-引入fastjson依赖"><a class="anchor" href="#12-引入fastjson依赖">#</a> 1.2 引入 fastjson 依赖</h3><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>PS：本人引入依赖的目的是，在后续实例中，会用到 &quot;将对象转化为 json 字符串的功能&quot;，也可以引其它有此功能的依赖</p><p>PS：使用的是 SpringBoot 工程通过 HttpClient 发送请求到 controller 接口，并将 controller 接口的响应返回到 HttpClient 中来接收。</p><h2 id="2-详细使用示例"><a class="anchor" href="#2-详细使用示例">#</a> 2 详细使用示例</h2><p>声明：此示例中，以 Java 发送 HttpClient (在 test 里面单元测试发送的)；也是以 Java 接收的 (在 controller 里面接收的)</p><h3 id="21-get无参"><a class="anchor" href="#21-get无参">#</a> 2.1 GET 无参</h3><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过建造者模式 获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 创建 Get 请求指定请求路径</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token class-name">HttpGet</span> httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span><span class="token string">"http://localhost/doGetControllerOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token comment">// 发送 Get 请求 得到响应对象</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 从响应对象中后去响应实体</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token class-name">HttpEntity</span> responseEntity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> responseEntity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEntity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="22"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"doGetControllerOne"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doGetControllerOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"hello"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>响应状态为：HTTP/1.1 200 响应内容长度为：5响应内容为：hello</code></pre><h3 id="22-get有参方式一直接拼接url"><a class="anchor" href="#22-get有参方式一直接拼接url">#</a> 2.2 GET 有参 (方式一：直接拼接 URL)</h3><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过建造者模式 获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 使用 SpringBuffer 来进行参数的拼接</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token class-name">StringBuffer</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token comment">// 使用 URLEncoder 进行编码防止中文乱码</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"name="</span> <span class="token operator">+</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"Xxx"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"age=24"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token comment">// 创建 Get 请求</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token class-name">HttpGet</span> httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span><span class="token string">"http://localhost/doGetControllerTwo?"</span> <span class="token operator">+</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token comment">// 配置请求信息</span></pre></td></tr><tr><td data-num="20"></td><td><pre>      <span class="token class-name">RequestConfig</span> requestConfig <span class="token operator">=</span> <span class="token class-name">RequestConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token comment">// 链接超时时间</span></pre></td></tr><tr><td data-num="22"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token comment">// 请求超时时间</span></pre></td></tr><tr><td data-num="24"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token comment">//socket 读写超时时间</span></pre></td></tr><tr><td data-num="26"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setSocketTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>         <span class="token comment">// 是否允许重定向</span></pre></td></tr><tr><td data-num="28"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setRedirectsEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>      <span class="token comment">// 将配置信息添加到 Get 请求中</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      httpGet<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>requestConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>      <span class="token comment">// 执行 Get 请求获取响应对象</span></pre></td></tr><tr><td data-num="33"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>      <span class="token comment">// 获取响应实体</span></pre></td></tr><tr><td data-num="35"></td><td><pre>      <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> entity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>         <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="46"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"doGetControllerTwo"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doGetControllerOne</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token string">"今年"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", 已经"</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" 岁了"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>响应状态为：HTTP/1.1 200 响应内容长度为：26响应内容为：今年Xxx, 已经24 岁了</code></pre><h3 id="23-get有参方式二使用url获得httpget"><a class="anchor" href="#23-get有参方式二使用url获得httpget">#</a> 2.3 GET 有参 (方式二：使用 URL 获得 HttpGet)</h3><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过建造者模式获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token class-name">URI</span> uri <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token comment">// 创建 List 集合类型为 用于表示键值对的接口通常用于 HTTP 请求和响应的参数</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NameValuePair</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token comment">//  设置参数</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"Xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token comment">// 构建 URI 对象的信息</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URIBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setScheme</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"/doGetControllerTwo"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">URISyntaxException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>   <span class="token comment">// 创建 Get 请求传入请求信息</span></pre></td></tr><tr><td data-num="23"></td><td><pre>   <span class="token class-name">HttpGet</span> httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>   <span class="token comment">// 配置信息</span></pre></td></tr><tr><td data-num="25"></td><td><pre>   <span class="token class-name">RequestConfig</span> requestConfig <span class="token operator">=</span> <span class="token class-name">RequestConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">setSocketTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">setRedirectsEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>   <span class="token comment">// 将配置信息传入请求中</span></pre></td></tr><tr><td data-num="32"></td><td><pre>   httpGet<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>requestConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>      <span class="token comment">// 执行请求获得响应对象</span></pre></td></tr><tr><td data-num="36"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>      <span class="token comment">// 通过响应对象获取实体</span></pre></td></tr><tr><td data-num="38"></td><td><pre>      <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> entity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>      <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="48"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"doGetControllerTwo"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doGetControllerOne</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token string">"今年"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", 已经"</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" 岁了"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>响应状态为：HTTP/1.1 200 响应内容长度为：26响应内容为：今年Xxx, 已经18 岁了</code></pre><h3 id="24-post无参"><a class="anchor" href="#24-post无参">#</a> 2.4 POST 无参</h3><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span><span class="token string">"http://localhost/doPostControllerOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取响应长度为："</span> <span class="token operator">+</span> entity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"doPostControllerOne"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doPostControllerOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token string">"这个post请求没有任何参数"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>状态为：HTTP/1.1 200 获取响应长度为：34获取响应内容为：这个post请求没有任何参数</code></pre><h3 id="25-post有参普通参数"><a class="anchor" href="#25-post有参普通参数">#</a> 2.5 POST 有参 (普通参数)</h3><p>PS：POST 传递普通参数时，方式与 GET 一样即可，这里以直接在 URL 后缀上参数的方式示例</p><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过构造者模式获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 创建字符缓冲区用于拼接参数</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token class-name">StringBuffer</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"name="</span> <span class="token operator">+</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"Xxx"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"age=24"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>   <span class="token comment">// 创建 Post 请求</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span><span class="token string">"http://localhost/doPostControllerTwo?"</span> <span class="token operator">+</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      <span class="token comment">// 执行请求并返回响应对象</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>      <span class="token comment">// 获取实体</span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> entity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>      <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"doPostControllerTwo"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doPostControllerTwo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> <span class="token string">"今年"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", 已经"</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">" 岁了"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>状态为：HTTP/1.1 200 响应内容长度为：26响应内容为：今年Xxx, 已经24 岁了</code></pre><h3 id="26-post有参对象参数"><a class="anchor" href="#26-post有参对象参数">#</a> 2.6 POST 有参 (对象参数)</h3><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过构建者模式获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 创建 Post 请求</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span><span class="token string">"http://localhost/doPostControllerThree"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   <span class="token comment">// 创建对象并设置属性信息</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"刘桑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token comment">// 将对象序列化为 JSON 数据</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   <span class="token class-name">String</span> jsonString <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>   <span class="token comment">// 设置 json 数据为 utf-8 返回 json 实体</span></pre></td></tr><tr><td data-num="14"></td><td><pre>   <span class="token class-name">StringEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringEntity</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token comment">// 设置请求的实体数据</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   <span class="token comment">// 设置请求的请求头信息为 json 数据格式</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   httpPost<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json;charset=utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token comment">// 执行请求并返回响应对象</span></pre></td></tr><tr><td data-num="22"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>      <span class="token comment">// 获取实体</span></pre></td></tr><tr><td data-num="24"></td><td><pre>      <span class="token class-name">HttpEntity</span> responseEntity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> responseEntity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为"</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEntity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>      <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="34"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"doPostControllerThree"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">doPostControllerThree</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token keyword">return</span> user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>响应状态为：HTTP/1.1 200 响应内容长度为：-1响应内容为&#123;&quot;name&quot;:&quot;刘桑&quot;,&quot;age&quot;:20&#125;</code></pre><h3 id="27-post有参普通参数-对象参数"><a class="anchor" href="#27-post有参普通参数-对象参数">#</a> 2.7 POST 有参 (普通参数 + 对象参数)</h3><p>PS：POST 传递普通参数时，方式与 GET 一样即可，这里以通过 URI 获取 HttpPost 的方式为例</p><p>HttpClient 发送示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Test</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">// 通过构造者模式获取 HttpClient 对象</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClientBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   <span class="token comment">// 创建 List 集合泛型为 键值对的对象用常用于 HTTP 请求的参数和响应的参数</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NameValuePair</span><span class="token punctuation">></span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">"meaning"</span><span class="token punctuation">,</span> <span class="token string">"这是什么鬼？"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token class-name">URI</span> uri <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 创建 URI 对象构建 URI 的请求信息</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URIBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setScheme</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"doPostControllerFour"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>         <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">URISyntaxException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>   <span class="token comment">// 创建 Post 请求对象并传入请求信息</span></pre></td></tr><tr><td data-num="22"></td><td><pre>   <span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>   <span class="token comment">// 创建 User 对象并设置属性信息</span></pre></td></tr><tr><td data-num="24"></td><td><pre>   <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>   user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"刘桑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>   user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>   <span class="token comment">// 将 User 对象序列化为 JSON 数据并转换为 utf-8 格式的实体数据</span></pre></td></tr><tr><td data-num="28"></td><td><pre>   <span class="token class-name">StringEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringEntity</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>   <span class="token comment">// 将实体数据设置到请求实体中</span></pre></td></tr><tr><td data-num="30"></td><td><pre>   httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>   <span class="token comment">// 设置请求头信息为 json 格式</span></pre></td></tr><tr><td data-num="32"></td><td><pre>   httpPost<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json;charset=utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>   <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>   <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>      <span class="token comment">// 执行请求并获取响应对象</span></pre></td></tr><tr><td data-num="36"></td><td><pre>      response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>      <span class="token comment">// 获取实体</span></pre></td></tr><tr><td data-num="38"></td><td><pre>      <span class="token class-name">HttpEntity</span> responseEntity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"状态为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容长度为："</span> <span class="token operator">+</span> responseEntity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应内容为："</span> <span class="token operator">+</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responseEntity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>   <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>      <span class="token comment">// 释放资源</span></pre></td></tr><tr><td data-num="48"></td><td><pre>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>         <span class="token keyword">if</span> <span class="token punctuation">(</span>httpClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            httpClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>      <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>对应接收示例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"doPostControllerFour"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">UserDto</span> <span class="token function">doPostControllerFour</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">,</span> <span class="token class-name">Integer</span> flag<span class="token punctuation">,</span> <span class="token class-name">String</span> meaning<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token class-name">UserDto</span> userDto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   userDto<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   userDto<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   userDto<span class="token punctuation">.</span><span class="token function">setFlag</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   userDto<span class="token punctuation">.</span><span class="token function">setMeaning</span><span class="token punctuation">(</span>meaning<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>   <span class="token keyword">return</span> userDto<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打印结果：</p><pre><code>状态为：HTTP/1.1 200 响应内容长度为：-1响应内容为：&#123;&quot;name&quot;:&quot;刘桑&quot;,&quot;age&quot;:20,&quot;flag&quot;:4,&quot;meaning&quot;:&quot;这是什么鬼？&quot;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java使用代码调用接口httpclient详细使用实例&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#java使用代码调用接口httpclient详细使用实例&quot;&gt;#&lt;/a&gt; Java 使用代码调用接口 (HttpClient 详细使用实例)&lt;/h1&gt;
&lt;p</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="第三方库" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    <category term="httprequest" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/httprequest/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="第三方库" scheme="https://pigpigletsgo.github.io/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    <category term="httprequest" scheme="https://pigpigletsgo.github.io/tags/httprequest/"/>
    
  </entry>
  
  <entry>
    <title>Servlet文件下载</title>
    <link href="https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>https://pigpigletsgo.github.io/computer-science/java/%E6%A1%88%E4%BE%8BDemo/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</id>
    <published>2024-07-08T03:49:32.000Z</published>
    <updated>2024-07-08T03:49:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>案例:</p><ul><li>文件下载需求:<ol><li>页面显示超链接</li><li>点击超链接后弹出下载提示框</li><li>完成图片文件下载</li></ol></li><li>分析:<ol><li>超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框，不满足需求</li><li>需求：任何资源都必须弹出下载提示框</li><li>解决方式：使用响应头设置资源的打开方式:<ul><li>content-disposition:attachment;filename=xxx</li></ul></li></ol></li><li>步骤:<ol><li>定义页面，编辑超链接 href 属性，指向 Servlet, 传递资源名称 filename</li><li>定义 Servlet<ol><li>获取文件名称</li><li>使用字节输入流加载文件进内存</li><li>指定 response 的响应头:content-dispostion:attchment;filename=xxx</li><li>将数据写出到 response 输出流</li></ol></li></ol></li></ul><p>案例代码:</p><ul><li>HttpServlet 类</li></ul><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/servletload"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Servletload</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token comment">//1. 获取请求参数，文件名称</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token class-name">String</span> file <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"filename"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">//2. 使用字节输入流加载文件进内存</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">//2.1 找到文件服务器路径，ServletContext: 代表整个 web 应用，可以对服务器通信</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token class-name">ServletContext</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">//realpath: 获取文件服务器路径:/opt/idea/ideaDemo/day12_1/out/artifacts/day12_1_war_exploded/image/tupian.jpg</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">String</span> filerealpath <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/image/"</span><span class="token operator">+</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>filerealpath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token comment">//2.2 使用字节流关联</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token class-name">FileInputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filerealpath<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">//3. 设置 response 的响应头</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">//3.1 获取 MIME 类型</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token class-name">String</span> mime <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">//3.2 设置响应头类型 content-type: 服务器告诉客户端本次响应体格式以及编码</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        resp<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"content-type"</span><span class="token punctuation">,</span>mime<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 解决中文文件名乱码问题</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">//1. 获取 user-agent 请求头 user-agent: 浏览器告诉服务器访问时使用的浏览器版本信息，可以解决浏览器的兼容性问题</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token class-name">String</span> user_agent <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">//2. 使用工具类编码即可</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        file <span class="token operator">=</span> <span class="token class-name">DownLoadUtils</span><span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span>user_agent<span class="token punctuation">,</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token comment">//3.3 设置响应头打开方式，解释如下 PS</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        resp<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"content-disposition"</span><span class="token punctuation">,</span><span class="token string">"attachment;filename="</span><span class="token operator">+</span><span class="token string">"/image/"</span><span class="token operator">+</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token comment">//4. 将输入流的数据写出到输出流中</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token class-name">ServletOutputStream</span> out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> by <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>by<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token comment">// 关闭流</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span><span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>PS： <code>Content-Disposition</code>  头字段的设置主要有两个部分：</p><ol><li><code>attachment</code> ：告诉浏览器这是一个附件，应该提示用户下载而不是直接显示</li><li><code>filename</code> ：指定下载时保存的文件名</li></ol><ul><li>Html</li></ul><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/dkx/image/风景.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/dkx/servletload?filename=风景.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><ul><li>解决中文乱码问题</li></ul><p>需要使用到 BASE64Encoder.jar 包来对火狐浏览器进行编码的处理</p><p>PS：URLEncoder.encode 的作用</p><blockquote><p>由于文件名可能包含特殊符号 (例如 空格，中文字符等)，使用 <code>URLEncoder.encode</code>  对文件名进行编码以确保它在 HTTP 头中能够被正确传输和解析。 <code>URLEncoder.encode</code>  会将这些特殊字符转换为 <code>%</code>  加上两位十六进制数的形式，这样可以避免传输过程中由于字符编码问题引起的错误。</p><p><strong>编码原理</strong></p><p>URL 编码的基本原则是将字符串中的非字母数字字符和一些特殊字符转换为 <code>%</code>  加上该字符的 ASCII 十六进制值，具体步骤如下：</p><ol><li>非字母数字字符转换：将非字母字符 (例如 空格，中文字符，特殊符号等) 转换为 <code>%</code>  加上两位十六进制数字表示的形式。例如，空格转换为 <code>%20</code> ，汉字 &quot;文&quot; 的 UTF-8 编码为  <code>E6 96 87</code> ，所以 &quot;文&quot; 会被转换为  <code>%E6%96%87</code></li><li>保留字符转换：某些字符在 URL 中有特殊意义，如 <code>?</code> ， <code>&amp;</code> ， <code>=</code>  等。这些字符也会被转换为百分号编码形式，以避免在 URL 中被误解</li></ol></blockquote><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DownLoadUtils</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token class-name">String</span> agent<span class="token punctuation">,</span><span class="token class-name">String</span> filename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>agent<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"MSIE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token comment">//IE 浏览器</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            filename <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            filename <span class="token operator">=</span> filename<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>agent<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Firefox"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token comment">// 火狐浏览器</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token class-name">BASE64Encoder</span> base64encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            filename <span class="token operator">=</span> <span class="token string">"?utf-8?B?"</span> <span class="token operator">+</span> base64encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"?="</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 其它浏览器</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            filename <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">return</span> filename<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>PS：服务端使用 URLEncoder.encode 对文件名进行编码，以确保在 HTTP 头中传输不出错。例如，测试 文件.txt 会被编码为：测试 + 文件.txt 或者测试 %20 文件.txt</p><p>浏览器处理：浏览器接收到响应后，会解析 <code>Content-Disposition</code>  头字段中的文件名，并自动解码 URL 编码的文件名，使其恢复为原始的用户友好的名称。这样用户在下载对话框中看到的文件名会是 测试 文件.txt 而不是编码后的形式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;案例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件下载需求:
&lt;ol&gt;
&lt;li&gt;页面显示超链接&lt;/li&gt;
&lt;li&gt;点击超链接后弹出下载提示框&lt;/li&gt;
&lt;li&gt;完成图片文件下载&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;分析:
&lt;ol&gt;
&lt;li&gt;超链接指向的资源如果能够被浏览器解析，则</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="java" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/categories/computer-science/java/%E6%A1%88%E4%BE%8BDemo/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="servlet" scheme="https://pigpigletsgo.github.io/tags/servlet/"/>
    
    <category term="案例Demo" scheme="https://pigpigletsgo.github.io/tags/%E6%A1%88%E4%BE%8BDemo/"/>
    
  </entry>
  
  <entry>
    <title>数据库执行语句打印性能分析框架p6Spy的使用</title>
    <link href="https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/p6Spy/"/>
    <id>https://pigpigletsgo.github.io/computer-science/database/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/p6Spy/</id>
    <published>2024-07-07T03:28:54.000Z</published>
    <updated>2024-07-07T03:28:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库执行语句打印-性能分析框架p6spy的使用"><a class="anchor" href="#数据库执行语句打印-性能分析框架p6spy的使用">#</a> 数据库执行语句打印、性能分析框架（p6Spy 的使用）</h1><h2 id="概述"><a class="anchor" href="#概述">#</a> 概述</h2><blockquote><p>我们在调式程序难免要输出执行<span class="exturl" data-url="aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1zcWwlRTglQUYlQUQlRTUlOEYlQTUmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw"> sql 语句</span>，可是使用 Mybatis 或者 JPA 等框架时，打印的的 sql 总是带着 <code>?</code>  占位符，不能直接在数据库执行并且不够直观。所以迫切需要一款专注打印可执行的 SQL 及执行时间的 sql 打印、性能分析框架 <code>p6Sql</code> 。</p></blockquote><h2 id="一-p6spy"><a class="anchor" href="#一-p6spy">#</a> 一、p6spy</h2><h3 id="1-介绍"><a class="anchor" href="#1-介绍">#</a> 1、介绍</h3><p>p6spy 是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的 sql 语句。</p><p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly9wNnNweS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvaW5zdGFsbC5odG1s">p6spy 官网</span></p><h3 id="2-原理"><a class="anchor" href="#2-原理">#</a> 2、原理</h3><p>p6spy 将应用的数据源给劫持了，应用操作数据库其实在调用 p6spy 的数据源，p6spy 劫持到需要执行的 sql 或者 hql 之类的语句之后，它自己去调用一个 realDatasource，再去操作数据库。</p><h3 id="3-应用场景"><a class="anchor" href="#3-应用场景">#</a> 3、应用场景</h3><p>p6spy 可以输出日志到文件中，控制台， 或者传递给 Log4j，而且还能配搭 SQL Profiler 或 IronTrackSQL 图形化监控 SQL 语句，监测到哪些语句的执行是耗时的，逐个优化。</p><h2 id="二-使用"><a class="anchor" href="#二-使用">#</a> 二、使用</h2><h3 id="1-引入依赖"><a class="anchor" href="#1-引入依赖">#</a> 1、引入依赖</h3><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>p6spy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>p6spy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.9.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="2-配置文件修改"><a class="anchor" href="#2-配置文件修改">#</a> 2、配置文件修改</h3><blockquote><ol><li>替换你的 JDBC Driver 为 com.p6spy.engine.spy.P6SpyDriver</li><li>在原来 url jdbc: 后面添加 p6spy：。如：jdbc:p6spy:mysql://127.0.0.1:3306 <code>或</code>  jdbc:p6spy:oracle:thin:@localhost:1521:ORCL</li><li>添加 p6spy 的配置文件 spy.properties</li></ol></blockquote><h3 id="3-简单的spyproperties"><a class="anchor" href="#3-简单的spyproperties">#</a> 3、简单的 spy.properties</h3><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key attr-name">module.log</span><span class="token punctuation">=</span><span class="token value attr-value">com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 自定义日志打印</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key attr-name">logMessageFormat</span><span class="token punctuation">=</span><span class="token value attr-value">com.p6spy.engine.spy.appender.SingleLineFormat</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#customLogMessageFormat=%(currentTime) | SQL 耗时： %(executionTime) ms | 连接信息： %(category)-%(connectionId) | 执行语句： %(sql)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># 使用控制台记录 sql</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token key attr-name">appender</span><span class="token punctuation">=</span><span class="token value attr-value">com.p6spy.engine.spy.appender.StdoutLogger</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">## 配置记录 Log 例外</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token key attr-name">excludecategories</span><span class="token punctuation">=</span><span class="token value attr-value">info,debug,result,batc,resultset</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># 设置使用 p6spy driver 来做代理</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token key attr-name">deregisterdrivers</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment"># 日期格式</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token key attr-name">dateformat</span><span class="token punctuation">=</span><span class="token value attr-value">yyyy-MM-dd HH:mm:ss</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment"># 实际驱动</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token key attr-name">driverlist</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment"># 是否开启慢 SQL 记录</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token key attr-name">outagedetection</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment"># 慢 SQL 记录标准 秒</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token key attr-name">outagedetectioninterval</span><span class="token punctuation">=</span><span class="token value attr-value">2</span></pre></td></tr></table></figure><p>上面的的 <code>logMessageFormat</code>  是打印的格式 <code>SingleLineFormat</code>  最基础的配置是不会打印 sql 的。如果修改有两种方式：</p><h3 id="1-使用内置自定义格式化器customlineformat手动配置打印格式"><a class="anchor" href="#1-使用内置自定义格式化器customlineformat手动配置打印格式">#</a> 1、使用内置自定义格式化器 ( <code>CustomLineFormat</code> ) 手动配置打印格式</h3><p><strong>使用示例</strong>：</p><blockquote><ol><li>修改配置文件的格式化为自定义格式化 logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat</li><li>配置文件中添加手动配置打印的格式，推荐示例：customLogMessageFormat=%(currentTime) | SQL 耗时： %(exceutionTime) ms | 连接信息： %(category)-%(connectionld) | 执行语句： %(sql)</li></ol></blockquote><h3 id="2-自己创建类实现messageformattingstrategy接口重写formatmessage方法即可"><a class="anchor" href="#2-自己创建类实现messageformattingstrategy接口重写formatmessage方法即可">#</a> 2、自己创建类实现 MessageFormattingStrategy 接口重写 formatMessage 方法即可</h3><p><strong>使用示例</strong>：</p><blockquote><ol><li>创建类 P6SpyLogger</li></ol></blockquote><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">P6SpyLogger</span> <span class="token keyword">implements</span> <span class="token class-name">MessageFormattingStrategy</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="3"></td><td><pre>     * @Desc: 重写日志格式方法</pre></td></tr><tr><td data-num="4"></td><td><pre>     * now: 当前时间</pre></td></tr><tr><td data-num="5"></td><td><pre>     * elapsed: 执行耗时</pre></td></tr><tr><td data-num="6"></td><td><pre>     * category：执行分组</pre></td></tr><tr><td data-num="7"></td><td><pre>     * prepared：预编译 sql 语句</pre></td></tr><tr><td data-num="8"></td><td><pre>     * sql: 执行的真实 SQL 语句，已替换占位</pre></td></tr><tr><td data-num="9"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">formatMessage</span><span class="token punctuation">(</span><span class="token keyword">int</span> connectionId<span class="token punctuation">,</span> <span class="token class-name">String</span> now<span class="token punctuation">,</span> <span class="token keyword">long</span> elapsed<span class="token punctuation">,</span> <span class="token class-name">String</span> category<span class="token punctuation">,</span> <span class="token class-name">String</span> prepared<span class="token punctuation">,</span> <span class="token class-name">String</span> sql<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sql<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"[ "</span> <span class="token operator">+</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" ] --- | took "</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                <span class="token operator">+</span> elapsed <span class="token operator">+</span> <span class="token string">"ms | "</span> <span class="token operator">+</span> category <span class="token operator">+</span> <span class="token string">" | connection "</span> <span class="token operator">+</span> connectionId <span class="token operator">+</span> <span class="token string">"\n "</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token operator">+</span> sql <span class="token operator">+</span> <span class="token string">";"</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><blockquote><ol start="2"><li>将配置文件中的格式化器属性改为自己的类<br /> logMessageFormat=com.xxx.xxx.P6SpyLogger</li></ol></blockquote><h2 id="p6spy有3种日志输出方式"><a class="anchor" href="#p6spy有3种日志输出方式">#</a> p6spy 有 3 种日志输出方式</h2><pre><code>#（推荐）使用Slf4j输出 配合SpringBoot使用日志门面#appender=com.p6spy.engine.spy.appender.Slf4JLogger# 仅控制台输出#appender=com.p6spy.engine.spy.appender.StdoutLogger# 文件输出，使用内置日志输出到文件#appender=com.p6spy.engine.spy.appender.FileLogger</code></pre><h2 id="附录spyproperties详细说明"><a class="anchor" href="#附录spyproperties详细说明">#</a> 附录：spy.properties 详细说明</h2><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 指定应用的日志拦截模块，默认为 com.p6spy.engine.spy.P6SpyFactory</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#modulelist=com.p6spy.engine.spy.P6SpyFactory,com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment"># 真实 JDBC driver , 多个以 逗号 分割 默认为空</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#driverlist=</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment"># 是否自动刷新 默认 flase</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#autoflush=false</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># 配置 SimpleDateFormat 日期格式 默认为空</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">#dateformat=</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment"># 打印堆栈跟踪信息 默认 flase</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">#stacktrace=false</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment"># 如果 stacktrace=true，则可以指定具体的类名来进行过滤。</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#stacktraceclass=</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment"># 监测属性配置文件是否进行重新加载</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token comment">#reloadproperties=false</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token comment"># 属性配置文件重新加载的时间间隔，单位：秒 默认 60s</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token comment">#reloadpropertiesinterval=60</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment"># 指定 Log 的 appender，取值：</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token comment">#appender=com.p6spy.engine.spy.appender.StdoutLogger</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token comment">#appender=com.p6spy.engine.spy.appender.FileLogger</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token comment"># 指定 Log 的文件名 默认 spy.log</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token comment">#logfile=spy.log</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token comment"># 指定是否每次是增加 Log，设置为 false 则每次都会先进行清空 默认 true</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment">#append=true</span></pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token comment"># 指定日志输出样式  默认为 com.p6spy.engine.spy.appender.SingleLineFormat , 单行输出 不格式化语句</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment">#logMessageFormat=com.p6spy.engine.spy.appender.SingleLineFormat</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token comment"># 也可以采用  com.p6spy.engine.spy.appender.CustomLineFormat 来自定义输出样式，默认值是 %(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token comment"># 可用的变量为:</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token comment">#   %(connectionId)            connection id</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token comment">#   %(currentTime)             当前时间</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token comment">#   %(executionTime)           执行耗时</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">#   %(category)                执行分组</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">#   %(effectiveSql)            提交的 SQL 换行</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token comment">#   %(effectiveSqlSingleLine)  提交的 SQL 不换行显示</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">#   %(sql)                     执行的真实 SQL 语句，已替换占位</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token comment">#   %(sqlSingleLine)           执行的真实 SQL 语句，已替换占位 不换行显示</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment">#customLogMessageFormat=%(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token comment"># date 类型字段记录日志时使用的日期格式 默认 dd-MMM-yy</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token comment">#databaseDialectDateFormat=dd-MMM-yy</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment"># boolean 类型字段记录日志时使用的日期格式 默认 boolean 可选值 numeric</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">#databaseDialectBooleanFormat=boolean</span></pre></td></tr><tr><td data-num="55"></td><td><pre></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment"># 是否通过 jmx 暴露属性 默认 true</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token comment">#jmx=true</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token comment"># 如果 jmx 设置为 true 指定通过 jmx 暴露属性时的前缀 默认为空</span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token comment"># com.p6spy(.&lt;jmxPrefix>)?:name=&lt;optionsClassName></span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token comment">#jmxPrefix=</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token comment"># 是否显示纳秒 默认 false</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token comment">#useNanoTime=false</span></pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token comment"># 实际数据源 JNDI</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token comment">#realdatasource=/RealMySqlDS</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token comment"># 实际数据源 datasource class</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token comment">#realdatasourceclass=com.mysql.jdbc.jdbc2.optional.MysqlDataSource</span></pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token comment"># 实际数据源所携带的配置参数 以 k=v 方式指定 以 分号 分割</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token comment">#realdatasourceproperties=port;3306,serverName;myhost,databaseName;jbossdb,foo;bar</span></pre></td></tr><tr><td data-num="73"></td><td><pre></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token comment"># jndi 数据源配置</span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token comment"># 设置 JNDI 数据源的 NamingContextFactory。</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token comment">#jndicontextfactory=org.jnp.interfaces.NamingContextFactory</span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token comment"># 设置 JNDI 数据源的提供者的 URL。</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token comment">#jndicontextproviderurl=localhost:1099</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token comment"># 设置 JNDI 数据源的一些定制信息，以分号分隔。</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token comment">#jndicontextcustom=java.naming.factory.url.pkgs;org.jboss.naming:org.jnp.interfaces</span></pre></td></tr><tr><td data-num="81"></td><td><pre></pre></td></tr><tr><td data-num="82"></td><td><pre><span class="token comment"># 是否开启日志过滤 默认 false， 这项配置是否生效前提是配置了 include/exclude/sqlexpression</span></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token comment">#filter=false</span></pre></td></tr><tr><td data-num="84"></td><td><pre></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token comment"># 过滤 Log 时所包含的表名列表，以逗号分隔 默认为空</span></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token comment">#include=</span></pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token comment"># 过滤 Log 时所排除的表名列表，以逗号分隔 默认为空</span></pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token comment">#exclude=</span></pre></td></tr><tr><td data-num="89"></td><td><pre></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token comment"># 过滤 Log 时的 SQL 正则表达式名称  默认为空</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token comment">#sqlexpression=</span></pre></td></tr><tr><td data-num="92"></td><td><pre></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token comment">#显示指定过滤 Log 时排队的分类列表，取值: error, info, batch, debug, statement,</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token comment">#commit, rollback, result and resultset are valid values</span></pre></td></tr><tr><td data-num="95"></td><td><pre><span class="token comment"># (默认 info,debug,result,resultset,batch)</span></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token comment">#excludecategories=info,debug,result,resultset,batch</span></pre></td></tr><tr><td data-num="97"></td><td><pre></pre></td></tr><tr><td data-num="98"></td><td><pre><span class="token comment"># 是否过滤二进制字段</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token comment"># (default is false)</span></pre></td></tr><tr><td data-num="100"></td><td><pre><span class="token comment">#excludebinary=false</span></pre></td></tr><tr><td data-num="101"></td><td><pre></pre></td></tr><tr><td data-num="102"></td><td><pre><span class="token comment"># P6Log 模块执行时间设置，整数值 (以毫秒为单位)，只有当超过这个时间才进行记录 Log。 默认为 0</span></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token comment">#executionThreshold=</span></pre></td></tr><tr><td data-num="104"></td><td><pre></pre></td></tr><tr><td data-num="105"></td><td><pre><span class="token comment"># P6Outage 模块是否记录较长时间运行的语句 默认 false</span></pre></td></tr><tr><td data-num="106"></td><td><pre><span class="token comment"># outagedetection=true|false</span></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token comment"># P6Outage 模块执行时间设置，整数值 （以秒为单位)），只有当超过这个时间才进行记录 Log。 默认 30s</span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token comment"># outagedetectioninterval=integer time (seconds)</span></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库执行语句打印-性能分析框架p6spy的使用&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#数据库执行语句打印-性能分析框架p6spy的使用&quot;&gt;#&lt;/a&gt; 数据库执行语句打印、性能分析框架（p6Spy 的使用）&lt;/h1&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a c</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="database" scheme="https://pigpigletsgo.github.io/categories/computer-science/databse/"/>
    
    <category term="mybatis" scheme="https://pigpigletsgo.github.io/categories/computer-science/databse/mybatis/"/>
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/categories/computer-science/databse/mybatis/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="mybatis" scheme="https://pigpigletsgo.github.io/tags/mybatis/"/>
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="database" scheme="https://pigpigletsgo.github.io/tags/database/"/>
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    <category term="第三方库" scheme="https://pigpigletsgo.github.io/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-plus查询，值为null，字段不显示问题</title>
    <link href="https://pigpigletsgo.github.io/bug/mybatis-plus%E6%9F%A5%E8%AF%A2%EF%BC%8C%E5%80%BC%E4%B8%BAnull%EF%BC%8C%E5%AD%97%E6%AE%B5%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://pigpigletsgo.github.io/bug/mybatis-plus%E6%9F%A5%E8%AF%A2%EF%BC%8C%E5%80%BC%E4%B8%BAnull%EF%BC%8C%E5%AD%97%E6%AE%B5%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2024-07-07T02:47:42.000Z</published>
    <updated>2024-07-07T02:47:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mybatis-plus查询值为null字段不显示问题"><a class="anchor" href="#mybatis-plus查询值为null字段不显示问题">#</a> mybatis-plus 查询，值为 null，字段不显示问题</h1><p>场景：</p><blockquote><p>编写了一个 sql 返回 List&lt;Map&lt;String, Object&gt;&gt; 类型数据，而数据库中某些字段有 id 的值而没有 name 的值，此时 name 为 null 的应该查询出来是：{id:10，name:null} 但是结果却是：{id:10} 后面的 name 就没有了，这篇文章就是解决这个问题的</p></blockquote><p>解决方案：</p><blockquote><p>需要修改 mybatis-plus 的配置即可。将 mybatis-plus 的 call-setters-on-nulls 设置为 true 即可</p></blockquote><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token comment"># 默认，每次执行 sql 都会开关 statement</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token key atrule">executor-type</span><span class="token punctuation">:</span> simple</pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token key atrule">configuration</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment"># 解决字段为 null 查询不显示问题</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token key atrule">call-setters-on-nulls</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr></table></figure><h2 id="代码案例"><a class="anchor" href="#代码案例">#</a> 代码案例</h2><p>数据库表数据：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240707104120197.png" alt="image-20240707104120197" /></p><p>dao</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Mapper</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ClassDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassEntity</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token string">"SELECT"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token string">"*"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token string">"FROM tab_class"</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>serviceImpl</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"classService"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassDao</span><span class="token punctuation">,</span> <span class="token class-name">ClassEntity</span><span class="token punctuation">></span></span> <span class="token keyword">implements</span> <span class="token class-name">ClassService</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token annotation punctuation">@Resource</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">ClassDao</span> classDao<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">return</span> classDao<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/mpj/class"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">ClassService</span> classService<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getInfo"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token keyword">return</span> classService<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="在不使用配置call-setters-on-nulls-true的情况下的数据如下"><a class="anchor" href="#在不使用配置call-setters-on-nulls-true的情况下的数据如下">#</a> 在不使用配置 call-setters-on-nulls: true 的情况下的数据如下：</h3><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240707104326694.png" alt="image-20240707104326694" /></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240707104240316.png" alt="image-20240707104240316" /></p><p>这并不是我们想要的</p><h3 id="使用配置call-setters-on-nulls-true的情况下的数据如下"><a class="anchor" href="#使用配置call-setters-on-nulls-true的情况下的数据如下">#</a> 使用配置 call-setters-on-nulls: true 的情况下的数据如下：</h3><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240707104340953.png" alt="image-20240707104340953" /></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240707104425041.png" alt="image-20240707104425041" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mybatis-plus查询值为null字段不显示问题&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#mybatis-plus查询值为null字段不显示问题&quot;&gt;#&lt;/a&gt; mybatis-plus 查询，值为 null，字段不显示问题&lt;/h1&gt;
&lt;p&gt;场景：</summary>
      
    
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/categories/bug/"/>
    
    
    <category term="问题总汇" scheme="https://pigpigletsgo.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E6%B1%87/"/>
    
    <category term="MyBatisPlus" scheme="https://pigpigletsgo.github.io/tags/MyBatisPlus/"/>
    
  </entry>
  
  <entry>
    <title>记录不存在则插入，存在则更新-replace into与insert update</title>
    <link href="https://pigpigletsgo.github.io/computer-science/database/%E7%9F%A5%E8%AF%86%E7%82%B9/%E8%AE%B0%E5%BD%95%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%88%99%E6%8F%92%E5%85%A5%EF%BC%8C%E5%AD%98%E5%9C%A8%E5%88%99%E6%9B%B4%E6%96%B0-replace%20into%E4%B8%8Einsert%20update/"/>
    <id>https://pigpigletsgo.github.io/computer-science/database/%E7%9F%A5%E8%AF%86%E7%82%B9/%E8%AE%B0%E5%BD%95%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%88%99%E6%8F%92%E5%85%A5%EF%BC%8C%E5%AD%98%E5%9C%A8%E5%88%99%E6%9B%B4%E6%96%B0-replace%20into%E4%B8%8Einsert%20update/</id>
    <published>2024-07-06T14:04:32.000Z</published>
    <updated>2024-07-06T14:04:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录不存在则插入存在则更新-replace-into与insert-update"><a class="anchor" href="#记录不存在则插入存在则更新-replace-into与insert-update">#</a> 记录不存在则插入，存在则更新 - replace into 与 insert update</h1><h2 id="需求背景"><a class="anchor" href="#需求背景">#</a> 需求背景</h2><p>MySQL 版本：5.7.20</p><h2 id="开发规范"><a class="anchor" href="#开发规范">#</a> 开发规范</h2><p>公司后端开发规范有这么一点：</p><p>更新数据库表中数据的时候，不允许先删，然后批量插入</p><p>需要将入参与表中数据比判断，找出哪些是新插入，哪些需要更新，哪些是删除的，然后再做对应的数据操作</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706212158696.png" alt="image-20240706212158696" /></p><h2 id="需求"><a class="anchor" href="#需求">#</a> 需求</h2><p>我们有表如下：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706212226411.png" alt="image-20240706212226411" /></p><p>当商品配送完之后，需要记录它的最新配送价，若商品最新配送价已经存在则进行更新，不存在则执行插入</p><p>针对这个需求，我们有哪些实现方式？</p><h2 id="代码处理"><a class="anchor" href="#代码处理">#</a> 代码处理</h2><p>按开发规范中说的处理</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706212332642.png" alt="image-20240706212332642" /></p><p>通过代码在内存中进行数据处理，找出插入列表与更新列表，然后执行数据库操作</p><p>因为是很常规的插入与更新操作，所以这种处理方式适用于所有的关系型数据库</p><h2 id="replace-into"><a class="anchor" href="#replace-into">#</a> REPLACE INTO</h2><p>当数据库是 MySQL，碰到 <code>不存在则插入，存在则更新</code> 的需求时，第一时间往往想到的是 <code>REPLACE INTO</code></p><h3 id="工作原理"><a class="anchor" href="#工作原理">#</a> 工作原理</h3><p><code>REPLACE INTO</code>  跟 <code>INSERT</code>  功能类似</p><p>不同点在于： <code>REPACE INTO</code>  首先尝试插入数据到列表中，如果发现表中已经有此行数据 (根据主键或唯一索引判断) 则 <mark>先删除此行数据，然后插入新的数据</mark>，否则直接插入新数据</p><p><code>REPLACE</code>  语句会返回一个数，表示受影响的行的数目，该数是 <mark>被删除和被插入的行数的和</mark></p><p>我们来看个示例：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210920165140031-1272755383.gif" alt="img" /></p><p>对于示例结果，相信大家都能理解</p><p>需要强调的是：根据唯一索引 <code>uk_comany_ware</code>  判定， <code>(1001,10001,19.8,1,1)</code>  已经存在，那么先删除此记录，然后插入 <code>(1001,10001,20.5,1,1)</code></p><p>而 <code>(1001,10002,5.45,1,1)</code>  判定为不存在，那么直接插入</p><p>这就导致我们看到的输出结果是： <code>受影响的行：3</code> ，同时自增主键由 1 编程了 2，3。而不是 1，2</p><h3 id="有坑"><a class="anchor" href="#有坑">#</a> 有坑</h3><p>正是因为 <code>REPLACE INTO</code>  的工作原理，不可避免就产生了一些需要注意的地方</p><h4 id="1-破坏外键约束"><a class="anchor" href="#1-破坏外键约束">#</a> 1、破坏外键约束</h4><p>如果主键被指定成了其它表的外键，那么 <code>REPALCE INTO</code>  更新 (非插入) 时影响到了其它表的外键约束，那么会执行失败，提示类似信息：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706213212163.png" alt="image-20240706213212163" /></p><p>可能会想到：我们发开过程中，会遵循阿里开发手册中的规约，其中有一条规约如下：</p><blockquote><p>[强制] 不得使用外键与级联，一切外键概念必须在引用层解决。</p><p>说明：(概念解释) 学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于单机低并发，不适合分布式，高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度</p></blockquote><p>我们不用外键了，也就不会出现前面的 <code>[Err] 1451</code>  错误了</p><p>其实阿里开发手册中这条规约，不是说不让我们使用外键，而是说不用数据库层面的外键约束，在应用代码层面解决外键逻辑</p><p>用数据库层面的外键，问题提示的很明显，也不会产生脏数据</p><p>而应用层解决外键，反而时外键约束的数据一致性问题更隐晦，产生脏数据，如下：</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706213738628.png" alt="image-20240706213738628" /></p><p>从此我们踏上了修改数据的不归路</p><h4 id="2-主键加速自增"><a class="anchor" href="#2-主键加速自增">#</a> 2、主键加速自增</h4><p>很多情况下，我们的主键是 <code>int</code>  或 <code>bigint</code>  类型，并且设置成了自增</p><p>不管是 <code>int</code>  还是 <code>bigint</code> ，都有一个最大值，如果一直自增下去，总有一天会达到最大值 (可能到地老天荒也达不到这个值)</p><p><code>REPLACE INTO</code>  的更新是先删除再插入，会导致主键自增 1 (照理来说，更新是不应该导致主键自增 1)</p><p>如果更新频率远远大于插入频率，本不用考虑的自增主键用完的问题，可能就需要考虑了</p><p>另外也会导致主键不连续，主键值跳跃式的出现在表中</p><h4 id="3-主从切换问题"><a class="anchor" href="#3-主从切换问题">#</a> 3、主从切换问题</h4><p>master： <code>master-local</code> ，slave： <code>slave-192.168.0.112</code> ，同步库： <code>my_project</code></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210920213612604-726198536.gif" alt="img" /></p><p>从上图可以看出，主从复制是正常的</p><p>接下来我们看看 <code>REPLACE INTO</code>  对主从复制有什么影响</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210920225844733-1376543610.gif" alt="img" /></p><p>此时 <code>master</code>  与 <code>slave</code>  上的 <code>t_ware_last_delivery_price</code>  的下一个非手工指定的主键都是 11 ( <code>AUTO_INCREMENT=11</code> )，两者都是一致的我们在 <code>master</code>  上使用 <code>REPLACE INTO</code>  更新一条记录</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210921115509806-1666874136.gif" alt="img" /></p><p><code>master</code>  与 <code>slave</code>  的数据是一致的，但是 <code>master</code>  上的上一个自增主键是 <code>AUTO_INCREMENT=12</code> ，而 <code>slave</code>  上却是 <code>AUTO_INCREMENT=11</code></p><p>可能会有人觉得：数据一致就行，下一个自增主键不一致有什么关系？</p><p>我们来想一下这个问题：如果 <code>master</code>  库崩了，我们会怎么做？会将 <code>slave</code>  提升为 <code>master</code></p><p>此时问题来了： <code>slave</code>  提升成 <code>master</code>  之前，实际数据的 <code>id</code>  已经到了 <code>11</code> ，但其 <code>AUTO_INCREMENT=11</code> ，也就是说下一个自增主键是 <code>11</code>  那么下一条不指定 <code>id</code>  值的新记录是插入时就会发生 <code>duplicate key error</code> ，每次冲突之后 <code>AUTO_INCREMENT += 1</code> ，直到增长为 <code>max(id) + 1</code>  之后才能恢复正常</p><h2 id="insert-update"><a class="anchor" href="#insert-update">#</a> INSERT UPDATE</h2><p>针对 <code>不存在则插入，存在则更新</code> ， <code>MySQL</code>  还提供了另外一种方式实现： <code>INSERT ... ON DUPLICATE KEY UPDATE Statement</code></p><h3 id="工作原理-2"><a class="anchor" href="#工作原理-2">#</a> 工作原理</h3><p>如果指定 <code>ON DUPLICATE KEY UPDATE</code>  子句，并且要插入的行将导致 <mark>唯一索引或主键</mark> 中出现重复值，则会更新旧行，否则是插入</p><p>例如，如果 <code>列a</code>  被声明为唯一且包含值 1，则以下两条语句具有类似的效果</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215109099.png" alt="image-20240706215109099" /></p><p>但是这两条 SQL 的效果并不完全相同，我们以 <code>t_ware_last_delivery_price </code> 为例，来看看它们的区别</p><p>我们先来看看 <code>UPDATE</code></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210921000349920-2080470467.gif" alt="img" /></p><p>只是对 <code>id = 11</code>  的 <code>last_delivery_price </code> 就行了修改，受影响的行只有 1，不会影响 <code>AUTO_INCREMENT </code> 的值</p><p>我们再来看看 <code>INSERT INTO ... ON DUPLICATE KEY UPDATE</code></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/747662-20210921001925000-908908723.gif" alt="img" /></p><p>对 <code>id = 11</code>  的 <code>last_delivery_price </code> 进行了修改，受影响的行是 2，并且 <code>AUTO_INCREMENT=13</code></p><p>此刻，我相信我们有共同的两个疑问</p><ol><li>为什么受影响的行数是 2，而不是 1</li><li>自增主键为什么自增了 1 ( <code>AUTO_INCREMENT </code> 为什么等于 13，而不是原有的 12)</li></ol><p>为什么受影响的行数是 2，而不是 1，官方文档有这么一段说明</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215438538.png" alt="image-20240706215438538" /></p><p>意思就是：1 表示新插入一行，2 表示更新了一行，0 表示更新前后值未变</p><p>我们换个角度来理解，假设让我们来设计，一条 SQL 既能插入，也能更新，我们如何告知用户到底是插入成功了，还是更新成功了？</p><p>所以 1，2 仅仅只是用来区分插入和更新，2 并非真正受影响的行数</p><p>主键明明没有变化，为什么 <code>AUTO_INCREMENT=13</code>  自增了 1？</p><p>这和 <code>MySQL</code>  的主键自增的参数有关 <code>innodb_autoinc_lock_mode </code> ，它有 3 个值 <code>0,1,2</code></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215708231.png" alt="image-20240706215708231" /></p><p><code>mysql5.1</code>  之后其默认是 1</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215733816.png" alt="image-20240706215733816" /></p><p>因为 <code>innodb_autoinc_lock_mode = 1</code></p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215752243.png" alt="image-20240706215752243" /></p><p>所以上述 SQL 被当做简单插入处理，在真正修改数据之前就对 <code>AUTO_INCREMENT </code> 自增 1 处理了</p><h3 id="批量操作"><a class="anchor" href="#批量操作">#</a> 批量操作</h3><p>不仅支持单条操作，也支持批量操作</p><p><img data-src="https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240706215854225.png" alt="image-20240706215854225" /></p><p>和批量插入类似</p><h3 id="有坑-2"><a class="anchor" href="#有坑-2">#</a> 有坑</h3><p>因为 <code>innodb_autoinc_lock_mode = 1</code>  是一个折中的选择，一般不会去改它，所以有些需要注意的点</p><h4 id="1-主键加速自增"><a class="anchor" href="#1-主键加速自增">#</a> 1、主键加速自增</h4><p>与 <code>replace into</code>  类似，即使是更新，也会导致 <code>AUTO_INCREMENT </code> 自增，加速了主键的衰老同时也会导致主键的跳跃</p><h4 id="2-主从切换问题"><a class="anchor" href="#2-主从切换问题">#</a> 2、主从切换问题</h4><p>与 <code>replace into </code> 类似， <code>master</code>  上的更新导致 <code>AUTO_INCREMENT </code> 自增，而 <code>AUTO_INCREMENT</code>  又未同步到 <code>slave</code>  当 <code>slave</code>  升级成 <code>master</code>  后，可能会出现 <code>duplicate key error</code>  与 <code>replace into</code>  不同的是，上述两个问题可以通过设置 <code>innodb_autoinc_lock_mode = 0</code>  来避免，因为很多场景下对性能要求并不高</p><h2 id="总结"><a class="anchor" href="#总结">#</a> 总结</h2><p>1、如何选择哪种方式</p><p>上述三种方式各有优略，代码处理不依赖于具体的数据库，可移植性高，也不会引入特定数据库的在这方面的缺陷</p><p><code>replace into</code>  的方式不推荐（坑有点多），它完全可以由  <code>INSERT UPDATE</code>  替代</p><p><code>INSERT UPDATE</code>  可以减少我们的代码，但它是 MySQL 的拓展实现，只有 MySQL 支持，可移植性差</p><p>2、针对  <code>INSERT UPDATE</code>  的 “坑”，我们可以结合具体的业务来设置  <code>innodb_autoinc_lock_mode</code>  ，适当的避免它的 “坑”</p><p>3、道路千万条，合适第一条</p><p>针对某个需求，实现方式往往有很多，我们要做的就是从中找到最适合的那一条</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;记录不存在则插入存在则更新-replace-into与insert-update&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#记录不存在则插入存在则更新-replace-into与insert-update&quot;&gt;#&lt;/a&gt; 记录不存在则插入，存在则更新 - </summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="database" scheme="https://pigpigletsgo.github.io/categories/computer-science/databse/"/>
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/categories/computer-science/databse/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="database" scheme="https://pigpigletsgo.github.io/tags/database/"/>
    
    <category term="知识点" scheme="https://pigpigletsgo.github.io/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>spring.profiles.active和spring.profiles.include的使用/区别</title>
    <link href="https://pigpigletsgo.github.io/computer-science/blog/%E9%A1%B9%E7%9B%AE/spring.profiles.active%E5%92%8Cspring.profiles.include%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%88%AB/"/>
    <id>https://pigpigletsgo.github.io/computer-science/blog/%E9%A1%B9%E7%9B%AE/spring.profiles.active%E5%92%8Cspring.profiles.include%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%88%AB/</id>
    <published>2024-07-06T07:42:06.000Z</published>
    <updated>2024-07-06T07:42:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="springprofilesactive和springprofilesinclude的使用区别"><a class="anchor" href="#springprofilesactive和springprofilesinclude的使用区别">#</a> spring.profiles.active 和 spring.profiles.include 的使用 / 区别</h1><h2 id="业务场景"><a class="anchor" href="#业务场景">#</a> 业务场景</h2><blockquote><p>一套程序可能会被部署到不同的环境，开发，测试，生产环境有不同的配置信息，包括 jdbc 地址，ip，端口等。如果在同一个配置文件中，每次部署去改配置，会非常麻烦且容易出错</p></blockquote><h2 id="优化方式"><a class="anchor" href="#优化方式">#</a> 优化方式</h2><p>spring.profiles.active 属性</p><p>一个好方法就是<mark>创建不同的配置文件</mark>，且命名规则遵循 application-${profile}.properties，例如：</p><ol><li>开发环境配置文件：application-dev.properties</li><li>测试环境配置文件：application-test.properties</li><li>生产环境配置文件：application-prod.properties</li></ol><p profile="">当然，我们不能删除项目最顶层的 application.properties 配置，在该文件中，<mark>根据部署场景不同，切换不同的配置</mark>文件：配置 spring.profiles.active，属性值为 $</p><ol><li>spring.profiles.active=dev：启用 application-dev.properties</li><li>spring.profiles.active=test：启用 application-test.properties</li><li>spring.profiles.active=prod：启用 application-prod.properties</li></ol><p>在此推荐一个结合 pom.xml 的配置方式：</p><p>application.properties 中配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>spring.profiles.active=@sys.pro.type.active@</pre></td></tr></table></figure><p>pom.xml 配置：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>         <span class="token comment">&lt;!--id 唯一性比如：test 或 dev--></span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>xxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token comment">&lt;!-- 标签命名可以随意但是有意义比如环境就是 dev--></span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sys.pro.env</span><span class="token punctuation">></span></span>$&#123;profileActive&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sys.pro.env</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sys.pro.type</span><span class="token punctuation">></span></span>datasience<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sys.pro.type</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sys.pro.type.active</span><span class="token punctuation">></span></span>$&#123;profileActive&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sys.pro.type.active</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h2 id="启动时指定"><a class="anchor" href="#启动时指定">#</a> 启动时指定</h2><p>在执行有参启动时，可以再命名中进行指定要选用的配置文件，例如：</p><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">java</span> <span class="token parameter variable">-jar</span> xx.jar <span class="token parameter variable">--spring.profiles.active</span><span class="token operator">=</span>test</pre></td></tr></table></figure><p>这个命名优先级是最高的，即使 application.properties 中已经配置 spring.profiles.active=dev，最终程序还是会用 application-test.properteis 配置文件。</p><h2 id="springprofilesinclude属性"><a class="anchor" href="#springprofilesinclude属性">#</a> spring.profiles.include 属性</h2><p>再进一步，对于开发环境，想 <mark>用不同的配置文件存储开发环境不同的配置</mark> ，例如：</p><p>application-dev1.properties 中存储 jdbc 信息</p><p>application-dev2.properties 中存储 ip，端口信息</p><p>即在启用 application-dev.properties 开发环境 (主) 配置文件时，<mark>同时启用</mark> application-dev1.properties 和 application-dev2.properties。那么，可以使用 spring.profiles.include 属性：<mark>同时启用其它的 profile</mark></p><h2 id="配置方法"><a class="anchor" href="#配置方法">#</a> 配置方法</h2><ol><li><p>若是 properties 文件：spring.profiles.include=dev1,dev2</p></li><li><p>若是 yaml 文件中</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">spring.profiles.include</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">-</span>dev1</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">-</span>dev2</pre></td></tr><tr><td data-num="4"></td><td><pre>或者：spring.profiles.include<span class="token punctuation">:</span>dev1<span class="token punctuation">,</span>dev2</pre></td></tr></table></figure></li></ol><h3 id="配置的位置和区别"><a class="anchor" href="#配置的位置和区别">#</a> 配置的位置和区别：</h3><ol><li>配置方式一：application.properies 中，配置 spring.profiles.active=dev 的同时指定 spring.profiles.include=dev1,dev2</li><li>配置方式二：application.properties 中，配置 spring.profiles.active=dev，application-dev.properties 中，配置 spring.profiles.indclude=dev1，dev2。使用 application-dev.properties 时自定就激活了 dev1，dev2 两个文件，不用再次指定。(个人认为第二种方法更好)</li></ol><h2 id="区别"><a class="anchor" href="#区别">#</a> 区别：</h2><ol><li><p>第一种方式启动时，控制台打印 The following profiles are active:dev1,dev2,dev</p></li><li><p>第二种方式启动时，控制台打印 The following profiles are active:dev, dev1,dev2</p><p>按照顺序， 后面的覆盖前面的</p></li></ol><h2 id="用示例来使用和区分"><a class="anchor" href="#用示例来使用和区分">#</a> 用示例来使用和区分</h2><p>在某个工程里，我依据开发，生产环境，以及它们要同时激活的配置，创建了多个配置，分别如下：</p><p>application-dev.properties 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=dev</pre></td></tr><tr><td data-num="2"></td><td><pre>my.height=170</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#同时触发 dev1 和 dev2 的激活</span></pre></td></tr><tr><td data-num="5"></td><td><pre>spring.profiles.include=dev1<span class="token punctuation">,</span>dev2</pre></td></tr></table></figure><p>application-dev1.properties 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=dev1</pre></td></tr><tr><td data-num="2"></td><td><pre>my.height=171</pre></td></tr></table></figure><p>application-dev2.properteis 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=dev2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#my.height=172</span></pre></td></tr></table></figure><p>application-prod.properties 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=prod</pre></td></tr><tr><td data-num="2"></td><td><pre>my.height=180</pre></td></tr></table></figure><p>application-prod1.properties 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=prod1</pre></td></tr><tr><td data-num="2"></td><td><pre>my.height=181</pre></td></tr></table></figure><p>application-prod2.properties 配置：</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre>my.name=prod2</pre></td></tr><tr><td data-num="2"></td><td><pre>my.height=182</pre></td></tr></table></figure><h2 id="测试一"><a class="anchor" href="#测试一">#</a> 测试一：</h2><p>在 application.properties 配置文件中，指定</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#激活的是开发环境配置文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre>spring.profiles.active=dev</pre></td></tr></table></figure><p>启动时不指定参数</p><p>结果：打印的内容为：姓名：dev2，身高：171</p><p>原因：</p><ol><li><p>先加载 application.properties</p></li><li><p>再加载 application-dev.properties</p><p>my.name=dev</p><p>my.height=170</p></li><li><p>加载 application-dev1.properties</p><p>my.name=dev1</p><p>my.height=171</p></li><li><p>加载 application-dev2.properties</p><p>my.name=dev2</p><p>my.height=171</p></li></ol><h2 id="测试二"><a class="anchor" href="#测试二">#</a> 测试二：</h2><p>在 application.properties 配置文件中，指定</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#激活的是生产环境配置文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre>spring.profiles.active=prod</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#同时触发 prod1 和 prod2 的激活</span></pre></td></tr><tr><td data-num="4"></td><td><pre>spring.profiles.include=prod1</pre></td></tr></table></figure><p>启动时不指定参数</p><p>结果：</p><p>The following profiles are active: prod1,prod2,prod</p><p>打印内容为：姓名：prod，身高：180</p><h2 id="测试四"><a class="anchor" href="#测试四">#</a> 测试四：</h2><p>在 application.properties 配置文件中，指定 my.height=185，且把 dev、dev1、dev2 里 my.height 配置都删掉，最终结果是：身高：185。（application.properties 会作那个最保底的配置文件）。<br />如果把 application.properties 里的 my.height 配置也删掉，那请求就得报错啦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;springprofilesactive和springprofilesinclude的使用区别&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#springprofilesactive和springprofilesinclude的使用区别&quot;&gt;#&lt;/a&gt; spr</summary>
      
    
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/categories/computer-science/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/"/>
    
    <category term="项目" scheme="https://pigpigletsgo.github.io/categories/computer-science/blog/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="计算机学科" scheme="https://pigpigletsgo.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E7%A7%91/"/>
    
    <category term="blog" scheme="https://pigpigletsgo.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
