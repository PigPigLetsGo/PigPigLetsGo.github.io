{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"对称二叉树\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/programming-questions/%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/programming-questions/%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/",
            "title": "对称二叉树",
            "date_published": "2024-04-02T10:00:50.806Z",
            "content_html": "<h1 id=\"对称二叉树\"><a class=\"markdownIt-Anchor\" href=\"#对称二叉树\">#</a> 对称二叉树</h1>\n<p>给你一个二叉树的根节点  <code>root</code>  ， 检查它是否轴对称。</p>\n<p><strong>示例 1：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/1698026966-JDYPDU-image.png\" alt=\"img\"></p>\n<pre><code>输入：root = [1,2,2,3,4,4,3]\n输出：true\n</code></pre>\n<p><strong>示例 2：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/1698027008-nPFLbM-image.png\" alt=\"img\"></p>\n<pre><code>输入：root = [1,2,2,null,3,null,3]\n输出：false\n</code></pre>\n<p><strong>提示：</strong></p>\n<ul>\n<li>树中节点数目在范围  <code>[1, 1000]</code>  内</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<h2 id=\"思路分析\"><a class=\"markdownIt-Anchor\" href=\"#思路分析\">#</a> 思路分析：</h2>\n<p>比如说 我给出一个 对称的二叉树如下图所示：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240128114131089.png\" alt=\"image-20240128114131089\"></p>\n<p>那么怎么判断它到底是不是对称的呢？</p>\n<p>首先根节点不用检查，我们让 根节点的 左右两个孩子去做比较，看看它俩的值是否一样，它俩值相等就表示至少从这两个节点开始它是对称的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240128114317932.png\" alt=\"image-20240128114317932\"></p>\n<p>然后接着往下走，此时需要注意：</p>\n<p>左边 2 节点的 左孩子 跟 右边 2 节点的 右孩子 进行对比，两个边上的对比一下</p>\n<p>然后 左边 2 节点的 右孩子 跟 右边 2 节点 的 左孩子 进行对比</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240128114716085.png\" alt=\"image-20240128114716085\"></p>\n<p>接着往下比较也是类似的 比如说 比较到 3 节点了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240128114812764.png\" alt=\"image-20240128114812764\"></p>\n<p>也是 左边 3 节点 的 左孩子 跟 右边 3 节点的 右孩子 进行比较</p>\n<p>左边 3 节点的 右孩子 跟 右边 3 节点的 左孩子 进行比较</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240128114955109.png\" alt=\"image-20240128114955109\"></p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现：</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isSymmetric</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeNode</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//root 节点不用做比较 去比较 root 的 left 和 right 节点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeNode</span> left<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TreeNode</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 如果 两边都是 null 说明也是一样的 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> right <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">//left 和 right 不能同时为 null ，其中一个为 null 说明不对称</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> left <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 如果 左边的 值 和 右边的值不一样 说明不对称</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">.</span>val <span class=\"token operator\">!=</span> right<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 1：判断 两边是否一样。2：判断内部两个是否一样</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "java",
                "编程题",
                "二叉树",
                "对称二叉树"
            ]
        }
    ]
}