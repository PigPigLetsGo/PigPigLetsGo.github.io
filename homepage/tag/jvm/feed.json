{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"jvm\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/JVM/Jvm/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/JVM/Jvm/",
            "title": "JVM概述",
            "date_published": "2024-04-02T06:23:30.363Z",
            "content_html": "<h1 id=\"jvm内存结构\"><a class=\"markdownIt-Anchor\" href=\"#jvm内存结构\">#</a> JVM 内存结构</h1>\n<h2 id=\"什么是jvm\"><a class=\"markdownIt-Anchor\" href=\"#什么是jvm\">#</a> 什么是 JVM</h2>\n<p><strong>Java Virtual Machine</strong>：Java 虚拟机，用来保证 Java 语言跨平台</p>\n<p>Java 虚拟机可以看做是一台抽象的计算机，如同真实的计算机那样，它有自己的指令集以及各种运行内存区域</p>\n<p>Java 虚拟机与 Java 语言并没有必然的联系，它只与特定的二进制文件格式 (class 文件格式) 所关联</p>\n<p>Java 虚拟机就是一个<mark>字节码翻译器</mark>，它将字节码文件翻译成各个系统对应的机器码，确保字节码文件能在各个系统正确运行</p>\n<h2 id=\"为什么要学习jvm\"><a class=\"markdownIt-Anchor\" href=\"#为什么要学习jvm\">#</a> 为什么要学习 JVM</h2>\n<p>我们知道一个 java 应用程序上线后，肯定会时不时的出现一些问题，除去网络 / 系统本身的问题很多时候 Java 应用程序也会出现问题都是 Java 的虚拟机内存出现的问题，要么是内存溢出了，要么是 GC 停乏 导致响应慢。</p>\n<p>如何解决这些问题呢？</p>\n<p>首先必须学会看懂日志。那么就必须能看懂<mark> GC 日志</mark>，这是 Java 虚拟机中的一部分。看懂了 GC 日志就要明白什么是 新生代，老年代，元空间 (永久代) 等。这些就是 java 虚拟机的<mark>内存模型</mark>，懂了内存模型就要知道 java 虚拟机是如何<mark>垃圾回收</mark>的。它们使用的垃圾回收的算法是怎么样的，它们有何优缺点。接下来就是各种垃圾回收的特性。</p>\n<p>这一切就是有必然的联系的。</p>\n<h2 id=\"jvm体系结构\"><a class=\"markdownIt-Anchor\" href=\"#jvm体系结构\">#</a> JVM 体系结构</h2>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311171635830.jpeg\" alt=\"在这里插入图片描述\"></p>\n<p>如上图所示，JVM 分为三个主要的子系统。</p>\n<ul>\n<li>Class Loader SubSystem ：类加载器 子系统</li>\n<li>Runtime Data Areas ：运行时数据区 子系统</li>\n<li>Execution Engine ：执行引擎 子系统</li>\n</ul>\n<h3 id=\"class-loader-subsystem\"><a class=\"markdownIt-Anchor\" href=\"#class-loader-subsystem\">#</a> Class Loader SubSystem</h3>\n<p>Java 的动态类加载功能由类加载器子系统处理</p>\n<p>它是在运行时首次引用类的时候，加载，连接，并初始化类文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311171943816.png\" alt=\"image-20231117194324173\"></p>\n<p>1、在加载这个地方，它是通过<mark>引导类加载器</mark>，<mark>扩展类加载器</mark>，<mark>应用程序类加载器</mark>。这三个类加载器帮助完成加载。</p>\n<p>2、加载完毕后进行连接操作。而在连接这里又分为三个步骤：验证，准备，解析。</p>\n<p><mark>验证阶段</mark>：字节码验证程序将验证生成的字节码是否正确，如果验证失败将收到，验证错误。</p>\n<p><mark>准备阶段</mark>：为所有静态变量分配内存，并分配默认值。</p>\n<p><mark>解析阶段</mark>：用方法去对原始引用代替所有符号内存引用</p>\n<p>3、初始化 (类加载的最后阶段)。</p>\n<p>此处所有的静态变量将被分配原始值并且执行静态代码块</p>\n<h2 id=\"runtime-data-areas\"><a class=\"markdownIt-Anchor\" href=\"#runtime-data-areas\">#</a> Runtime Data Areas</h2>\n<p><strong>主要组成部分</strong>：方法区 (Method Area)，堆区 (Heap Area)，虚拟机栈 (Stack Area)，PC 寄存器 (PC Registers)，本地方法栈 (Native Method Stack)。</p>\n<hr>\n<p><strong>方法区</strong>：存储所有类级别的数据，每个 java 虚拟机只有一个方法区所以它是共享的资源</p>\n<p><strong>堆区</strong>：所有对象及其对应的实例变量和数组都将存储在此处，而每个虚拟机堆区也只有一个也是共享资源的</p>\n<blockquote>\n<p><font color='red'>注意</font>：由于，方法区和堆区都是线程<mark>共享</mark>的所以<mark>不是线程安全</mark>的。</p>\n</blockquote>\n<p><strong>虚拟机栈</strong>：对于每个线程将会创建一个单独的运行时栈，而对于每个方法调用我们在栈内存会创建一个条目称之为 <mark>栈帧</mark> 所有的<mark>局部变量</mark>都会在栈内存创建由于它<mark>不是共享的资源</mark>所以它<mark>是线程安全</mark>的</p>\n<p><strong>PC 寄存器</strong>：每个线程都有它自己的 PC 寄存器，所以它也是线程安全的，作用是保存当前正在执行的指令。一旦指令执行，PC 寄存器将更新到下一条指令</p>\n<p><strong>本地方法栈</strong>：保存本机的方法信息，而对于每个线程它将单独创建本地方法栈所以它也是线程安全的</p>\n<h2 id=\"execution-engine\"><a class=\"markdownIt-Anchor\" href=\"#execution-engine\">#</a> Execution Engine</h2>\n<p><strong>解释器</strong> (Interpreter)</p>\n<ul>\n<li>作用：读取字节码对其进行解释并逐一执行，解释器解释字节码的速度较快，但是它执行速度较慢</li>\n<li>致命缺点：当一个方法被多次调用时，它每次都需要解释，所以这时就出现了如下 JIT Compiler</li>\n</ul>\n<p><strong>即时编译器</strong> (JIT Compiler)</p>\n<ul>\n<li>作用：解决 解释器的 缺点的。当它发现重复代码时，将采用即时编译器进行编译整个字节码并将其更改为本地代码，此本地代码将直接用于重复的方法调用从而提高系统性能</li>\n<li>它都做了什么呢？\n<ul>\n<li>中间代码生成 (intermediate code generation)：生成中间代码</li>\n<li>代码优化器 (CodeOptimizer)：优化 中间代码生成器 所生成的代码</li>\n<li>目标代码生成器 (TargeCodeGenerator)：生成机器码</li>\n<li>分析器 (Profile)：查看这个方法是否被多次调用</li>\n</ul>\n</li>\n</ul>\n<p><strong>垃圾回收器</strong> (GarbageCollction)</p>\n<ul>\n<li>作用：收集或者删除未引用的对象，可以调用 system.gc 来触发垃圾回收，但是不能保证执行垃圾收集器仅收集 new 关键字创建的对象，因此如果没有通过 new 创建的对象则可以使用 finalize 方法来执行清理</li>\n</ul>\n<p><strong>本地方法接口</strong> (Native Method Interface (JNI))</p>\n<ul>\n<li>作用：它与本地方法库进行交互 (Native Method Litxary) 并提供执行引擎所需要的本机库</li>\n</ul>\n<p><strong>本地方法库</strong> (Native Method Litxary)</p>\n<ul>\n<li>作用：提供本地库，配合本地方法接口进行交互</li>\n</ul>\n<h2 id=\"jvm内存结构-2\"><a class=\"markdownIt-Anchor\" href=\"#jvm内存结构-2\">#</a> JVM 内存结构</h2>\n<p>Java SE 8 版本的虚拟机规范地址：<a href=\"https://docs.oracle.com/javase/specs/jvms/se8/html/index.html\">https://docs.oracle.com/javase/specs/jvms/se8/html/index.html</a></p>\n<center>Jvm内存体系结构图</center> \n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311180839936.png\" alt=\"image-20231118083917765\"></p>\n<p><strong>程序计数器</strong>：</p>\n<p>冯若依曼，计算机体积结构的主要内容之一，就是程序预存储计算机自动执行。处理器要执行的程序都是以二进制的代码序列方式存储在计算机的存储器中。</p>\n<p>处理器将这些代码逐条的取到处理器中再编译执行以完成整个程序的执行，为了保证程序能够连续的执行下去 CPU 必须去用某些手段来确定下一条取值指定的地址，程序计数器正是起到这种作用。又被称为 指令计数器</p>\n<p><mark>作用</mark>：保存当前执行指令的地址，一旦指令执行，程序计数器将更新到下一条指令</p>\n<p>理解作用这句话看如下图所示：</p>\n<p>通过这张图来讲解</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311180903300.png\" alt=\"image-20231118090303236\"></p>\n<p>这点内容是怎么来的呢？</p>\n<p>下面通过一段 java 代码来解释上图内容怎么来的：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 创建 PrintStream 对象然后通过对象调用输出语句打印 12345</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">PrintStream</span> out <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行一下产生.class 编译文件，该文件在 out 目录下 通过 terminal 进入这个目录下找到.class 文件然后执行</p>\n<p><code>javap -v Main.class</code>  即可输出反编译的内容如下：</p>\n<p><code>javap</code>  就是 jdk 自带的反编译工具，它的作用就是根据字节码文件反编译出当前对应的汇编指令，本地变量表，异常表，代码行迁移量，常量池等信息。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bash<span class=\"token operator\">:</span><span class=\"token operator\">>></span> javap <span class=\"token operator\">-</span>v <span class=\"token punctuation\">.</span>\\<span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Classfile</span> <span class=\"token operator\">/</span><span class=\"token class-name\">E</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token class-name\">Demo</span><span class=\"token operator\">/</span><span class=\"token class-name\">JavaSEJVM8</span><span class=\"token operator\">/</span><span class=\"token class-name\">JavaSEJVM8</span><span class=\"token operator\">/</span>out<span class=\"token operator\">/</span>production<span class=\"token operator\">/</span><span class=\"token class-name\">JavaSEJVM8</span><span class=\"token operator\">/</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">Last</span> modified <span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> size <span class=\"token number\">532</span> bytes</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token constant\">MD5</span> checksum ed0f9435459e8422980820c711db3bcc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">Compiled</span> from <span class=\"token string\">\"Main.java\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  minor version<span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">//jdk 版本对应的是 jdk8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  major version<span class=\"token operator\">:</span> <span class=\"token number\">52</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  flags<span class=\"token operator\">:</span> <span class=\"token constant\">ACC_PUBLIC</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ACC_SUPER</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 常量池</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">Constant</span> pool<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   #<span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Methodref</span>          #<span class=\"token number\">5.</span>#<span class=\"token number\">21</span>         <span class=\"token comment\">// java/lang/Object.\"&lt;init>\":()V</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   #<span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Fieldref</span>           #<span class=\"token number\">22.</span>#<span class=\"token number\">23</span>        <span class=\"token comment\">// java/lang/System.out:Ljava/io/PrintStream;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   #<span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Methodref</span>          #<span class=\"token number\">24.</span>#<span class=\"token number\">25</span>        <span class=\"token comment\">// java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   #<span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span>              #<span class=\"token number\">26</span>            <span class=\"token comment\">// Main</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   #<span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span>              #<span class=\"token number\">27</span>            <span class=\"token comment\">// java/lang/Object</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   #<span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>init<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   #<span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   #<span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">Code</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   #<span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">LineNumberTable</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  #<span class=\"token number\">10</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">LocalVariableTable</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  #<span class=\"token number\">11</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  #<span class=\"token number\">12</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">LMain</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  #<span class=\"token number\">13</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               main</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  #<span class=\"token number\">14</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  #<span class=\"token number\">15</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               args</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  #<span class=\"token number\">16</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token punctuation\">[</span><span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  #<span class=\"token number\">17</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               out</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  #<span class=\"token number\">18</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">PrintStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  #<span class=\"token number\">19</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">SourceFile</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  #<span class=\"token number\">20</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span>java</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  #<span class=\"token number\">21</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">NameAndType</span>        #<span class=\"token number\">6</span><span class=\"token operator\">:</span>#<span class=\"token number\">7</span>          <span class=\"token comment\">// \"&lt;init>\":()V</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  #<span class=\"token number\">22</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span>              #<span class=\"token number\">28</span>            <span class=\"token comment\">// java/lang/System</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  #<span class=\"token number\">23</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">NameAndType</span>        #<span class=\"token number\">17</span><span class=\"token operator\">:</span>#<span class=\"token number\">18</span>        <span class=\"token comment\">// out:Ljava/io/PrintStream;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  #<span class=\"token number\">24</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span>              #<span class=\"token number\">29</span>            <span class=\"token comment\">// java/io/PrintStream</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  #<span class=\"token number\">25</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">NameAndType</span>        #<span class=\"token number\">30</span><span class=\"token operator\">:</span>#<span class=\"token number\">31</span>        <span class=\"token comment\">// println:(I)V</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  #<span class=\"token number\">26</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token class-name\">Main</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  #<span class=\"token number\">27</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               java<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">Object</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  #<span class=\"token number\">28</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               java<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">System</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  #<span class=\"token number\">29</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               java<span class=\"token operator\">/</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">PrintStream</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  #<span class=\"token number\">30</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               println</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  #<span class=\"token number\">31</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Utf8</span>               <span class=\"token punctuation\">(</span><span class=\"token class-name\">I</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">// 构造器</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    descriptor<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    flags<span class=\"token operator\">:</span> <span class=\"token constant\">ACC_PUBLIC</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token class-name\">Code</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      stack<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> locals<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> args_size<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>         <span class=\"token number\">0</span><span class=\"token operator\">:</span> aload_0</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>         <span class=\"token number\">1</span><span class=\"token operator\">:</span> invokespecial #<span class=\"token number\">1</span>                  <span class=\"token comment\">// Method java/lang/Object.\"&lt;init>\":()V</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>         <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token class-name\">LineNumberTable</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        line <span class=\"token number\">10</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token class-name\">LocalVariableTable</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">Start</span>  <span class=\"token class-name\">Length</span>  <span class=\"token class-name\">Slot</span>  <span class=\"token class-name\">Name</span>   <span class=\"token class-name\">Signature</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token number\">0</span>       <span class=\"token number\">5</span>     <span class=\"token number\">0</span>  <span class=\"token keyword\">this</span>   <span class=\"token class-name\">LMain</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token comment\">//main 方法</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    descriptor<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    flags<span class=\"token operator\">:</span> <span class=\"token constant\">ACC_PUBLIC</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ACC_STATIC</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token class-name\">Code</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      stack<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> locals<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> args_size<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>         <span class=\"token number\">0</span><span class=\"token operator\">:</span> getstatic     #<span class=\"token number\">2</span>                  <span class=\"token comment\">// Field java/lang/System.out:Ljava/io/PrintStream;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>         <span class=\"token number\">3</span><span class=\"token operator\">:</span> astore_1</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token number\">4</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token number\">5</span><span class=\"token operator\">:</span> iconst_1</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>         <span class=\"token number\">6</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>         <span class=\"token number\">9</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token number\">10</span><span class=\"token operator\">:</span> iconst_2</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token number\">11</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token number\">14</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token number\">15</span><span class=\"token operator\">:</span> iconst_3</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token number\">16</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token number\">19</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token number\">20</span><span class=\"token operator\">:</span> iconst_4</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token number\">21</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token number\">24</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token number\">25</span><span class=\"token operator\">:</span> iconst_5</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token number\">26</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token number\">29</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      <span class=\"token class-name\">LineNumberTable</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        line <span class=\"token number\">12</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        line <span class=\"token number\">13</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        line <span class=\"token number\">14</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        line <span class=\"token number\">15</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        line <span class=\"token number\">16</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        line <span class=\"token number\">17</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        line <span class=\"token number\">18</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      <span class=\"token class-name\">LocalVariableTable</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token class-name\">Start</span>  <span class=\"token class-name\">Length</span>  <span class=\"token class-name\">Slot</span>  <span class=\"token class-name\">Name</span>   <span class=\"token class-name\">Signature</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token number\">0</span>      <span class=\"token number\">30</span>     <span class=\"token number\">0</span>  args   <span class=\"token punctuation\">[</span><span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token number\">4</span>      <span class=\"token number\">26</span>     <span class=\"token number\">1</span>   out   <span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">PrintStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token class-name\">SourceFile</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Main.java\"</span></pre></td></tr></table></figure><p>我们重点看 main 方法下的内容它跟上图中的内容是一样的，我们写的 java 源代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 创建 PrintStream 对象然后通过对象调用输出语句打印 12345</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">PrintStream</span> out <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们写的代码只有上面点内容，但是真正编译执行的是如下内容：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//main 方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>descriptor<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Ljava</span><span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">V</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>              flags<span class=\"token operator\">:</span> <span class=\"token constant\">ACC_PUBLIC</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ACC_STATIC</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>              <span class=\"token class-name\">Code</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              stack<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> locals<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> args_size<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>              <span class=\"token number\">0</span><span class=\"token operator\">:</span> getstatic     #<span class=\"token number\">2</span>                  <span class=\"token comment\">// Field java/lang/System.out:Ljava/io/PrintStream;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token number\">3</span><span class=\"token operator\">:</span> astore_1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token number\">4</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token number\">5</span><span class=\"token operator\">:</span> iconst_1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token number\">6</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token number\">9</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token number\">10</span><span class=\"token operator\">:</span> iconst_2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token number\">11</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              <span class=\"token number\">14</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>              <span class=\"token number\">15</span><span class=\"token operator\">:</span> iconst_3</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>              <span class=\"token number\">16</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>              <span class=\"token number\">19</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>              <span class=\"token number\">20</span><span class=\"token operator\">:</span> iconst_4</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>              <span class=\"token number\">21</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>              <span class=\"token number\">24</span><span class=\"token operator\">:</span> aload_1</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>              <span class=\"token number\">25</span><span class=\"token operator\">:</span> iconst_5</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>              <span class=\"token number\">26</span><span class=\"token operator\">:</span> invokevirtual #<span class=\"token number\">3</span>                  <span class=\"token comment\">// Method java/io/PrintStream.println:(I)V</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              <span class=\"token number\">29</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span></pre></td></tr></table></figure><p><strong>解释程序计数器的作用</strong>：程序执行前会将程序指令的起始地址也就是程序第一条指令所在的内存单元存储程序计数器，可以将字节码行号指示器理解为内存地址也就是首先把 0 存入程序计数器。接下来 CPU 就会按照程序计数器的指示来执行它到程序计数器看到是 0 那么它就会从字节码为 0 的地址开始执行。同时一旦开始从 0 执行的时候程序计数器就会修改自己的内容它的内容将会变成下一条将要取址的指令地址此时它会变成 3</p>\n<p>当 0 位置的内容执行完毕之后 CPU 再从程序计数器里面去读，读到 3 就从字节码为 3 的地方开始执行，然后程序计数器的值修改为 4</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181815851.png\" alt=\"image-20231118181544753\"></p>\n<h2 id=\"虚拟机栈\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机栈\">#</a> 虚拟机栈</h2>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181818246.png\" alt=\"image-20231118181816050\"></p>\n<p><strong>栈的特点</strong>：先进后出。</p>\n<p>每个程序在执行的时候都有一个进程，而每个进程最小单元是一个线程，线程在执行的时候有一个内存空间，这个内存空间就是<mark>虚拟机栈</mark>。</p>\n<p>每个线程都有一个对应的虚拟机栈，所以它是线程私有的，而程序的执行是通过调用方法来实现的而每个方法对应一个栈帧。也就是虚拟机栈中有一个或多个栈帧，而每个栈帧包含了局部变量表，操作数栈，动态链接，方法返回值等信息。</p>\n<p>下面通过代码来看虚拟机栈，栈帧的信息：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">*</span>       <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">method</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        a <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        b <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">method2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>* 号 为断点处，启动 debug</p>\n<p>红色线框的地方可以看成是虚拟机栈</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181829215.png\" alt=\"image-20231118182955267\"></p>\n<p>每个方法的调用会有一个栈帧，当 main 函数中往下执行调用 method 后就会出现一个栈帧</p>\n<p>有两个栈帧而这整个的我们可以看成是虚拟机栈</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181832757.png\" alt=\"image-20231118183212305\"></p>\n<p>当调用 method2 方法后就会出现第三个栈帧</p>\n<p>每个栈帧中的信息不同，因为局部变量只作用于它当前的函数中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181834138.png\" alt=\"image-20231118183412161\"></p>\n<p>这个 method2 函数马上调用结束，它就会从虚拟机栈中弹出。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181836416.png\" alt=\"image-20231118183641250\"></p>\n<p>接着 method 弹出</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181837721.png\" alt=\"image-20231118183711524\"></p>\n<p>最后 main 函数弹出程序结束</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181837063.png\" alt=\"image-20231118183740942\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>每个线程运行时所需要的内存空间，称为虚拟机栈</p>\n<p>每个栈由多个栈帧 (Frame) 组成，对应着每次方法调用时所占用的内存</p>\n<p>每个线程只能有一个活动栈帧，对应着当前正在执行的那个方法</p>\n</blockquote>\n<h2 id=\"栈帧\"><a class=\"markdownIt-Anchor\" href=\"#栈帧\">#</a> 栈帧</h2>\n<p><strong>组成</strong>：局部变量表，动态链接，方法返回地址</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181845482.png\" alt=\"image-20231118184553513\"></p>\n<p><strong>局部变量表</strong>：</p>\n<p>存放局部变量的列表：</p>\n<p>一个局部变量可以保存类型为 double，byte，char，short，float，refernce 和 returnAddress 的数据两个局部变量可以保存一个类型为 long 和 double 的数据</p>\n<p>局部变量使用索引来进行定位访问，第一个局部变量的索引值为零。</p>\n<p><strong>操作数栈</strong>：</p>\n<p>也称为操作栈，它是一个后进先出的栈</p>\n<p>当一个方法刚刚开始执行时，其操作数栈是空的</p>\n<p>随着方法执行和字节码指令的执行，会从局部变量表或对象实例的字段中复制常量或变量写入到操作数栈，再随着计算的进行将一个完整的方法执行期间往往包含多个这样出栈 / 入栈的过程</p>\n<p>简单理解，操作数栈是线程实际的操作台</p>\n<p><strong>动态链接</strong>：</p>\n<p>简单的理解为指向运行时常量池的引用</p>\n<p>在 class 文件里面，描述一个方法调用了其它方法，或者访问其成员变量是通过符号引用来表示的，动态链接的作用就是将这些符号引用所表示的方法转换为实际方法的直接引用</p>\n<p><strong>方法返回地址</strong>：</p>\n<p>方法调用的返回，包括正常返回 (有返回值) 和异常返回 (没有返回值)，不同的返回类型有不同的指令</p>\n<p>无论方法采用何种方式退出，在方法退出后都需要返回到方法被调用的位置，程序才能继续执行，方法返回时可能需要在当前栈帧中保存一些信息，用来帮助它恢复它的上层方法执行状态</p>\n<h2 id=\"栈内存溢出\"><a class=\"markdownIt-Anchor\" href=\"#栈内存溢出\">#</a> 栈内存溢出</h2>\n<p>栈帧过多导致栈内存溢出</p>\n<p>栈帧过大导致栈内存溢出</p>\n<p>栈内存大小是可以通过一个参数来指定的</p>\n<p>下面是官网的文档说明：<a href=\"https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE\">https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181915979.png\" alt=\"image-20231118191506910\"></p>\n<p>通过下面代码来进行演示：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * java.lang.StackOverflowError</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * -Xss256k：次数减少</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * -Xss10m：次数变多</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo01</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p>可以看到堆栈溢出了</p>\n<pre><code>java.lang.StackOverflowError\n\tat Demo01.method(Demo01.java:12)\n\t... 此处省略几万行\n\tat Demo01.method(Demo01.java:12)\n23220\n\nProcess finished with exit code 0\n</code></pre>\n<p>设置栈内存大小</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181921134.png\" alt=\"image-20231118192148715\"></p>\n<p>再次运行后查看 count 的值</p>\n<p>可以看到比上次少了很多</p>\n<pre><code>2729\n</code></pre>\n<p>我们再设置一个 10m 的栈内存来查看下结果</p>\n<p>可以看到这次调用的次数比较多值比较大</p>\n<pre><code>600803\n</code></pre>\n<h2 id=\"栈帧过大导致栈内存溢出\"><a class=\"markdownIt-Anchor\" href=\"#栈帧过大导致栈内存溢出\">#</a> 栈帧过大导致栈内存溢出</h2>\n<p>运行如下 java 代码：</p>\n<p>使用到的第三方 api 如下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181943254.png\" alt=\"image-20231118194332010\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo02</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JsonProcessingException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Dept</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        d<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yanfa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Emp</span> e1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        e1<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        e1<span class=\"token punctuation\">.</span><span class=\"token function\">setDept</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Emp</span> e2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        e2<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wangwu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        e2<span class=\"token punctuation\">.</span><span class=\"token function\">setDept</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        d<span class=\"token punctuation\">.</span><span class=\"token function\">setEmps</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ObjectMapper</span> mapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>mapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Emp</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Dept</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dept</span> <span class=\"token function\">getDept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span> dept<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dept <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Dept&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token string\">\", dept=\"</span> <span class=\"token operator\">+</span> dept <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dept</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> emps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getEmps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> emps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setEmps</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> emps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emps <span class=\"token operator\">=</span> emps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Dept&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token string\">\", emps=\"</span> <span class=\"token operator\">+</span> emps <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果如下</p>\n<p>报错了，说堆栈溢出异常了。</p>\n<pre><code>*** java.lang.instrument ASSERTION FAILED ***: &quot;!errorOutstanding&quot; with message transform method call failed at JPLISAgent.c line: 844\n*** java.lang.instrument ASSERTION FAILED ***: &quot;!errorOutstanding&quot; with message transform method call failed at JPLISAgent.c line: 844\nException in thread &quot;main&quot; com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: Dept[&quot;emps&quot;]-&gt;java.util.ArrayList[0]-&gt;Emp[&quot;dept&quot;]-&gt;Dept[&quot;emps&quot;]-&gt;java.util.ArrayList[0]-&gt;Emp[&quot;dept&quot;]-&gt;Dept[&quot;emps&quot;]-&gt;java.util.ArrayList[0]-&gt;Emp[&quot;dept&quot;]-&gt;Dept[&quot;emps&quot;]-&gt;java.util\n</code></pre>\n<p>为何 jackson 会报这种错误呢？如下分析：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311181946865.png\" alt=\"image-20231118194625268\"></p>\n<p>jackson 在做转换的时候，找到这个 Dept 的时候首先要去看所有的 emps。当它找到第一个员工 lisi 的时候而 lisi 里面又有 Dept 而 lisi 它的 Dept 还是上次的 yanfa 而这个 Dept 又要找 emps 而 yanfa 下的 Dept 找到的第一个 emps 还是 lisi，而 lisi 中有一个 Dept 这个还是 yanfa 又要找 emps 而第一个又是 lisi。进入了死循环的状态。</p>\n<p>那么如何解决这种异常呢？我们可以使用注解 @JsonIgnore 来忽略 private Dept dept; 字段的 json 转换</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Emp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@JsonIgnore</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Dept</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dept</span> <span class=\"token function\">getDept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span> dept<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dept <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Dept&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token string\">\", dept=\"</span> <span class=\"token operator\">+</span> dept <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行查看结果：</p>\n<p>这次就没有报错了</p>\n<pre><code>&#123;&quot;name&quot;:&quot;yanfa&quot;,&quot;emps&quot;:[&#123;&quot;name&quot;:&quot;lisi&quot;&#125;]&#125;\n</code></pre>\n<h2 id=\"本地方法栈\"><a class=\"markdownIt-Anchor\" href=\"#本地方法栈\">#</a> 本地方法栈</h2>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311182009801.png\" alt=\"image-20231118200949688\"></p>\n<p>我们在 idea 中查看什么是本地方法栈</p>\n<p>搜索 Object</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311182010314.png\" alt=\"image-20231118201042315\"></p>\n<p>在 Object 类中如下就是本地方法栈</p>\n<p>为什么呢？因为它被 native 修饰，被 native 修饰的方法就是本地方法</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311182011731.png\" alt=\"image-20231118201126028\"></p>\n<p>本地方法栈的功能和特点类似于虚拟机栈，也是线程私有的</p>\n<p><strong>不同的是</strong>：</p>\n<p>本地方法栈服务的对象是 JVM 执行的 native 方法，而虚拟机栈服务的是 JVM 执行的 Java 方法</p>\n<p>如何去服务 native 方法？</p>\n<p>native 方法使用什么语言实现？</p>\n<p>怎么组织像栈帧这种为了服务方法的数据结构？</p>\n<p>虚拟机规范并未给出强制规定，因此不同的虚拟机可以进行自由实现</p>\n<h2 id=\"堆\"><a class=\"markdownIt-Anchor\" href=\"#堆\">#</a> 堆</h2>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311182023550.png\" alt=\"image-20231118202259050\"></p>\n<p><strong>作用</strong>：</p>\n<p>堆是用于存放对象内存区域</p>\n<p><strong>特点</strong>：</p>\n<p>1、堆是被所有线程共享的一块内存区域，在虚拟机启动时创建</p>\n<p>2、堆的区域是用来存放对象实例的，因此也是垃圾收集器管理的主要区域</p>\n<p>3、堆在逻辑上划分为 “新生代” 和 “老年代” ，新生代分为 Eden 区，ServivorFrom，ServicorTo 三个区</p>\n<p>4、堆一般实现成大小是可扩展的，使用 “-Xms” 与 “-Xmx” 控制堆的最小与最大内存</p>\n<h2 id=\"堆内存溢出\"><a class=\"markdownIt-Anchor\" href=\"#堆内存溢出\">#</a> 堆内存溢出</h2>\n<p>代码演示：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo03</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"itheima\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                s <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//            while(true)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//            &#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//                list.add(s);</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//                s += s;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//                count++;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//            &#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>什么都没有\n</code></pre>\n<p>没有报错，也什么也没有输出，我们设置下堆内存大小</p>\n<p>-Xmx8m 大小</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311190841695.png\" alt=\"image-20231119084146609\"></p>\n<p>再次运行后就得到一串报错信息</p>\n<p>循环到了 16 就抛出的异常</p>\n<p>报错信息是 堆内存溢出了</p>\n<pre><code>java.lang.OutOfMemoryError: Java heap space\n\tat java.util.Arrays.copyOfRange(Arrays.java:3664)\n\tat java.lang.String.&lt;init&gt;(String.java:207)\n\tat java.lang.StringBuilder.toString(StringBuilder.java:413)\n\tat Demo03.main(Demo03.java:20)\n16\n</code></pre>\n<p>我们将堆内存设置 100m 看看结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191257715.png\" alt=\"image-20231119125752678\"></p>\n<p>运行结果：</p>\n<p>此时可以承受循环 20 次的量了</p>\n<pre><code>没有任何信息\n</code></pre>\n<p>那我们把 while (true) 给打开，把循环 20 次的给注释掉看看运行结果：</p>\n<p>count 从 0 开始计数，也就是到了 21 就报错了，只需要比循环 20 次多一步就会报错。</p>\n<pre><code>java.lang.OutOfMemoryError: Java heap space\n\tat java.util.Arrays.copyOf(Arrays.java:3332)\n\tat java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)\n\tat java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)\n\tat java.lang.StringBuilder.append(StringBuilder.java:142)\n\tat Demo03.main(Demo03.java:26)\n20\n</code></pre>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p><strong>错误提示</strong>：</p>\n<p>java.lang.OutOfMemoryError：Java heap space</p>\n<p><strong>错误原因</strong>：</p>\n<p>内存真不够，通过调整堆内存大小解决</p>\n<p>存在死循环，通过修改代码解决</p>\n</blockquote>\n<h2 id=\"堆内存诊断\"><a class=\"markdownIt-Anchor\" href=\"#堆内存诊断\">#</a> 堆内存诊断</h2>\n<p>jps：查看当前系统中有哪些 java 进程</p>\n<p>jmap 工具：查看堆内存占用情况 (某一个时刻)</p>\n<p>使用方式： <code>jmap -heap 进程id</code></p>\n<p>jconsole 工具：图形界面的，内置 java 性能分析器，多功能的检测工具，可以连续监测</p>\n<p><strong>代码演示</strong>：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo04</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10mb</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">gc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>首先启动程序后使用 jps 命令查看当前的 java 进程</p>\n<p>可以看到当前程序对应的进程 id 是 14148</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bash:<span class=\"token operator\">>></span> jps</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">5760</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">14148</span> Demo04</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">5656</span> Launcher</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">16396</span> Jps</pre></td></tr></table></figure><p>然后使用 jmap -heap 14148 命令，等待线程 2 出现打印后再执行 jmap -heap 14148，等待线程 3 打印后再执行 jmap -heap 14148 查看它们每一个时刻的堆内存情况</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bash:<span class=\"token operator\">>></span> jmap <span class=\"token parameter variable\">-heap</span> <span class=\"token number\">14148</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Attaching to process ID <span class=\"token number\">14148</span>, please wait<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Debugger attached successfully.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Server compiler detected.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>JVM version is <span class=\"token number\">25.381</span>-b09</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>using thread-local object allocation.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Parallel GC with <span class=\"token number\">8</span> thread<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Heap Configuration:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   MinHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   MaxHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   MaxHeapSize              <span class=\"token operator\">=</span> <span class=\"token number\">5326766080</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5080</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   NewSize                  <span class=\"token operator\">=</span> <span class=\"token number\">111149056</span> <span class=\"token punctuation\">(</span><span class=\"token number\">106</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   MaxNewSize               <span class=\"token operator\">=</span> <span class=\"token number\">1775239168</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1693</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   OldSize                  <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   NewRatio                 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   SurvivorRatio            <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   MetaspaceSize            <span class=\"token operator\">=</span> <span class=\"token number\">21807104</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span>.796875MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   CompressedClassSpaceSize <span class=\"token operator\">=</span> <span class=\"token number\">1073741824</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   MaxMetaspaceSize         <span class=\"token operator\">=</span> <span class=\"token number\">17592186044415</span> MB</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   G1HeapRegionSize         <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Heap Usage:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>PS Young Generation</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Eden Space:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">83886080</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">6710968</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6</span>.400077819824219MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">77175112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">73</span>.59992218017578MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token number\">8.000097274780273</span>% used</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>From Space:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>To Space:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>PS Old Generation</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">3178</span> interned Strings occupying <span class=\"token number\">260944</span> bytes.</pre></td></tr><tr><td data-num=\"48\"></td><td><pre> jmap <span class=\"token parameter variable\">-heap</span> <span class=\"token number\">14148</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>Attaching to process ID <span class=\"token number\">14148</span>, please wait<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Debugger attached successfully.</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Server compiler detected.</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>JVM version is <span class=\"token number\">25.381</span>-b09</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>using thread-local object allocation.</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>Parallel GC with <span class=\"token number\">8</span> thread<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>Heap Configuration:</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   MinHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   MaxHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>   MaxHeapSize              <span class=\"token operator\">=</span> <span class=\"token number\">5326766080</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5080</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>   NewSize                  <span class=\"token operator\">=</span> <span class=\"token number\">111149056</span> <span class=\"token punctuation\">(</span><span class=\"token number\">106</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>   MaxNewSize               <span class=\"token operator\">=</span> <span class=\"token number\">1775239168</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1693</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>   OldSize                  <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>   NewRatio                 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>   SurvivorRatio            <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>   MetaspaceSize            <span class=\"token operator\">=</span> <span class=\"token number\">21807104</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span>.796875MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>   CompressedClassSpaceSize <span class=\"token operator\">=</span> <span class=\"token number\">1073741824</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>   MaxMetaspaceSize         <span class=\"token operator\">=</span> <span class=\"token number\">17592186044415</span> MB</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>   G1HeapRegionSize         <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>Heap Usage:</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>PS Young Generation</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>Eden Space:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">83886080</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">17196744</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span>.40009307861328MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">66689336</span> <span class=\"token punctuation\">(</span><span class=\"token number\">63</span>.59990692138672MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>   <span class=\"token number\">20.5001163482666</span>% used</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>From Space:</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>To Space:</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>PS Old Generation</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token number\">3179</span> interned Strings occupying <span class=\"token number\">260992</span> bytes.</pre></td></tr><tr><td data-num=\"95\"></td><td><pre> jmap <span class=\"token parameter variable\">-heap</span> <span class=\"token number\">14148</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Attaching to process ID <span class=\"token number\">14148</span>, please wait<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>Debugger attached successfully.</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>Server compiler detected.</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>JVM version is <span class=\"token number\">25.381</span>-b09</pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>using thread-local object allocation.</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>Parallel GC with <span class=\"token number\">8</span> thread<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>Heap Configuration:</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>   MinHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   MaxHeapFreeRatio         <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>   MaxHeapSize              <span class=\"token operator\">=</span> <span class=\"token number\">5326766080</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5080</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   NewSize                  <span class=\"token operator\">=</span> <span class=\"token number\">111149056</span> <span class=\"token punctuation\">(</span><span class=\"token number\">106</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>   MaxNewSize               <span class=\"token operator\">=</span> <span class=\"token number\">1775239168</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1693</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>   OldSize                  <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>   NewRatio                 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>   SurvivorRatio            <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>   MetaspaceSize            <span class=\"token operator\">=</span> <span class=\"token number\">21807104</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span>.796875MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>   CompressedClassSpaceSize <span class=\"token operator\">=</span> <span class=\"token number\">1073741824</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>   MaxMetaspaceSize         <span class=\"token operator\">=</span> <span class=\"token number\">17592186044415</span> MB</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>   G1HeapRegionSize         <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>Heap Usage:</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>PS Young Generation</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>To Space:</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">13631488</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>   <span class=\"token number\">0.0</span>% used</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>PS Old Generation</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>   capacity <span class=\"token operator\">=</span> <span class=\"token number\">222298112</span> <span class=\"token punctuation\">(</span><span class=\"token number\">212</span>.0MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>   used     <span class=\"token operator\">=</span> <span class=\"token number\">989040</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.9432220458984375MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>   <span class=\"token function\">free</span>     <span class=\"token operator\">=</span> <span class=\"token number\">221309072</span> <span class=\"token punctuation\">(</span><span class=\"token number\">211</span>.05677795410156MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>   <span class=\"token number\">0.44491605938605544</span>% used</pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token number\">3165</span> interned Strings occupying <span class=\"token number\">260000</span> bytes.</pre></td></tr></table></figure><p>进行解释：</p>\n<p>线程 1 执行时通过 jmap 获取的堆内存的占用情况如下：</p>\n<p>使用了 6 兆字节的内存</p>\n<pre><code>Eden Space:\n   capacity = 83886080 (80.0MB)\n   used     = 6710968 (6.400077819824219MB)\n</code></pre>\n<p>线程 2 执行时获取的堆内存的占用情况如下：</p>\n<p>使用了 16 兆字节</p>\n<pre><code>Eden Space:\n   capacity = 83886080 (80.0MB)\n   used     = 17196744 (16.40009307861328MB)\n</code></pre>\n<p>线程 3 情况如下：</p>\n<p>使用 gc 垃圾回收机制进行了回收使用了 1 兆字节</p>\n<pre><code>Eden Space:\n   capacity = 83886080 (80.0MB)\n   used     = 1677744 (1.6000213623046875MB)\n</code></pre>\n<p>如果我们每一时刻使用 jmap -heap 进程 id 来进行查看太麻烦了所以可以使用命令： <code>jconsole</code>  工具来进行查看，它能连续监测</p>\n<p>首先还是一样将程序启动起来。</p>\n<p>接着在控制台输入 <code>jconsole</code></p>\n<p>选择当前的程序然后进行连接。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191343495.png\" alt=\"image-20231119134310164\"></p>\n<p>接着选择不安全的连接。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191344880.png\" alt=\"image-20231119134412410\"></p>\n<p>可以看到堆内存的使用情况，当线程 3 执行时内存直线下降就是被垃圾回收了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191346613.png\" alt=\"image-20231119134529307\"></p>\n<h2 id=\"方法区\"><a class=\"markdownIt-Anchor\" href=\"#方法区\">#</a> 方法区</h2>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191347546.png\" alt=\"image-20231119134746888\"></p>\n<p><strong>作用</strong>：存储每个类的结构</p>\n<p>例如运行时常量池，字段和方法数据，以及方法和构造函数的代码，包括用于实例初始化以及接口初始化的特殊方法等</p>\n<h3 id=\"jdk6与jdk8的方法区的不同\"><a class=\"markdownIt-Anchor\" href=\"#jdk6与jdk8的方法区的不同\">#</a> jdk6 与 jdk8 的方法区的不同</h3>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191352108.png\" alt=\"image-20231119135249121\"></p>\n<h2 id=\"方法区内存溢出\"><a class=\"markdownIt-Anchor\" href=\"#方法区内存溢出\">#</a> 方法区内存溢出</h2>\n<p>代码演示：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 元空间，默认使用系统内存，一般跟物理内存有关，一般很难出现问题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * 现在加一个参数，设置元空间内存</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * 演示元空间内存溢出 java.lang.OutOfMemoryError: Metaspace</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * -XX:MaxMetaspaceSize=8m</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * 设置大小，警用指针压缩</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * -XX:MaxMetaspaceSize=10m -XX:-UseCompressedOops</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * -XX:MaxMetaspaceSize=8m -XX:MaxMetaspaceSize=10m -XX:-UseCompressedOops</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo05</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ClassLoader</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">Demo05</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Demo05</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token comment\">// 作用：生成类的二进制字节码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token class-name\">ClassWriter</span> cw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassWriter</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token comment\">// 版本号，方法修饰符，类名，包名，父类，接口</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                cw<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Opcodes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V1_8</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Opcodes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACC_PUBLIC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Class\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"java/lang/Object\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> code <span class=\"token operator\">=</span> cw<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token comment\">// 执行类的加载器</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                d<span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Class\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果如下：</p>\n<pre><code>20000\n</code></pre>\n<p>设置元空间大小为 8m</p>\n<p>设置指令： <code>-XX:MaxMetaspaceSize=8m -XX:MaxMetaspaceSize=10m -XX:-UseCompressedOops</code></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311191749044.png\" alt=\"image-20231119174832359\"></p>\n<p>再次运行查看结果：</p>\n<pre><code>9344\nException in thread &quot;main&quot; java.lang.OutOfMemoryError: Metaspace\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:756)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:635)\n\tat Demo05.main(Demo05.java:26)\n</code></pre>\n<h3 id=\"测试jdk6的代码\"><a class=\"markdownIt-Anchor\" href=\"#测试jdk6的代码\">#</a> 测试 jdk6 的代码</h3>\n<p><strong>代码演示</strong>：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 演示永久代内存溢出 java.lang.OutOfMemoryError: permGen space</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * -XX:MaxPermSize=8m</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo06</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ClassLoader</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">Demo06</span> test <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Demo06</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token class-name\">ClassWriter</span> cw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassWriter</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                cw<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Opcodes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V1_6</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Opcodes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACC_PUBLIC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Class\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"java/lang/Object\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> code <span class=\"token operator\">=</span> cw<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                test<span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Class\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果如下：</p>\n<pre><code>20000\n</code></pre>\n<p>设置 jdk6 的方法区永久代最大内存大小 - XX:MaxPermSize=8m</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311192058810.png\" alt=\"image-20231119205837638\"></p>\n<p>运行结果如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311192059392.png\" alt=\"image-20231119205921719\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>java8 中演示元空间内存溢出：</p>\n<p>java.lang.OutOfMemoryError：Metaspace</p>\n<p>-XX:MaxMetaspaceSize=10m -XX:-UseCompressedOops</p>\n<p>java6 中演示永久代内存溢出</p>\n<p>java.lang.OutOfMemoryError：PermGen space</p>\n<p>-XX:MaxPermSize=8m</p>\n</blockquote>\n",
            "tags": [
                "java",
                "jvm"
            ]
        }
    ]
}