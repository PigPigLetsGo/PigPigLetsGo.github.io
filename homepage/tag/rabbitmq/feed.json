{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"rabbitmq\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-集群部署",
            "date_published": "2024-04-02T10:00:51.052Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3.8-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221138546.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">-v</span> mq-plugins:/plugins <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> rabbitmq:3.8-management</pre></td></tr></table></figure><h1 id=\"2安装delayexchange插件\"><a class=\"markdownIt-Anchor\" href=\"#2安装delayexchange插件\">#</a> 2. 安装 DelayExchange 插件</h1>\n<p>我们要使用的是延迟队列但是名字却是延迟交换机，为什么叫这个名字呢简单说下它的原理：</p>\n<p>我们在使用这个插件的时候它不是基于队列去做的而是交换机。我们发消息到交换机，而交换机会帮你延迟的投递到队列里</p>\n<p>官方的安装指南地址为：<a href=\"https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq\">https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq</a></p>\n<p>上述文档是基于 linux 原生安装 RabbitMQ，然后安装插件。</p>\n<p>因为我们之前是基于 Docker 安装 RabbitMQ，所以下面我们会讲解基于 Docker 来安装 RabbitMQ 插件。</p>\n<h2 id=\"21下载插件\"><a class=\"markdownIt-Anchor\" href=\"#21下载插件\">#</a> 2.1. 下载插件</h2>\n<p>RabbitMQ 有一个官方的插件社区，地址为：<a href=\"https://www.rabbitmq.com/community-plugins.html\">https://www.rabbitmq.com/community-plugins.html</a></p>\n<p>其中包含各种各样的插件，包括我们要使用的 DelayExchange 插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139975.png\" alt=\"image-20210713104511055\"></p>\n<p>大家可以去对应的 GitHub 页面下载 3.8.9 版本的插件，地址为 https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9 这个对应 RabbitMQ 的 3.8.5 以上版本。</p>\n<p>课前资料也提供了下载好的插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139733.png\" alt=\"image-20210713104808909\"></p>\n<h2 id=\"22上传插件\"><a class=\"markdownIt-Anchor\" href=\"#22上传插件\">#</a> 2.2. 上传插件</h2>\n<p>因为我们是基于 Docker 安装，所以需要先查看 RabbitMQ 的插件目录对应的数据卷。如果不是基于 Docker 的同学，请参考第一章部分，重新创建 Docker 容器。</p>\n<p>我们之前设定的 RabbitMQ 的数据卷名称为 <code>mq-plugins</code> ，所以我们使用下面命令查看数据卷：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume inspect mq-plugins</pre></td></tr></table></figure><p>可以得到下面结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139695.png\" alt=\"image-20210713105135701\"></p>\n<p>接下来，将插件上传到这个目录即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139638.png\" alt=\"image-20210713105339785\"></p>\n<h2 id=\"23安装插件\"><a class=\"markdownIt-Anchor\" href=\"#23安装插件\">#</a> 2.3. 安装插件</h2>\n<p>最后就是安装了，需要进入 MQ 容器内部来执行安装。我的容器名为 <code>mq</code> ，所以执行下面命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行时，请将其中的  <code>-it</code>  后面的 <code>mq</code>  替换为你自己的容器名.</p>\n<p>进入容器内部后，执行下面命令开启插件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_delayed_message_exchange</pre></td></tr></table></figure><p>结果如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139444.png\" alt=\"image-20210713105829435\"></p>\n<p>访问 mq 前端声明一个交换机进行测试：</p>\n<p>DelayExchange 插件的原理是对官方原生的 Exchange 做了功能的升级：</p>\n<p>1、将 DelayExchange 接受的消息暂存在内存中 (官方的 Exchange 是无法存储消息的)</p>\n<p>2、在 DelayExchange 中计时，超时后才投递消息到队列中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221553081.png\" alt=\"image-20231022155351657\"></p>\n<p>发送这个消息的时候延迟多久需要在发送消息的时候设置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221557138.png\" alt=\"image-20231022155755822\"></p>\n<h1 id=\"3集群部署\"><a class=\"markdownIt-Anchor\" href=\"#3集群部署\">#</a> 3. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群，我们的计划部署 3 节点的 mq 集群：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>控制台端口</th>\n<th>amqp 通信端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mq1</td>\n<td>8081 —&gt; 15672</td>\n<td>8071 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq2</td>\n<td>8082 —&gt; 15672</td>\n<td>8072 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq3</td>\n<td>8083 —&gt; 15672</td>\n<td>8073  —&gt; 5672</td>\n</tr>\n</tbody>\n</table>\n<p>集群中的节点标示默认都是： <code>rabbit@[hostname]</code> ，因此以上三个节点的名称分别为：</p>\n<ul>\n<li>rabbit@mq1</li>\n<li>rabbit@mq2</li>\n<li>rabbit@mq3</li>\n</ul>\n<h2 id=\"22获取cookie\"><a class=\"markdownIt-Anchor\" href=\"#22获取cookie\">#</a> 2.2. 获取 cookie</h2>\n<p>RabbitMQ 底层依赖于 Erlang，而 Erlang 虚拟机就是一个面向分布式的语言，默认就支持集群模式。集群模式中的每个 RabbitMQ 节点使用 cookie 来确定它们是否被允许相互通信。</p>\n<p>要使两个节点能够通信，它们必须具有相同的共享秘密，称为<strong> Erlang cookie</strong>。cookie 只是一串最多 255 个字符的字母数字字符。</p>\n<p>每个集群节点必须具有<strong>相同的 cookie</strong>。实例之间也需要它来相互通信。</p>\n<p>我们先在之前启动的 mq 容器中获取一个 cookie 值，作为集群的 cookie。执行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">cat</span> /var/lib/rabbitmq/.erlang.cookie</pre></td></tr></table></figure><p>可以看到 cookie 值如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DVNQQPDKLNCMEPRBYEHX</pre></td></tr></table></figure><p>接下来，停止并删除当前的 mq 容器，我们重新搭建集群。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> mq</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139218.png\" alt=\"image-20210717212345165\"></p>\n<h2 id=\"23准备集群配置\"><a class=\"markdownIt-Anchor\" href=\"#23准备集群配置\">#</a> 2.3. 准备集群配置</h2>\n<p>在 /tmp 目录新建一个配置文件 rabbitmq.conf：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> rabbitmq.conf</pre></td></tr></table></figure><p>文件内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loopback_users.guest = false</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listeners.tcp.default = 5672</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cluster_formation.classic_config.nodes.1 = rabbit@mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster_formation.classic_config.nodes.2 = rabbit@mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cluster_formation.classic_config.nodes.3 = rabbit@mq3</pre></td></tr></table></figure><p>再创建一个文件，记录 cookie</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建 cookie 文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> .erlang.cookie</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 写入 cookie</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"FXZMCVGLBIXZCDEMMVZQ\"</span> <span class=\"token operator\">></span> .erlang.cookie</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 修改 cookie 文件的权限</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> .erlang.cookie</pre></td></tr></table></figure><p>准备三个目录，mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> mq1 mq2 mq3</pre></td></tr></table></figure><p>然后拷贝 rabbitmq.conf、cookie 文件到 mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq3</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq3</pre></td></tr></table></figure><h2 id=\"24启动集群\"><a class=\"markdownIt-Anchor\" href=\"#24启动集群\">#</a> 2.4. 启动集群</h2>\n<p>创建一个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create mq-net</pre></td></tr></table></figure><p>运行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq1/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8071</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq2/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8072</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8082</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq3/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8073</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><h2 id=\"25测试\"><a class=\"markdownIt-Anchor\" href=\"#25测试\">#</a> 2.5. 测试</h2>\n<p>在 mq1 这个节点上添加一个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139410.png\" alt=\"image-20210717222833196\"></p>\n<p>如图，在 mq2 和 mq3 两个控制台也都能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139214.png\" alt=\"image-20210717223057902\"></p>\n<h3 id=\"251数据共享测试\"><a class=\"markdownIt-Anchor\" href=\"#251数据共享测试\">#</a> 2.5.1. 数据共享测试</h3>\n<p>点击这个队列，进入管理页面：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139412.png\" alt=\"image-20210717223421750\"></p>\n<p>然后利用控制台发送一条消息到这个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140585.png\" alt=\"image-20210717223320238\"></p>\n<p>结果在 mq2、mq3 上都能看到这条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140067.png\" alt=\"image-20210717223603628\"></p>\n<h3 id=\"252可用性测试\"><a class=\"markdownIt-Anchor\" href=\"#252可用性测试\">#</a> 2.5.2. 可用性测试</h3>\n<p>我们让其中一台节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>然后登录 mq2 或 mq3 的控制台，发现 simple.queue 也不可用了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140781.png\" alt=\"image-20210717223800203\"></p>\n<p>说明数据并没有拷贝到 mq2 和 mq3。</p>\n<h1 id=\"4镜像模式\"><a class=\"markdownIt-Anchor\" href=\"#4镜像模式\">#</a> 4. 镜像模式</h1>\n<p>在刚刚的案例中，一旦创建队列的主机宕机，队列就会不可用。不具备高可用能力。如果要解决这个问题，必须使用官方提供的镜像集群方案。</p>\n<p>官方文档地址：<a href=\"https://www.rabbitmq.com/ha.html\">https://www.rabbitmq.com/ha.html</a></p>\n<h2 id=\"41镜像模式的特征\"><a class=\"markdownIt-Anchor\" href=\"#41镜像模式的特征\">#</a> 4.1. 镜像模式的特征</h2>\n<p>默认情况下，队列只保存在创建该队列的节点上。而镜像模式下，创建队列的节点被称为该队列的<strong>主节点</strong>，队列还会拷贝到集群中的其它节点，也叫做该队列的<strong>镜像</strong>节点。</p>\n<p>但是，不同队列可以在集群中的任意节点上创建，因此不同队列的主节点可以不同。甚至，<strong>一个队列的主节点可能是另一个队列的镜像节点</strong>。</p>\n<p>用户发送给队列的一切请求，例如发送消息、消息回执默认都会在主节点完成，如果是从节点接收到请求，也会路由到主节点去完成。<strong>镜像节点仅仅起到备份数据作用</strong>。</p>\n<p>当主节点接收到消费者的 ACK 时，所有镜像都会删除节点中的数据。</p>\n<p>总结如下：</p>\n<ul>\n<li>镜像队列结构是一主多从（从就是镜像）</li>\n<li>所有操作都是主节点完成，然后同步给镜像节点</li>\n<li>主宕机后，镜像节点会替代成新的主（如果在主从同步完成前，主就已经宕机，可能出现数据丢失）</li>\n<li>不具备负载均衡功能，因为所有操作都会有主节点完成（但是不同队列，其主节点可以不同，可以利用这个提高吞吐量）</li>\n</ul>\n<h2 id=\"42镜像模式的配置\"><a class=\"markdownIt-Anchor\" href=\"#42镜像模式的配置\">#</a> 4.2. 镜像模式的配置</h2>\n<p>镜像模式的配置有 3 种模式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">ha-mode</th>\n<th style=\"text-align:left\">ha-params</th>\n<th style=\"text-align:left\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">准确模式 exactly</td>\n<td style=\"text-align:left\">队列的副本量 count</td>\n<td style=\"text-align:left\">集群中队列副本（主服务器和镜像服务器之和）的数量。count 如果为 1 意味着单个副本：即队列主节点。count 值为 2 表示 2 个副本：1 个队列主和 1 个队列镜像。换句话说：count = 镜像数量 + 1。如果群集中的节点数少于 count，则该队列将镜像到所有节点。如果有集群总数大于 count+1，并且包含镜像的节点出现故障，则将在另一个节点上创建一个新的镜像。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">(none)</td>\n<td style=\"text-align:left\">队列在群集中的所有节点之间进行镜像。队列将镜像到任何新加入的节点。镜像到所有节点将对所有群集节点施加额外的压力，包括网络 I / O，磁盘 I / O 和磁盘空间使用情况。推荐使用 exactly，设置副本数为（N / 2 +1）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nodes</td>\n<td style=\"text-align:left\"><em>node names</em></td>\n<td style=\"text-align:left\">指定队列创建到哪些节点，如果指定的节点全部不存在，则会出现异常。如果指定的节点在集群中存在，但是暂时不可用，会创建节点到当前客户端连接到的节点。</td>\n</tr>\n</tbody>\n</table>\n<p>这里我们以 rabbitmqctl 命令作为案例来讲解配置语法。</p>\n<p>语法示例：</p>\n<h3 id=\"421exactly模式\"><a class=\"markdownIt-Anchor\" href=\"#421exactly模式\">#</a> 4.2.1.exactly 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-two &quot;^two\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-two</code> ：策略名称，自定义</li>\n<li><code>&quot;^two\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>two.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;exactly&quot;</code> ：策略模式，此处是 exactly 模式，指定副本数量</li>\n<li><code>&quot;ha-params&quot;:2</code> ：策略参数，这里是 2，就是副本数量为 2，1 主 1 镜像</li>\n<li><code>&quot;ha-sync-mode&quot;:&quot;automatic&quot;</code> ：同步策略，默认是 manual，即新加入的镜像节点不会同步旧的消息。如果设置为 automatic，则新加入的镜像节点会把主节点中所有消息都同步，会带来额外的网络开销</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"422all模式\"><a class=\"markdownIt-Anchor\" href=\"#422all模式\">#</a> 4.2.2.all 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-all &quot;^all\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>ha-all</code> ：策略名称，自定义</li>\n<li><code>&quot;^all\\.&quot;</code> ：匹配所有以 <code>all.</code>  开头的队列名</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'</code> ：策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;all&quot;</code> ：策略模式，此处是 all 模式，即所有节点都会称为镜像节点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"423nodes模式\"><a class=\"markdownIt-Anchor\" href=\"#423nodes模式\">#</a> 4.2.3.nodes 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-nodes &quot;^nodes\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-nodes</code> ：策略名称，自定义</li>\n<li><code>&quot;^nodes\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>nodes.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;nodes&quot;</code> ：策略模式，此处是 nodes 模式</li>\n<li><code>&quot;ha-params&quot;:[&quot;rabbit@mq1&quot;, &quot;rabbit@mq2&quot;]</code> ：策略参数，这里指定副本所在节点名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"43测试\"><a class=\"markdownIt-Anchor\" href=\"#43测试\">#</a> 4.3. 测试</h2>\n<p>我们使用 exactly 模式的镜像，因为集群节点数量为 3，因此镜像数量就设置为 2.</p>\n<p>运行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 rabbitmqctl set_policy ha-two <span class=\"token string\">\"^two\\.\"</span> <span class=\"token string\">'&#123;\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"&#125;'</span></pre></td></tr></table></figure><p>下面，我们创建一个新的队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140154.png\" alt=\"image-20210717231751411\"></p>\n<p>在任意一个 mq 控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140517.png\" alt=\"image-20210717231829505\"></p>\n<h3 id=\"431测试数据共享\"><a class=\"markdownIt-Anchor\" href=\"#431测试数据共享\">#</a> 4.3.1. 测试数据共享</h3>\n<p>给 two.queue 发送一条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140429.png\" alt=\"image-20210717231958996\"></p>\n<p>然后在 mq1、mq2、mq3 的任意控制台查看消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140006.png\" alt=\"image-20210717232108584\"></p>\n<h3 id=\"432测试高可用\"><a class=\"markdownIt-Anchor\" href=\"#432测试高可用\">#</a> 4.3.2. 测试高可用</h3>\n<p>现在，我们让 two.queue 的主节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>查看集群状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140157.png\" alt=\"image-20210717232257420\"></p>\n<p>查看队列状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140733.png\" alt=\"image-20210717232322646\"></p>\n<p>发现依然是健康的！并且其主节点切换到了 rabbit@mq2 上</p>\n<h1 id=\"5仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#5仲裁队列\">#</a> 5. 仲裁队列</h1>\n<p>从 RabbitMQ 3.8 版本开始，引入了新的仲裁队列，他具备与镜像队里类似的功能，但使用更加方便。</p>\n<h2 id=\"51添加仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#51添加仲裁队列\">#</a> 5.1. 添加仲裁队列</h2>\n<p>在任意控制台添加一个队列，一定要选择队列类型为 Quorum 类型。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140068.png\" alt=\"image-20210717234329640\"></p>\n<p>在任意控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140859.png\" alt=\"image-20210717234426209\"></p>\n<p>可以看到，仲裁队列的 + 2 字样。代表这个队列有 2 个镜像节点。</p>\n<p>因为仲裁队列默认的镜像数为 5。如果你的集群有 7 个节点，那么镜像数肯定是 5；而我们集群只有 3 个节点，因此镜像数量就是 3.</p>\n<h2 id=\"52springamqp创建仲载队列\"><a class=\"markdownIt-Anchor\" href=\"#52springamqp创建仲载队列\">#</a> 5.2.SpringAMQP 创建仲载队列</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuorumConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">quorumQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"quorum.queue2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 持久化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">quorum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 仲载队列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringAMQP 链接集群，只需要在 yml 中配置即可：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8071</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8072</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8073</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># port: 5672 # 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr></table></figure><h2 id=\"53测试\"><a class=\"markdownIt-Anchor\" href=\"#53测试\">#</a> 5.3. 测试</h2>\n<p>可以参考对镜像集群的测试，效果是一样的。</p>\n<h2 id=\"53集群扩容\"><a class=\"markdownIt-Anchor\" href=\"#53集群扩容\">#</a> 5.3. 集群扩容</h2>\n<h3 id=\"531加入集群\"><a class=\"markdownIt-Anchor\" href=\"#531加入集群\">#</a> 5.3.1. 加入集群</h3>\n<p>1）启动一个新的 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq4 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq5 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8074</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8084</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><p>2）进入容器控制台：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq4 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>3）停止 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl stop_app</pre></td></tr></table></figure><p>4）重置 RabbitMQ 中的数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl reset</pre></td></tr></table></figure><p>5）加入 mq1：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl join_cluster rabbit@mq1</pre></td></tr></table></figure><p>6）再次启动 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl start_app</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140463.png\" alt=\"image-20210718001909492\"></p>\n<h3 id=\"532增加仲裁队列副本\"><a class=\"markdownIt-Anchor\" href=\"#532增加仲裁队列副本\">#</a> 5.3.2. 增加仲裁队列副本</h3>\n<p>我们先查看下 quorum.queue 这个队列目前的副本情况，进入 mq1 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140047.png\" alt=\"image-20210718002118357\"></p>\n<p>现在，我们让 mq4 也加入进来：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues add_member <span class=\"token string\">\"quorum.queue\"</span> <span class=\"token string\">\"rabbit@mq4\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140584.png\" alt=\"image-20210718002253226\"></p>\n<p>再次查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140083.png\" alt=\"image-20210718002342603\"></p>\n<p>查看控制台，发现 quorum.queue 的镜像数量也从原来的 +2 变成了 +3：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140839.png\" alt=\"image-20210718002422365\"></p>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/springcloud-%E5%BC%82%E6%AD%A5%E9%80%9A%E8%AE%AF/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/springcloud-%E5%BC%82%E6%AD%A5%E9%80%9A%E8%AE%AF/",
            "title": "八、RabbitMQ服务异步通讯",
            "date_published": "2024-04-02T10:00:51.046Z",
            "content_html": "<h2 id=\"八-服务异步通讯\"><a class=\"markdownIt-Anchor\" href=\"#八-服务异步通讯\">#</a> 八、服务异步通讯🎄</h2>\n<p>实用篇 - RabbitMQ</p>\n<p><strong>学习内容</strong>：</p>\n<ul>\n<li>初始 MQ</li>\n<li>RabbitMQ 快速入门</li>\n<li>SpringAMQP</li>\n</ul>\n<h3 id=\"81-初始mq\"><a class=\"markdownIt-Anchor\" href=\"#81-初始mq\">#</a> 8.1、初始 MQ🌳</h3>\n<ul>\n<li>同步通讯</li>\n<li>异步通讯</li>\n<li>MQ 常见框架</li>\n</ul>\n<h4 id=\"811-同步调用的问题\"><a class=\"markdownIt-Anchor\" href=\"#811-同步调用的问题\">#</a> 8.1.1、同步调用的问题🌲</h4>\n<p>微服务间基于 Feign 的调用就属于同步方式，存在一些问题。</p>\n<blockquote>\n<p>我们做一个购买商品的业务，用户支付调用支付服务。支付成功后需要调用订单业务，修改订单状态。然后还要去调用仓储服务，因为要给用户发货。</p>\n<p>支付服务调用订单服务也好，调用仓储服务也好它都需要等待对方的响应。所以这种调用是事实的调用也就是同步调用</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101513894.png\" alt=\"image-20231010151319336\"></p>\n<p>它的问题：</p>\n<p>1、耦合问题</p>\n<p>如果需要增加业务而需要改动支付服务的代码</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101516352.png\" alt=\"image-20231010151616770\"></p>\n<p>2、性能下降</p>\n<p>用户来调用支付业务，假如说支付业务耗时 50ms，紧接着支付服务调用其它服务，其它服务都耗时 150ms。支付服务调用再调用其它服务是同步调用所以它必须等待其它服务的执行结果才能执行其它的工作。而这一套流程下来就达到了耗时：500ms。这样的业务也太烂了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101518339.png\" alt=\"image-20231010151851047\"></p>\n<p>3、资源浪费</p>\n<p>支付服务在不能执行下一步操作时一直都是在占用 CPU，占用内存的</p>\n<p>4、级联失败问题</p>\n<p>假如说中间某个服务报错了就会产生阻塞，等待时长较长结果且是失败的。用户体验极差</p>\n<p>综上所述：</p>\n<p>同步调用尽管时效性还不错但是却存在其它问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101527400.png\" alt=\"image-20231010152713676\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>同步调用的优点：</p>\n<ul>\n<li>时效性较强，可以立即得到结果</li>\n</ul>\n<p>同步调用的问题：</p>\n<ul>\n<li>耦合度高</li>\n<li>性能和吞吐能力下降</li>\n<li>有额外的资源消耗</li>\n<li>有级联失败问题</li>\n</ul>\n</blockquote>\n<h4 id=\"812-异步调用方案\"><a class=\"markdownIt-Anchor\" href=\"#812-异步调用方案\">#</a> 8.1.2、异步调用方案🌲</h4>\n<p>异步调用常见实现就是事件驱动模式</p>\n<p>引入了一个新的东西叫：Broker (事件代理者)</p>\n<p>支付服务通知 Broker，Broker 通过其它服务</p>\n<p>在整个过程当中，支付服务完成事件发布后就立即结束了自己的业务，可以去返回给用户了，而不需要去等其它服务完成结果</p>\n<p>这种方式就是异步方式</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101533471.png\" alt=\"image-20231010153325787\"></p>\n<p>优势：</p>\n<p>1、服务解耦</p>\n<p>有新的业务只需要订阅 Broker 就行了跟支付服务没有任何关系</p>\n<p>2、性能提升，吞吐量提高</p>\n<p>3、没有强依赖关系，不担心级联失败问题</p>\n<p>4、流量削峰</p>\n<p>解释 “流量削峰” ：假如说一瞬间来了三个请求，订单服务，仓储服务，短信服务每一时刻只能处理一个，这时 Broker 可以起到缓冲的 作用。然后其它服务就一个一个处理，处理完了就到 Broker 去取，这样这些服务就能一直按照自己平时的处理速度来工作。一切压力由 Broker 扛着，这样一个高度的并发就可以变成低度的并发，这！就是 流量削峰</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101542090.png\" alt=\"image-20231010154228957\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>异步通信的优点：</p>\n<ul>\n<li>耦合度低</li>\n<li>吞吐量提升</li>\n<li>故障隔离</li>\n<li>流量削峰</li>\n</ul>\n<p>异步通信的缺点：</p>\n<ul>\n<li>依赖于 Broker 的可靠性，安全性，吞吐能力</li>\n<li>架构复杂了，业务没有明显的流程线，不好追踪管理</li>\n</ul>\n</blockquote>\n<h4 id=\"813-什么是mq\"><a class=\"markdownIt-Anchor\" href=\"#813-什么是mq\">#</a> 8.1.3、什么是 MQ🌲</h4>\n<p>MQ (MessageQueue) ，中文是消息队列，字面来看就是存放消息的队列。也就是事件驱动架构中的 Broker</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>RabbitMQ</th>\n<th>ActiveMQ</th>\n<th>RocketMQ</th>\n<th>KafKa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>公司 / 社区</td>\n<td>Rabbit</td>\n<td>Apache</td>\n<td>阿里</td>\n<td>Apache</td>\n</tr>\n<tr>\n<td>开发语言</td>\n<td>Erlang</td>\n<td>Java</td>\n<td>Java</td>\n<td>Scala&amp;Java</td>\n</tr>\n<tr>\n<td>协议支持</td>\n<td>AMQP，XMPP，STOMP</td>\n<td>OpenWire，STOMP，REST，XMPP，AMQP</td>\n<td>自定义协议</td>\n<td>自定义协议</td>\n</tr>\n<tr>\n<td>可用性</td>\n<td>高</td>\n<td>一般</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>单机吞吐量</td>\n<td>一般</td>\n<td>差</td>\n<td>高</td>\n<td>非常高</td>\n</tr>\n<tr>\n<td>消息延迟</td>\n<td>微秒级</td>\n<td>毫秒级</td>\n<td>毫秒级</td>\n<td>毫秒以内</td>\n</tr>\n<tr>\n<td>消息可靠性</td>\n<td>高</td>\n<td>一般</td>\n<td>高</td>\n<td>一般</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"814-rabbitmq快速入门\"><a class=\"markdownIt-Anchor\" href=\"#814-rabbitmq快速入门\">#</a> 8.1.4、RabbitMQ 快速入门🌲</h4>\n<ul>\n<li>RabbitMQ 概述和安装</li>\n<li>常见消息模型</li>\n<li>快速入门</li>\n</ul>\n<h5 id=\"8141-rabbitmq概述\"><a class=\"markdownIt-Anchor\" href=\"#8141-rabbitmq概述\">#</a> 8.1.4.1、RabbitMQ 概述🌴</h5>\n<p>RabbitMQ 是基于 Erlang 语言开发的开源消息通信中间件，官网地址：<a href=\"https://www.rabbitmq.com/\">https://www.rabbitmq.com/</a></p>\n<p>安装 RabbitMQ 可以点击查看详细文章：<a href=\"./RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 安装部署指南</a>.</p>\n<blockquote>\n<p>RabbitMQ 的结构和概念</p>\n<p>Publisher 是消息发送者，consumer 就是消息消费者，发送者会把消息发送到 exchange 也就是交换机。交换机负责路由把消息投递到 queue 队列，队列负责暂存消息，然后消费者再去从队列中获取消息然后处理消息</p>\n<p>VirtulHost 就是虚拟主机，将来有多个用户它会有自己的一个虚拟主机，各个虚拟主机之间互相隔离避免干扰</p>\n<p>这就是整体 MQ 的架构了</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102044747.png\" alt=\"image-20231010204307956\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>RabbitMQ 中的几个概念：</p>\n<ul>\n<li>channel：操作 MQ 的工具</li>\n<li>exchange：路由消息到队列中</li>\n<li>queue：缓存消息</li>\n<li>virtual host：虚拟主机，是对 queue，exchange 等资源的逻辑分组</li>\n</ul>\n</blockquote>\n<h5 id=\"8142-常见消息模型\"><a class=\"markdownIt-Anchor\" href=\"#8142-常见消息模型\">#</a> 8.1.4.2、常见消息模型🌴</h5>\n<p>MQ 的官方文档中给出了 5 个 MQ 的 demo 示例，对应了几种不同的用法：</p>\n<ul>\n<li>基本消息队列 (BasicQueue)</li>\n<li>工作消息队列 (WorkQueue)</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102052128.png\" alt=\"image-20231010205233688\"></p>\n<ul>\n<li>\n<p>发布订阅 (Publish ，Subscribe)，又根据交换机类型不同分为三种：</p>\n<ul>\n<li>Fanout Exchange：广播</li>\n<li>Direct Exchange：路由</li>\n<li>Topic Exchange：主题</li>\n</ul>\n<p>图中，紫色的就是交换机</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102054075.png\" alt=\"image-20231010205422743\"></p>\n<h5 id=\"8143-helloworld案例\"><a class=\"markdownIt-Anchor\" href=\"#8143-helloworld案例\">#</a> 8.1.4.3、HelloWorld 案例🌴</h5>\n<p>官方的 HelloWorld 是基于最基础的消息队列模型来实现的，只包括三个角色：</p>\n<ul>\n<li>publisher：消息发布者，将消息发送到队列 queue</li>\n<li>queue：消息队列，负责接受并缓存消息</li>\n<li>consumer：订阅队列，处理队列中的消息</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102056496.png\" alt=\"image-20231010205637991\"></p>\n<p>发布者代码：</p>\n<p>debug 运行代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Channel</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Connection</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConnectionFactory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeoutException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PublisherTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 1. 建立连接</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">*</span>        <span class=\"token class-name\">ConnectionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 1.1. 设置连接参数，分别是：主机名、端口号、vhost、用户名、密码</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123321\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 1.2. 建立连接</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 2. 创建通道 Channel</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 3. 创建队列</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 4. 发送消息</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello, rabbitmq!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> queueName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息成功：【\"</span> <span class=\"token operator\">+</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 5. 关闭通道和连接</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码走到建立连接没有报错的话，查看下 RabbitMQ 的 ui 管理平台中的 Connections</p>\n<p>里面就会出现一个主机的连接信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110748590.png\" alt=\"image-20231011074738545\"></p>\n<p>再往下创建通道</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110749797.png\" alt=\"image-20231011074927559\"></p>\n<p>再往下创建队列</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110750475.png\" alt=\"image-20231011075033895\"></p>\n<p>再往下准备发送消息往队列中发送 queName，将消息转为字节发送 getBytes ()</p>\n<p>下面就可以看到队列中有一条消息：Ready = 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110756263.png\" alt=\"image-20231011075619843\"></p>\n<p>我们可以点击 Name，点击进去然后点击 Get Message 里面可以看到发送的消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110758298.png\" alt=\"image-20231011075826602\"></p>\n<p>消费者代码</p>\n<p>debug 运行</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeoutException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsumerTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 1. 建立连接</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConnectionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 1.1. 设置连接参数，分别是：主机名、端口号、vhost、用户名、密码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123321\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 1.2. 建立连接</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 2. 创建通道 Channel</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 3. 创建队列</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 4. 订阅消息</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultConsumer</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleDelivery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> consumerTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Envelope</span> envelope<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                       <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token comment\">// 5. 处理消息</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收到消息：【\"</span> <span class=\"token operator\">+</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等待接收消息。。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在消费者代码中又进行了创建队列，发布者已经产生时创建了一个队列了，但是消费者为什么又要创建队列呢？</p>\n<p>这是因为，发布者和消费者它们启动的顺序不确定。万一消费者先启动的呢，那找队列找不到怎么办。为了避免这种问题发生它们各自都去声明队列，虽然代码是重复的但是我们可以看下 RabbitMQ-ui 控制台的 Queue 管理页面</p>\n<p>它并没有去创建这个队列，所以发布者与消费者都写只是一个保险措施防止不存在队列</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110844291.png\" alt=\"image-20231011084433956\"></p>\n<p>第四步消费消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110845508.png\" alt=\"image-20231011084522086\"></p>\n<p>消费者最终在 idea 控制台的打印信息</p>\n<pre><code>等待接收消息。。。。\n接收到消息：【hello, rabbitmq!】\n</code></pre>\n<p>先打印了 main 函数的 “等待接收消息。。。。” 这段话，而后打印了 消费的消息。</p>\n<p>因为回调机制消费者处理函数 handleDelivery 与队列进行了绑定 queueName。但是消息还并没有过来然后再继续往下执行打印了 “等待接收消息。。。。” ，等 rabbitMQ 把消息投递回来了再打印 “接收到消息：【hello, rabbitmq!】”，这就说明 RabbitMQ 处理消息是异步的</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>基本消息队列的消息发送流程：</p>\n<ol>\n<li>建立 connection</li>\n<li>创建 channel</li>\n<li>利用 channel 声明队列</li>\n<li>利用 channel 向队列发送消息</li>\n</ol>\n<p>基本消息队列的消息接收流程：</p>\n<ol>\n<li>建立 connection</li>\n<li>创建 channel</li>\n<li>利用 channel 声明队列</li>\n<li>定义 consumer 的消费行为 handleDelivery ()</li>\n<li>利用 channel 将消费者与队列绑定</li>\n</ol>\n</blockquote>\n<h4 id=\"815-springamqp\"><a class=\"markdownIt-Anchor\" href=\"#815-springamqp\">#</a> 8.1.5、SpringAMQP🌲</h4>\n<ul>\n<li>Basic Queue 简单队列模型</li>\n<li>Work Queue 工作队列模型</li>\n<li>发布，订阅模型 - Fanout</li>\n<li>发布，订阅模型 - Direct</li>\n<li>发布，订阅模型 - Topic</li>\n<li>消息转换器</li>\n</ul>\n<h5 id=\"8151-什么是springamqp\"><a class=\"markdownIt-Anchor\" href=\"#8151-什么是springamqp\">#</a> 8.1.5.1、什么是 SpringAMQP🌴</h5>\n<p>SpringAMQP 官方地址：<a href=\"https://spring.io/projects/spring-amqp\">https://spring.io/projects/spring-amqp</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110903769.png\" alt=\"image-20231011090014596\"></p>\n<h5 id=\"8152-案例利用springamqp实现helloworld中的基础消息队列功能\"><a class=\"markdownIt-Anchor\" href=\"#8152-案例利用springamqp实现helloworld中的基础消息队列功能\">#</a> 8.1.5.2、案例，利用 SpringAMQP 实现 HelloWorld 中的基础消息队列功能🌴</h5>\n<p><strong>流程如下</strong>：</p>\n<p>1、在父工程中引入 spring-amqp 的依赖</p>\n<p>因为 publisher 和 consumer 服务都需要 amqp 依赖，因此这里把依赖直接放到父工程 mq-demo 中：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--AMQP 依赖，包含 RabbitMQ--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、在 publisher 服务中利用 RabbitTemplate 发送消息到 simple.queue 到这个队列</p>\n<p>在 publisher 中编写测试方法，向 simple.queue 发送消息</p>\n<p>2.1、在 publisher 服务中编写 application.yml，添加 mq 连接信息：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr></table></figure><p>2.2、在 publisher 服务中新建一个测试类，编写测试方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitTemplate</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/119:18</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringAmqpTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello,Spring Amqp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看 rabbitmq 的 ui 管理平台的队列信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110922013.png\" alt=\"image-20231011092250032\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110923115.png\" alt=\"image-20231011092326888\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么是 AMQP</p>\n<ul>\n<li>应用间消息通信的一种协议，与语言和平台无关</li>\n</ul>\n<p>SpringAMQP 如何发送消息？</p>\n<ul>\n<li>引入 amqp 的 starter 依赖</li>\n<li>配置 RabbitMQ 地址</li>\n<li>利用 RabbitTemplate 的 convertAndSend 方法发送消息到指定队列中</li>\n</ul>\n</blockquote>\n<p>3、在 consumer 服务中编写消费逻辑，绑定 simple.queue 这个队列</p>\n<p>在 consumer 中编写消息逻辑，监听 simple.queue</p>\n<p>3.1、在 consumer 服务中编写 application.yml，添加 mq 连接信息：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr></table></figure><p>3.2、在 consumer 服务中新建一个类，编写消费逻辑：</p>\n<p>不能写在 test 中进行测试是因为它需要被 Spring 所管理注册为 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//---------------------- 打印结果 ----------------------</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">.</span>   ____          _            __ _ _</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token operator\">/</span>\\\\ <span class=\"token operator\">/</span> ___'_ __ _ <span class=\"token function\">_</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>_ __  __ _ \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span>\\___ <span class=\"token operator\">|</span> <span class=\"token char\">'_ | '</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span> '_ \\<span class=\"token operator\">/</span> _` <span class=\"token operator\">|</span> \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> \\\\<span class=\"token operator\">/</span>  ___<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  '  <span class=\"token operator\">|</span>____<span class=\"token operator\">|</span> <span class=\"token punctuation\">.</span>__<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_\\__<span class=\"token punctuation\">,</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>___<span class=\"token operator\">/=</span><span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token operator\">::</span> <span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Boot</span> <span class=\"token operator\">::</span>        <span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RELEASE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token operator\">:</span><span class=\"token number\">584</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">Starting</span> <span class=\"token class-name\">ConsumerApplication</span> on <span class=\"token class-name\">Jfier</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">PID</span> <span class=\"token number\">1164</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span><span class=\"token operator\">:</span>\\微服务\\实用篇\\资料\\day04<span class=\"token operator\">-</span><span class=\"token constant\">MQ</span>\\资料\\mq<span class=\"token operator\">-</span>demo\\consumer\\target\\classes started by <span class=\"token class-name\">Administrator</span> in <span class=\"token class-name\">E</span><span class=\"token operator\">:</span>\\微服务\\实用篇\\资料\\day04<span class=\"token operator\">-</span><span class=\"token constant\">MQ</span>\\资料\\mq<span class=\"token operator\">-</span>demo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token operator\">:</span><span class=\"token number\">594</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">No</span> active profile set<span class=\"token punctuation\">,</span> falling back <span class=\"token keyword\">to</span> <span class=\"token keyword\">default</span> profiles<span class=\"token operator\">:</span> <span class=\"token keyword\">default</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">476</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">o<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span></span>CachingConnectionFactory</span>       <span class=\"token operator\">:</span> <span class=\"token class-name\">Attempting</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">connect</span> <span class=\"token keyword\">to</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">192.168</span><span class=\"token number\">.249</span><span class=\"token number\">.128</span><span class=\"token operator\">:</span><span class=\"token number\">5672</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">531</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">o<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span></span>CachingConnectionFactory</span>       <span class=\"token operator\">:</span> <span class=\"token class-name\">Created</span> <span class=\"token keyword\">new</span> connection<span class=\"token operator\">:</span> rabbitConnectionFactory#<span class=\"token number\">640d</span>c4c6<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token class-name\">SimpleConnection</span><span class=\"token annotation punctuation\">@7a0f244f</span> <span class=\"token punctuation\">[</span>delegate<span class=\"token operator\">=</span>amqp<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>itcast<span class=\"token annotation punctuation\">@192.168.249.128</span><span class=\"token operator\">:</span><span class=\"token number\">5672</span><span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> localPort<span class=\"token operator\">=</span> <span class=\"token number\">3380</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">610</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">Started</span> <span class=\"token class-name\">ConsumerApplication</span> in <span class=\"token number\">2.755</span> seconds <span class=\"token punctuation\">(</span><span class=\"token constant\">JVM</span> running <span class=\"token keyword\">for</span> <span class=\"token number\">4.791</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>消费者接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>SPringAMQP 如何接收消息？</p>\n<ul>\n<li>引入 amqp 的 starter 依赖</li>\n<li>配置 RabbitMQ 地址</li>\n<li>定义类，添加 @Component 注解</li>\n<li>类中声明方法，添加 @RabbitListener 注解，方法参数就是消息</li>\n</ul>\n</blockquote>\n<h4 id=\"816-work-queue工作队列\"><a class=\"markdownIt-Anchor\" href=\"#816-work-queue工作队列\">#</a> 8.1.6、Work Queue 工作队列🌲</h4>\n<p>它也具备消息发布和消费，但是不同的是它后面挂了两个消费者。两个消费者共同处理发布者的消息，</p>\n<p>比如发布者发送 50 消息，consumer1 消费 25，consumer2 消费 25。被消费过的消息就会被删除不可能会再被其它消费者消费已经消费过的消息。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110943473.png\" alt=\"image-20231011094302230\"></p>\n<h5 id=\"8161-模拟workqueue实现一个队列绑定多个消费者\"><a class=\"markdownIt-Anchor\" href=\"#8161-模拟workqueue实现一个队列绑定多个消费者\">#</a> 8.1.6.1、模拟 WorkQueue，实现一个队列绑定多个消费者🌴</h5>\n<p><strong>基本思路如下</strong>：</p>\n<p>1、在 publisher 服务中定义测试方法，每秒产生 50 条消息，发送到 simple.queue</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">workQueueTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello,Spring Amqp __ \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> message <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、在 consumer 服务中定义两个消息监听者，都监听 simple.queue 队列</p>\n<p>2.1、消费者 1 每秒处理 50 条消息，消费者 2 每秒处理 10 条消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者1接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者2......接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">.</span>   ____          _            __ _ _</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token operator\">/</span>\\\\ <span class=\"token operator\">/</span> ___'_ __ _ <span class=\"token function\">_</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>_ __  __ _ \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span>\\___ <span class=\"token operator\">|</span> <span class=\"token char\">'_ | '</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span> '_ \\<span class=\"token operator\">/</span> _` <span class=\"token operator\">|</span> \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> \\\\<span class=\"token operator\">/</span>  ___<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  '  <span class=\"token operator\">|</span>____<span class=\"token operator\">|</span> <span class=\"token punctuation\">.</span>__<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_\\__<span class=\"token punctuation\">,</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>___<span class=\"token operator\">/=</span><span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token operator\">::</span> <span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Boot</span> <span class=\"token operator\">::</span>        <span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RELEASE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">1</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.564155</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.564155</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">3</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.602944400</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">5</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.634311</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">7</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.663563900</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">9</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.693902600</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">11</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.724277700</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">13</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.754720</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">2</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.784759800</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">15</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.784759800</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">17</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.814876500</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">19</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.845253300</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">21</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.876696200</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">23</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.907389600</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">25</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.938559800</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">27</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.968268500</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">29</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.998623300</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">4</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.998623300</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">31</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.028620600</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">33</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.058770700</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">35</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.089572100</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">37</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.119707200</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">39</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.149984400</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">41</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.179999600</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">6</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.210307400</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">43</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.210307400</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">45</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.240964800</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">47</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.270986500</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">49</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.301165400</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">8</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.423433300</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">10</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.636403400</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">12</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.848982300</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">14</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.060187200</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">16</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.273197100</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">18</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.484165800</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">20</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.696880900</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">22</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.908464300</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">24</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.121477600</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">26</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.333586300</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">28</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.548236400</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">30</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.759585700</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">32</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.973508400</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">34</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.185203800</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">36</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.399855600</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">38</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.610433700</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">40</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.823352100</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">42</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.035381900</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">44</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.248226300</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">46</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.462320400</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">48</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.677121500</span></pre></td></tr></table></figure><p>消费者 1 很快就结束了，而消费者 2 却花了很长很长的时间。我们认为的快的多消费点，慢的少消费点而事实却是平均分配给了两个消费者，消费者 1 那拿的是所有的奇数，消费者 2 拿到的是所有的偶数。</p>\n<p>这是因为 RabbitMQ 一个机制造成的，就是：消息预取机制</p>\n<p>解释消息预取：</p>\n<p>当有大量的消息到达队列时，队列中会把消息进行投递，consumer1 和 consumer2 会提前把消息拿过来这就是消息预取，不管能不能处理先拿过来再说</p>\n<p>于是两个人就平均分配所有的消息一人分了 25 条，但是呢 consumer1 处理的快很快就搞定了，consumer2 处理的慢需要一段时间</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111024244.png\" alt=\"image-20231011102418214\"></p>\n<h6 id=\"可以对消息预取进行配置限制\"><a class=\"markdownIt-Anchor\" href=\"#可以对消息预取进行配置限制\">#</a> 可以对消息预取进行配置限制🎋</h6>\n<p>修改 application.yml 文件，设置 preFetch 这个值，可以控制预取消息的上限：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">listener</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">simple</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">prefetch</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 每次只获取一条消息，处理完成才能获取下一个消息</span></pre></td></tr></table></figure><p>设置完成后再进行测试：</p>\n<pre><code>消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 0---2023-10-11T10:30:40.386440300\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 1---2023-10-11T10:30:40.398703100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 2---2023-10-11T10:30:40.413527700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 3---2023-10-11T10:30:40.444268700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 4---2023-10-11T10:30:40.473866400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 5---2023-10-11T10:30:40.504620300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 6---2023-10-11T10:30:40.535400300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 7---2023-10-11T10:30:40.566022200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 8---2023-10-11T10:30:40.595970600\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 9---2023-10-11T10:30:40.611076800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 10---2023-10-11T10:30:40.626201300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 11---2023-10-11T10:30:40.657505500\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 12---2023-10-11T10:30:40.688200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 13---2023-10-11T10:30:40.717912700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 14---2023-10-11T10:30:40.748533200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 15---2023-10-11T10:30:40.778181500\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 16---2023-10-11T10:30:40.808905800\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 17---2023-10-11T10:30:40.823251200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 18---2023-10-11T10:30:40.837450100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 19---2023-10-11T10:30:40.867629400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 20---2023-10-11T10:30:40.897964100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 21---2023-10-11T10:30:40.927968900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 22---2023-10-11T10:30:40.959483800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 23---2023-10-11T10:30:40.988862\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 24---2023-10-11T10:30:41.019388500\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 25---2023-10-11T10:30:41.034540\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 26---2023-10-11T10:30:41.049536900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 27---2023-10-11T10:30:41.079546800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 28---2023-10-11T10:30:41.110340600\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 29---2023-10-11T10:30:41.141704800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 30---2023-10-11T10:30:41.171164300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 31---2023-10-11T10:30:41.201884700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 32---2023-10-11T10:30:41.231497200\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 33---2023-10-11T10:30:41.246620400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 34---2023-10-11T10:30:41.262814300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 35---2023-10-11T10:30:41.293344400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 36---2023-10-11T10:30:41.322739\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 37---2023-10-11T10:30:41.352387700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 38---2023-10-11T10:30:41.382386800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 39---2023-10-11T10:30:41.412727200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 40---2023-10-11T10:30:41.443659\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 41---2023-10-11T10:30:41.458969\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 42---2023-10-11T10:30:41.475290100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 43---2023-10-11T10:30:41.504816800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 44---2023-10-11T10:30:41.535720400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 45---2023-10-11T10:30:41.565967900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 46---2023-10-11T10:30:41.596477300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 47---2023-10-11T10:30:41.625940900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 48---2023-10-11T10:30:41.658033\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 49---2023-10-11T10:30:41.674047\n</code></pre>\n<p>这时消费者打印的消息特快就结束了，快的呢多消费，慢的呢就慢慢来消费。起到能者多劳的功能</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>多个消费者绑定到一个队列，同一条消息只会被一个消费者处理</li>\n<li>通过设置 prefetch 来控制消费者预取的消息数量</li>\n</ul>\n</blockquote>\n<h4 id=\"817-发布publish订阅subscribe\"><a class=\"markdownIt-Anchor\" href=\"#817-发布publish订阅subscribe\">#</a> 8.1.7、发布 (publish)，订阅 (subscribe)🌲</h4>\n<p>发布订阅模式与之前案例的区别就是允许将同一消息发送给多个消费者。实现方式是加入了 exchange (交换机)</p>\n<blockquote>\n<p>上面学习了 RabbitMQ 的两个案例一个是简单队列案例另一个是 WorkQueue 案例，这两个案例有一个共同的特点就是，所发出的消息只可能被一个消费者消费。因为一旦消费完就会从队列中删除而这一特点就无法满足一个需求比如以前说的 支付服务发布的消息要被，订单服务，仓储服务，短信服务。这三个服务各自去完成自己的业务，也就是说发布的这条用户支付成功的消息要被三个服务都接收到。</p>\n<p>这时就需要用到这章的知识了</p>\n</blockquote>\n<center>模型结构</center>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111042266.png\" alt=\"image-20231011104256966\"></p>\n<p><strong>常见 exchange 类型包括</strong>：</p>\n<ul>\n<li>Fanout：广播</li>\n<li>Direct：路由</li>\n<li>Topic：话题</li>\n</ul>\n<p><font color='red'>注意</font>：exchange 负责消息路由，而不是存储，路由失败则消息丢失</p>\n<h5 id=\"8171-发布订阅-fanout-exchange\"><a class=\"markdownIt-Anchor\" href=\"#8171-发布订阅-fanout-exchange\">#</a> 8.1.7.1、发布订阅 - Fanout Exchange🌴</h5>\n<p>Fanout Exchange 会将接收到的消息路由到每一个跟其绑定的 queue</p>\n<blockquote>\n<p>就像混社会的社会人一样，后面两个 consumer 跟着 publisher 混，只要跟着 publisher 混那什么钱啊什么的都不用发愁</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111051241.gif\" alt=\"test\"></p>\n<h5 id=\"8172-利用springamqp演示fanoutexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8172-利用springamqp演示fanoutexchange的使用\">#</a> 8.1.7.2、利用 SpringAMQP 演示 FanoutExchange 的使用🌴</h5>\n<p>实现思路如下：</p>\n<p>1、在 consumer 服务中，利用代码声明队列，交换机，并将两者绑定</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 fanout.queue1 和 fanout.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.fanout 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111110248.png\" alt=\"image-20231011111040177\"></p>\n<p><strong>步骤</strong>：</p>\n<p>1、在 consumer 服务声明 Exchange，Queue，Binding</p>\n<p>SpringAMQP 提供了声明交换机，队列，绑定关系的 API，例如：</p>\n<p>在 consumer 服务创建一个配置类，添加 @Configuration 注解，并声明 FanoutExchange，Queue 和绑定关系对象 Binding，代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Binding</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BindingBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FanoutExchange</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/1111:17</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FanoutConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// itcast.fanout</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FanoutExchange</span> <span class=\"token function\">fanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast.fanout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// fanout.queue1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">fanoutQueue1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fanout.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 绑定队列 1 到交换机</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">fanoutBinding</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Queue</span> fanoutQueue1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FanoutExchange</span> fanoutExchange<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fanoutQueue1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span>fanoutExchange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// fanout.queue2</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">fanoutQueue2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fanout.queue2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">// 绑定队列 2 到交换机</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">fanoutBinding1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Queue</span> fanoutQueue2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FanoutExchange</span> fanoutExchange<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fanoutQueue2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span>fanoutExchange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、在 consumer 服务声明两个消费者</p>\n<p>在 consumer 服务的 SpringRabbitListener 类中，添加两个方法，分别监听 fanout.queue1 和 fanout.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"fanout.queue1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerFanoutQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到fanout.queue1的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"fanout.queue2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerFanoutQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到fanout.queue2的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 publisher 服务发送消息到 FanoutExchange</p>\n<p>在 publisher 服务的 SpringAmqpTest 类中添加测试方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 交换机名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.fanout\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 消息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello , every one\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 发送消息，参数分别是：交互机名称，Routingkey (暂时为空)，消息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动消费者的启动类，然后启动发布者的 test 函数进行测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111142286.png\" alt=\"image-20231011114245056\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>交换机的作用是什么？</p>\n<ul>\n<li>接收 publisher 发送的消息</li>\n<li>将消息按照路由规则路由到与之绑定的队列</li>\n<li>不能缓存消息，路由失败，消息丢失</li>\n<li>FanoutExchange 的会将消息路由到每个绑定的队列</li>\n</ul>\n<p>声明队列，交换机，绑定关系的 Bean 是什么？</p>\n<ul>\n<li>Queue</li>\n<li>FanoutExchange</li>\n<li>Binding</li>\n</ul>\n</blockquote>\n<h4 id=\"818-发布订阅-directexchange\"><a class=\"markdownIt-Anchor\" href=\"#818-发布订阅-directexchange\">#</a> 8.1.8、发布订阅 - DirectExchange🌲</h4>\n<p>DirectExchange 会将接收的消息根据<mark>规则路由到指定的 Queue</mark>，因此称为路由模式 (routers)。</p>\n<p><strong>规则</strong>：</p>\n<ul>\n<li>每一个 Queue 都与 Exchange 设置一个 BindingKey，将来利用暗号进行通信，可以有多个 Key</li>\n<li>发布者发送消息时，指定消息的 RoutingKey</li>\n<li>Exchange 将消息路由到 BindingKey 与消息 RoutingKey 一致的队列</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111152624.png\" alt=\"image-20231011115208085\"></p>\n<h5 id=\"8181-利用springamqp演示directexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8181-利用springamqp演示directexchange的使用\">#</a> 8.1.8.1、利用 SpringAMQP 演示 DirectExchange 的使用🌴</h5>\n<p><strong>实现思路如下</strong>：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 direct.queue1 和 direct.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.direct 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111158674.png\" alt=\"image-20231011115803693\"></p>\n<p>步骤：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 direct.queue1 和 direct.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 声明队列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"direct.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 声明交换机</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DIRECT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 绑定 key</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDirectQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到direct.queue1的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 声明队列</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"direct.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token comment\">// 声明交换机</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DIRECT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token comment\">// 绑定 key</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDirectQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到direct.queue2的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务看下 rabbitmq-ui 管理页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111347685.png\" alt=\"image-20231011134749247\"></p>\n<p>3、在 publisher 中编写测试方法，向 itcast.direct 发送消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 交换机名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 消息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello , blue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//------------------ 打印结果 ------------------</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将绑定的 key 改为 yellow 呢，记得将发送消息改为 “hello yellow”</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//---------------- 打印结果 ----------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将绑定的 key 改为 red 呢，记得将发送消息改为 “hello red”</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">]</span>消费者接收到direct<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>描述下 Direct 交换机与 Fanout 交换机的差异？</p>\n<ul>\n<li>Fanout 交换机将消息路由给每一个与之绑定的队列</li>\n<li>Direct 交换机根据 RoutingKey 判断路由给哪个队列</li>\n<li>如果多个队列具有相同的 RoutingKey，则与 Fanout 功能类似</li>\n</ul>\n<p>基于 @RabbitListener 注解声明队列和交换机有哪些常见注解？</p>\n<ul>\n<li>@Queue</li>\n<li>Exchange</li>\n</ul>\n</blockquote>\n<h4 id=\"819-发布订阅-topicexchange\"><a class=\"markdownIt-Anchor\" href=\"#819-发布订阅-topicexchange\">#</a> 8.1.9、发布订阅 - TopicExchange🌲</h4>\n<p>TopicExchange 与 DirectExchange 类似，区别在于 routingKey 必须是多个单词的列表，并且以 。 分割。</p>\n<p>Queue 与 Exchange 指定 BindingKey 时可以使用通配符：</p>\n<p><code>#</code> ：代指 0 个或多个单词</p>\n<p><code>*</code> ：代指一个单词</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111449230.png\" alt=\"image-20231011144903570\"></p>\n<h5 id=\"8191-利用springamqp演示topicexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8191-利用springamqp演示topicexchange的使用\">#</a> 8.1.9.1、利用 SpringAMQP 演示 TopicExchange 的使用🌴</h5>\n<p>实现思路如下：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 topic.queue1 和 topic.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.topic 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111452582.png\" alt=\"image-20231011145232937\"></p>\n<p>步骤：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 topic.queue1 和 topic.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExchangeTypes</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Exchange</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QueueBinding</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"topic.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"china.#\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenTopicQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到topic.queue1的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"topic.queue2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"#.news\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenTopicQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到topic.queue2的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 publisher 中编写测试方法，向 itcast.topic 发送消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendTopicExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"郭明然上市了不要888不要999只要9.9就能带回家\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"china.news\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//-------------------------- 打印结果 --------------------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>消费者接收到topic<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>郭明然上市了不要<span class=\"token number\">888</span>不要<span class=\"token number\">999</span>只要<span class=\"token number\">9.9</span>就能带回家<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>消费者接收到topic<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>郭明然上市了不要<span class=\"token number\">888</span>不要<span class=\"token number\">999</span>只要<span class=\"token number\">9.9</span>就能带回家<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>描述下 Direct 交换机与 Topic 交换机的差异？</p>\n<ul>\n<li>Topic 交换机支持通配符，不支持多个 key</li>\n<li>bindingKey：通配符，routingkey：多个单词</li>\n<li>#：0 个或多个</li>\n<li>*：一个</li>\n</ul>\n</blockquote>\n<h4 id=\"8110-测试发送object类型消息\"><a class=\"markdownIt-Anchor\" href=\"#8110-测试发送object类型消息\">#</a> 8.1.10、测试发送 Object 类型消息🌲</h4>\n<p><strong>说明</strong>：在 SpringAMQP 的发送方法中，接收消息的类型是 Object，也就是说我们可以发送任意对象类型的消息，SpringAMQP 会帮我们序列化为字节后发送</p>\n<p>可以看到函数参数都是 Object 类型的，那么就表示可以传递任意类型的 java 对象进去了吗？</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111554481.png\" alt=\"image-20231011155439361\"></p>\n<p>创建一个队列</p>\n<p>我们在 consumer 中利用 @Bean 声明一个队列：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @2023/10/1111:17</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FanoutConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">objectQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object.queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看 rabbitmq 的 ui 管理页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111602511.png\" alt=\"image-20231011160243062\"></p>\n<p>在 publisher 中发送消息以测试：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendObjectQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘桑\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object.queue\"</span><span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看消息发送的详细信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111611580.png\" alt=\"image-20231011161154919\"></p>\n<h5 id=\"81101-消息转换器\"><a class=\"markdownIt-Anchor\" href=\"#81101-消息转换器\">#</a> 8.1.10.1、消息转换器🌴</h5>\n<p>Spring 在对消息对象的处理是由 org.springframework.amqp.support.converter.MessageConverter 来处理的。而默认实现是 SimpleMessageConverter，基于 JDK 的 ObjectOutputStream 完成序列化。</p>\n<p>如果要修改只需要定义一个 MessageConverter 类型的 Bean 即可。推荐用 JSON 方式序列化，步骤如下：</p>\n<p>1、我们在 publisher 服务引入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.fasterxml.jackson.core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jackson-databind<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、我们在 publisher 服务启动类中声明 MessageConverter</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jackson2JsonMessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PublisherApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PublisherApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageConverter</span> <span class=\"token function\">messageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jackson2JsonMessageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>清空之前的队列中的消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111643872.png\" alt=\"image-20231011164323272\"></p>\n<p>再次运行测试函数，然后查看 RabbitMQ 中的消息详细情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111644952.png\" alt=\"image-20231011164413896\"></p>\n<p>消息发送的时候把对象序列化为 JSON，接收时反过来反序列化为对象</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111644991.png\" alt=\"image-20231011164436624\"></p>\n<p>3、消费者接受消息</p>\n<p>我们需要再消费者里面也加上 MessageConverter 进行反序列化。否则取消息就会报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jackson2JsonMessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @2023/10/1117:31</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RabbitMQConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageConverter</span> <span class=\"token function\">messageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jackson2JsonMessageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动消费者启动类，启动生产者的测试函数查看结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111736739.png\" alt=\"image-20231011173617788\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>SpringAMQP 中消息的序列化和反序列化是怎么实现的？</p>\n<ul>\n<li>利用 MessageConverter 实现的，默认是 JDK 的序列化</li>\n<li>注意发送与接收方必须使用相同的 MessageConverter</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "RabbitMQ"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-单击部署",
            "date_published": "2024-04-02T10:00:51.043Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101608790.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><p>使用命令来查看一下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REPOSITORY                   TAG       IMAGE ID       CREATED         SIZE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rabbitmq                     latest    24cc95a2cb57   <span class=\"token number\">6</span> days ago      217MB</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token comment\"># ui 管理平台的端口号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token comment\"># 消息通信的端口号</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> rabbitmq:3-management</pre></td></tr></table></figure><p>查看启动状态</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                                                                                                                                 NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>5ca16a608743   rabbitmq:3-management   <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">2</span> minutes   <span class=\"token number\">4369</span>/tcp, <span class=\"token number\">5671</span>/tcp, <span class=\"token number\">0.0</span>.0.0:5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, :::5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, <span class=\"token number\">15671</span>/tcp, <span class=\"token number\">15691</span>-15692/tcp, <span class=\"token number\">25672</span>/tcp, <span class=\"token number\">0.0</span>.0.0:15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp, :::15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp   mq</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>控制台打印了端口为：15671，在启动容器时配置了账号为：itcast，密码为：123321</p>\n<p>访问 uri：<a href=\"http://192.168.249.128:15672\">http://192.168.249.128:15672</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101627722.png\" alt=\"image-20231010162721293\"></p>\n<p><strong>页面功能介绍</strong>：</p>\n<blockquote>\n<p>Overview：总览</p>\n<p>作用：查看节点的一些详细信息</p>\n</blockquote>\n<blockquote>\n<p>Connections：连接</p>\n<p>无论是消息发布者还是消息消费者都应该跟 mq 建立连接</p>\n</blockquote>\n<blockquote>\n<p>Channels：通道</p>\n<p>建立连接后一定要创建一个通道，完后生产者 或者是消费者才能基于 Channel 完成消息的发送和接收</p>\n</blockquote>\n<blockquote>\n<p>Exchanges：交换机</p>\n<p>是消息的路由</p>\n</blockquote>\n<blockquote>\n<p>Queues：队列</p>\n</blockquote>\n<blockquote>\n<p>Admin：用户管理</p>\n<ul>\n<li>Virtual Host：虚拟机可以对每个用户进行一个隔离防止操作冲突</li>\n</ul>\n</blockquote>\n<h1 id=\"2集群部署\"><a class=\"markdownIt-Anchor\" href=\"#2集群部署\">#</a> 2. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群。</p>\n<h2 id=\"22设置网络\"><a class=\"markdownIt-Anchor\" href=\"#22设置网络\">#</a> 2.2. 设置网络</h2>\n<p>首先，我们需要让 3 台 MQ 互相知道对方的存在。</p>\n<p>分别在 3 台机器中，设置 /etc/hosts 文件，添加如下内容：</p>\n<pre><code>192.168.150.101 mq1\n192.168.150.102 mq2\n192.168.150.103 mq3\n</code></pre>\n<p>并在每台机器上测试，是否可以 ping 通对方：</p>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        }
    ]
}