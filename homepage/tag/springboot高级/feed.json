{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"springboot高级\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/%E8%87%AA%E5%AE%9A%E4%B9%89starter/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/%E8%87%AA%E5%AE%9A%E4%B9%89starter/",
            "title": "自定义starter起步依赖",
            "date_published": "2024-04-02T10:00:50.991Z",
            "content_html": "<h2 id=\"自定义starter\"><a class=\"markdownIt-Anchor\" href=\"#自定义starter\">#</a> 自定义 starter</h2>\n<blockquote>\n<p><span alt='solid'>需求</span>：</p>\n<p>自定义 redis-starter。要求当导入 redis 坐标时，SpringBoot 自定创建 Jedis 的 Bean。</p>\n</blockquote>\n<p>我们知道 SpringBoot 提供了很多很多的 starter 起步依赖，但是有些起步依赖并没有提供。而是由某个技术自己写的它希望和 SpringBoot 整合它自己写的 starter 起步依赖。</p>\n<p>比如说 Mybatis 就是这样做的，自己写的起步依赖让 SpringBoot 整合一下，接下来可以参考 Mybatis 的做法找到对应的思路。</p>\n<p><span alt='solid'>在 pom.xml 中引入 Mybatis 的起步依赖</span>：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>一般 SpringBoot 官方提供的起步依赖功能名写在最后面比如 test，而一般第三方提供的起步依赖功能名写在最前面比如 mybatis</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131514336.png\" alt=\"image-20230913150659200\"></p>\n<p>mybatis 起步依赖里面包含的坐标点击进去查看</p>\n<p>比如其中的坐标如下：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring-boot-autoconfigure<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>从其名得其意 ， 这个坐标哦就是 mybatis 自动配置的一个坐标。当我们引入到 mybatis 的 starter 起步依赖的坐标后，自动配置和其它的依赖就能加载得到了</p>\n<p>在 mybatis 的起步依赖中其实有什么功能代码也没有，只是将起步依赖中的所有坐标进行了整合</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131519634.png\" alt=\"image-20230913151926826\"></p>\n<p>我们关键看 mybatis-spring-boot-autoconfigure 依赖，其中的代码就比较多了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131520757.png\" alt=\"image-20230913152049774\"></p>\n<p>比如说我们可以看下 MybatisAutoConfiguration 这个类，这个类就是 Mybatis 的自动配置类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131523827.png\" alt=\"image-20230913152330440\"></p>\n<p>那么这个配置类要能够被 SpringBoot 所识别从而加载这个 配置类 里面定义的 Bean 的话，那么它的做法就是在 META-INF 中定义了一个 spring.factories 的文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131526086.png\" alt=\"image-20230913152640934\"></p>\n<p>这样就能够在启动 SpringBoot 的时候读取到这个配置文件，从而加载 Mybatis 相关的 Bean 到 IOC 容器中进行使用。</p>\n<h2 id=\"实现步骤\"><a class=\"markdownIt-Anchor\" href=\"#实现步骤\">#</a> 实现步骤</h2>\n<ol>\n<li>创建 redis-spring-boot-autoconfigure 模块</li>\n<li>创建 redis-spring-boot-starter 模块，依赖 redis-spring-boot-autoconfigure 的模块</li>\n<li>在 redis-spring-boot-autoconfigure 模块中初始花 Jedis 的 Bean，并定义 META-INF/spring.factories 文件</li>\n<li>创建 redis-spring-enable 模块是 redis-spring-boot-autoconfigure 的子模块</li>\n</ol>\n<p>模块结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131709586.png\" alt=\"image-20230913170937301\"></p>\n<p>子模块的目录结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131710300.png\" alt=\"image-20230913171044858\"></p>\n<p><span alt='solid'>RedisProperties 类</span>.</p>\n<p>通过注解 ConfigurationProperties 读取以 redis 前缀命名的配置文件的内容映射到字段上，并且如果没有配置信息则会有默认值就是本机</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurationProperties</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"redis\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisProperties</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 主机名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> host <span class=\"token operator\">=</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 端口号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> host<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> host<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> host<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> port<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> port<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> port<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span alt='solid'>RedisAutoConfiguration 类</span>.</p>\n<p>使用注解：EnableConfigurationProperties 将指定的 RedisProperties 读取配置文件类注册到 IOC 容器当中，ConditionalOnClass 判断是否有 Jedis 的依赖再加载类中定义的 Bean，注解：ConditionalOnMissingBean (name = “jedis”) 判断用户是否定义了名叫 jedis 的 Bean 如果没有则使用我们定义的，如果有则使用用户定义的。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionalOnClass</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionalOnMissingBean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableConfigurationProperties</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jedis</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@EnableConfigurationProperties</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisProperties</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 如果有 Jedis 的再加载 Bean</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@ConditionalOnClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisAutoConfiguration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * 提供 jedis 的 Bean</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 如果用户自己定义了 jedis 的 Bean 则使用用户定义的</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// ConditionalOnMissingBean 如果没有名称叫 jedis 的 Bean 的时候再提供我们的 jedis 的 Bean</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@ConditionalOnMissingBean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"jedis\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Jedis</span> jedis <span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisProperties</span> redisProperties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RedisAutoConfiguration ... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">(</span>redisProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> redisProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>找到 SpringBoot 启动时会自动读取配置文件来加载 Bean 的位置 @EnableAutoConfiguration</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131719444.png\" alt=\"image-20230913171908801\"></p>\n<p>进入到 AutoConfigurationImportSelector 中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131718374.png\" alt=\"image-20230913171837565\"></p>\n<p>复制这段</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131719997.png\" alt=\"image-20230913171947375\"></p>\n<p>在 redis-spring-boot-starter 模块的 resources 下创建 META-INF /spring.factories 配置文件，这个配置文件就是 SpringBoot 启动时就会读取的然后加载里面配置的依赖项</p>\n<p>spring.factories 内容：</p>\n<p>其中的 \\ 表示，这段代码太长了 换下行而已</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  com.dkx.config.RedisAutoConfiguration</pre></td></tr></table></figure><p>SpringBoot 启动类</p>\n<p>位置：redis-spring-enable \\ src \\ main \\ java \\ com \\ dkx \\  RedisSpringEnableApplication</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jedis</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisSpringEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisSpringEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token class-name\">Jedis</span> jedis <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tjedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"liusang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131726470.png\" alt=\"image-20230913172626902\"></p>\n<p>如果用户自己定义了 jedis 这个 Bean 的话</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jedis</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisSpringEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisSpringEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token class-name\">Jedis</span> jedis <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tjedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"liusang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 重写 jedis 的 Bean 如果我们自定义的没有打印内容说明注解：ConditionalOnMissingBean 生效</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Jedis</span> <span class=\"token function\">jedis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131727375.png\" alt=\"image-20230913172724154\"></p>\n<p>而且我们也可以自己来改 yml 中的配置比如改一下端口号，但是注意：将用户定义的 jedis 注释掉因为会使用它的就不会使用我们自己定义的了所以配置文件就等于白配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">666</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131730408.png\" alt=\"image-20230913173001307\"></p>\n<p>报错信息是端口号不对</p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/%E5%88%87%E6%8D%A2%E5%86%85%E7%BD%AEWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/%E5%88%87%E6%8D%A2%E5%86%85%E7%BD%AEWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "title": "切换内置web服务器",
            "date_published": "2024-04-02T10:00:50.985Z",
            "content_html": "<h2 id=\"切换内置web服务器\"><a class=\"markdownIt-Anchor\" href=\"#切换内置web服务器\">#</a> 切换内置 Web 服务器</h2>\n<p>SpringBoot 的 web 环境中默认使用 tomcat 作为内置服务器，其实 SpringBoot 提供了 4 种内置服务器供我们选择，我们可以很方便的进行切换。</p>\n<p>查看依赖的路径：</p>\n<p>spring-boot-autoconfigure / org / autoconfigure / web / embedded</p>\n<p>其中的文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102126343.png\" alt=\"image-20230910212613275\"></p>\n<p>这四个文件就是对应的 web 服务器的工厂</p>\n<p>第一个：Jetty 服务器</p>\n<p>第二个：Netty 服务器</p>\n<p>第三个：tomcat 服务器</p>\n<p>第四个：Undertow 服务器</p>\n<p>排除默认的 tomcat 启动 服务器，改为 jetty 服务器 启动</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">&lt;!-- 排除 tomcat 依赖 --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-tomcat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 引入 jetty 依赖 --></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-jetty<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>启动后查看是使用的 jetty 启动 的服务器</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102143226.png\" alt=\"image-20230910214302727\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/",
            "title": "SpringBoot项目部署",
            "date_published": "2024-04-02T10:00:50.981Z",
            "content_html": "<p>SpringBoot 项目开发完毕后，支持两种方式部署到服务器</p>\n<ol>\n<li>jar 包 (官方推荐)</li>\n<li>war 包</li>\n</ol>\n<h2 id=\"jar\"><a class=\"markdownIt-Anchor\" href=\"#jar\">#</a> jar</h2>\n<p>创建一个 SpringBoot 工程</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141116673.png\" alt=\"image-20230914111656588\"></p>\n<p>创建 UserController 类返回一个访问成功的提示信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141117227.png\" alt=\"image-20230914111738022\"></p>\n<p>测试访问是否有问题：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141117069.png\" alt=\"image-20230914111756919\"></p>\n<p>没有问题后 进行 打包</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141118506.png\" alt=\"image-20230914111821221\"></p>\n<p>查看打包后的目录，复制路径然后打开资源管理器地址栏中输入复制的路径访问</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141119558.png\" alt=\"image-20230914111923603\"></p>\n<p>就可以看到打包成功后的 jar 包了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141119466.png\" alt=\"image-20230914111940320\"></p>\n<p>在当前的目录中打开 powerShell 然后输入命令： <code>java -jar .\\springboot-deploy-0.0.1-SNAPSHOT.jar</code></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141122720.png\" alt=\"image-20230914112256831\"></p>\n<p>然后访问路径</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141123411.png\" alt=\"image-20230914112318734\"></p>\n<h2 id=\"war\"><a class=\"markdownIt-Anchor\" href=\"#war\">#</a> war</h2>\n<p>将项目的打包方式改为 war 包的方式</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141125752.png\" alt=\"image-20230914112549411\"></p>\n<p>编写 SpringBoot 的启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplicationBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootServletInitializer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringbootDeployApplication</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SpringBootServletInitializer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringbootDeployApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">SpringApplicationBuilder</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringApplicationBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">sources</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringbootDeployApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>点击 maven 的打包按钮进行打包为 war 包</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141131231.png\" alt=\"image-20230914113123574\"></p>\n<p>打包完成后查看目录的打包情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141132438.png\" alt=\"image-20230914113223976\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141133425.png\" alt=\"image-20230914113337947\"></p>\n<p>将 springboot 的 war 包放入到 tomcat 的 webapps 目录下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141151982.png\" alt=\"image-20230914115152845\"></p>\n<p>启动 tomcat</p>\n<p>bin\\startup.bat 双击运行</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141153758.png\" alt=\"image-20230914115310123\"></p>\n<p>当我们再次访问 localhost:8080/user/findAll 时就会报 404 的，因为此时的虚拟目标发生了变化了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141155554.png\" alt=\"image-20230914115525516\"></p>\n<p>虚拟目录为 springboot-deploy-0.0.1-SNAPSHOT</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141155514.png\" alt=\"image-20230914115541682\"></p>\n<p>访问 localhost:8080/springboot-deploy-0.0.1-SNAPSHOT/user/findAll</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141156392.png\" alt=\"image-20230914115638227\"></p>\n<p>还有第二个问题就是，更改端口号在项目中的 resource 中修改不起作用，因为这里对 SpringBoot 内置的 tomcat 的端口号的修改，而我们启动 SpringBoot 项目使用的是我们自己下载的外部的 tomcat，需要在外部的 tomcat 中进行配置才行。</p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E7%9B%91%E6%8E%A7/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E7%9B%91%E6%8E%A7/",
            "title": "SpringBoot监控",
            "date_published": "2024-04-02T10:00:50.974Z",
            "content_html": "<h2 id=\"springboot监控\"><a class=\"markdownIt-Anchor\" href=\"#springboot监控\">#</a> SpringBoot 监控</h2>\n<blockquote>\n<p><span alt='solid'>概述</span>：</p>\n<p>SpringBoot 自带监控功能 Actuator，可以帮助实现对程序内部运行情况监控，比如监控状况，Bean 加载情况，配置属性，日志信息等。</p>\n</blockquote>\n<p>使用步骤：</p>\n<ol>\n<li>\n<p>导入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-actuator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>或者在创建 SpringBoot 的时候进行勾选该依赖</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140906622.png\" alt=\"image-20230914090657267\"></p>\n</li>\n<li>\n<p>访问：<a href=\"http://localhost:8080/acruator\">http://localhost:8080/acruator</a></p>\n</li>\n</ol>\n<p>访问路径后返回了一些 json 字符串，我们去找一个网站解析一下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140911642.png\" alt=\"image-20230914091151109\"></p>\n<p>json 字符串解析后的格式</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140912118.png\" alt=\"image-20230914091254472\"></p>\n<p>访问路径 <a href=\"http://localhost:8080/actuator/health\">http://localhost:8080/actuator/health</a></p>\n<p>表示当前应用正常 DOWN 就是失败了有问题了，默认没有开启完整信息的，因为不是很安全</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140916704.png\" alt=\"image-20230914091616106\"></p>\n<p>在 application.yml 配置文件中开启完整信息</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 开启健康检查的完整信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">management</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token key atrule\">endpoint</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token key atrule\">health</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token key atrule\">show-details</span><span class=\"token punctuation\">:</span> always</pre></td></tr></table></figure><p>访问结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140924716.png\" alt=\"image-20230914092454794\"></p>\n<p>导入 redis 的坐标</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>然后 redis 本机没有启动，它默认会链接本机的 redis 但是没有启动就会报错。我们查看 SpringBoot 监控的情况中 redis 是处于什么状态</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140943062.png\" alt=\"image-20230914094309384\"></p>\n<p>其它的配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将所有的监控 endpoint 暴漏出来 可以理解为：一个 endpoints 就是一个 url</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">management</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">endpoints</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">exposure</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span> <span class=\"token comment\">#这里需要注意 * 号需要加上双引号包裹起来，否则启动报错</span></pre></td></tr></table></figure><p>访问结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141004121.png\" alt=\"image-20230914100445727\"></p>\n<h2 id=\"springbootadmin\"><a class=\"markdownIt-Anchor\" href=\"#springbootadmin\">#</a> SpringBootAdmin</h2>\n<p>SpringBootAdmin 是一个开源社区项目，用于管理和监控 SpringBoot 应用程序。</p>\n<p>SpringBootAdmin 有两个角色，客户端 (Client) 和服务端 (Server)。</p>\n<p>应用程序作为 SpringBootAdminClient 向为 SpringBootAdminServer 注册</p>\n<p>SpringBootAdminServer 的 UI 界面将 SpringBootAdminClient 的 ActuatorEndpoint 上的一些监控信息</p>\n<p>这个东西的使用有两端，所以我们要创建两端</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141010968.png\" alt=\"image-20230914101003770\"></p>\n<p>创建 admin-server 模块</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141013377.png\" alt=\"image-20230914101337604\"></p>\n<p>server 依赖包含了 actuator 所以不用选择了</p>\n<p>因为本机的端口号默认是 8080，需要将两端的端口号分别开来否则就会出问题：</p>\n<p>server 的 yml 配置文件</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span></pre></td></tr></table></figure><p>client 的 yml 配置文件</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 执行 admin-server 地址</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">boot</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:8081\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">management</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">endpoint</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">health</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">show-details</span><span class=\"token punctuation\">:</span> always <span class=\"token comment\"># 健康检查的完整信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">endpoints</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">exposure</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span> <span class=\"token comment\"># 开启所有配置</span></pre></td></tr></table></figure><p>启动 server 的启动类</p>\n<p>然后再启动 client 的启动类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141043830.png\" alt=\"image-20230914104325433\"></p>\n<p>启动之后我们直接访问 server 就可以看到 client 中的所有信息了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141045216.png\" alt=\"image-20230914104507076\"></p>\n<p>点击应用墙就可以看到启动的时间</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141046919.png\" alt=\"image-20230914104622026\"></p>\n<p>点击后就可以看到里面的详细信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141047560.png\" alt=\"image-20230914104700110\"></p>\n<p>里面有健康信息和其它的一些信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309141047714.png\" alt=\"image-20230914104727301\"></p>\n<p>在 client 模块中添加一个 UserController 控制类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/str\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getStr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello,World\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重启代码</p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E7%9B%91%E5%90%AC%E6%9C%BA%E5%88%B6/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E7%9B%91%E5%90%AC%E6%9C%BA%E5%88%B6/",
            "title": "Java监听机制",
            "date_published": "2024-04-02T10:00:50.968Z",
            "content_html": "<h2 id=\"java监听机制\"><a class=\"markdownIt-Anchor\" href=\"#java监听机制\">#</a> Java 监听机制</h2>\n<p>SpringBoot 的监听机制，其实是对 Java 提供的事件监听机制的封装。</p>\n<p><span alt='solid'>Java 中的事件监听机制定义了以下几个角色</span>：</p>\n<ol>\n<li><strong>事件</strong>：Event，继承 java.util.EventObject 类的对象</li>\n<li><strong>事件源</strong>：Source，任意对象 Object</li>\n<li><strong>监听器</strong>：Listener，实现 java.util.EventListener 接口的对象</li>\n</ol>\n<p><span alt='solid'><strong>SpringBoot 监听机制</strong></span>：</p>\n<p>SpringBoot 在项目启动时，会对几个监听器进行回调，我们可以实现这些监听器接口，在项目启动时完成一些操作</p>\n<p>SpringBoot 中监听器分为：ApplicationContextInitializer，SpringApplicationRunListener，CommandLineRunner，ApplicationRunner</p>\n<p>项目结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132018398.png\" alt=\"image-20230913201836361\"></p>\n<p>ApplicationContextInitializer</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApplicationContextInitializer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApplicationContextInitializer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextInitializer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ApplicationContextInitializer...initialize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringApplicationRunListener</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableBootstrapContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplicationRunListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Duration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MySpringApplicationRunListener</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SpringApplicationRunListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 需要重写构造函数否则报错初始化异常</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MySpringApplicationRunListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringApplication</span> application<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">starting</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableBootstrapContext</span> bootstrapContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"starting...项目启动中\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">environmentPrepared</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableBootstrapContext</span> bootstrapContext<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                     <span class=\"token class-name\">ConfigurableEnvironment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"environmentPrepared...环境对象开始准备\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">contextPrepared</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contextPrepared...上下文对象开始准备\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">contextLoaded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contextLoaded...上下文对象开始加载\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">started</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"started...上下文对象加载完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">running</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"running...项目启动完成, 开始运行\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">failed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed...项目启动失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">started</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Duration</span> timeTaken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">started</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"started...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Duration</span> timeTaken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token function\">running</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ready...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>CommandLineRunner</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CommandLineRunner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCommandLineRunner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CommandLineRunner</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CommandLineRunner...run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ApplicationRunner</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApplicationArguments</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApplicationRunner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApplicationRunner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationRunner</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationArguments</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ApplicationRunner ... run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>spring.factories</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>org.springframework.context.ApplicationContextInitializer=\\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  com.dkx.listener.MyApplicationContextInitializer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>org.springframework.boot.SpringApplicationRunListener=\\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  com.dkx.listener.MySpringApplicationRunListener</pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringbootListenerApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringbootListenerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132022394.png\" alt=\"image-20230913202225065\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/SpringBoot%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/",
            "title": "SpringBoot启动流程分析",
            "date_published": "2024-04-02T10:00:50.959Z",
            "content_html": "<h2 id=\"springboot启动流程分析\"><a class=\"markdownIt-Anchor\" href=\"#springboot启动流程分析\">#</a> SpringBoot 启动流程分析</h2>\n<p><span alt='solid'>查看启动流程分析图</span>.</p>\n<p>嫌图小可以去浏览器上看会大一点清晰一点但是，需要翻墙观看或者开启 Github 加速器</p>\n<p><a href=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132014257.png\">https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132014257.png</a></p>\n<p><img src=\"./202309132014257.png\" alt=\"\"></p>\n<ol>\n<li>\n<p>点断后进行 Debug SpringBoot 启动类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132027965.png\" alt=\"image-20230913202702156\"></p>\n</li>\n<li>\n<p>接着下一步</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132029097.png\" alt=\"image-20230913202948071\"></p>\n</li>\n<li>\n<p>new new SpringApplication (primarySources).run (args) 我们有一点点的印象</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132131719.png\" alt=\"image-20230913213007472\"></p>\n<p>MySpringApplicationRunListener</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132133100.png\" alt=\"image-20230913213318452\"></p>\n</li>\n</ol>\n<p>new new SpringApplication (primarySources).run (args) 这个对象就是事件源对象，将来的所有事件都是在这个对象上产生的</p>\n<p>而这个对象有两个部分要说：</p>\n<p>第一部分：构造这个对象初始化的过程</p>\n<p>第二部分：执行 run 方法的过程</p>\n<p><strong>先来看构造初始化的过程</strong></p>\n<p>点击 SpringApplication 转到构造器再点击 this 转到真正执行的构造器中，添加断点进行查看</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132138521.png\" alt=\"image-20230913213857179\"></p>\n<p>当前的 debug 在 new new SpringApplication (primarySources).run (args) 中，我们点击 ResumeProgram 跳转到下一个断点处，也就是我们在构造函数新添加的这一个断点处。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132140976.png\" alt=\"image-20230913214030009\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309132140186.png\" alt=\"image-20230913214054947\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rawtypes\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceLoader</span> resourceLoader<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> primarySources<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>resourceLoader <span class=\"token operator\">=</span> resourceLoader<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">//primarySources 传递过来的启动类 / 引导类</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>primarySources<span class=\"token punctuation\">,</span> <span class=\"token string\">\"PrimarySources must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>primarySources <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>primarySources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 判断是否是 web 的环境</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>webApplicationType <span class=\"token operator\">=</span> <span class=\"token class-name\">WebApplicationType</span><span class=\"token punctuation\">.</span><span class=\"token function\">deduceFromClasspath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 设置初始化的 Initializers</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bootstrapRegistryInitializers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token function\">getSpringFactoriesInstances</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BootstrapRegistryInitializer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token function\">setInitializers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">)</span> <span class=\"token function\">getSpringFactoriesInstances</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContextInitializer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token function\">setListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">)</span> <span class=\"token function\">getSpringFactoriesInstances</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainApplicationClass <span class=\"token operator\">=</span> <span class=\"token function\">deduceMainApplicationClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行完毕之后就回到了 new new SpringApplication (primarySources).run (args) 中我们点进 run 里面然后打上断点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309140857425.png\" alt=\"image-20230914085755989\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/Enable'%E2%80%BB'%E6%B3%A8%E8%A7%A3/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/Enable'%E2%80%BB'%E6%B3%A8%E8%A7%A3/",
            "title": "Eable* 注解",
            "date_published": "2024-04-02T10:00:50.954Z",
            "content_html": "<h2 id=\"eable注解\"><a class=\"markdownIt-Anchor\" href=\"#eable注解\">#</a> @Eable * 注解</h2>\n<p>SpringBoot 中提供了很多 Enable 开头的注解，这些注解都是用于动态启用某些功能的。而其底层原理是使用 @Import 注解导入一些配置类，实现 Bean 的动态加载。</p>\n<blockquote>\n<p><span alt='solid'>思考</span>：</p>\n<p>SpringBoot 工程是否可以直接获取 jar 包中定义的 Bean?</p>\n<p>答案：不可以</p>\n<p>如果不可以这个地方问题就非常严重了。比如说 redisTemplate 获取，是不是人家 jar 包里面定义的 Bean 啊。那为什么我的工程引入了 redis 的起步依赖我就直接可以获取到了呢 ？</p>\n</blockquote>\n<p><strong>首先演示不能获取第三方 jar 包里面定义的 Bean 的特点</strong>：</p>\n<p>创建一个父模块，两个同级子模块</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309112151227.png\" alt=\"image-20230911215125989\"></p>\n<p>将 enable-other 模块导入到 enable 模块中使用</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.dkx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>SpringBoot-enable-other<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>0.0.1-SNAPSHOT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>install,enable-other 模块否则报错找不到 XXX 类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309120746815.png\" alt=\"image-20230912074640515\"></p>\n<p>编写 enable 模块</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// com/dkx </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 1. 使用 @ComponentScan 扫描，com.dkx. 包</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 2. 可以使用 @Impoert 注解，加载类</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>项目结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309112153017.png\" alt=\"image-20230911215325372\"></p>\n<p>编写 enable-other 模块</p>\n<p>config/UserConfig</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>domain / User</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>项目结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309112153209.png\" alt=\"image-20230911215345356\"></p>\n<p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309112154774.png\" alt=\"image-20230911215412559\"></p>\n<h4 id=\"第一种方式\"><a class=\"markdownIt-Anchor\" href=\"#第一种方式\">#</a> 第一种方式</h4>\n<p>报错找不到 user 这个 Bean，我们可以通过下面的方式来解决。</p>\n<p>首先要知道这个问题其实很简单，规则是子模块中路面相同的话就不会报错了，可以理解为两个模块可以看做一个模块的目录来构建就不会报错了。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>dkx<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserConfig</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ComponentScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Import</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 1. 使用 @ComponentScan 扫描，com.dkx. 包</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 2. 可以使用 @Impoert 注解，加载类</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.dkx.config\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//@Import(UserConfig.class)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309112200456.png\" alt=\"image-20230911220053181\"></p>\n<h4 id=\"第二种方式\"><a class=\"markdownIt-Anchor\" href=\"#第二种方式\">#</a> 第二种方式</h4>\n<p>使用自定义注解的方式在自定义注解类使用 Import 导入 UserConfig 类然后在启动类中添加该自定义注解 简化获取 User 对象的操作</p>\n<p>User</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>UserConfig</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>EnableUser</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Documented</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EnableUser</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 简化操作</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@EnableUser</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130857302.png\" alt=\"image-20230913085728841\"></p>\n<h4 id=\"第三种方式\"><a class=\"markdownIt-Anchor\" href=\"#第三种方式\">#</a> 第三种方式</h4>\n<p>还可以更下目录来解决问题</p>\n<p>目录结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309120739006.png\" alt=\"image-20230912073845767\"></p>\n<p>启动类代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ComponentScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309120739177.png\" alt=\"image-20230912073932170\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/Condition/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/Condition/",
            "title": "Condition",
            "date_published": "2024-04-02T10:00:50.949Z",
            "content_html": "<h3 id=\"springboot-自动配置\"><a class=\"markdownIt-Anchor\" href=\"#springboot-自动配置\">#</a> SpringBoot 自动配置</h3>\n<p><strong>Condition</strong></p>\n<blockquote>\n<p>Condition 是在 Spring4.0 增加的条件判断功能，通过这个功能可以实现选择性的创建 Bean 操作。</p>\n</blockquote>\n<p><strong>思考问题：</strong></p>\n<p>SpringBoot 是如何知道要创建哪个 Bean 的？比如 SpringBoot 是如何知道要创建 RedisTemplate 的？我们导入了 redis-starter 起步依赖，然后 SpringBoot 就帮我创建了 RedisTemplate 了，那么如果我没有导入 redis-starter 起步依赖那 SpringBoot 会不会帮我创建 RedisTemplate 呢，SpringBoot 怎么知道我到底导没导这个起步依赖呢？这些问题要解决就是<mark> Condition</mark> 这么一个功能</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 启动 SpringBoot 的应用，返回 Spring 的 IOC 容器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//1. 获取 Bean,redisTemplate</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Object</span> redisTemplate <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redisTemplate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>redisTemplate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行程序后报错了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309092041404.png\" alt=\"20ecbdbd016090f41f7f8cfd104c45b\"></p>\n<p>原因：没有导入 redis-starter 而 SpringBoot 找不到这个依赖就报错了</p>\n<p>在 pom.xml 文件中导入 redis-starter 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>导入依赖后再次运行 SpringBoot 启动类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309092041180.png\" alt=\"1f55e7bc5ccf6a787a7b3236c02c53b\"></p>\n<p>结果：</p>\n<pre><code>org.springframework.data.redis.core.RedisTemplate@228cea97\n</code></pre>\n<p><strong>需求：</strong></p>\n<p>在 SpringBoot 的 IOC 容器中有一个 User 的 Bean，现要求：</p>\n<ol>\n<li>导入 Jedis 坐标后，加载该 Bean，没导入，则不加载。</li>\n</ol>\n<p><strong>代码演示：</strong></p>\n<p>创建两个类</p>\n<p>config 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>User 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行启动类获取 User 的 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 启动 SpringBoot 的应用，返回 Spring 的 IOC 容器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//1. 获取 Bean,redisTemplate</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309092041025.png\" alt=\"aa1053976e4de85c34338a1d5c2d69d\"></p>\n<pre><code>com.condition.conditiondemo.domain.User@3964d79\n</code></pre>\n<p>创建一个 ClassCondition 类实现 Condition 接口并重写方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Condition</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotatedTypeMetadata</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassCondition</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Condition</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotatedTypeMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 UserConfig 类中使用 @Conditional (ClassCondition.class) 来指定配置类后犹豫重写方法返回的是 false 表示 SpringBoot 找不到则运行报错。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span>conditiondemo<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClassCondition</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span>conditiondemo<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Conditional</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Conditional</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassCondition</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行启动类获取 User 的 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 启动 SpringBoot 的应用，返回 Spring 的 IOC 容器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//1. 获取 Bean,redisTemplate</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309092042635.png\" alt=\"\"></p>\n<p>如果将 Condition 的重写方法中改为返回 true 则运行 SpringBoot 启动类可以找到 User 的 Bean 对象不报错</p>\n<h3 id=\"需求1\"><a class=\"markdownIt-Anchor\" href=\"#需求1\">#</a> 需求 1</h3>\n<p><strong>需求：导入 jedis 坐标后创建 Bean</strong></p>\n<p>导入 jedis 坐标到 pom.xml 文件中</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>redis.clients<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jedis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.7.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>ClassCondition 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassCondition</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Condition</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotatedTypeMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//1. 导入 jedis 坐标后创建 Bean</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 思路：判断 redis.clients.jedis.Jedis.class 文件是否存在</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 定义一个开关返回最终结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis.clients.jedis.Jedis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 启动 SpringBoot 的应用，返回 Spring 的 IOC 容器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//1. 获取 Bean,redisTemplate</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309092042227.png\" alt=\"907e20a99ec4a72541e03490ce9449b\"></p>\n<h3 id=\"需求2\"><a class=\"markdownIt-Anchor\" href=\"#需求2\">#</a> 需求 2</h3>\n<p><strong>将类的判断定义为动态的，判断哪个字节码文件存在可以动态指定</strong>。</p>\n<h4 id=\"第一步自定义注解\"><a class=\"markdownIt-Anchor\" href=\"#第一步自定义注解\">#</a> 第一步自定义注解：</h4>\n<p>目录结构</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309101958066.png\" alt=\"image-20230910195826453\"></p>\n<p>Condition 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Condition</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotatedTypeMetadata</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassCondition</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Condition</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotatedTypeMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis.clients.jedis.Jedis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ConditionOnClass 注解类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Conditional</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">METHOD</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Documented</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Conditional</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassCondition</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">ConditionOnClass</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>UserConfig 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>dkx<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionOnClass</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>dkx<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// @Conditional(ClassCondition.class)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@ConditionOnClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis.clients.jedis.Jedis\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>User 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringBoot 启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurableApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootSeniorApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootSeniorApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102000918.png\" alt=\"image-20230910200016563\"></p>\n<blockquote>\n<p><span alt='solid'>总结</span>：</p>\n<p>这样我们就可以通过注解的方式来获取自己定义的字符串或者类是否存在了而不用再 Condition 中写死了，那么怎获取重写方法 matches 中 的值 到 反射中 以 动态指定字节码文件呢？</p>\n</blockquote>\n<p>动态指定字节码文件代码演示：</p>\n<p>修改 ClassCondition 代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Condition</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotatedTypeMetadata</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassCondition</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Condition</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * @param context 上下文对象，用于获取环境，IOC 容器，ClassLoader 对象</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * @param metadata 注解元对象，可以用于获取注解定义的属性值</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotatedTypeMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 导入通过注解属性值 value 指定坐标后创建 Bean</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 获取注解属性 value</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotationAttributes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionOnClass</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">//System.out.println (map); //map 集合 输出的结果 里面是指定的路径 &#123;value=[redis.clients.jedis.Jedis]&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> item <span class=\"token operator\">:</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102047406.png\" alt=\"image-20230910204712670\"></p>\n<p>这样就完成了动态的指定路径获取字节码文件了</p>\n<p>那么这个功能有什么用呢？</p>\n<p>我们在回过头来看 如下问题：</p>\n<blockquote>\n<p>SpringBoot 是如何知道要创建哪个 Bean 的？比如 SpringBoot 是如何知道要创建 RedisTemplate 的？</p>\n</blockquote>\n<p>其实就是通过 Condition 来判断有没有导入 Redis 的 Starter 如果导入了则帮我们创建，SpringBoot 中给我们提供了非常多的 ConditionalOnXXX 的接口</p>\n<p>在 spring-boot-autoconfigure 中的 condition 目录中可以看到很多的 ConditionalOnXXX 的接口可以使用</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102101741.png\" alt=\"image-20230910205831361\"></p>\n<p>随便演示一个 ConditionalOnXXX 接口比如演示 ConditionalOnProperty 这个接口</p>\n<p><span alt='solid'>功能</span>：当配置文件中的键和值与注解指定的键和值存在且对应则加载 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>dkx<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionalOnProperty</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@ConditionalOnProperty</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span> havingValue <span class=\"token operator\">=</span> <span class=\"token string\">\"666\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102105295.png\" alt=\"image-20230910210519974\"></p>\n<p>运行启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootSeniorApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootSeniorApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102105642.png\" alt=\"image-20230910210458883\"></p>\n<p>将配置文件中添加注解对应的键和值</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102106608.png\" alt=\"image-20230910210601049\"></p>\n<p>运行结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309102107000.png\" alt=\"image-20230910210731051\"></p>\n<blockquote>\n<p>Condition - 小结：</p>\n<ol>\n<li>自定义条件：\n<ol>\n<li>定义条件类：自定义类实现 Condition 接口，重写 matches 方法，在 metches 方法中进行逻辑判断，返回 boolean 值，matches 方法两个参数：\n<ol>\n<li>context：上下文对象，可以获取属性值，获取类加载器，获取 BeanFactory 等。</li>\n<li>metadata：元数据对象，用于获取注解属性</li>\n</ol>\n</li>\n<li>判断条件：在初始化 Bean 时，使用<span alt='solid'>@Conditional (条件类.class) </span>注解</li>\n</ol>\n</li>\n<li>SpringBoot 提供的常用条件注解：\n<ol>\n<li><span alt='solid'>ConditionalOnProperty</span>：判断配置文件中是否有对应属性和值才初始化 Bean</li>\n<li><span alt='solid'>ConditionalOnClass</span>：判断环境中是否有对应字节码文件才初始化 Bean</li>\n<li><span alt='solid'>ConditionalOnMissingBean</span>：判断环境中没有对应 Bean 才初始化 Bean</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/@Import%E6%B3%A8%E8%A7%A3/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/@Import%E6%B3%A8%E8%A7%A3/",
            "title": "Import注解",
            "date_published": "2024-04-02T10:00:50.943Z",
            "content_html": "<p>@EnableXXX 注解的底层其实就是使用了 @Import 注解的功能</p>\n<h2 id=\"import注解\"><a class=\"markdownIt-Anchor\" href=\"#import注解\">#</a> @Import 注解</h2>\n<p>@Enable * 底层依赖于 @Import 注解导入一些类，使用 @Import 导入的类会被 Spring 加载到 IOC 容器中。而 @Import 提供 4 种用法：</p>\n<ol>\n<li>导入 Bean</li>\n<li>导入配置类</li>\n<li>导入 ImportSelector 实现类。一般用于加载配置文件中的类</li>\n<li>导入 ImportBeanDefinitionRegistrar 实现类。</li>\n</ol>\n<h3 id=\"导入bean\"><a class=\"markdownIt-Anchor\" href=\"#导入bean\">#</a> 导入 Bean</h3>\n<p>项目结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130937266.png\" alt=\"image-20230913093726083\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130937861.png\" alt=\"image-20230913093743925\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130938320.png\" alt=\"image-20230913093804763\"></p>\n<p>User 类与 Role 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// Import 导入了 User 但是名称不确定所以使用类的类型来获取 Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Role</span> role <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Role</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------获取Bean的名字-----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBeansOfType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123;com.dkx.domain.User=com.dkx.domain.User@3241713e&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------通过获取到Bean的名称来获取Bean-----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Object</span> bean <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.dkx.domain.User\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130938112.png\" alt=\"image-20230913093839900\"></p>\n<h3 id=\"导入配置类\"><a class=\"markdownIt-Anchor\" href=\"#导入配置类\">#</a> 导入配置类</h3>\n<p>User 类和 Role 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Role</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>UserConfig 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Role</span> <span class=\"token function\">role</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========UserBean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========RoleBean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Object</span> role <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"role\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309130944948.png\" alt=\"image-20230913094442665\"></p>\n<h3 id=\"导入importselector实现类\"><a class=\"markdownIt-Anchor\" href=\"#导入importselector实现类\">#</a> 导入 ImportSelector 实现类</h3>\n<p>创建一个 MyImportSelector 类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131027362.png\" alt=\"image-20230913102744218\"></p>\n<p>编写 MyImportSelector 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyImportSelector</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ImportSelector</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">selectImports</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationMetadata</span> importingClassMetadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 配置的 Bean 的路径是一个字符串意味着可以不用写死了，可以动态的加载类</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"com.dkx.domain.Role\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.dkx.domain.User\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyImportSelector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========UserBean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========RoleBean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Role</span> role <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Role</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131030912.png\" alt=\"image-20230913103028478\"></p>\n<h3 id=\"导入importbeandefinitionregistrar实现类\"><a class=\"markdownIt-Anchor\" href=\"#导入importbeandefinitionregistrar实现类\">#</a> 导入 ImportBeanDefinitionRegistrar 实现类</h3>\n<p>创建一个 ImportBeanDefinitionRegistrar 实现类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131045445.png\" alt=\"image-20230913104515744\"></p>\n<p>编写 ImportBeanDefinitionRegistrar 实现类代码注册 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyImportBeanDefinitionRegistrar</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ImportBeanDefinitionRegistrar</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param importingClassMetadata annotation metadata of the importing class</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @param registry current bean definition registry 向 IOC 中注入某一些对象</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationMetadata</span> importingClassMetadata<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 构建 Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">AbstractBeanDefinition</span> beanDefinition <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanDefinitionBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">rootBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 注册 Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 参数 1：Bean 的名称，参数 2：Bean 类型</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> beanDefinition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// @ComponentScan 扫描范围：当前引导类所在包及其子包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// com/dkx1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// com/dkx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两个路径同级路径项目可以被扫描到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyImportBeanDefinitionRegistrar</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringBootEnableApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConfigurableApplicationContext</span> run <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringBootEnableApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========UserBean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========使用注册时的名称来获取Bean==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 在 MyImportBeanDefinitionRegistrar 中注册 Bean 的时候定义了 Bean 的名称为 user</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">Object</span> user1 <span class=\"token operator\">=</span> run<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131048269.png\" alt=\"image-20230913104646971\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/@EnableAutoConfiguration%E6%B3%A8%E8%A7%A3/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E9%AB%98%E7%BA%A7/@EnableAutoConfiguration%E6%B3%A8%E8%A7%A3/",
            "title": "EnableAutoConfiguration注解",
            "date_published": "2024-04-02T10:00:50.937Z",
            "content_html": "<h2 id=\"enableautoconfiguration注解\"><a class=\"markdownIt-Anchor\" href=\"#enableautoconfiguration注解\">#</a> @EnableAutoConfiguration 注解</h2>\n<p>@EnableAutoConfiguratioon 注解内部使用 @Import (AutoConfigurationImportSelector.class) 来加载配置类。</p>\n<p>配置文件位置：META-INF/spring.factories，该配置文件中定义了大量的配置类，当 SpringBoot 应用启动时，会自动加载这些配置类，初始化 Bean</p>\n<p>并不是所有的 Bean 都会被初始化，在配置类中使用 Condition 来加载满足条件的 Bean</p>\n<p>点击进入 @SpringBootApplication 注解内部</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131102812.png\" alt=\"image-20230913110250750\"></p>\n<p>里面有 EnableAutoConfiguration 点击进入查看</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131103399.png\" alt=\"image-20230913110333412\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Documented</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Inherited</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@AutoConfigurationPackage</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 导入了自动配置的 Selector</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AutoConfigurationImportSelector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EnableAutoConfiguration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t * Environment property that can be used to override when auto-configuration is</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t * enabled.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token class-name\">String</span> <span class=\"token constant\">ENABLED_OVERRIDE_PROPERTY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.boot.enableautoconfiguration\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t * Exclude specific auto-configuration classes such that they will never be applied.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t * @return the classes to exclude</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">exclude</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t * Exclude specific auto-configuration class names such that they will never be</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t * applied.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t * @return the class names to exclude</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t * @since 1.3.0</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">excludeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 AutoConfigurationImportSelector 中重写了 selectImports</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// String [] 数组返回定义了很多需要被加载的类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">selectImports</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationMetadata</span> annotationMetadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isEnabled</span><span class=\"token punctuation\">(</span>annotationMetadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token constant\">NO_IMPORTS</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>                                              <span class=\"token comment\">// 通过 getAutoConfigurationEntry 加载后返回 AutoConfigurationEntry 对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">AutoConfigurationEntry</span> autoConfigurationEntry <span class=\"token operator\">=</span> <span class=\"token function\">getAutoConfigurationEntry</span><span class=\"token punctuation\">(</span>annotationMetadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 将 autoConfigurationEntry 转换为字符串数组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toStringArray</span><span class=\"token punctuation\">(</span>autoConfigurationEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getConfigurations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看核心的源代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getCandidateConfigurations</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationMetadata</span> metadata<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotationAttributes</span> attributes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 通过 SpringFactoriesLoader 加载并返回 List 集合，这个 List 集合中就是所有需要加载的类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> configurations <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token class-name\">SpringFactoriesLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadFactoryNames</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSpringFactoriesLoaderFactoryClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">ImportCandidates</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>configurations<span class=\"token operator\">::</span><span class=\"token function\">add</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 如果上面 List 集合是空的则下面断言抛出错误信息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notEmpty</span><span class=\"token punctuation\">(</span>configurations<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                   <span class=\"token string\">\"No auto configuration classes found in META-INF/spring.factories nor in META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports. If you \"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                   <span class=\"token operator\">+</span> <span class=\"token string\">\"are using a custom packaging, make sure that file is correct.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">return</span> configurations<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果没有定义 META-INF/spring.factories 文件或者这个文件有问题就会报 configurations 集合加载不到，加载不断就断言失败，失败报出异常，下面看下 spring.factories 文件中定义了哪些需要被自定加载的类</p>\n<p>找到 spring-boot-autoconfigure 的依赖包</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131452748.png\" alt=\"image-20230913145220114\"></p>\n<p>SpringBoot 启动的时候并不是都会加载这些 Bean，而是判断满足 ConditionalOnClass 注解的条件后才会加载到 IOC 容器中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131457852.png\" alt=\"image-20230913145708405\"></p>\n<p>一般 SpringBoot 官方提供的依赖功能名写在最后面，而第三方提供的功能名写在最前面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309131507335.png\" alt=\"image-20230913150659200\"></p>\n",
            "tags": [
                "计算机学科",
                "springboot高级"
            ]
        }
    ]
}