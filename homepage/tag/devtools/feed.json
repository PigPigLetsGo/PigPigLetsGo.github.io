{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"devtools\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E6%95%B4%E5%90%88jar%E5%8C%85/Sprong-boot-devtools/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springboot/%E6%95%B4%E5%90%88jar%E5%8C%85/Sprong-boot-devtools/",
            "title": "Sprong-boot-devtools",
            "date_published": "2024-04-02T06:23:30.813Z",
            "content_html": "<h2 id=\"sprong-boot-devtools\"><a class=\"markdownIt-Anchor\" href=\"#sprong-boot-devtools\">#</a> Sprong-boot-devtools</h2>\n<p><mark>热部署</mark></p>\n<blockquote>\n<p>监听到如果有 Class 文件改动了，就会创建一个新的 ClaassLoader 进行加载该文件，经过一系列的过程，最终将结果呈现在我们眼前</p>\n</blockquote>\n<p><mark>spring-boot-devtools</mark></p>\n<blockquote>\n<p>是一个为开发者服务的一个模块，其中最重要的功能就是<strong>自动将应用代码更改到最新的 App 上面去，即在我们改变了一些代码或者配置文件的时候，应用可以自动重启</strong>，这在我们开发的时候，非常有用。</p>\n</blockquote>\n<p><mark>重新启动 vs 重新加载</mark></p>\n<blockquote>\n<p>Spring Boot 提供的重启技术通过使用两个类加载器来工作。</p>\n<p>不改变的类（例如来自第三方 jar 的类）被加载到 base classloader 中。</p>\n<p>我们正在开发的类会加载到 restart classloader 中。当应用程序重新启动时，restart classloader 将被丢弃并创建一个新类。这种方法意味着应用程序重启通常比 &quot;cold starts&quot; 快得多，因为基类加载器已经可用并且已经被填充。</p>\n</blockquote>\n<h3 id=\"spring-boot-devtools使用\"><a class=\"markdownIt-Anchor\" href=\"#spring-boot-devtools使用\">#</a> spring-boot-devtools 使用</h3>\n<h4 id=\"maven依赖\"><a class=\"markdownIt-Anchor\" href=\"#maven依赖\">#</a> maven 依赖</h4>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--spring-boot-devtools--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-devtools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>runtime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"yml配置\"><a class=\"markdownIt-Anchor\" href=\"#yml配置\">#</a> yml 配置</h4>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># Spring</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>spring:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  devtools:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    restart:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      # 默认为true</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      enabled: true</pre></td></tr></table></figure><h4 id=\"idea配置\"><a class=\"markdownIt-Anchor\" href=\"#idea配置\">#</a> idea 配置</h4>\n<h4 id=\"代码自动编译\"><a class=\"markdownIt-Anchor\" href=\"#代码自动编译\">#</a> 代码自动编译</h4>\n<blockquote>\n<p>File --&gt; Settings --&gt; Compiler --&gt; Build Project automatically</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040852708.png\" alt=\"img\"></p>\n<h4 id=\"运行期间自动编译\"><a class=\"markdownIt-Anchor\" href=\"#运行期间自动编译\">#</a> 运行期间自动编译</h4>\n<p><font style=\"color:red\"><strong>注意：这个配置是 idea-2021.2 版本以及以下版本配置没有的解决看</strong><a href=\"#idea-version:2021.2版本以及以下的版本的配置\"><u>这个标题中的方式来进行 配置</u></a> </font></p>\n<blockquote>\n<p>Mac 使用快捷键 shift+option+command+/，window 上的快捷键是 Shift+Ctrl+Alt+/，打开 Registry，勾选 compiler.automake.allow.when.app.running</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040852384.png\" alt=\"img\"></p>\n<p>通过以上的设置就可以在不重启服务的情况下加载 html，但如果修改 java 文件，服务在几秒后会自动重启，如果不希望服务重启需要在 application.properties 或 application.yml 中添加<strong> spring.devtools.reatart.enable=false</strong></p>\n<h3 id=\"thymeleaf模板引擎\"><a class=\"markdownIt-Anchor\" href=\"#thymeleaf模板引擎\">#</a> Thymeleaf 模板引擎</h3>\n<blockquote>\n<p>如果使用 Thymeleaf 模板引擎，需要把模板默认缓存设置为 false</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#禁止thymeleaf缓存（建议：开发环境设置为false，生成环境设置为true）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># Spring</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>spring:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  thymeleaf:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    cache: false</pre></td></tr></table></figure><h3 id=\"spring-boot-devtools-高级功能\"><a class=\"markdownIt-Anchor\" href=\"#spring-boot-devtools-高级功能\">#</a> spring-boot-devtools 高级功能</h3>\n<ol>\n<li><strong>排除资源</strong><br>\n某些资源不一定需要在更改时触发重新启动。例如，可以就地编辑 Thymeleaf 模板。默认情况下，在改变资源 / META-INF/maven，/META-INF/resources，/resources，/static，/public，或 /templates 不会触发重启但会触发 重新加载。可以使用 spring.devtools.restart.exclude 属性来自定义排除的资源。例如，要仅排除 /static，/public 可以设置以下属性：</li>\n</ol>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">spring.devtools.restart.exclude</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">static/**,public/** #不加载静态资源</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">additional-exclude</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">WEB-INF/** #不加载bian'yi'hou</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>监控其他路径</strong><br>\n如上所述，DevTools 监控类路径资源的变动，但如果我们想更改不在类路径中的文件时重新启动或重新加载应用程序，该怎么办呢？这时可以使用 spring.devtools.restart.additional-paths 属性来配置其他路径以监视更改。</li>\n</ol>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Spring</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">  devtools</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">    restart</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">      # 默认为 true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">      enabled</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">      #排除那个目录的文件不需要 restart</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">      additional-exclude</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">static/**,public/**</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">      #添加那个目录的文件需要 restart</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">      additional-paths</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">src/main/java</span></pre></td></tr></table></figure><h4 id=\"livereload\"><a class=\"markdownIt-Anchor\" href=\"#livereload\">#</a> LiveReload</h4>\n<p>LiveReload 在做前端开发的时候，经常会用到。</p>\n<p>spring-boot-devtools 模块包含嵌入式 LiveReload 服务器，可以在资源更改时用于触发浏览器刷新。 LiveReload 浏览器扩展程序支持 Chrome，Firefox 和 Safari，你可以从 livereload.com 免费下载。</p>\n<p>下面是 Chrome 的 Remote Live Reload 插件地址。安装即可拥有这个酷炫的功能。</p>\n<pre><code>https://chrome.google.com/webstore/detail/remotelivereload/jlppknnillhjgiengoigajegdpieppei?hl=en-GB\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040852342.png\" alt=\"image-20230414211255514\"></p>\n<p>devtools 也会在后台开启一个 LiveReload Server，浏览器会与这个 Server 保持着一个长连接，当后端有 <code>前端资源</code> 变动的时候，将会通知浏览器进行刷新，实现热部署。</p>\n<h3 id=\"idea-version20212版本以及以下的版本的配置\"><a class=\"markdownIt-Anchor\" href=\"#idea-version20212版本以及以下的版本的配置\">#</a> idea-version:2021.2 版本以及以下的版本的配置</h3>\n<p>解释：在 idea-2021.2 版本中由于没有 compiler.automake.allow.when.app.runing 这个选项，所以我们配置后会发现热部署好像并没有生效，下面就是 2021.2 以及以下版本的解决方式</p>\n<p>操作步骤:</p>\n<p>1. 修改 settings 里 compiler 选项下的配置，将下图中红色方框里的选项全部勾上</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040852315.png\" alt=\"image-20230415130642187\"></p>\n<p>2. 修改 Advanced settings 里的配置，将下图中红色方框里的选项勾上</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040852346.png\" alt=\"image-20230415130728664\"></p>\n<p><font style=\"color:red\">注意：如果创建项目以上的配置还得配置一遍</font></p>\n",
            "tags": [
                "springboot",
                "计算机学科",
                "整合jar包",
                "devtools"
            ]
        }
    ]
}