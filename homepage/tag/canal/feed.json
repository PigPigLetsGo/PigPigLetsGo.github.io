{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"canal\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/canal/%E5%AE%89%E8%A3%85Canal/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/canal/%E5%AE%89%E8%A3%85Canal/",
            "title": "安装和配置Canal",
            "date_published": "2024-04-02T10:00:51.085Z",
            "content_html": "<h1 id=\"安装和配置canal\"><a class=\"markdownIt-Anchor\" href=\"#安装和配置canal\">#</a> 安装和配置 Canal</h1>\n<p>下面我们就开启 mysql 的主从同步机制，让 Canal 来模拟 salve</p>\n<h1 id=\"1开启mysql主从\"><a class=\"markdownIt-Anchor\" href=\"#1开启mysql主从\">#</a> 1. 开启 MySQL 主从</h1>\n<p>Canal 是基于 MySQL 的主从同步功能，因此必须先开启 MySQL 的主从功能才可以。</p>\n<p>这里以之前用 Docker 运行的 mysql 为例：</p>\n<h2 id=\"11开启binlog\"><a class=\"markdownIt-Anchor\" href=\"#11开启binlog\">#</a> 1.1. 开启 binlog</h2>\n<p>打开 mysql 容器挂载的日志文件，我的在 <code>/tmp/mysql/conf</code>  目录:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210931806.png\" alt=\"image-20210813153241537\"></p>\n<p>修改文件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /tmp/mysql/conf/my.cnf</pre></td></tr></table></figure><p>添加内容：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">log-bin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql/mysql-bin</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 数据库名称</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">binlog-do-db</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">dkx</span></pre></td></tr></table></figure><p>配置解读：</p>\n<ul>\n<li><code>log-bin=/var/lib/mysql/mysql-bin</code> ：设置 binary log 文件的存放地址和文件名，叫做 mysql-bin</li>\n<li><code>binlog-do-db=dkx</code> ：指定对哪个 database 记录 binary log events，这里记录 heima 这个库</li>\n</ul>\n<p>最终效果：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">mysqld</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>skip-name-resolve</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">character_set_server</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">utf8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">datadir</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">server-id</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">log-bin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql/mysql-bin</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">binlog-do-db</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">dkx</span></pre></td></tr></table></figure><p>重启 mysql</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> restart mysql</pre></td></tr></table></figure><p>可以看到如下图中出现了指定文件表示成功！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211007103.png\" alt=\"image-20231021100731994\"></p>\n<h2 id=\"12设置用户权限\"><a class=\"markdownIt-Anchor\" href=\"#12设置用户权限\">#</a> 1.2. 设置用户权限</h2>\n<p>接下来添加一个仅用于数据同步的账户，出于安全考虑，这里仅提供对 heima 这个库的操作权限。</p>\n<pre><code class=\"language-mysql\">create user canal@'%' IDENTIFIED by 'canal';\nGRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT,SUPER ON *.* TO 'canal'@'%' identified by 'canal';\nFLUSH PRIVILEGES;\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> canal IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'canal'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> SLAVE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> CLIENT <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>FLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>mysql 8.0.2 可以使用如下命令：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> canal IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'canal'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">VIEW</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> SLAVE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> CLIENT <span class=\"token keyword\">ON</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>FLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>重启 mysql 容器即可</p>\n<pre><code>docker restart mysql\n</code></pre>\n<p>测试设置是否成功：在 mysql 控制台，或者 Navicat 中，输入命令：</p>\n<pre><code>show master status;\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211015054.png\" alt=\"image-20231021101552134\"></p>\n<h1 id=\"2安装canal\"><a class=\"markdownIt-Anchor\" href=\"#2安装canal\">#</a> 2. 安装 Canal</h1>\n<h2 id=\"21创建网络\"><a class=\"markdownIt-Anchor\" href=\"#21创建网络\">#</a> 2.1. 创建网络</h2>\n<p>我们需要创建一个网络，将 MySQL、Canal、MQ 放到同一个 Docker 网络中：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create dkx</pre></td></tr></table></figure><p>让 mysql 加入这个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network connect dkx mysql</pre></td></tr></table></figure><h2 id=\"23安装canal\"><a class=\"markdownIt-Anchor\" href=\"#23安装canal\">#</a> 2.3. 安装 Canal</h2>\n<p>课前资料中提供了 canal 的镜像压缩包:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211145229.png\" alt=\"image-20210813161804292\"></p>\n<p>大家可以上传到虚拟机，然后通过命令导入：</p>\n<pre><code>docker load -i canal.tar\n</code></pre>\n<p>然后运行命令创建 Canal 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-p</span> <span class=\"token number\">11111</span>:11111 <span class=\"token parameter variable\">--name</span> canal <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.destinations</span><span class=\"token operator\">=</span>dkx1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.master.address</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.249.128:3306  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.dbUsername</span><span class=\"token operator\">=</span>canal  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.dbPassword</span><span class=\"token operator\">=</span>canal  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.connectionCharset</span><span class=\"token operator\">=</span>UTF-8 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.tsdb.enable</span><span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.gtidon</span><span class=\"token operator\">=</span>false  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.filter.regex</span><span class=\"token operator\">=</span>dkx<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">..</span>* <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token parameter variable\">--network</span> dkx1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token parameter variable\">-d</span> canal/canal-server:v1.1.5</pre></td></tr></table></figure><p>说明:</p>\n<ul>\n<li><code>-p 11111:11111</code> ：这是 canal 的默认监听端口</li>\n<li><code>-e canal.instance.master.address=mysql:3306</code> ：数据库地址 (同一网络可以使用容器名互联) 和端口，如果不知道 mysql 容器地址，可以通过 <code>docker inspect 容器id</code>  来查看</li>\n<li><code>-e canal.instance.dbUsername=canal</code> ：数据库用户名</li>\n<li><code>-e canal.instance.dbPassword=canal</code>  ：数据库密码</li>\n<li><code>-e canal.instance.filter.regex=</code> ：要监听的表名称</li>\n</ul>\n<p>表名称监听支持的语法：</p>\n<pre><code>mysql 数据解析关注的表，Perl正则表达式.\n多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\\\) \n常见例子：\n1.  所有表：.*   or  .*\\\\..*\n2.  canal schema下所有表： canal\\\\..*\n3.  canal下的以canal打头的表：canal\\\\.canal.*\n4.  canal schema下的一张表：canal.test1\n5.  多个规则组合使用然后以逗号隔开：canal\\\\..*,mysql.test1,mysql.test2 \n</code></pre>\n<p>查看启动日志，查看是否启动成功了：</p>\n<pre><code class=\"language-sh·\">[root@localhost tmp]# docker logs -f canal\nDOCKER_DEPLOY_TYPE=VM\n==&gt; INIT /alidata/init/02init-sshd.sh\n==&gt; EXIT CODE: 0\n==&gt; INIT /alidata/init/fix-hosts.py\n==&gt; EXIT CODE: 0\n==&gt; INIT DEFAULT\nGenerating SSH1 RSA host key: [  OK  ]\nStarting sshd: [  OK  ]\nStarting crond: [  OK  ]\n==&gt; INIT DONE\n==&gt; RUN /home/admin/app.sh\n==&gt; START ...\nstart canal ...\nstart canal successful\n==&gt; START SUCCESSFUL ...\n</code></pre>\n<p>查看 canal 是否与 mysql 进行建立连接了</p>\n<p>步骤：</p>\n<p>1、进入 canal 内部</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker exec -it canal bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、使用命令监控 canal 的日志信息</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-rwxr-xr-x. <span class=\"token number\">1</span> admin admin <span class=\"token number\">3941</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> app.sh</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> admin admin   <span class=\"token number\">43</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> bin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">1</span> admin admin   <span class=\"token number\">66</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> canal-server</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rwxr-xr-x. <span class=\"token number\">1</span> admin admin  <span class=\"token number\">670</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> health.sh</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lrwxrwxrwx. <span class=\"token number\">1</span> admin admin   <span class=\"token number\">44</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> node_exporter -<span class=\"token operator\">></span> /home/admin/node_exporter-0.18.1.linux-arm64</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> admin admin   <span class=\"token number\">56</span> Jun  <span class=\"token number\">5</span>  <span class=\"token number\">2019</span> node_exporter-0.18.1.linux-arm64</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># tail -f canal-server/logs/canal/canal.log</span></pre></td></tr></table></figure><p>打印日志如下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.324 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class=\"token comment\">## set default uncaught exception handler</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.376 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class=\"token comment\">## load canal configurations</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.392 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class=\"token comment\">## start the canal server.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.466 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalController - <span class=\"token comment\">## start the canal server[172.22.0.3(172.22.0.3):11111]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:39.126 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class=\"token comment\">## the canal server is running now ......</span></pre></td></tr></table></figure><p>可以看到启动没什么问题</p>\n<p>查看 mysql 连接的日志</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># tail -f canal-server/logs/dkx1/dkx1.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">find</span> start position successfully, EntryPosition<span class=\"token punctuation\">[</span>included<span class=\"token operator\">=</span>false,journalName<span class=\"token operator\">=</span>mysql-bin.000006,position<span class=\"token operator\">=</span><span class=\"token number\">4</span>,serverId<span class=\"token operator\">=</span><span class=\"token number\">1000</span>,gtid<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>null<span class=\"token operator\">></span>,timestamp<span class=\"token operator\">=</span><span class=\"token number\">1697857809000</span><span class=\"token punctuation\">]</span> cost <span class=\"token builtin class-name\">:</span> 521ms , the next step is binlog dump</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud",
                "Canal"
            ]
        }
    ]
}