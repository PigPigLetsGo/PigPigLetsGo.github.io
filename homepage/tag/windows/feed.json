{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"windows\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/%E5%AE%89%E8%A3%85scoop/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/%E5%AE%89%E8%A3%85scoop/",
            "title": "安装和使用scoop",
            "date_published": "2024-04-02T10:00:51.923Z",
            "content_html": "<h2 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<ul>\n<li>寻找软件： <code>scoop search 软件名</code></li>\n<li>安装软件： <code>scoop install 软件名</code></li>\n<li>删除软件： <code>scoop uninstall 软件名</code></li>\n<li>查看已安装的软件：  <code>sccop list</code></li>\n<li>清理缓存： <code>scoop cache rm 软件名</code>  或者  <code>scoop cache rm *</code></li>\n<li>查看可添加仓库： <code>scoop bucket known</code></li>\n<li>添加额外仓库： <code>scoop bucket add 仓库名</code></li>\n</ul>\n<p>1 打开 PowerShell 输入，执行策略更改为 RemoteSigned</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set-executionpolicy RemoteSigned</pre></td></tr></table></figure><p>2 输入命令进行安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>iex <span class=\"token string\">\"&amp; &#123;<span class=\"token variable\"><span class=\"token variable\">$(</span>irm get.scoop.sh<span class=\"token variable\">)</span></span>&#125; -RunAsAdmin\"</span></pre></td></tr></table></figure><h3 id=\"中国用户专享\"><a class=\"markdownIt-Anchor\" href=\"#中国用户专享\">#</a> 中国用户专享</h3>\n<p>如果访问 Github 有问题，下载资源失败可以尝试一下方式：</p>\n<ol>\n<li>设置 Scoop 代理。在命令行中输入 (PowerShell 或 CMD 中都行)，： <code>scoop config proxy 127.0.0.1:7890</code>  让 scoop 网络连接走代理，后面的 ip 地址和端口号根据自己的代理设置。</li>\n</ol>\n<h3 id=\"更改scoop的默认安装路径\"><a class=\"markdownIt-Anchor\" href=\"#更改scoop的默认安装路径\">#</a> 更改 scoop 的默认安装路径</h3>\n<p>在终端输入：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>environment<span class=\"token punctuation\">]</span>::setEnvironmentVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'SCOOP_GLOBAL'</span>,<span class=\"token string\">'F:\\GlobalScoopApps'</span>,<span class=\"token string\">'Machine'</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$env</span>:SCOOP_GLOBAL<span class=\"token operator\">=</span><span class=\"token string\">'F:\\GlobalScoopApps'</span></pre></td></tr></table></figure><ul>\n<li>路径自己创建存放的文件夹自己改路径</li>\n<li>当使用 scoop 命令进行安装时，注意加 -g ， scoop install <app> -g</li>\n</ul>\n<h2 id=\"建议安装程序aria2\"><a class=\"markdownIt-Anchor\" href=\"#建议安装程序aria2\">#</a> 建议安装程序 aria2</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span> scoop list</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Installed apps:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Name           Version  Source Updated             Info</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>----           -------  ------ -------             ----</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>7zip           <span class=\"token number\">23.01</span>    main   <span class=\"token number\">2023</span>-07-14 00:16:05</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">git</span>            <span class=\"token number\">2.41</span>.0.2 main   <span class=\"token number\">2023</span>-07-14 00:16:42</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>neofetch       <span class=\"token number\">7.1</span>.0    main   <span class=\"token number\">2023</span>-07-14 00:17:26</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">vim</span>            <span class=\"token number\">9.0</span>      main   <span class=\"token number\">2023</span>-07-14 00:24:45</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>aria2          <span class=\"token number\">1.36</span>.0-1 main   <span class=\"token number\">2023</span>-08-26 <span class=\"token number\">11</span>:06:50 Global <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>quicklook      <span class=\"token number\">3.7</span>.3    extras <span class=\"token number\">2023</span>-08-26 <span class=\"token number\">13</span>:38:35 Global <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>youtube-dl-gui <span class=\"token number\">1.8</span>.5    extras <span class=\"token number\">2023</span>-08-26 <span class=\"token number\">11</span>:52:11 Global <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span> scoop <span class=\"token function\">install</span> aria2</pre></td></tr></table></figure><h2 id=\"使用bucket让windows软件包管理器变得更加强大\"><a class=\"markdownIt-Anchor\" href=\"#使用bucket让windows软件包管理器变得更加强大\">#</a> 使用 bucket 让 windows 软件包管理器变得更加强大</h2>\n<h4 id=\"什么是bucket\"><a class=\"markdownIt-Anchor\" href=\"#什么是bucket\">#</a> 什么是 bucket?</h4>\n<p>在 Scoop 里面，bucket 就是一个软件仓库。Scoop 将一个个仓库缓存至本地，当我们想要安装一个软件的时候，Scoop 就从本地的仓库中挑选出我们想要安装的软件的安装配置文件，并依照这个配置文件进行软件的安装工作，包括：</p>\n<ul>\n<li>从哪里下载软件</li>\n<li>如何安装软件、安装到哪里、需要修改更新什么环境变量</li>\n<li>安装之前、之后都要做什么准备（善后）工作</li>\n<li>……</li>\n</ul>\n<h4 id=\"添加一个bucket\"><a class=\"markdownIt-Anchor\" href=\"#添加一个bucket\">#</a> 添加一个 bucket</h4>\n<p>首先，Scoop 给我们提供了很多可以直接使用的 bucket，就是为了方便我们安装更为常见的带有 GUI 的软件。一个最为常见，也是我推荐大家添加的 bucket 是  <code>extras</code> ，这里面基本涵盖了大部分不符合 main bucket 收录条件的常用软件，包括我们熟悉的：各个版本的 Firefox、福昕阅读器、Geek Uninstaller、Inkscape、Snipaste 等等。（甚至有 Steam，但是不推荐用这样的方式安装。）</p>\n<p>我们可以通过下面这个命令来添加  <code>extras</code>  这个 bucket：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop bucket <span class=\"token function\">add</span> extras</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261124794.png\" alt=\"image-20230826112430785\"></p>\n<p>之后，我们就可以下载更多更多常见的软件了。比方说，我们要下载 <a href=\"https://sspai.com/post/40556\">ScreenToGif</a> 这个极为好用的 Gif 屏幕录制软件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop <span class=\"token function\">install</span> screentogif</pre></td></tr></table></figure><h3 id=\"官方维护的-bucket\"><a class=\"markdownIt-Anchor\" href=\"#官方维护的-bucket\">#</a> 官方维护的 bucket</h3>\n<p><code>extras</code>  这个 bucket 是最有用，也是我们大部分人肯定会用到的仓库。除此之外，我们可以通过这个命令查看 Scoop 还能直接识别哪些 bucket：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop bucket known</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261126217.png\" alt=\"image-20230826112605419\"></p>\n<p>下面列出的这几个仓库就是 Scoop 可以直接识别并添加的 bucket，即我们可以通过下面这个命令直接添加相应的 bucket：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop bucket <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>仓库名<span class=\"token operator\">></span></pre></td></tr></table></figure><p>比如：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span> scoop bucket known</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>extras</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>versions</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nirsoft</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sysinternals</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>nerd-fonts</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>nonportable</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">java</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>games</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span> scoop bucket <span class=\"token function\">add</span> mages</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Unknown bucket <span class=\"token string\">'mages'</span><span class=\"token builtin class-name\">.</span> Try specifying <span class=\"token operator\">&lt;</span>repo<span class=\"token operator\">></span>.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>usage: scoop bucket <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>repo<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span> scoop bucket <span class=\"token function\">add</span> games</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Checking repo<span class=\"token punctuation\">..</span>. OK</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>The games bucket was added successfully.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Administrator<span class=\"token operator\">></span></pre></td></tr></table></figure><p>这里面，我来介绍一下和开发环境的安装没有太大关系的几个仓库：</p>\n<ul>\n<li>\n<p><code>extras</code> ：就是我刚刚介绍的，Scoop 官方维护的一个仓库，涵盖了大部分因为种种原因不能被收录进主仓库的常用软件。地址：<a href=\"https://sspai.com/link?target=https%3A%2F%2Fgithub.com%2Flukesampson%2Fscoop-extras%2Ftree%2Fmaster%2Fbucket\">lukesampson/scoop-extras</a></p>\n</li>\n<li>\n<p><code>nirsoft</code> ：是一个 NirSoft 开发的小工具的安装合集。NirSoft 制作了大量的（dozens and dozens）小工具，包括系统工具、网络工具、密码恢复等等，孜孜不倦、持续更新。</p>\n</li>\n<li>\n<ul>\n<li>Bucket 地址：<a href=\"https://sspai.com/link?target=https%3A%2F%2Fgithub.com%2Fkodybrown%2Fscoop-nirsoft\">kodybrown/scoop-nirsoft</a></li>\n<li>NirSoft 官网地址：<a href=\"https://sspai.com/link?target=http%3A%2F%2Fwww.nirsoft.net%2F\">NirSoft</a></li>\n</ul>\n</li>\n<li>\n<p><code>games</code> ：顾名思义，是游戏（和与游戏相关的工具）合集。包含了大量免费 / 开源的小游戏，地址：<a href=\"https://sspai.com/link?target=https%3A%2F%2Fgithub.com%2FCalinou%2Fscoop-games\">Calinou/scoop-games</a></p>\n</li>\n</ul>\n<p>剩下的几个 bucket 都是和开发环境相关的，比如  <code>java</code>  这个 bucket 就是为了安装 JDK 用的 bucket，这些我在这里就不过多赘述了。</p>\n<h2 id=\"备份与恢复配置文件\"><a class=\"markdownIt-Anchor\" href=\"#备份与恢复配置文件\">#</a> 备份与恢复配置文件</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#[备份] 导出 scoop 的 bucket，已安装 apps 和 自定义配置信息到文件 scoopfile.json 中</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>scoop <span class=\"token builtin class-name\">export</span> <span class=\"token operator\">></span> scoopfile.json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#[恢复] 从 scoopfile.json 文件中恢复信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>scoop <span class=\"token function\">import</span> scoopfile.json</pre></td></tr></table></figure>",
            "tags": [
                "tools",
                "windows"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/scoop%E5%AE%89%E8%A3%85mysql/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/scoop%E5%AE%89%E8%A3%85mysql/",
            "title": "Scoop安装mysql",
            "date_published": "2024-04-02T10:00:51.921Z",
            "content_html": "<h2 id=\"scoop安装mysql\"><a class=\"markdownIt-Anchor\" href=\"#scoop安装mysql\">#</a> Scoop 安装 mysql</h2>\n<ol>\n<li>\n<p>添加仓库： <code>main</code></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop bucket <span class=\"token function\">add</span> main</pre></td></tr></table></figure></li>\n<li>\n<p>执行命令安装 mysql</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop <span class=\"token function\">install</span> mysql</pre></td></tr></table></figure></li>\n<li>\n<p>启动 mysql 数据库</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysqld <span class=\"token parameter variable\">--console</span></pre></td></tr></table></figure><ol>\n<li>\n<p>这里启动的方式分为两种</p>\n<ol>\n<li>后台启动 <code>--standalone</code></li>\n<li>终端启动  <code>--console</code></li>\n</ol>\n</li>\n<li>\n<p>如果报错则执行下面代码：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysqld <span class=\"token parameter variable\">--initialze</span> <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>mysql <span class=\"token parameter variable\">--console</span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>\n<p>执行命令： <code>mysqld -install</code>  安装服务</p>\n<ol>\n<li>\n<p>如果出现下面的情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309040935540.png\" alt=\"image-20230904093551765\"></p>\n</li>\n<li>\n<p>则执行命令： <code>sc delete mysql</code></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309040936057.png\" alt=\"image-20230904093618438\"></p>\n</li>\n<li>\n<p>再次执行： <code>mysqld -install</code></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309040936016.png\" alt=\"image-20230904093638396\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>最后启动服务： <code>net start mysql</code>  启动！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202309040937628.png\" alt=\"image-20230904093707195\"></p>\n</li>\n</ol>\n<p>最后一步可能会想，为什么不直接去任务管理器里面的服务去启动服务呢？因为这里有可能在任务管理器中启动不了，但是终端可以。</p>\n<p>启动后你想执行一下 sql 命令比如： <code>show databses;</code></p>\n<p>却报错了，不要慌它提示的是需要重置密码。</p>\n<p>重置密码执行命令： <code>ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';</code>  然后你就可以正常的使用了。</p>\n",
            "tags": [
                "mysql",
                "tools",
                "windows"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/PowerShell%E9%85%8D%E7%BD%AEohmyzsh/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/tools/windows/PowerShell%E9%85%8D%E7%BD%AEohmyzsh/",
            "title": "PowerShell配置ohmyzsh",
            "date_published": "2024-04-02T10:00:51.919Z",
            "content_html": "<p>第一步</p>\n<p>windows 应用商店安装 WindowsTerminal</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261938192.png\" alt=\"image-20230826193816724\"></p>\n<p>确保自己电脑有 PowerShell, 或者去下载一个也是在应用商店</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261938122.png\" alt=\"image-20230826193848906\"></p>\n<p>安装字体否则一些显示有问题：字体上传到了云端可以去拉取获取下载链接：<a href=\"https://ohmyposh.dev/docs/installation/fonts%E7%82%B9%E5%87%BB\">https://ohmyposh.dev/docs/installation/fonts 点击</a> <a href=\"https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Meslo.zip\">Meslo LGM NF</a> 即可下载字体包</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装 oh-my-posh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>winget <span class=\"token function\">install</span> JanDeDobbeleer.OhMyPosh <span class=\"token parameter variable\">-s</span> winget</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 使用的是哪个 shell</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>oh-my-posh get shell</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 直接加载：</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>ScriptBlock<span class=\"token punctuation\">]</span>::Create<span class=\"token variable\"><span class=\"token punctuation\">((</span>oh<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>posh init pwsh <span class=\"token operator\">--</span>config \"$env<span class=\"token operator\">:</span>POSH_THEMES_PATH\\night<span class=\"token operator\">-</span>owl.omp.json\" <span class=\"token operator\">--</span>print<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>join \"`n\"<span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 编辑 PowerShell 配置文件脚本，每次启动之后自动加载</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>notepad <span class=\"token variable\">$PROFILE</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 当上述命令出错时，请确保先创建配置文件</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>New-Item <span class=\"token parameter variable\">-Path</span> <span class=\"token variable\">$PROFILE</span> <span class=\"token parameter variable\">-Type</span> File <span class=\"token parameter variable\">-Force</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 在配置文件里添加以下行：</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>ScriptBlock<span class=\"token punctuation\">]</span>::Create<span class=\"token variable\"><span class=\"token punctuation\">((</span>oh<span class=\"token operator\">-</span>my<span class=\"token operator\">-</span>posh init pwsh <span class=\"token operator\">--</span>config \"$env<span class=\"token operator\">:</span>POSH_THEMES_PATH\\night<span class=\"token operator\">-</span>owl.omp.json\" <span class=\"token operator\">--</span>print<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>join \"`n\"<span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>或者添加这行：</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>oh-my-posh init pwsh <span class=\"token parameter variable\">--config</span> <span class=\"token string\">'$env:POSH_THEMES_PATH\\night-owl.omp.json'</span> <span class=\"token operator\">|</span> Invoke-Expression</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 重新加载配置文件以使更改生效</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token builtin class-name\">.</span> <span class=\"token variable\">$PROFILE</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 查看所有 themes:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Get-PoshThemes</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#运行上面命令后，最后 3 行显示如下：</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># ---theme 存放的位置：</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>Themes location: C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>admin<span class=\"token punctuation\">\\</span>AppData<span class=\"token punctuation\">\\</span>Local<span class=\"token punctuation\">\\</span>Programs<span class=\"token punctuation\">\\</span>oh-my-posh<span class=\"token punctuation\">\\</span>themes</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># --- 如果输入 $profile, 得出的路径跟以下是一致的：</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>To change your theme, adjust the init script <span class=\"token keyword\">in</span> C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>admin<span class=\"token punctuation\">\\</span>Documents<span class=\"token punctuation\">\\</span>PowerShell<span class=\"token punctuation\">\\</span>Microsoft.PowerShell_profile.ps1.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># --- 之前 $profile 配置文件，也可以改成以下这句（之前这句，向防病毒软件添加例外）里面路径写自己对应的</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>oh-my-posh init pwsh <span class=\"token parameter variable\">--config</span> <span class=\"token string\">'C:\\Users\\Administrator\\AppData\\Local\\Programs\\oh-my-posh\\themes\\night-owl.omp.json'</span> <span class=\"token operator\">|</span> Invoke-Expression</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 安装文件图标库</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>Install-Module <span class=\"token parameter variable\">-Name</span> Terminal-Icons <span class=\"token parameter variable\">-Repository</span> PSGallery</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#使用图标，可以把以下这条命令加到 $PROFILE 里（保存，.$profile 使生效），单独运行就是一次性：</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>Import-Module <span class=\"token parameter variable\">-Name</span> Terminal-Icons</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#BONUS：</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 设置随机主题：</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 在 powershell 输入 code $profile，输入下面的脚本命令：</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>oh-my-posh init pwsh <span class=\"token parameter variable\">--config</span> <span class=\"token string\">'C:\\Users\\Administrator\\AppData\\Local\\Programs\\oh-my-posh\\themes\\night-owl.omp.json'</span> <span class=\"token operator\">|</span> Invoke-Expression</pre></td></tr></table></figure><p>如果命令操作中出现创建文件的错误问题而无法解决则自己去对应的路径下创建一个如下：然后将下面配置信息写入</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>oh-my-posh init pwsh <span class=\"token parameter variable\">--config</span> <span class=\"token string\">'C:\\Users\\Administrator\\AppData\\Local\\Programs\\oh-my-posh\\themes\\night-owl.omp.json'</span> <span class=\"token operator\">|</span> Invoke-Expression</pre></td></tr></table></figure><ul>\n<li><strong>注意</strong>：里面的路径按照自己执行命令：Get-PoshThemes 的时候最后一行看到的填写打开路径的目录可以按照自己喜欢的样式改。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261939548.png\" alt=\"image-20230826193942959\"></p>\n<p>最后就是 Windows Terminal 的配置了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261942396.png\" alt=\"image-20230826194133851\"><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261942154.png\" alt=\"image-20230826194150186\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308261942041.png\" alt=\"image-20230826194225862\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308271651695.png\" alt=\"image-20230827165110165\"></p>\n<p>效果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308280929677.png\" alt=\"image-20230828092941987\"></p>\n<p>也可以配合着 neofetch 使用</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>oh-my-posh init pwsh <span class=\"token parameter variable\">--config</span> <span class=\"token string\">'C:\\Users\\Administrator\\AppData\\Local\\Programs\\oh-my-posh\\themes\\night-owl.omp.json'</span> <span class=\"token operator\">|</span> Invoke-Expression</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>neofetch <span class=\"token parameter variable\">--ascii_distro</span> Mac</pre></td></tr></table></figure>",
            "tags": [
                "tools",
                "windows"
            ]
        }
    ]
}