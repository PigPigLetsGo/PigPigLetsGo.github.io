{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"部署\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90/",
            "title": "seata的部署和集成",
            "date_published": "2024-04-02T06:23:31.030Z",
            "content_html": "<h1 id=\"seata的部署和集成\"><a class=\"markdownIt-Anchor\" href=\"#seata的部署和集成\">#</a> seata 的部署和集成</h1>\n<h1 id=\"一-部署seata的tc-server\"><a class=\"markdownIt-Anchor\" href=\"#一-部署seata的tc-server\">#</a> 一、部署 Seata 的 tc-server</h1>\n<h2 id=\"1下载\"><a class=\"markdownIt-Anchor\" href=\"#1下载\">#</a> 1. 下载</h2>\n<p>首先我们要下载 seata-server 包，地址在<a href=\"http://seata.io/zh-cn/blog/download.html\"> http</a><a href=\"http://seata.io/zh-cn/blog/download.html\">😕/seata.io/zh-cn/blog/download</a><a href=\"http://seata.io/zh-cn/blog/download.html\">.</a><a href=\"http://seata.io/zh-cn/blog/download.html\">html</a></p>\n<p>当然，课前资料也准备好了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750149.png\" alt=\"image-20210622202357640\"></p>\n<h2 id=\"2解压\"><a class=\"markdownIt-Anchor\" href=\"#2解压\">#</a> 2. 解压</h2>\n<p>在非中文目录解压缩这个 zip 包，其目录结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750336.png\" alt=\"image-20210622202515014\"></p>\n<h2 id=\"3修改配置\"><a class=\"markdownIt-Anchor\" href=\"#3修改配置\">#</a> 3. 修改配置</h2>\n<p>修改 conf 目录下的 registry.conf 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750504.png\" alt=\"image-20210622202622874\"></p>\n<p>内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">registry</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">  # tc 服务的注册中心类，这里选择 nacos，也可以是 eureka、zookeeper 等</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">  type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">  nacos</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">    # seata tc 服务注册到 nacos 的服务名称，可以自定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">    application</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"seata-tc-server\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">    serverAddr</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"127.0.0.1:8848\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">    group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"DEFAULT_GROUP\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">    namespace</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">    cluster</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"SH\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">    username</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">    password</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">config</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">  # 读取 tc 服务端的配置文件的方式，这里是从 nacos 配置中心读取，这样如果 tc 是集群，可以共享配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">  type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">  # 配置 nacos 地址等信息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">  nacos</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">    serverAddr</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"127.0.0.1:8848\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">    namespace</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">    group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"SEATA_GROUP\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">    username</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key attr-name\">    password</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key attr-name\">    dataId</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"seataServer.properties\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>Seata-1.7.0 版本的配置如下：</p>\n<p>找到 yml 配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180927758.png\" alt=\"image-20231018092704361\"></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7091</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>logback<span class=\"token punctuation\">-</span>spring.xml</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>user.home<span class=\"token punctuation\">&#125;</span>/logs/seata</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">extend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">logstash-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">4560</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">kafka-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">bootstrap-servers</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">9092</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">topic</span><span class=\"token punctuation\">:</span> logback_to_logstash</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">console</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># support: nacos, consul, apollo, zk, etcd3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\"># 改这里会报错</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> seataServer.properties</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># support: nacos, eureka, redis, zk, consul, etcd3, sofa</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token key atrule\">preferred-networks</span><span class=\"token punctuation\">:</span> 30.240.*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> SH</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token key atrule\">store</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\"># support: file 、 db 、 redis</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> db</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span> druid</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token key atrule\">db-type</span><span class=\"token punctuation\">:</span> mysql</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>13306/seata<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;rewriteBatchedStatements=true&amp;serverTimezone=GMT</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token key atrule\">min-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token key atrule\">max-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token key atrule\">global-table</span><span class=\"token punctuation\">:</span> global_table</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token key atrule\">branch-table</span><span class=\"token punctuation\">:</span> branch_table</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token key atrule\">lock-table</span><span class=\"token punctuation\">:</span> lock_table</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token key atrule\">distributed-lock-table</span><span class=\"token punctuation\">:</span> distributed_lock</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token key atrule\">query-limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">#  server:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#    service-port: 8091 #If not configured, the default is '$&#123;server.port&#125; + 1000'</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token key atrule\">tokenValidityInMilliseconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1800000</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token key atrule\">ignore</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      <span class=\"token key atrule\">urls</span><span class=\"token punctuation\">:</span> /<span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.css</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.js</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.html</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.map</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.svg</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.png</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.ico</span><span class=\"token punctuation\">,</span>/console<span class=\"token punctuation\">-</span>fe/public/<span class=\"token important\">**</span><span class=\"token punctuation\">,</span>/api/v1/auth/login</pre></td></tr></table></figure><h2 id=\"4在nacos添加配置\"><a class=\"markdownIt-Anchor\" href=\"#4在nacos添加配置\">#</a> 4. 在 nacos 添加配置</h2>\n<p>特别注意，为了让 tc 服务的集群可以共享配置，我们选择了 nacos 作为统一配置中心。因此服务端配置文件 seataServer.properties 文件需要在 nacos 中配好。</p>\n<p>格式如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750398.png\" alt=\"image-20210622203609227\"></p>\n<p>配置内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 数据存储方式，db 代表数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">store.mode</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">db</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">store.db.datasource</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">druid</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">store.db.dbType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mysql</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">store.db.driverClassName</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">store.db.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&amp;rewriteBatchedStatements=true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">store.db.user</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">store.db.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">store.db.minConn</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">store.db.maxConn</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">30</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">store.db.globalTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">global_table</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">store.db.branchTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">branch_table</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">store.db.queryLimit</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">100</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">store.db.lockTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">lock_table</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">store.db.maxWait</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5000</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 事务、日志等配置</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">server.recovery.committingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">server.recovery.asynCommittingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">server.recovery.rollbackingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">server.recovery.timeoutRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">server.maxCommitRetryTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">-1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">server.maxRollbackRetryTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">-1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">server.rollbackRetryTimeoutUnlockEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">server.undo.logSaveDays</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">7</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">server.undo.logDeletePeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">86400000</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 客户端与服务端传输方式</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token key attr-name\">transport.serialization</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">seata</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token key attr-name\">transport.compressor</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">none</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 关闭 metrics 功能，提高性能</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token key attr-name\">metrics.enabled</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token key attr-name\">metrics.registryType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">compact</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token key attr-name\">metrics.exporterList</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">prometheus</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key attr-name\">metrics.exporterPrometheusPort</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">9898</span></pre></td></tr></table></figure><p><mark>其中的数据库地址、用户名、密码都需要修改成你自己的数据库信息。</mark></p>\n<h2 id=\"5创建数据库表\"><a class=\"markdownIt-Anchor\" href=\"#5创建数据库表\">#</a> 5. 创建数据库表</h2>\n<p>特别注意：tc 服务在管理分布式事务时，需要记录事务相关数据到数据库中，你需要提前创建好这些表。</p>\n<p>新建一个名为 seata 的数据库，运行课前资料提供的 sql 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750346.png\" alt=\"image-20210622204145159\"></p>\n<p>这些表主要记录全局事务、分支事务、全局锁信息：</p>\n<pre><code class=\"language-mysql\">\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- 分支事务表\n-- ----------------------------\nDROP TABLE IF EXISTS `branch_table`;\nCREATE TABLE `branch_table`  (\n  `branch_id` bigint(20) NOT NULL,\n  `xid` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `transaction_id` bigint(20) NULL DEFAULT NULL,\n  `resource_group_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `resource_id` varchar(256) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `branch_type` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `status` tinyint(4) NULL DEFAULT NULL,\n  `client_id` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `application_data` varchar(2000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `gmt_create` datetime(6) NULL DEFAULT NULL,\n  `gmt_modified` datetime(6) NULL DEFAULT NULL,\n  PRIMARY KEY (`branch_id`) USING BTREE,\n  INDEX `idx_xid`(`xid`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\n-- ----------------------------\n-- 全局事务表\n-- ----------------------------\nDROP TABLE IF EXISTS `global_table`;\nCREATE TABLE `global_table`  (\n  `xid` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `transaction_id` bigint(20) NULL DEFAULT NULL,\n  `status` tinyint(4) NOT NULL,\n  `application_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `transaction_service_group` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `transaction_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `timeout` int(11) NULL DEFAULT NULL,\n  `begin_time` bigint(20) NULL DEFAULT NULL,\n  `application_data` varchar(2000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `gmt_create` datetime NULL DEFAULT NULL,\n  `gmt_modified` datetime NULL DEFAULT NULL,\n  PRIMARY KEY (`xid`) USING BTREE,\n  INDEX `idx_gmt_modified_status`(`gmt_modified`, `status`) USING BTREE,\n  INDEX `idx_transaction_id`(`transaction_id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\nSET FOREIGN_KEY_CHECKS = 1;\n</code></pre>\n<h2 id=\"6启动tc服务\"><a class=\"markdownIt-Anchor\" href=\"#6启动tc服务\">#</a> 6. 启动 TC 服务</h2>\n<p>进入 bin 目录，运行其中的 seata-server.bat 即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750008.png\" alt=\"image-20210622205427318\"></p>\n<p>启动成功后，seata-server 应该已经注册到 nacos 注册中心了。</p>\n<p>打开浏览器，访问 nacos 地址：<a href=\"http://localhost:8848\">http://localhost:8848</a>，然后进入服务列表页面，可以看到 seata-tc-server 的信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750053.png\" alt=\"image-20210622205901450\"></p>\n<h1 id=\"二-微服务集成seata\"><a class=\"markdownIt-Anchor\" href=\"#二-微服务集成seata\">#</a> 二、微服务集成 seata</h1>\n<h2 id=\"1引入依赖\"><a class=\"markdownIt-Anchor\" href=\"#1引入依赖\">#</a> 1. 引入依赖</h2>\n<p>首先，我们需要在微服务中引入 seata 依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 版本较低，1.3.0，因此排除 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>seata-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">&lt;!--seata starter 采用 1.4.2 版本 --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>seata-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;seata.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"2修改配置文件\"><a class=\"markdownIt-Anchor\" href=\"#2修改配置文件\">#</a> 2. 修改配置文件</h2>\n<p>需要修改 application.yml 文件，添加一些配置：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># TC 服务注册中心的配置，微服务根据这些信息去注册中心获取 tc 服务地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 参考 tc 服务自己的 registry.conf 中的配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># tc</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server <span class=\"token comment\"># tc 服务在 nacos 中的服务名称</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> SH</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">tx-service-group</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>demo <span class=\"token comment\"># 事务组，根据这个获取 tc 服务的 cluster 名称</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">vgroup-mapping</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 事务组与 TC 服务 cluster 的映射关系</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">seata-demo</span><span class=\"token punctuation\">:</span> SH</pre></td></tr></table></figure><p>要从 nacos 中找到一个服务，我需要知道什么信息。</p>\n<p>我们从 nacos 找到一个服务至少需要知道 namespace，group，application-name 和 cluster</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180945757.png\" alt=\"image-20231018094533567\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180948844.png\" alt=\"image-20231018094851842\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>nacos 服务名称组成包括？</p>\n<ul>\n<li>namespace + group + serviceName + cluster</li>\n</ul>\n<p>seata 客户端获取 tc 的 cluster 名称方式</p>\n<ul>\n<li>以 tx-group-service 的值为 key 到 vgroupMapping 中查找</li>\n</ul>\n</blockquote>\n<h1 id=\"三-tc服务的高可用和异地容灾\"><a class=\"markdownIt-Anchor\" href=\"#三-tc服务的高可用和异地容灾\">#</a> 三、TC 服务的高可用和异地容灾</h1>\n<h2 id=\"1模拟异地容灾的tc集群\"><a class=\"markdownIt-Anchor\" href=\"#1模拟异地容灾的tc集群\">#</a> 1. 模拟异地容灾的 TC 集群</h2>\n<p>计划启动两台 seata 的 tc 服务节点：</p>\n<table>\n<thead>\n<tr>\n<th>节点名称</th>\n<th>ip 地址</th>\n<th>端口号</th>\n<th>集群名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>seata</td>\n<td>127.0.0.1</td>\n<td>8091</td>\n<td>SH</td>\n</tr>\n<tr>\n<td>seata2</td>\n<td>127.0.0.1</td>\n<td>8092</td>\n<td>HZ</td>\n</tr>\n</tbody>\n</table>\n<p>之前我们已经启动了一台 seata 服务，端口是 8091，集群名为 SH。</p>\n<p>现在，将 seata 目录复制一份，起名为 seata2</p>\n<p>修改 seata2/conf/registry.conf 内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">registry</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># tc 服务的注册中心类，这里选择 nacos，也可以是 eureka、zookeeper 等</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token directive\"><span class=\"token keyword\">type</span> = <span class=\"token string\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># seata tc 服务注册到 nacos 的服务名称，可以自定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    application = \"seata-tc-server\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    serverAddr = \"127.0.0.1:8848\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    group = \"DEFAULT_GROUP\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    namespace = \"\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cluster = \"HZ\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    username = \"nacos\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    password = \"nacos\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">config</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\"># 读取 tc 服务端的配置文件的方式，这里是从 nacos 配置中心读取，这样如果 tc 是集群，可以共享配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token directive\"><span class=\"token keyword\">type</span> = <span class=\"token string\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># 配置 nacos 地址等信息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    serverAddr = \"127.0.0.1:8848\"</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    namespace = \"\"</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    group = \"SEATA_GROUP\"</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    username = \"nacos\"</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    password = \"nacos\"</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    dataId = \"seataServer.properties\"</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Seata-1.7.0 版本的配置如下：</p>\n<p>找到 yml 配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181958636.png\" alt=\"image-20231018092704361\"></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7091</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>logback<span class=\"token punctuation\">-</span>spring.xml</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>user.home<span class=\"token punctuation\">&#125;</span>/logs/seata</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">extend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">logstash-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">4560</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">kafka-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">bootstrap-servers</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">9092</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">topic</span><span class=\"token punctuation\">:</span> logback_to_logstash</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">console</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># support: nacos, consul, apollo, zk, etcd3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\"># 改这里会报错</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> seataServer.properties</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># support: nacos, eureka, redis, zk, consul, etcd3, sofa</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token key atrule\">preferred-networks</span><span class=\"token punctuation\">:</span> 30.240.*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> HZ <span class=\"token comment\"># 修改集群地址</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token key atrule\">store</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\"># support: file 、 db 、 redis</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> db</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span> druid</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token key atrule\">db-type</span><span class=\"token punctuation\">:</span> mysql</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>13306/seata<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;rewriteBatchedStatements=true&amp;serverTimezone=GMT</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token key atrule\">min-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token key atrule\">max-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token key atrule\">global-table</span><span class=\"token punctuation\">:</span> global_table</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token key atrule\">branch-table</span><span class=\"token punctuation\">:</span> branch_table</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token key atrule\">lock-table</span><span class=\"token punctuation\">:</span> lock_table</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token key atrule\">distributed-lock-table</span><span class=\"token punctuation\">:</span> distributed_lock</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token key atrule\">query-limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#  server:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">#    service-port: 8091 #If not configured, the default is '$&#123;server.port&#125; + 1000'</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token key atrule\">tokenValidityInMilliseconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1800000</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token key atrule\">ignore</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token key atrule\">urls</span><span class=\"token punctuation\">:</span> /<span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.css</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.js</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.html</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.map</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.svg</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.png</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.ico</span><span class=\"token punctuation\">,</span>/console<span class=\"token punctuation\">-</span>fe/public/<span class=\"token important\">**</span><span class=\"token punctuation\">,</span>/api/v1/auth/login</pre></td></tr></table></figure><p>进入 seata2/bin 目录，然后运行命令：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>seata-server<span class=\"token punctuation\">.</span>bat <span class=\"token operator\">-</span>p 8092</pre></td></tr></table></figure><p>1.7.0 版本实在不行就配置文件里修改端口号</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182005822.png\" alt=\"image-20231018200503303\"></p>\n<p>打开 nacos 控制台，查看服务列表：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750772.png\" alt=\"image-20210624151150840\"></p>\n<p>点进详情查看：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750333.png\" alt=\"image-20210624151221747\"></p>\n<h2 id=\"2将事务组映射配置到nacos\"><a class=\"markdownIt-Anchor\" href=\"#2将事务组映射配置到nacos\">#</a> 2. 将事务组映射配置到 nacos</h2>\n<p>接下来，我们需要将 tx-service-group 与 cluster 的映射关系都配置到 nacos 配置中心。</p>\n<p>新建一个配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180751774.png\" alt=\"image-20210624151507072\"></p>\n<p>配置的内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 事务组映射关系</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">service.vgroupMapping.seata-demo</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">SH</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">service.enableDegrade</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">service.disableGlobalTransaction</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 与 TC 服务的通信配置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">transport.type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">TCP</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">transport.server</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NIO</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">transport.heartbeat</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">transport.enableClientBatchSendRequest</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.bossThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyBoss</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.workerThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyServerNIOWorker</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.serverExecutorThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyServerBizHandler</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.shareBossWorker</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientSelectorThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyClientSelector</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientSelectorThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientWorkerThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyClientWorkerThread</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.bossThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.workerThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">default</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">transport.shutdown.wait</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">3</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># RM 配置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">client.rm.asyncCommitBufferLimit</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10000</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryTimes</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">30</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryPolicyBranchRollbackOnConflict</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key attr-name\">client.rm.reportRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key attr-name\">client.rm.tableMetaCheckEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token key attr-name\">client.rm.tableMetaCheckerInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">60000</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token key attr-name\">client.rm.sqlParserType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">druid</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token key attr-name\">client.rm.reportSuccessEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token key attr-name\">client.rm.sagaBranchRegisterEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># TM 配置</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token key attr-name\">client.tm.commitRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key attr-name\">client.tm.rollbackRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token key attr-name\">client.tm.defaultGlobalTransactionTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">60000</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheck</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheckAllowTimes</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheckPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">2000</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># undo 日志配置</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token key attr-name\">client.undo.dataValidation</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token key attr-name\">client.undo.logSerialization</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jackson</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token key attr-name\">client.undo.onlyCareUpdateColumns</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token key attr-name\">client.undo.logTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">undo_log</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.enable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">zip</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.threshold</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">64k</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token key attr-name\">client.log.exceptionRate</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">100</span></pre></td></tr></table></figure><h2 id=\"3微服务读取nacos配置\"><a class=\"markdownIt-Anchor\" href=\"#3微服务读取nacos配置\">#</a> 3. 微服务读取 nacos 配置</h2>\n<p>接下来，需要修改每一个微服务的 application.yml 文件，让微服务读取 nacos 中的 client.properties 文件：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP <span class=\"token comment\"># 这里和 nacos 添加配置文件中的 group 要一致</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> client.properties</pre></td></tr></table></figure><p>重启微服务，现在微服务到底是连接 tc 的 SH 集群，还是 tc 的 HZ 集群，都统一由 nacos 的 client.properties 来决定了。</p>\n<p>8092</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182016810.png\" alt=\"image-20231018201640218\"></p>\n<p>7091</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182017126.png\" alt=\"image-20231018201658572\"></p>\n<p>可以看到 8092 没有任何人注册，而是都注册到了 7091 上了</p>\n<p>我们去 nacos 控制台中对刚才创建的配置文件的集群地址进行修改为：HZ</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182019284.png\" alt=\"image-20231018201902967\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182019735.png\" alt=\"image-20231018201919714\"></p>\n<p>在 8092 的 seata 启动窗口就可以看到如下信息：</p>\n<p>此时服务就全部都切换到了 8092 这个 seata 服务上了，7091 就没用了甚至于停掉也没有问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182027851.png\" alt=\"image-20231018202705207\"></p>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "部署",
                "Seata"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-集群部署",
            "date_published": "2024-04-02T06:23:30.993Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3.8-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221138546.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">-v</span> mq-plugins:/plugins <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> rabbitmq:3.8-management</pre></td></tr></table></figure><h1 id=\"2安装delayexchange插件\"><a class=\"markdownIt-Anchor\" href=\"#2安装delayexchange插件\">#</a> 2. 安装 DelayExchange 插件</h1>\n<p>我们要使用的是延迟队列但是名字却是延迟交换机，为什么叫这个名字呢简单说下它的原理：</p>\n<p>我们在使用这个插件的时候它不是基于队列去做的而是交换机。我们发消息到交换机，而交换机会帮你延迟的投递到队列里</p>\n<p>官方的安装指南地址为：<a href=\"https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq\">https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq</a></p>\n<p>上述文档是基于 linux 原生安装 RabbitMQ，然后安装插件。</p>\n<p>因为我们之前是基于 Docker 安装 RabbitMQ，所以下面我们会讲解基于 Docker 来安装 RabbitMQ 插件。</p>\n<h2 id=\"21下载插件\"><a class=\"markdownIt-Anchor\" href=\"#21下载插件\">#</a> 2.1. 下载插件</h2>\n<p>RabbitMQ 有一个官方的插件社区，地址为：<a href=\"https://www.rabbitmq.com/community-plugins.html\">https://www.rabbitmq.com/community-plugins.html</a></p>\n<p>其中包含各种各样的插件，包括我们要使用的 DelayExchange 插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139975.png\" alt=\"image-20210713104511055\"></p>\n<p>大家可以去对应的 GitHub 页面下载 3.8.9 版本的插件，地址为 https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9 这个对应 RabbitMQ 的 3.8.5 以上版本。</p>\n<p>课前资料也提供了下载好的插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139733.png\" alt=\"image-20210713104808909\"></p>\n<h2 id=\"22上传插件\"><a class=\"markdownIt-Anchor\" href=\"#22上传插件\">#</a> 2.2. 上传插件</h2>\n<p>因为我们是基于 Docker 安装，所以需要先查看 RabbitMQ 的插件目录对应的数据卷。如果不是基于 Docker 的同学，请参考第一章部分，重新创建 Docker 容器。</p>\n<p>我们之前设定的 RabbitMQ 的数据卷名称为 <code>mq-plugins</code> ，所以我们使用下面命令查看数据卷：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume inspect mq-plugins</pre></td></tr></table></figure><p>可以得到下面结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139695.png\" alt=\"image-20210713105135701\"></p>\n<p>接下来，将插件上传到这个目录即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139638.png\" alt=\"image-20210713105339785\"></p>\n<h2 id=\"23安装插件\"><a class=\"markdownIt-Anchor\" href=\"#23安装插件\">#</a> 2.3. 安装插件</h2>\n<p>最后就是安装了，需要进入 MQ 容器内部来执行安装。我的容器名为 <code>mq</code> ，所以执行下面命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行时，请将其中的  <code>-it</code>  后面的 <code>mq</code>  替换为你自己的容器名.</p>\n<p>进入容器内部后，执行下面命令开启插件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_delayed_message_exchange</pre></td></tr></table></figure><p>结果如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139444.png\" alt=\"image-20210713105829435\"></p>\n<p>访问 mq 前端声明一个交换机进行测试：</p>\n<p>DelayExchange 插件的原理是对官方原生的 Exchange 做了功能的升级：</p>\n<p>1、将 DelayExchange 接受的消息暂存在内存中 (官方的 Exchange 是无法存储消息的)</p>\n<p>2、在 DelayExchange 中计时，超时后才投递消息到队列中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221553081.png\" alt=\"image-20231022155351657\"></p>\n<p>发送这个消息的时候延迟多久需要在发送消息的时候设置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221557138.png\" alt=\"image-20231022155755822\"></p>\n<h1 id=\"3集群部署\"><a class=\"markdownIt-Anchor\" href=\"#3集群部署\">#</a> 3. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群，我们的计划部署 3 节点的 mq 集群：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>控制台端口</th>\n<th>amqp 通信端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mq1</td>\n<td>8081 —&gt; 15672</td>\n<td>8071 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq2</td>\n<td>8082 —&gt; 15672</td>\n<td>8072 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq3</td>\n<td>8083 —&gt; 15672</td>\n<td>8073  —&gt; 5672</td>\n</tr>\n</tbody>\n</table>\n<p>集群中的节点标示默认都是： <code>rabbit@[hostname]</code> ，因此以上三个节点的名称分别为：</p>\n<ul>\n<li>rabbit@mq1</li>\n<li>rabbit@mq2</li>\n<li>rabbit@mq3</li>\n</ul>\n<h2 id=\"22获取cookie\"><a class=\"markdownIt-Anchor\" href=\"#22获取cookie\">#</a> 2.2. 获取 cookie</h2>\n<p>RabbitMQ 底层依赖于 Erlang，而 Erlang 虚拟机就是一个面向分布式的语言，默认就支持集群模式。集群模式中的每个 RabbitMQ 节点使用 cookie 来确定它们是否被允许相互通信。</p>\n<p>要使两个节点能够通信，它们必须具有相同的共享秘密，称为<strong> Erlang cookie</strong>。cookie 只是一串最多 255 个字符的字母数字字符。</p>\n<p>每个集群节点必须具有<strong>相同的 cookie</strong>。实例之间也需要它来相互通信。</p>\n<p>我们先在之前启动的 mq 容器中获取一个 cookie 值，作为集群的 cookie。执行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">cat</span> /var/lib/rabbitmq/.erlang.cookie</pre></td></tr></table></figure><p>可以看到 cookie 值如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DVNQQPDKLNCMEPRBYEHX</pre></td></tr></table></figure><p>接下来，停止并删除当前的 mq 容器，我们重新搭建集群。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> mq</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139218.png\" alt=\"image-20210717212345165\"></p>\n<h2 id=\"23准备集群配置\"><a class=\"markdownIt-Anchor\" href=\"#23准备集群配置\">#</a> 2.3. 准备集群配置</h2>\n<p>在 /tmp 目录新建一个配置文件 rabbitmq.conf：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> rabbitmq.conf</pre></td></tr></table></figure><p>文件内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loopback_users.guest = false</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listeners.tcp.default = 5672</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cluster_formation.classic_config.nodes.1 = rabbit@mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster_formation.classic_config.nodes.2 = rabbit@mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cluster_formation.classic_config.nodes.3 = rabbit@mq3</pre></td></tr></table></figure><p>再创建一个文件，记录 cookie</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建 cookie 文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> .erlang.cookie</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 写入 cookie</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"FXZMCVGLBIXZCDEMMVZQ\"</span> <span class=\"token operator\">></span> .erlang.cookie</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 修改 cookie 文件的权限</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> .erlang.cookie</pre></td></tr></table></figure><p>准备三个目录，mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> mq1 mq2 mq3</pre></td></tr></table></figure><p>然后拷贝 rabbitmq.conf、cookie 文件到 mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq3</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq3</pre></td></tr></table></figure><h2 id=\"24启动集群\"><a class=\"markdownIt-Anchor\" href=\"#24启动集群\">#</a> 2.4. 启动集群</h2>\n<p>创建一个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create mq-net</pre></td></tr></table></figure><p>运行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq1/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8071</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq2/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8072</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8082</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq3/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8073</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><h2 id=\"25测试\"><a class=\"markdownIt-Anchor\" href=\"#25测试\">#</a> 2.5. 测试</h2>\n<p>在 mq1 这个节点上添加一个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139410.png\" alt=\"image-20210717222833196\"></p>\n<p>如图，在 mq2 和 mq3 两个控制台也都能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139214.png\" alt=\"image-20210717223057902\"></p>\n<h3 id=\"251数据共享测试\"><a class=\"markdownIt-Anchor\" href=\"#251数据共享测试\">#</a> 2.5.1. 数据共享测试</h3>\n<p>点击这个队列，进入管理页面：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139412.png\" alt=\"image-20210717223421750\"></p>\n<p>然后利用控制台发送一条消息到这个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140585.png\" alt=\"image-20210717223320238\"></p>\n<p>结果在 mq2、mq3 上都能看到这条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140067.png\" alt=\"image-20210717223603628\"></p>\n<h3 id=\"252可用性测试\"><a class=\"markdownIt-Anchor\" href=\"#252可用性测试\">#</a> 2.5.2. 可用性测试</h3>\n<p>我们让其中一台节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>然后登录 mq2 或 mq3 的控制台，发现 simple.queue 也不可用了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140781.png\" alt=\"image-20210717223800203\"></p>\n<p>说明数据并没有拷贝到 mq2 和 mq3。</p>\n<h1 id=\"4镜像模式\"><a class=\"markdownIt-Anchor\" href=\"#4镜像模式\">#</a> 4. 镜像模式</h1>\n<p>在刚刚的案例中，一旦创建队列的主机宕机，队列就会不可用。不具备高可用能力。如果要解决这个问题，必须使用官方提供的镜像集群方案。</p>\n<p>官方文档地址：<a href=\"https://www.rabbitmq.com/ha.html\">https://www.rabbitmq.com/ha.html</a></p>\n<h2 id=\"41镜像模式的特征\"><a class=\"markdownIt-Anchor\" href=\"#41镜像模式的特征\">#</a> 4.1. 镜像模式的特征</h2>\n<p>默认情况下，队列只保存在创建该队列的节点上。而镜像模式下，创建队列的节点被称为该队列的<strong>主节点</strong>，队列还会拷贝到集群中的其它节点，也叫做该队列的<strong>镜像</strong>节点。</p>\n<p>但是，不同队列可以在集群中的任意节点上创建，因此不同队列的主节点可以不同。甚至，<strong>一个队列的主节点可能是另一个队列的镜像节点</strong>。</p>\n<p>用户发送给队列的一切请求，例如发送消息、消息回执默认都会在主节点完成，如果是从节点接收到请求，也会路由到主节点去完成。<strong>镜像节点仅仅起到备份数据作用</strong>。</p>\n<p>当主节点接收到消费者的 ACK 时，所有镜像都会删除节点中的数据。</p>\n<p>总结如下：</p>\n<ul>\n<li>镜像队列结构是一主多从（从就是镜像）</li>\n<li>所有操作都是主节点完成，然后同步给镜像节点</li>\n<li>主宕机后，镜像节点会替代成新的主（如果在主从同步完成前，主就已经宕机，可能出现数据丢失）</li>\n<li>不具备负载均衡功能，因为所有操作都会有主节点完成（但是不同队列，其主节点可以不同，可以利用这个提高吞吐量）</li>\n</ul>\n<h2 id=\"42镜像模式的配置\"><a class=\"markdownIt-Anchor\" href=\"#42镜像模式的配置\">#</a> 4.2. 镜像模式的配置</h2>\n<p>镜像模式的配置有 3 种模式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">ha-mode</th>\n<th style=\"text-align:left\">ha-params</th>\n<th style=\"text-align:left\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">准确模式 exactly</td>\n<td style=\"text-align:left\">队列的副本量 count</td>\n<td style=\"text-align:left\">集群中队列副本（主服务器和镜像服务器之和）的数量。count 如果为 1 意味着单个副本：即队列主节点。count 值为 2 表示 2 个副本：1 个队列主和 1 个队列镜像。换句话说：count = 镜像数量 + 1。如果群集中的节点数少于 count，则该队列将镜像到所有节点。如果有集群总数大于 count+1，并且包含镜像的节点出现故障，则将在另一个节点上创建一个新的镜像。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">(none)</td>\n<td style=\"text-align:left\">队列在群集中的所有节点之间进行镜像。队列将镜像到任何新加入的节点。镜像到所有节点将对所有群集节点施加额外的压力，包括网络 I / O，磁盘 I / O 和磁盘空间使用情况。推荐使用 exactly，设置副本数为（N / 2 +1）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nodes</td>\n<td style=\"text-align:left\"><em>node names</em></td>\n<td style=\"text-align:left\">指定队列创建到哪些节点，如果指定的节点全部不存在，则会出现异常。如果指定的节点在集群中存在，但是暂时不可用，会创建节点到当前客户端连接到的节点。</td>\n</tr>\n</tbody>\n</table>\n<p>这里我们以 rabbitmqctl 命令作为案例来讲解配置语法。</p>\n<p>语法示例：</p>\n<h3 id=\"421exactly模式\"><a class=\"markdownIt-Anchor\" href=\"#421exactly模式\">#</a> 4.2.1.exactly 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-two &quot;^two\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-two</code> ：策略名称，自定义</li>\n<li><code>&quot;^two\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>two.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;exactly&quot;</code> ：策略模式，此处是 exactly 模式，指定副本数量</li>\n<li><code>&quot;ha-params&quot;:2</code> ：策略参数，这里是 2，就是副本数量为 2，1 主 1 镜像</li>\n<li><code>&quot;ha-sync-mode&quot;:&quot;automatic&quot;</code> ：同步策略，默认是 manual，即新加入的镜像节点不会同步旧的消息。如果设置为 automatic，则新加入的镜像节点会把主节点中所有消息都同步，会带来额外的网络开销</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"422all模式\"><a class=\"markdownIt-Anchor\" href=\"#422all模式\">#</a> 4.2.2.all 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-all &quot;^all\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>ha-all</code> ：策略名称，自定义</li>\n<li><code>&quot;^all\\.&quot;</code> ：匹配所有以 <code>all.</code>  开头的队列名</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'</code> ：策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;all&quot;</code> ：策略模式，此处是 all 模式，即所有节点都会称为镜像节点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"423nodes模式\"><a class=\"markdownIt-Anchor\" href=\"#423nodes模式\">#</a> 4.2.3.nodes 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-nodes &quot;^nodes\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-nodes</code> ：策略名称，自定义</li>\n<li><code>&quot;^nodes\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>nodes.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;nodes&quot;</code> ：策略模式，此处是 nodes 模式</li>\n<li><code>&quot;ha-params&quot;:[&quot;rabbit@mq1&quot;, &quot;rabbit@mq2&quot;]</code> ：策略参数，这里指定副本所在节点名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"43测试\"><a class=\"markdownIt-Anchor\" href=\"#43测试\">#</a> 4.3. 测试</h2>\n<p>我们使用 exactly 模式的镜像，因为集群节点数量为 3，因此镜像数量就设置为 2.</p>\n<p>运行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 rabbitmqctl set_policy ha-two <span class=\"token string\">\"^two\\.\"</span> <span class=\"token string\">'&#123;\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"&#125;'</span></pre></td></tr></table></figure><p>下面，我们创建一个新的队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140154.png\" alt=\"image-20210717231751411\"></p>\n<p>在任意一个 mq 控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140517.png\" alt=\"image-20210717231829505\"></p>\n<h3 id=\"431测试数据共享\"><a class=\"markdownIt-Anchor\" href=\"#431测试数据共享\">#</a> 4.3.1. 测试数据共享</h3>\n<p>给 two.queue 发送一条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140429.png\" alt=\"image-20210717231958996\"></p>\n<p>然后在 mq1、mq2、mq3 的任意控制台查看消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140006.png\" alt=\"image-20210717232108584\"></p>\n<h3 id=\"432测试高可用\"><a class=\"markdownIt-Anchor\" href=\"#432测试高可用\">#</a> 4.3.2. 测试高可用</h3>\n<p>现在，我们让 two.queue 的主节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>查看集群状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140157.png\" alt=\"image-20210717232257420\"></p>\n<p>查看队列状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140733.png\" alt=\"image-20210717232322646\"></p>\n<p>发现依然是健康的！并且其主节点切换到了 rabbit@mq2 上</p>\n<h1 id=\"5仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#5仲裁队列\">#</a> 5. 仲裁队列</h1>\n<p>从 RabbitMQ 3.8 版本开始，引入了新的仲裁队列，他具备与镜像队里类似的功能，但使用更加方便。</p>\n<h2 id=\"51添加仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#51添加仲裁队列\">#</a> 5.1. 添加仲裁队列</h2>\n<p>在任意控制台添加一个队列，一定要选择队列类型为 Quorum 类型。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140068.png\" alt=\"image-20210717234329640\"></p>\n<p>在任意控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140859.png\" alt=\"image-20210717234426209\"></p>\n<p>可以看到，仲裁队列的 + 2 字样。代表这个队列有 2 个镜像节点。</p>\n<p>因为仲裁队列默认的镜像数为 5。如果你的集群有 7 个节点，那么镜像数肯定是 5；而我们集群只有 3 个节点，因此镜像数量就是 3.</p>\n<h2 id=\"52springamqp创建仲载队列\"><a class=\"markdownIt-Anchor\" href=\"#52springamqp创建仲载队列\">#</a> 5.2.SpringAMQP 创建仲载队列</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuorumConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">quorumQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"quorum.queue2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 持久化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">quorum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 仲载队列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringAMQP 链接集群，只需要在 yml 中配置即可：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8071</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8072</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8073</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># port: 5672 # 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr></table></figure><h2 id=\"53测试\"><a class=\"markdownIt-Anchor\" href=\"#53测试\">#</a> 5.3. 测试</h2>\n<p>可以参考对镜像集群的测试，效果是一样的。</p>\n<h2 id=\"53集群扩容\"><a class=\"markdownIt-Anchor\" href=\"#53集群扩容\">#</a> 5.3. 集群扩容</h2>\n<h3 id=\"531加入集群\"><a class=\"markdownIt-Anchor\" href=\"#531加入集群\">#</a> 5.3.1. 加入集群</h3>\n<p>1）启动一个新的 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq4 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq5 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8074</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8084</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><p>2）进入容器控制台：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq4 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>3）停止 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl stop_app</pre></td></tr></table></figure><p>4）重置 RabbitMQ 中的数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl reset</pre></td></tr></table></figure><p>5）加入 mq1：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl join_cluster rabbit@mq1</pre></td></tr></table></figure><p>6）再次启动 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl start_app</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140463.png\" alt=\"image-20210718001909492\"></p>\n<h3 id=\"532增加仲裁队列副本\"><a class=\"markdownIt-Anchor\" href=\"#532增加仲裁队列副本\">#</a> 5.3.2. 增加仲裁队列副本</h3>\n<p>我们先查看下 quorum.queue 这个队列目前的副本情况，进入 mq1 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140047.png\" alt=\"image-20210718002118357\"></p>\n<p>现在，我们让 mq4 也加入进来：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues add_member <span class=\"token string\">\"quorum.queue\"</span> <span class=\"token string\">\"rabbit@mq4\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140584.png\" alt=\"image-20210718002253226\"></p>\n<p>再次查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140083.png\" alt=\"image-20210718002342603\"></p>\n<p>查看控制台，发现 quorum.queue 的镜像数量也从原来的 +2 变成了 +3：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140839.png\" alt=\"image-20210718002422365\"></p>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-单击部署",
            "date_published": "2024-04-02T06:23:30.981Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101608790.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><p>使用命令来查看一下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REPOSITORY                   TAG       IMAGE ID       CREATED         SIZE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rabbitmq                     latest    24cc95a2cb57   <span class=\"token number\">6</span> days ago      217MB</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token comment\"># ui 管理平台的端口号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token comment\"># 消息通信的端口号</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> rabbitmq:3-management</pre></td></tr></table></figure><p>查看启动状态</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                                                                                                                                 NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>5ca16a608743   rabbitmq:3-management   <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">2</span> minutes   <span class=\"token number\">4369</span>/tcp, <span class=\"token number\">5671</span>/tcp, <span class=\"token number\">0.0</span>.0.0:5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, :::5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, <span class=\"token number\">15671</span>/tcp, <span class=\"token number\">15691</span>-15692/tcp, <span class=\"token number\">25672</span>/tcp, <span class=\"token number\">0.0</span>.0.0:15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp, :::15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp   mq</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>控制台打印了端口为：15671，在启动容器时配置了账号为：itcast，密码为：123321</p>\n<p>访问 uri：<a href=\"http://192.168.249.128:15672\">http://192.168.249.128:15672</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101627722.png\" alt=\"image-20231010162721293\"></p>\n<p><strong>页面功能介绍</strong>：</p>\n<blockquote>\n<p>Overview：总览</p>\n<p>作用：查看节点的一些详细信息</p>\n</blockquote>\n<blockquote>\n<p>Connections：连接</p>\n<p>无论是消息发布者还是消息消费者都应该跟 mq 建立连接</p>\n</blockquote>\n<blockquote>\n<p>Channels：通道</p>\n<p>建立连接后一定要创建一个通道，完后生产者 或者是消费者才能基于 Channel 完成消息的发送和接收</p>\n</blockquote>\n<blockquote>\n<p>Exchanges：交换机</p>\n<p>是消息的路由</p>\n</blockquote>\n<blockquote>\n<p>Queues：队列</p>\n</blockquote>\n<blockquote>\n<p>Admin：用户管理</p>\n<ul>\n<li>Virtual Host：虚拟机可以对每个用户进行一个隔离防止操作冲突</li>\n</ul>\n</blockquote>\n<h1 id=\"2集群部署\"><a class=\"markdownIt-Anchor\" href=\"#2集群部署\">#</a> 2. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群。</p>\n<h2 id=\"22设置网络\"><a class=\"markdownIt-Anchor\" href=\"#22设置网络\">#</a> 2.2. 设置网络</h2>\n<p>首先，我们需要让 3 台 MQ 互相知道对方的存在。</p>\n<p>分别在 3 台机器中，设置 /etc/hosts 文件，添加如下内容：</p>\n<pre><code>192.168.150.101 mq1\n192.168.150.102 mq2\n192.168.150.103 mq3\n</code></pre>\n<p>并在每台机器上测试，是否可以 ping 通对方：</p>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        }
    ]
}