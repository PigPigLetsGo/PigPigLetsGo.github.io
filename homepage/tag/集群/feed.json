{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"集群\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-集群部署",
            "date_published": "2024-04-02T06:23:30.993Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3.8-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221138546.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">-v</span> mq-plugins:/plugins <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> rabbitmq:3.8-management</pre></td></tr></table></figure><h1 id=\"2安装delayexchange插件\"><a class=\"markdownIt-Anchor\" href=\"#2安装delayexchange插件\">#</a> 2. 安装 DelayExchange 插件</h1>\n<p>我们要使用的是延迟队列但是名字却是延迟交换机，为什么叫这个名字呢简单说下它的原理：</p>\n<p>我们在使用这个插件的时候它不是基于队列去做的而是交换机。我们发消息到交换机，而交换机会帮你延迟的投递到队列里</p>\n<p>官方的安装指南地址为：<a href=\"https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq\">https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq</a></p>\n<p>上述文档是基于 linux 原生安装 RabbitMQ，然后安装插件。</p>\n<p>因为我们之前是基于 Docker 安装 RabbitMQ，所以下面我们会讲解基于 Docker 来安装 RabbitMQ 插件。</p>\n<h2 id=\"21下载插件\"><a class=\"markdownIt-Anchor\" href=\"#21下载插件\">#</a> 2.1. 下载插件</h2>\n<p>RabbitMQ 有一个官方的插件社区，地址为：<a href=\"https://www.rabbitmq.com/community-plugins.html\">https://www.rabbitmq.com/community-plugins.html</a></p>\n<p>其中包含各种各样的插件，包括我们要使用的 DelayExchange 插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139975.png\" alt=\"image-20210713104511055\"></p>\n<p>大家可以去对应的 GitHub 页面下载 3.8.9 版本的插件，地址为 https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9 这个对应 RabbitMQ 的 3.8.5 以上版本。</p>\n<p>课前资料也提供了下载好的插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139733.png\" alt=\"image-20210713104808909\"></p>\n<h2 id=\"22上传插件\"><a class=\"markdownIt-Anchor\" href=\"#22上传插件\">#</a> 2.2. 上传插件</h2>\n<p>因为我们是基于 Docker 安装，所以需要先查看 RabbitMQ 的插件目录对应的数据卷。如果不是基于 Docker 的同学，请参考第一章部分，重新创建 Docker 容器。</p>\n<p>我们之前设定的 RabbitMQ 的数据卷名称为 <code>mq-plugins</code> ，所以我们使用下面命令查看数据卷：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume inspect mq-plugins</pre></td></tr></table></figure><p>可以得到下面结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139695.png\" alt=\"image-20210713105135701\"></p>\n<p>接下来，将插件上传到这个目录即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139638.png\" alt=\"image-20210713105339785\"></p>\n<h2 id=\"23安装插件\"><a class=\"markdownIt-Anchor\" href=\"#23安装插件\">#</a> 2.3. 安装插件</h2>\n<p>最后就是安装了，需要进入 MQ 容器内部来执行安装。我的容器名为 <code>mq</code> ，所以执行下面命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行时，请将其中的  <code>-it</code>  后面的 <code>mq</code>  替换为你自己的容器名.</p>\n<p>进入容器内部后，执行下面命令开启插件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_delayed_message_exchange</pre></td></tr></table></figure><p>结果如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139444.png\" alt=\"image-20210713105829435\"></p>\n<p>访问 mq 前端声明一个交换机进行测试：</p>\n<p>DelayExchange 插件的原理是对官方原生的 Exchange 做了功能的升级：</p>\n<p>1、将 DelayExchange 接受的消息暂存在内存中 (官方的 Exchange 是无法存储消息的)</p>\n<p>2、在 DelayExchange 中计时，超时后才投递消息到队列中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221553081.png\" alt=\"image-20231022155351657\"></p>\n<p>发送这个消息的时候延迟多久需要在发送消息的时候设置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221557138.png\" alt=\"image-20231022155755822\"></p>\n<h1 id=\"3集群部署\"><a class=\"markdownIt-Anchor\" href=\"#3集群部署\">#</a> 3. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群，我们的计划部署 3 节点的 mq 集群：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>控制台端口</th>\n<th>amqp 通信端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mq1</td>\n<td>8081 —&gt; 15672</td>\n<td>8071 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq2</td>\n<td>8082 —&gt; 15672</td>\n<td>8072 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq3</td>\n<td>8083 —&gt; 15672</td>\n<td>8073  —&gt; 5672</td>\n</tr>\n</tbody>\n</table>\n<p>集群中的节点标示默认都是： <code>rabbit@[hostname]</code> ，因此以上三个节点的名称分别为：</p>\n<ul>\n<li>rabbit@mq1</li>\n<li>rabbit@mq2</li>\n<li>rabbit@mq3</li>\n</ul>\n<h2 id=\"22获取cookie\"><a class=\"markdownIt-Anchor\" href=\"#22获取cookie\">#</a> 2.2. 获取 cookie</h2>\n<p>RabbitMQ 底层依赖于 Erlang，而 Erlang 虚拟机就是一个面向分布式的语言，默认就支持集群模式。集群模式中的每个 RabbitMQ 节点使用 cookie 来确定它们是否被允许相互通信。</p>\n<p>要使两个节点能够通信，它们必须具有相同的共享秘密，称为<strong> Erlang cookie</strong>。cookie 只是一串最多 255 个字符的字母数字字符。</p>\n<p>每个集群节点必须具有<strong>相同的 cookie</strong>。实例之间也需要它来相互通信。</p>\n<p>我们先在之前启动的 mq 容器中获取一个 cookie 值，作为集群的 cookie。执行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">cat</span> /var/lib/rabbitmq/.erlang.cookie</pre></td></tr></table></figure><p>可以看到 cookie 值如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DVNQQPDKLNCMEPRBYEHX</pre></td></tr></table></figure><p>接下来，停止并删除当前的 mq 容器，我们重新搭建集群。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> mq</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139218.png\" alt=\"image-20210717212345165\"></p>\n<h2 id=\"23准备集群配置\"><a class=\"markdownIt-Anchor\" href=\"#23准备集群配置\">#</a> 2.3. 准备集群配置</h2>\n<p>在 /tmp 目录新建一个配置文件 rabbitmq.conf：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> rabbitmq.conf</pre></td></tr></table></figure><p>文件内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loopback_users.guest = false</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listeners.tcp.default = 5672</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cluster_formation.classic_config.nodes.1 = rabbit@mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster_formation.classic_config.nodes.2 = rabbit@mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cluster_formation.classic_config.nodes.3 = rabbit@mq3</pre></td></tr></table></figure><p>再创建一个文件，记录 cookie</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建 cookie 文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> .erlang.cookie</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 写入 cookie</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"FXZMCVGLBIXZCDEMMVZQ\"</span> <span class=\"token operator\">></span> .erlang.cookie</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 修改 cookie 文件的权限</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> .erlang.cookie</pre></td></tr></table></figure><p>准备三个目录，mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> mq1 mq2 mq3</pre></td></tr></table></figure><p>然后拷贝 rabbitmq.conf、cookie 文件到 mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq3</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq3</pre></td></tr></table></figure><h2 id=\"24启动集群\"><a class=\"markdownIt-Anchor\" href=\"#24启动集群\">#</a> 2.4. 启动集群</h2>\n<p>创建一个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create mq-net</pre></td></tr></table></figure><p>运行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq1/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8071</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq2/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8072</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8082</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq3/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8073</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><h2 id=\"25测试\"><a class=\"markdownIt-Anchor\" href=\"#25测试\">#</a> 2.5. 测试</h2>\n<p>在 mq1 这个节点上添加一个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139410.png\" alt=\"image-20210717222833196\"></p>\n<p>如图，在 mq2 和 mq3 两个控制台也都能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139214.png\" alt=\"image-20210717223057902\"></p>\n<h3 id=\"251数据共享测试\"><a class=\"markdownIt-Anchor\" href=\"#251数据共享测试\">#</a> 2.5.1. 数据共享测试</h3>\n<p>点击这个队列，进入管理页面：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139412.png\" alt=\"image-20210717223421750\"></p>\n<p>然后利用控制台发送一条消息到这个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140585.png\" alt=\"image-20210717223320238\"></p>\n<p>结果在 mq2、mq3 上都能看到这条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140067.png\" alt=\"image-20210717223603628\"></p>\n<h3 id=\"252可用性测试\"><a class=\"markdownIt-Anchor\" href=\"#252可用性测试\">#</a> 2.5.2. 可用性测试</h3>\n<p>我们让其中一台节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>然后登录 mq2 或 mq3 的控制台，发现 simple.queue 也不可用了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140781.png\" alt=\"image-20210717223800203\"></p>\n<p>说明数据并没有拷贝到 mq2 和 mq3。</p>\n<h1 id=\"4镜像模式\"><a class=\"markdownIt-Anchor\" href=\"#4镜像模式\">#</a> 4. 镜像模式</h1>\n<p>在刚刚的案例中，一旦创建队列的主机宕机，队列就会不可用。不具备高可用能力。如果要解决这个问题，必须使用官方提供的镜像集群方案。</p>\n<p>官方文档地址：<a href=\"https://www.rabbitmq.com/ha.html\">https://www.rabbitmq.com/ha.html</a></p>\n<h2 id=\"41镜像模式的特征\"><a class=\"markdownIt-Anchor\" href=\"#41镜像模式的特征\">#</a> 4.1. 镜像模式的特征</h2>\n<p>默认情况下，队列只保存在创建该队列的节点上。而镜像模式下，创建队列的节点被称为该队列的<strong>主节点</strong>，队列还会拷贝到集群中的其它节点，也叫做该队列的<strong>镜像</strong>节点。</p>\n<p>但是，不同队列可以在集群中的任意节点上创建，因此不同队列的主节点可以不同。甚至，<strong>一个队列的主节点可能是另一个队列的镜像节点</strong>。</p>\n<p>用户发送给队列的一切请求，例如发送消息、消息回执默认都会在主节点完成，如果是从节点接收到请求，也会路由到主节点去完成。<strong>镜像节点仅仅起到备份数据作用</strong>。</p>\n<p>当主节点接收到消费者的 ACK 时，所有镜像都会删除节点中的数据。</p>\n<p>总结如下：</p>\n<ul>\n<li>镜像队列结构是一主多从（从就是镜像）</li>\n<li>所有操作都是主节点完成，然后同步给镜像节点</li>\n<li>主宕机后，镜像节点会替代成新的主（如果在主从同步完成前，主就已经宕机，可能出现数据丢失）</li>\n<li>不具备负载均衡功能，因为所有操作都会有主节点完成（但是不同队列，其主节点可以不同，可以利用这个提高吞吐量）</li>\n</ul>\n<h2 id=\"42镜像模式的配置\"><a class=\"markdownIt-Anchor\" href=\"#42镜像模式的配置\">#</a> 4.2. 镜像模式的配置</h2>\n<p>镜像模式的配置有 3 种模式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">ha-mode</th>\n<th style=\"text-align:left\">ha-params</th>\n<th style=\"text-align:left\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">准确模式 exactly</td>\n<td style=\"text-align:left\">队列的副本量 count</td>\n<td style=\"text-align:left\">集群中队列副本（主服务器和镜像服务器之和）的数量。count 如果为 1 意味着单个副本：即队列主节点。count 值为 2 表示 2 个副本：1 个队列主和 1 个队列镜像。换句话说：count = 镜像数量 + 1。如果群集中的节点数少于 count，则该队列将镜像到所有节点。如果有集群总数大于 count+1，并且包含镜像的节点出现故障，则将在另一个节点上创建一个新的镜像。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">(none)</td>\n<td style=\"text-align:left\">队列在群集中的所有节点之间进行镜像。队列将镜像到任何新加入的节点。镜像到所有节点将对所有群集节点施加额外的压力，包括网络 I / O，磁盘 I / O 和磁盘空间使用情况。推荐使用 exactly，设置副本数为（N / 2 +1）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nodes</td>\n<td style=\"text-align:left\"><em>node names</em></td>\n<td style=\"text-align:left\">指定队列创建到哪些节点，如果指定的节点全部不存在，则会出现异常。如果指定的节点在集群中存在，但是暂时不可用，会创建节点到当前客户端连接到的节点。</td>\n</tr>\n</tbody>\n</table>\n<p>这里我们以 rabbitmqctl 命令作为案例来讲解配置语法。</p>\n<p>语法示例：</p>\n<h3 id=\"421exactly模式\"><a class=\"markdownIt-Anchor\" href=\"#421exactly模式\">#</a> 4.2.1.exactly 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-two &quot;^two\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-two</code> ：策略名称，自定义</li>\n<li><code>&quot;^two\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>two.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;exactly&quot;</code> ：策略模式，此处是 exactly 模式，指定副本数量</li>\n<li><code>&quot;ha-params&quot;:2</code> ：策略参数，这里是 2，就是副本数量为 2，1 主 1 镜像</li>\n<li><code>&quot;ha-sync-mode&quot;:&quot;automatic&quot;</code> ：同步策略，默认是 manual，即新加入的镜像节点不会同步旧的消息。如果设置为 automatic，则新加入的镜像节点会把主节点中所有消息都同步，会带来额外的网络开销</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"422all模式\"><a class=\"markdownIt-Anchor\" href=\"#422all模式\">#</a> 4.2.2.all 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-all &quot;^all\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>ha-all</code> ：策略名称，自定义</li>\n<li><code>&quot;^all\\.&quot;</code> ：匹配所有以 <code>all.</code>  开头的队列名</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'</code> ：策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;all&quot;</code> ：策略模式，此处是 all 模式，即所有节点都会称为镜像节点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"423nodes模式\"><a class=\"markdownIt-Anchor\" href=\"#423nodes模式\">#</a> 4.2.3.nodes 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-nodes &quot;^nodes\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-nodes</code> ：策略名称，自定义</li>\n<li><code>&quot;^nodes\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>nodes.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;nodes&quot;</code> ：策略模式，此处是 nodes 模式</li>\n<li><code>&quot;ha-params&quot;:[&quot;rabbit@mq1&quot;, &quot;rabbit@mq2&quot;]</code> ：策略参数，这里指定副本所在节点名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"43测试\"><a class=\"markdownIt-Anchor\" href=\"#43测试\">#</a> 4.3. 测试</h2>\n<p>我们使用 exactly 模式的镜像，因为集群节点数量为 3，因此镜像数量就设置为 2.</p>\n<p>运行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 rabbitmqctl set_policy ha-two <span class=\"token string\">\"^two\\.\"</span> <span class=\"token string\">'&#123;\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"&#125;'</span></pre></td></tr></table></figure><p>下面，我们创建一个新的队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140154.png\" alt=\"image-20210717231751411\"></p>\n<p>在任意一个 mq 控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140517.png\" alt=\"image-20210717231829505\"></p>\n<h3 id=\"431测试数据共享\"><a class=\"markdownIt-Anchor\" href=\"#431测试数据共享\">#</a> 4.3.1. 测试数据共享</h3>\n<p>给 two.queue 发送一条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140429.png\" alt=\"image-20210717231958996\"></p>\n<p>然后在 mq1、mq2、mq3 的任意控制台查看消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140006.png\" alt=\"image-20210717232108584\"></p>\n<h3 id=\"432测试高可用\"><a class=\"markdownIt-Anchor\" href=\"#432测试高可用\">#</a> 4.3.2. 测试高可用</h3>\n<p>现在，我们让 two.queue 的主节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>查看集群状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140157.png\" alt=\"image-20210717232257420\"></p>\n<p>查看队列状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140733.png\" alt=\"image-20210717232322646\"></p>\n<p>发现依然是健康的！并且其主节点切换到了 rabbit@mq2 上</p>\n<h1 id=\"5仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#5仲裁队列\">#</a> 5. 仲裁队列</h1>\n<p>从 RabbitMQ 3.8 版本开始，引入了新的仲裁队列，他具备与镜像队里类似的功能，但使用更加方便。</p>\n<h2 id=\"51添加仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#51添加仲裁队列\">#</a> 5.1. 添加仲裁队列</h2>\n<p>在任意控制台添加一个队列，一定要选择队列类型为 Quorum 类型。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140068.png\" alt=\"image-20210717234329640\"></p>\n<p>在任意控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140859.png\" alt=\"image-20210717234426209\"></p>\n<p>可以看到，仲裁队列的 + 2 字样。代表这个队列有 2 个镜像节点。</p>\n<p>因为仲裁队列默认的镜像数为 5。如果你的集群有 7 个节点，那么镜像数肯定是 5；而我们集群只有 3 个节点，因此镜像数量就是 3.</p>\n<h2 id=\"52springamqp创建仲载队列\"><a class=\"markdownIt-Anchor\" href=\"#52springamqp创建仲载队列\">#</a> 5.2.SpringAMQP 创建仲载队列</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuorumConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">quorumQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"quorum.queue2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 持久化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">quorum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 仲载队列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringAMQP 链接集群，只需要在 yml 中配置即可：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8071</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8072</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8073</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># port: 5672 # 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr></table></figure><h2 id=\"53测试\"><a class=\"markdownIt-Anchor\" href=\"#53测试\">#</a> 5.3. 测试</h2>\n<p>可以参考对镜像集群的测试，效果是一样的。</p>\n<h2 id=\"53集群扩容\"><a class=\"markdownIt-Anchor\" href=\"#53集群扩容\">#</a> 5.3. 集群扩容</h2>\n<h3 id=\"531加入集群\"><a class=\"markdownIt-Anchor\" href=\"#531加入集群\">#</a> 5.3.1. 加入集群</h3>\n<p>1）启动一个新的 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq4 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq5 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8074</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8084</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><p>2）进入容器控制台：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq4 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>3）停止 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl stop_app</pre></td></tr></table></figure><p>4）重置 RabbitMQ 中的数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl reset</pre></td></tr></table></figure><p>5）加入 mq1：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl join_cluster rabbit@mq1</pre></td></tr></table></figure><p>6）再次启动 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl start_app</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140463.png\" alt=\"image-20210718001909492\"></p>\n<h3 id=\"532增加仲裁队列副本\"><a class=\"markdownIt-Anchor\" href=\"#532增加仲裁队列副本\">#</a> 5.3.2. 增加仲裁队列副本</h3>\n<p>我们先查看下 quorum.queue 这个队列目前的副本情况，进入 mq1 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140047.png\" alt=\"image-20210718002118357\"></p>\n<p>现在，我们让 mq4 也加入进来：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues add_member <span class=\"token string\">\"quorum.queue\"</span> <span class=\"token string\">\"rabbit@mq4\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140584.png\" alt=\"image-20210718002253226\"></p>\n<p>再次查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140083.png\" alt=\"image-20210718002342603\"></p>\n<p>查看控制台，发现 quorum.queue 的镜像数量也从原来的 +2 变成了 +3：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140839.png\" alt=\"image-20210718002422365\"></p>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/nacos%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/nacos%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/",
            "title": "Nacos集群搭建",
            "date_published": "2024-04-02T06:23:30.961Z",
            "content_html": "<h1 id=\"nacos集群搭建\"><a class=\"markdownIt-Anchor\" href=\"#nacos集群搭建\">#</a> Nacos 集群搭建</h1>\n<p>1. 集群结构图</p>\n<p>官方给出的 Nacos 集群图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439329.png\" alt=\"image-20210409210621117\"></p>\n<p>其中包含 3 个 nacos 节点，然后一个负载均衡器代理 3 个 Nacos。这里负载均衡器可以使用 nginx。</p>\n<p>我们计划的集群结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439932.png\" alt=\"image-20210409211355037\"></p>\n<p>三个 nacos 节点的地址：</p>\n<table>\n<thead>\n<tr>\n<th>节点</th>\n<th>ip</th>\n<th>port</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nacos1</td>\n<td>192.168.150.1</td>\n<td>8845</td>\n</tr>\n<tr>\n<td>nacos2</td>\n<td>192.168.150.1</td>\n<td>8846</td>\n</tr>\n<tr>\n<td>nacos3</td>\n<td>192.168.150.1</td>\n<td>8847</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"2搭建集群\"><a class=\"markdownIt-Anchor\" href=\"#2搭建集群\">#</a> 2. 搭建集群</h1>\n<p>搭建集群的基本步骤：</p>\n<ul>\n<li>搭建数据库，初始化数据库表结构</li>\n<li>下载 nacos 安装包</li>\n<li>配置 nacos</li>\n<li>启动 nacos 集群</li>\n<li>nginx 反向代理</li>\n</ul>\n<h2 id=\"21初始化数据库\"><a class=\"markdownIt-Anchor\" href=\"#21初始化数据库\">#</a> 2.1. 初始化数据库</h2>\n<p>Nacos 默认数据存储在内嵌数据库 Derby 中，不属于生产可用的数据库。</p>\n<p>官方推荐的最佳实践是使用带有主从的高可用数据库集群，主从模式的高可用数据库可以参考<strong>传智教育</strong>的后续高手课程。</p>\n<p>这里我们以单点的数据库为例来讲解。</p>\n<p>首先新建一个数据库，命名为 nacos，而后导入下面的 SQL：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_desc<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_use<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>effect<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_schema<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfo_datagrouptenant<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_aggr   */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_aggr<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>datum_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'datum_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfoaggr_datagrouptenantdatum<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>datum_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'增加租户字段'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_beta   */</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_beta<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>beta_ips<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'betaIps'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfobeta_datagrouptenant<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info_beta'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_tag   */</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_tag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfotag_datagrouptenanttag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info_tag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_tags_relation   */</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_tags_relation<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_type'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configtagrelation_configidtag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_type<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_tag_relation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">/*   表名称 = group_capacity   */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_capacity<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'Group ID，空字符表示整个集群'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>quota<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'配额，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>usage<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'使用量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'聚合子配置最大个数，，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_history_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'最大变更历史数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_group_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'集群、各Group容量信息表'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">/*   表名称 = his_config_info   */</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>his_config_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>op_type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_did<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'多租户改造'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token comment\">/*   表名称 = tenant_capacity   */</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_capacity<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'Tenant ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>quota<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'配额，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>usage<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'使用量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'聚合子配置最大个数'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_history_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'最大变更历史数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'租户容量信息表'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>kp<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'kp'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_desc<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_desc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_source<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'create_source'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_tenant_info_kptenantid<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>kp<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'tenant_info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>users<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>password<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>enabled<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">boolean</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>roles<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_user_role<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>permissions<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>resource<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>action<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_role_permission<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>resource<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>action<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> users <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> enabled<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'nacos'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> roles <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'nacos'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ROLE_ADMIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"22下载nacos\"><a class=\"markdownIt-Anchor\" href=\"#22下载nacos\">#</a> 2.2. 下载 nacos</h2>\n<p>nacos 在 GitHub 上有下载地址：<a href=\"https://github.com/alibaba/nacos/tags%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD%E3%80%82\">https://github.com/alibaba/nacos/tags，可以选择任意版本下载。</a></p>\n<p>本例中才用 1.4.1 版本：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439539.png\" alt=\"image-20210409212119411\"></p>\n<h2 id=\"23配置nacos\"><a class=\"markdownIt-Anchor\" href=\"#23配置nacos\">#</a> 2.3. 配置 Nacos</h2>\n<p>将这个包解压到任意非中文目录下，如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439220.png\" alt=\"image-20210402161843337\"></p>\n<p>目录说明：</p>\n<ul>\n<li>bin：启动脚本</li>\n<li>conf：配置文件</li>\n</ul>\n<p>进入 nacos 的 conf 目录，修改配置文件 cluster.conf.example，重命名为 cluster.conf：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440003.png\" alt=\"image-20210409212459292\"></p>\n<p>然后添加内容：</p>\n<p>集群中每一个节点的信息</p>\n<p>如果是在生产环境下那下面三个都应该是真实机器的 ip 地址和端口号</p>\n<pre><code>127.0.0.1:8845\n127.0.0.1.8846\n127.0.0.1.8847\n</code></pre>\n<p>然后修改 application.properties 文件，添加数据库配置</p>\n<p>将配置文件中如下的配置的注释全部去掉也就是打开</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.platform</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mysql</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">db.num</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">db.url.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">db.user.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">db.password.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439107.png\" alt=\"image-20231006143926134\"></p>\n<h2 id=\"24启动\"><a class=\"markdownIt-Anchor\" href=\"#24启动\">#</a> 2.4. 启动</h2>\n<p>将 nacos 文件夹复制三份，分别命名为：nacos1、nacos2、nacos3</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440201.png\" alt=\"image-20210409213335538\"></p>\n<p>然后分别修改三个文件夹中的 application.properties，</p>\n<p>nacos1:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8845</span></pre></td></tr></table></figure><p>nacos2:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8846</span></pre></td></tr></table></figure><p>nacos3:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8847</span></pre></td></tr></table></figure><p>然后分别启动三个 nacos 节点：</p>\n<p><font color='red'>注意</font>：此时启动不需要加参数了，直接启动即可。因为现在是集群启动 (默认)</p>\n<pre><code>startup.cmd\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061454156.png\" alt=\"image-20231006145123931\"></p>\n<p>然后依次访问一下 url 看看是否正常启动了</p>\n<p>正常启动了！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061453370.png\" alt=\"image-20231006145253400\"></p>\n<h2 id=\"25nginx反向代理\"><a class=\"markdownIt-Anchor\" href=\"#25nginx反向代理\">#</a> 2.5.nginx 反向代理</h2>\n<p>找到课前资料提供的 nginx 安装包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440828.png\" alt=\"image-20210410103253355\"></p>\n<p>解压到任意非中文目录下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440364.png\" alt=\"image-20210410103322874\"></p>\n<p>修改 conf/nginx.conf 文件，配置如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">upstream</span> nacos-cluster</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8845</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8846</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8847</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">location</span> /nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://nacos-cluster</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>完整的配置文件信息：</p>\n<pre><code>\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '\n    #                  '$status $body_bytes_sent &quot;$http_referer&quot; '\n    #                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server &#123;\n        listen       88;\n        server_name  localhost;\n\n        location / &#123;\n            root   html;\n            index  index.html index.htm;\n        &#125;\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n\tupstream nacos-cluster &#123;\n    \t\tserver 127.0.0.1:8845;\n\t\tserver 127.0.0.1:8846;\n\t\tserver 127.0.0.1:8847;\n\t&#125;\n\n\tserver &#123;\n    \t\tlisten       80;\n    \t\tserver_name  localhost;\n\n    \t\tlocation /nacos &#123;\n        \t\tproxy_pass http://nacos-cluster;\n    \t\t&#125;\n\t&#125;\n&#125;\n</code></pre>\n<p>配置完成后启动 nginx，执行命令：start nginx.exe</p>\n<p>访问：<a href=\"http://localhost:88/%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE\">http://localhost:88 / 查看是否能正常访问</a></p>\n<p>nginx 启动成功！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061521543.png\" alt=\"image-20231006152139209\"></p>\n<p>而后在浏览器访问：<a href=\"http://localhost/nacos%E5%8D%B3%E5%8F%AF%E3%80%82\">http://localhost/nacos 即可。</a></p>\n<p>到这儿！集群搭建就成功了。看着像是访问的一个 nacos，事实上它会在三个 nacos 之间做一个负载均衡</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061522455.png\" alt=\"image-20231006152205310\"></p>\n<p>问题来了，java 代码该如何配呢，在 java 的 yml 配置文件中将 nacos 的服务地址改为对应的端口也就是 80 端口</p>\n<p>代码中 bootstrap.yml 文件配置如下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token comment\"># nacos 地址，这里找的是 nginx 反向代理的地址它会根据负载均衡来启动 nacos</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 配置文件后缀名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 三要素：服务名称，环境，后缀名 而这三个决定了 DateId</span></pre></td></tr></table></figure><p>启动 user-service 服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061528874.png\" alt=\"image-20231006152811433\"></p>\n<p>我们查看 nacos 控制台中的服务列表。</p>\n<p>可以看到成功的注册进来了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061528168.png\" alt=\"image-20231006152847028\"></p>\n<p>我们创建一个配置文件，点击发布</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061544827.png\" alt=\"image-20231006154304156\"></p>\n<p>发布后查看数据库中的 config_info 表里面的信息，就可以看到多了一条信息就是创建的环境配置文件的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061545446.png\" alt=\"image-20231006154339296\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>集群搭建步骤：</p>\n<ol>\n<li>搭建 MySQL 集群并初始化数据库表</li>\n<li>下载解压 nacos</li>\n<li>修改集群配置 (节点信息)，数据库配置</li>\n<li>分别启动多个 nacos 节点</li>\n<li>nginx 反向代理</li>\n</ol>\n</blockquote>\n<h2 id=\"26优化\"><a class=\"markdownIt-Anchor\" href=\"#26优化\">#</a> 2.6. 优化</h2>\n<ul>\n<li>\n<p>实际部署时，需要给做反向代理的 nginx 服务器设置一个域名，这样后续如果有服务器迁移 nacos 的客户端也无需更改配置.</p>\n</li>\n<li>\n<p>Nacos 的各个节点应该部署到多个不同服务器，做好容灾和隔离</p>\n</li>\n</ul>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/",
            "title": "redis-分片集群",
            "date_published": "2024-04-02T06:23:30.150Z",
            "content_html": "<h1 id=\"一-redis分片集群\"><a class=\"markdownIt-Anchor\" href=\"#一-redis分片集群\">#</a> 一、Redis 分片集群🎄</h1>\n<ul>\n<li>搭建分片集群</li>\n<li>散列插槽</li>\n<li>集群伸缩</li>\n<li>故障转移</li>\n<li>RedisTemplate 访问分片集群</li>\n</ul>\n<h2 id=\"11-分片集群结构\"><a class=\"markdownIt-Anchor\" href=\"#11-分片集群结构\">#</a> 1.1、分片集群结构</h2>\n<p>主从和哨兵可以解决高可用，高并发读的问题。但是依然有两个问题没有解决：</p>\n<p>1、海量数据存储问题</p>\n<p>2、高并发写的问题</p>\n<p>使用分片集群可以解决上述问题，分片集群特征：</p>\n<p>1、集群中有多个 master，每个 master 保存不同数据</p>\n<p>2、每个 master 都可以有多个 slave 节点</p>\n<p>3、master 之间通过 ping 监测彼此健康状态</p>\n<p>4、客户端请求可以访问集群任意节点，最终都会被转发到正确节点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191007730.png\" alt=\"image-20231019100741294\"></p>\n<h1 id=\"二-搭建分片集群\"><a class=\"markdownIt-Anchor\" href=\"#二-搭建分片集群\">#</a> 二、搭建分片集群🎄</h1>\n<h2 id=\"41集群结构\"><a class=\"markdownIt-Anchor\" href=\"#41集群结构\">#</a> 4.1. 集群结构</h2>\n<p>分片集群需要的节点数量较多，这里我们搭建一个最小的分片集群，包含 3 个 master 节点，每个 master 包含一个 slave 节点，结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017055.png\" alt=\"image-20210702164116027\"></p>\n<p>这里我们会在同一台虚拟机中开启 6 个 redis 实例，模拟分片集群，信息如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">PORT</th>\n<th style=\"text-align:center\">角色</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7001</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7002</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7003</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8001</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8002</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8003</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"42准备实例和配置\"><a class=\"markdownIt-Anchor\" href=\"#42准备实例和配置\">#</a> 4.2. 准备实例和配置</h2>\n<p>删除之前的 7001、7002、7003 这几个目录，重新创建出 7001、7002、7003、8001、8002、8003 目录：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 删除旧的，避免配置干扰</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span></pre></td></tr></table></figure><p>在 /tmp 下准备一个新的 redis.conf 文件，内容如下：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>port 6379</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 开启集群功能</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster-enabled yes</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 集群的配置文件名称，不需要我们创建，由 redis 自己维护</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster-config-file /tmp/6379/nodes.conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 节点心跳失败的超时时间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cluster-node-timeout 5000</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 持久化文件存放目录</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dir /tmp/6379</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 绑定地址</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>bind 0.0.0.0</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 让 redis 后台运行</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>daemonize yes</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 注册的实例 ip</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>replica-announce-ip 192.168.150.101</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 保护模式</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>protected-mode no</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 数据库数量</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>databases 1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 日志</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>logfile /tmp/6379/run.log</pre></td></tr></table></figure><p>将这个文件拷贝到每个目录下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 执行拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> <span class=\"token function\">cp</span> redis.conf</pre></td></tr></table></figure><p>修改每个目录下的 redis.conf，将其中的 6379 修改为与所在目录一致：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 修改配置文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/6379/&#123;&#125;/g'</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>/redis.conf</pre></td></tr></table></figure><h2 id=\"43启动\"><a class=\"markdownIt-Anchor\" href=\"#43启动\">#</a> 4.3. 启动</h2>\n<p>因为已经配置了后台启动模式，所以可以直接启动服务：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 一键启动所有服务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> redis-server <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>/redis.conf</pre></td></tr></table></figure><p>通过 ps 查看状态：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> redis</pre></td></tr></table></figure><p>发现服务都已经正常启动：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017466.png\" alt=\"image-20231019101756517\"></p>\n<p>如果要关闭所有进程，可以执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> redis <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">kill</span></pre></td></tr></table></figure><p>或者（推荐这种方式）：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token function\">shutdown</span></pre></td></tr></table></figure><h2 id=\"44创建集群\"><a class=\"markdownIt-Anchor\" href=\"#44创建集群\">#</a> 4.4. 创建集群</h2>\n<p>虽然服务启动了，但是目前每个服务之间都是独立的，没有任何关联。</p>\n<p>我们需要执行命令来创建集群，在 Redis5.0 之前创建集群比较麻烦，5.0 之后集群管理命令都集成到了 redis-cli 中。</p>\n<p>1）Redis5.0 之前</p>\n<p>Redis5.0 之前集群命令都是用 redis 安装包下的 src/redis-trib.rb 来实现的。因为 redis-trib.rb 是有 ruby 语言编写的所以需要安装 ruby 环境。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装依赖</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> zlib ruby rubygems</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gem <span class=\"token function\">install</span> redis</pre></td></tr></table></figure><p>然后通过命令来管理集群：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 redis 的 src 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp/redis-6.2.4/src</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 创建集群</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./redis-trib.rb create <span class=\"token parameter variable\">--replicas</span> <span class=\"token number\">1</span> <span class=\"token number\">192.168</span>.150.101:7001 <span class=\"token number\">192.168</span>.150.101:7002 <span class=\"token number\">192.168</span>.150.101:7003 <span class=\"token number\">192.168</span>.150.101:8001 <span class=\"token number\">192.168</span>.150.101:8002 <span class=\"token number\">192.168</span>.150.101:8003</pre></td></tr></table></figure><p>2）Redis5.0 以后</p>\n<p>我们使用的是 Redis6.2.4 版本，集群管理以及集成到了 redis-cli 中，格式如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">--cluster</span> create --cluster-replicas <span class=\"token number\">1</span> <span class=\"token number\">192.168</span>.249.128:6379 <span class=\"token number\">192.168</span>.249.128:6380 <span class=\"token number\">192.168</span>.249.128:6381 <span class=\"token number\">192.168</span>.249.128:6382 <span class=\"token number\">192.168</span>.249.128:6383 <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr></table></figure><p>命令说明：</p>\n<ul>\n<li><code>redis-cli --cluster</code>  或者 <code>./redis-trib.rb</code> ：代表集群操作命令</li>\n<li><code>create</code> ：代表是创建集群</li>\n<li><code>--replicas 1</code>  或者 <code>--cluster-replicas 1</code>  ：指定集群中每个 master 的副本个数为 1，此时 <code>节点总数 ÷ (replicas + 1)</code>  得到的就是 master 的数量。因此节点列表中的前 n 个就是 master，其它节点都是 slave 节点，随机分配到不同 master</li>\n</ul>\n<p>运行后的样子：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017247.png\" alt=\"image-20210702181101969\"></p>\n<p>这里输入 yes，则集群开始创建：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018254.png\" alt=\"image-20210702181215705\"></p>\n<pre><code>[ERR] Not all 16384 slots are covered by nodes.\n</code></pre>\n<p>如果出现上述错误则使用如下命令进行修复：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">--cluster</span> fix <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191131144.png\" alt=\"image-20231019113101085\"></p>\n<p>通过命令可以查看集群状态：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span> cluster nodes</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018613.png\" alt=\"image-20210702181922809\"></p>\n<h2 id=\"45测试\"><a class=\"markdownIt-Anchor\" href=\"#45测试\">#</a> 4.5. 测试</h2>\n<p>尝试连接 7001 节点，存储一个数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 存储数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>get num</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 再次存储</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">set</span> a <span class=\"token number\">1</span></pre></td></tr></table></figure><p>结果悲剧了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018645.png\" alt=\"image-20210702182343979\"></p>\n<p>集群操作时，需要给 <code>redis-cli</code>  加上 <code>-c</code>  参数才可以：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-c</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span></pre></td></tr></table></figure><p>这次可以了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018478.png\" alt=\"image-20210702182602145\"></p>\n<p>其中的 一段多余的信息是，重定向数据到 15495 插槽中了。这个插槽是根据 a 这个变量来计算的</p>\n<h1 id=\"三-散列插槽\"><a class=\"markdownIt-Anchor\" href=\"#三-散列插槽\">#</a> 三、散列插槽🎄</h1>\n<p>Redis 会把每一个 master 节点映射到 0 ~ 16383 共 16384 个插槽 (hash slot) 上，查看集群信息时就能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191135050.png\" alt=\"image-20231019113551981\"></p>\n<p>数据 key 不是与节点绑定，而是与插槽绑定。Redis 会根据 key 的有效部分计算插槽值，分两种情况：</p>\n<p>1、key 中包含 “{}” 且 “{}” 中至少包含 1 个字符，“{}” 中的部分是有效部分</p>\n<p>2、key 中不包含 “{}” ，整个 key 都是有效部分</p>\n<p>例如：key 是 num，那么就根据 num 计算，如果是 {itcast} num，则根据 itcast 计算。计算方式是利用 CRC16 算法得到一个 hash 值，然后对 16384 取余，得到的结果就是 slot 值。</p>\n<blockquote>\n<p>为什么 key 要去跟插槽绑定，而不是跟节点绑定？</p>\n<p>因为 redis 主节点可能出现宕机的情况或者是集群扩容增加了节点再或者是删除节点。</p>\n<p>如果一个节点删除或者宕机了那么它上面的数据跟着丢了，而如果数据是跟插槽绑定的，当节点宕机时，我们可以将这个节点对应的插槽转移到活着的节点上。集群扩容时我们也可以将插槽进行转移。</p>\n<p>这样数据跟着插槽走，永远都能够找到数据所在位置，这就是数据跟插槽绑定的原因了。</p>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Redis 如何判断某个 kkey 应该在哪个实例？</p>\n<ul>\n<li>将 16384 个插槽分配到不同的实例</li>\n<li>根据 key 的有效部分计算哈希值，对 16384 取余</li>\n<li>余数作为插槽，寻找插槽所在实例即可</li>\n</ul>\n<p><strong>问题</strong>：</p>\n<p>如何将同一类数据固定的保存在同一个 Redis 实例？</p>\n<ul>\n<li>\n<p>这一类数据使用相同的有效部分，例如 key 都以 {typeId} 为前缀</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> a <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">15495</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span> <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span>num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span> <span class=\"token builtin class-name\">set</span> num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">2765</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span>num <span class=\"token number\">456</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">15495</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span></pre></td></tr></table></figure></li>\n</ul>\n</blockquote>\n<h1 id=\"四集群伸缩\"><a class=\"markdownIt-Anchor\" href=\"#四集群伸缩\">#</a> 四，集群伸缩🎄</h1>\n<h2 id=\"41-添加一个节点到集群\"><a class=\"markdownIt-Anchor\" href=\"#41-添加一个节点到集群\">#</a> 4.1、添加一个节点到集群🌳</h2>\n<p><code>redis-cli --cluster</code>  提供了很多操作集群的命令，可以通过下面方式查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Cluster Manager Commands:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  create         host1:port1 <span class=\"token punctuation\">..</span>. hostN:portN</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                 --cluster-replicas <span class=\"token operator\">&lt;</span>arg<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  check          host:port</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                 --cluster-search-multiple-owners</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  info           host:port</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  fix            host:port</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                 --cluster-search-multiple-owners</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                 --cluster-fix-with-unreachable-masters</pre></td></tr></table></figure><p>比如，添加节点命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add-node       new_host:new_port existing_host:existing_port</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                 --cluster-slave</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                 --cluster-master-id <span class=\"token operator\">&lt;</span>arg<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"411-案例向集群中添加一个小新的master节点并向其中存储num-10\"><a class=\"markdownIt-Anchor\" href=\"#411-案例向集群中添加一个小新的master节点并向其中存储num-10\">#</a> 4.1.1、案例，向集群中添加一个小新的 master 节点，并向其中存储 num = 10</h3>\n<p><strong>需求</strong>：</p>\n<p>1、启动一个新的 redis 实例，端口为 7004</p>\n<p>2、添加 7004 到之前的集群，并作为一个 master 节点</p>\n<p>3、给 7004 节点分配插槽，使得 num 这个 key 可以存储到 7004 实例</p>\n<p>步骤：</p>\n<p>1、创建新 redis 实例的配置文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp configs/6379.conf configs/7004.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls configs/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">6379</span>.conf  <span class=\"token number\">6380</span>.conf  <span class=\"token number\">6381</span>.conf  <span class=\"token number\">6382</span>.conf  <span class=\"token number\">6383</span>.conf  <span class=\"token number\">6384</span>.conf  <span class=\"token number\">7004</span>.conf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、将 7004.conf 配置文件中的所有端口号改为 7004</p>\n<pre><code class=\"language-sh·\">[root@localhost bin]# sed -i s/6379/7004/g configs/7004.conf\n</code></pre>\n<p>2.1、查看修改情况</p>\n<pre><code># Accept connections on the specified port, default is 7004 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 7004\n</code></pre>\n<p>3、运行这个 redis 实例</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim configs/7004.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-server configs/7004.conf</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ps -ef | grep redis | grep -v grep</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root      <span class=\"token number\">51922</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:19 redis-server *:6379 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>root      <span class=\"token number\">51964</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:18 redis-server *:6380 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>root      <span class=\"token number\">51983</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:23 redis-server *:6381 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>root      <span class=\"token number\">52001</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:17 redis-server *:6382 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>root      <span class=\"token number\">52025</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:23 redis-server *:6383 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>root      <span class=\"token number\">52043</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:17 redis-server *:6384 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>root     <span class=\"token number\">116920</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> 01:41 ?        00:00:00 redis-server *:7004 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、将 7004 这个新 redis 实例添加成为集群中的一个节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster add-node 192.168.249.128:7004 192.168.249.128:6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Adding <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:7004 to cluster <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Performing Cluster Check <span class=\"token punctuation\">(</span>using <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:6379<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>S: 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>S: 25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   replicates 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>S: c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   replicates 74ea48fd9c233b0e4c46f52d00535f040917be36</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>M: 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>S: 34d086276e2a3790b72503c5d877a2d2b26020ff <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All nodes agree about slots configuration.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check <span class=\"token keyword\">for</span> <span class=\"token function\">open</span> slots<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check slots coverage<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All <span class=\"token number\">16384</span> slots covered.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Send CLUSTER MEET to <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:7004 to <span class=\"token function\">make</span> it <span class=\"token function\">join</span> the cluster.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> New <span class=\"token function\">node</span> added correctly.</pre></td></tr></table></figure><p>7004 成功的加入到了集群当中了</p>\n<p>5、将插槽重新分片</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster reshard 192.168.249.128:6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Performing Cluster Check <span class=\"token punctuation\">(</span>using <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:6379<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>S: 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>S: 25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   replicates 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>S: c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   replicates 74ea48fd9c233b0e4c46f52d00535f040917be36</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>M: 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> master</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>M: 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">2</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>S: 34d086276e2a3790b72503c5d877a2d2b26020ff <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All nodes agree about slots configuration.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check <span class=\"token keyword\">for</span> <span class=\"token function\">open</span> slots<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check slots coverage<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All <span class=\"token number\">16384</span> slots covered.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 移动插槽的数量</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>How many slots <span class=\"token keyword\">do</span> you want to move <span class=\"token punctuation\">(</span>from <span class=\"token number\">1</span> to <span class=\"token number\">16384</span><span class=\"token punctuation\">)</span>? <span class=\"token number\">3000</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 接收插槽数据的 id</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>What is the receiving <span class=\"token function\">node</span> ID? 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Please enter all the <span class=\"token builtin class-name\">source</span> <span class=\"token function\">node</span> IDs.</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  Type <span class=\"token string\">'all'</span> to use all the nodes as <span class=\"token builtin class-name\">source</span> nodes <span class=\"token keyword\">for</span> the <span class=\"token builtin class-name\">hash</span> slots.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  Type <span class=\"token string\">'done'</span> once you entered all the <span class=\"token builtin class-name\">source</span> nodes IDs.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token comment\"># 发送插槽数据的 id</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Source <span class=\"token function\">node</span> <span class=\"token comment\">#1: 8cae694bd787bad63ab9dab15f397c34131f2a12</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 完成！</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>Source <span class=\"token function\">node</span> <span class=\"token comment\">#2: done</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Ready to move <span class=\"token number\">3000</span> slots.</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  Source nodes:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  Destination node:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    M: 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>       slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> master</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  Resharding plan:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Moving slot <span class=\"token number\">0</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Moving slot <span class=\"token number\">1</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\tMoving slot <span class=\"token number\">5217</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Moving slot <span class=\"token number\">5218</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Do you want to proceed with the proposed reshard plan <span class=\"token punctuation\">(</span>yes/no<span class=\"token punctuation\">)</span>? <span class=\"token function\">yes</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Moving slot <span class=\"token number\">0</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Moving slot <span class=\"token number\">1</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Moving slot <span class=\"token number\">2</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>通过 get num 看出 它自动切换到了 6381 集群节点去了，set num 这时 num 就已经存在 7004 这个集群节点上了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli -c -p 7004</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:700<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>></span> <span class=\"token function\">ping</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PONG</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:700<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>></span> get num</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">2765</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token builtin class-name\">set</span> num <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span></pre></td></tr></table></figure><p>这就是说数据是跟着插槽走的</p>\n<h1 id=\"五故障转移\"><a class=\"markdownIt-Anchor\" href=\"#五故障转移\">#</a> 五，故障转移🎄</h1>\n<p>当集群中有一个 master 宕机会发生什么呢？</p>\n<pre><code class=\"language-sh·\">[root@localhost bin]# redis-cli -p 6380 shutdown\n[root@localhost bin]#\n</code></pre>\n<p>可以看到 6380 节点被停止后 7004 变成了主节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379@16379 myself,slave 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">0</span> <span class=\"token number\">1697697326000</span> <span class=\"token number\">10</span> connected</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380@16380 slave,fail 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">1697697296140</span> <span class=\"token number\">1697697292000</span> <span class=\"token number\">9</span> disconnected</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382@16382 slave 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">0</span> <span class=\"token number\">1697697327000</span> <span class=\"token number\">1</span> connected</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004@17004 master - <span class=\"token number\">0</span> <span class=\"token number\">1697697326309</span> <span class=\"token number\">11</span> connected</pre></td></tr></table></figure><p>当它回来的时候就是 slave 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191437449.png\" alt=\"image-20231019143739426\"></p>\n<p>由此可以看出我们不需要哨兵，Redis 自动具备主从的故障切换</p>\n<p>这是自动的故障转移，有一个机器意外宕机了需要选出一个主。</p>\n<p>但是有的时候我们需要手动故障转移。比如说：机器升级</p>\n<h2 id=\"51-手动故障转移\"><a class=\"markdownIt-Anchor\" href=\"#51-手动故障转移\">#</a> 5.1、手动故障转移🌳</h2>\n<p>利用 cluster failover 命令可以手动让集群中的某个 master 宕机，切换到 cluster failover 命令的这个 slave 节点，实现无感知的数据迁移。其流程如下：</p>\n<p>手动的 Failover 支持三种不同模式：</p>\n<p>1、缺省：默认的流程，如图 1 ~ 6 步</p>\n<p>2、force：省略了对 offset 的一致性校验</p>\n<p>3、takeover：直接执行第 5 步，忽略数据一致性，忽略 master 状态和其它 master 的意见</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191444531.png\" alt=\"image-20231019144410200\"></p>\n<h2 id=\"52-案例在6380这个slave节点执行手动故障转移重新夺回master地位\"><a class=\"markdownIt-Anchor\" href=\"#52-案例在6380这个slave节点执行手动故障转移重新夺回master地位\">#</a> 5.2、案例，在 6380 这个 slave 节点执行手动故障转移，重新夺回 master 地位🌳</h2>\n<p>步骤如下：</p>\n<p>1、利用 redis-cli 连接 6380 这个节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli -p 6380</span></pre></td></tr></table></figure><p>2、执行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> cluster failover</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>完成</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380@16380 master - <span class=\"token number\">0</span> <span class=\"token number\">1697698095838</span> <span class=\"token number\">12</span> connected</pre></td></tr></table></figure><h1 id=\"六redistemplate访问分配集群\"><a class=\"markdownIt-Anchor\" href=\"#六redistemplate访问分配集群\">#</a> 六，RedisTemplate 访问分配集群🎄</h1>\n<p>RedisTempalte 底层同样基于 lettuce 实现了分片集群的支持，而使用的步骤与哨兵模式基本一致：</p>\n<p>1、引入 redis 的 starter 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、配置分片集群地址</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">nodes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 指定分配集群的每一个节点信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6380</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6381</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6382</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6383</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6384</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">7004</span></pre></td></tr></table></figure><p>3、配置读写分离</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">LettuceClientConfigurationBuilderCustomizer</span> <span class=\"token function\">configurationBuilderCustomizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> clientConfigurationBuilder <span class=\"token operator\">-></span> clientConfigurationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">readFrom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReadFrom</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REPLICA_PREFERRED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>与哨兵模式相比，其中只有分片集群的配置方式略有差异，如下：</p>\n<p>测试获取数据</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>channel<span class=\"token operator\">=</span>0x1291f995, /192.168.249.1:6999 -<span class=\"token operator\">></span> /192.168.249.128:6379, <span class=\"token assign-left variable\">chid</span><span class=\"token operator\">=</span>0x9<span class=\"token punctuation\">]</span> Stack contains: <span class=\"token number\">1</span> commands</pre></td></tr></table></figure><p>测试设置数据</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>channel<span class=\"token operator\">=</span>0xff704bc2, /192.168.249.1:7000 -<span class=\"token operator\">></span> /192.168.249.128:6381, <span class=\"token assign-left variable\">chid</span><span class=\"token operator\">=</span>0xa<span class=\"token punctuation\">]</span> Stack contains: <span class=\"token number\">1</span> commands</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "database",
                "redis",
                "集群"
            ]
        }
    ]
}