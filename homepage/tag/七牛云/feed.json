{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"七牛云\" tag",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%B8%83%E7%89%9B%E4%BA%91/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%B8%83%E7%89%9B%E4%BA%91/",
            "title": "七牛云基本使用",
            "date_published": "2024-04-02T06:23:31.568Z",
            "content_html": "<h1 id=\"一-七牛云\"><a class=\"markdownIt-Anchor\" href=\"#一-七牛云\">#</a> 一、七牛云</h1>\n<p>到七牛云的官网网站进行注册账号并登录，然后先绑定邮箱才能进行实名认证</p>\n<p>下面我们去获取一下 access_key 和 secret_key 还有 url 后面操作需要</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322191501201.png\" alt=\"image-20240322191501201\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322191519463.png\" alt=\"image-20240322191519463\"></p>\n<p>access_key 我们可以直接看到并且 复制，但是 secret_key 我们看不到而却也并不能直接复制，我们需要点击输入框右边的眼睛进行验证码的验证才能看到这里就不展示了。</p>\n<p>进行下面的操作</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322191730551.png\" alt=\"image-20240322191730551\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322191805639.png\" alt=\"image-20240322191805639\"></p>\n<p>创建一个空间，选择图片中红色箭头指向的地方</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322191908886.png\" alt=\"image-20240322191908886\"></p>\n<p>创建好空间后就可以获取我们上面说到的 url 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322192112178.png\" alt=\"image-20240322192112178\"></p>\n<p>我们成功获取了重要的三个参数：</p>\n<pre><code>access_key: Zc1ktIEYgIhsY-MuNAT5W=\nsecret_key: Zc1ktIejiscnsY-MuasdasdT5Wwdsdxxx\nurl: saqvg00o7.hb-bkt.clouddn.com\n</code></pre>\n<p>下面是对七牛云的一些介绍：</p>\n<p>计费方面：开通七牛云对象存储服务的实名认证用户，每月可享受一定量的标准存储免费存储空间，限制 10GB 空间</p>\n<h2 id=\"七牛云的响应状态码表\"><a class=\"markdownIt-Anchor\" href=\"#七牛云的响应状态码表\">#</a> 七牛云的响应状态码表</h2>\n<p><a href=\"http://78re52.com0.z0.glb.qiniucdn.com/docs/v6/api/reference/codes.html\">http://78re52.com0.z0.glb.qiniucdn.com/docs/v6/api/reference/codes.html</a></p>\n<p><strong>七牛云的优点</strong></p>\n<ol>\n<li>支持各种尺寸的图片缩放；</li>\n<li>支持图片自动压缩；</li>\n<li>支持水印添加：图片水印、文字水印两种模式；</li>\n<li>图片防盗链，限制访问来源；</li>\n<li>设置 ip 黑白名单，防止恶意盗刷、攻击；</li>\n<li>自定义图片域名，看起来更具有归属性；</li>\n<li>统计图片的各种访问数据；</li>\n<li>支持上传日志文件，可保存 30 天，便于排除程序问题；</li>\n</ol>\n<h2 id=\"11-开发指南\"><a class=\"markdownIt-Anchor\" href=\"#11-开发指南\">#</a> 1.1 开发指南：</h2>\n<p>注意：</p>\n<ul>\n<li>上传文件的名称中，不支持 \\0 字符。</li>\n<li>若文件名中存在 \\0 字符，则会返回 400 Bad Request 和 error message “key must not contain null byte”。</li>\n<li>上传文件名 utf-8 编码字符，长度不超过 750 字节 。</li>\n<li>若有特殊需求，请联系技术支持。</li>\n</ul>\n<p>表单上传</p>\n<p>表单上传是指在一个单一的 HTTP POST 请求中完成一个文件的上传，比较适合简单的应用场景和尺寸较小的文件。</p>\n<h3 id=\"111-分片上传\"><a class=\"markdownIt-Anchor\" href=\"#111-分片上传\">#</a> 1.1.1 分片上传</h3>\n<p>分片上传是将一个文件分为多个小数据块，每个小数据块以一个独立的 HTTP 请求分别上传。所有小数据块都上传完成后，再发送一个请求给服务端将这些小数据块组织成一个逻辑资源，以完成上传过程。</p>\n<p>相比表单上传，分片上传的优势：</p>\n<ul>\n<li>适合尺寸较大的文件传输，通过分片来避免单个 HTTP 数据量过大而导致连接超时的现象。</li>\n<li>在网络条件较差的环境下，较小尺寸的文件可以有较高的上传成功率，从而避免无休止的失败重试。</li>\n<li>支持断点续传。</li>\n</ul>\n<p>然而，相比表单上传，分片上传需要多次 HTTP 请求才能完成上传过程，会有额外的成本开销。另外也增加了代码的复杂度，因此选择是否使用分片上传时应谨慎评估使用的必要性。</p>\n<p>分片上传的使用细节请参考<a href=\"https://developer.qiniu.com/kodo/manual/1650/chunked-upload\">分片上传 v1 版</a>、<a href=\"https://developer.qiniu.com/kodo/manual/7458/shard-upload-v2-version\">分片上传 v2 版</a>，两种分片上传不同见详情。</p>\n<p><strong>上传后续动作</strong></p>\n<p>在上传时开发者可以指定上传完成后服务端的后续动作，例如回调通知 (callback)、自定义响应内容、303 重定向等。可设置的后续动作与<a href=\"https://developer.qiniu.com/kodo/manual/1272/form-upload\">表单上传</a>中完全一致。</p>\n<p>这里需要明确的是，虽然后续动作在生成<a href=\"https://developer.qiniu.com/kodo/manual/1208/upload-token\">上传凭证</a>时已经指定，但这些后续动作只在服务端处理完创建文件 (mkfile) 请求后才会发生，而且也只有 mkfile 请求的内容可以包含<a href=\"https://developer.qiniu.com/kodo/manual/1235/vars\">变量</a></p>\n<p>分片上传分为 v1 和 v2 版本，如下：</p>\n<h3 id=\"112-分片上传v1版本\"><a class=\"markdownIt-Anchor\" href=\"#112-分片上传v1版本\">#</a> 1.1.2 分片上传 v1 版本</h3>\n<p>分片上传支持将一个文件切割为一系列特定大小的数据片，分别将这些小数据片上传到服务端，全部上传完后再在服务端将这些数据片合并成为一个资源。</p>\n<p>分片上传引入了两个概念：<strong>块</strong>（Block）和<strong>片</strong>（Chunk）。每个<strong>块</strong>由一到多个<strong>片</strong>组成，而一个资源则由一到多个<strong>块</strong>组成。他们之间的关系可以用下图表述：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/FvdTJGHBPkJfTc-T5o2kNXcQUCGo\" alt=\"资源、块、片的关系\"></p>\n<p><strong>块</strong>和<strong>片</strong>是上传过程中作为临时存储的单位。服务端会以约<strong>七天</strong>为单位的周期清除上传后未被合并为块 (文件) 的数据片 (块)。</p>\n<p>与分片上传相关的 API 有：<a href=\"https://developer.qiniu.com/kodo/api/1286/mkblk\">创建块 (mkblk)</a>、<a href=\"https://developer.qiniu.com/kodo/api/1251/bput\">上传片 (bput)</a>、<a href=\"https://developer.qiniu.com/kodo/api/1287/mkfile\">创建文件 (mkfile)</a>。一个完整的分片上传流程可用下图表示：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/FgC5dUBuKuuU6_ES5U-NtphznCYf\" alt=\"分片上传流程\"></p>\n<p>其中的关键点如下：</p>\n<ul>\n<li>将待上传的文件按预定义块大小切分为若干个块（每块大小不大于 4MB）。如果这个文件小于 4MB，就只有一个块，如果文件大于 4MB， 除最后一块外，其余块大小固定为 4MB。</li>\n<li>将每个块再按预定义的片大小切分为若干个片，先在服务端创建一个相应块（通过调用<a href=\"https://developer.qiniu.com/kodo/api/1286/mkblk\"> mkblk</a>，并带上第一个片的内容），然后再循环将所有剩下的片全部上传（通过调用<a href=\"https://developer.qiniu.com/kodo/api/1251/bput\"> bput</a>，从而完成一个块的上传）</li>\n<li>在所有块上传完成后，通过调用<a href=\"https://developer.qiniu.com/kodo/api/1287/mkfile\"> mkfile</a> 将这些上传完成的块信息再严格的按顺序组装出一个逻辑资源的元信息，从而完成整个资源的分片上传过程。</li>\n</ul>\n<h3 id=\"113-分片上传v2版本\"><a class=\"markdownIt-Anchor\" href=\"#113-分片上传v2版本\">#</a> 1.1.3 分片上传 v2 版本</h3>\n<p>分片上传（ Multipart Upload ），可以将要上传的文件分成多个数据块（ 又称之为 Part ）来分别上传，上传完成之后再调用接口将这些 Part 组合成一个 Object。</p>\n<p>与分片上传相关的 API 有：<a href=\"https://developer.qiniu.com/kodo/api/6365/initialize-multipartupload\">初始化 (initiateMultipartUpload)</a>、<a href=\"https://developer.qiniu.com/kodo/api/6366/upload-part\">分块上传数据 (uploadPart) </a>、<a href=\"https://developer.qiniu.com/kodo/api/6368/complete-multipart-upload\">完成文件上传 (completeMultipartUpload) </a>、<a href=\"https://developer.qiniu.com/kodo/api/6367/abort-multipart-upload\">终止上传 （ abortMultipartUpload ）</a>、<a href=\"https://developer.qiniu.com/kodo/api/6858/listparts\">列举已上传分片 (listParts)</a>。一个完整的分片上传流程可用下图表示：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322193237381.png\" alt=\"image-20240322193237381\"></p>\n<p>其中的关键点如下：</p>\n<ul>\n<li>Part 大小要求，除最后一个 Part 外，每个 Part 大小在 1MB - 1GB 之间。</li>\n<li>每个 Multipart Upload 任务，最多 10000 个 Part， 编号 PartNumber 在 1 - 10000 （含）之间。</li>\n<li>要上传的文件切分成 Part 之后，实现并发上传。具体的并发个数并不是越多速度越快，要结合自身情况考虑。网络情况较好时，建议增大 Part 大小。反之，减小 Part 大小。</li>\n<li>在所有 Part 上传完成后，通过调用 completeMultipartUpload 将这些上传完成的 Part 信息严格的按编号 PartNumber 顺序（编号可以不连续，但必须是升序）组装出一个逻辑资源的元信息，从而完成整个资源的分片上传过程</li>\n</ul>\n<h2 id=\"12-上传文件代码演示\"><a class=\"markdownIt-Anchor\" href=\"#12-上传文件代码演示\">#</a> 1.2 上传文件代码演示：</h2>\n<h3 id=\"121-引入jar包\"><a class=\"markdownIt-Anchor\" href=\"#121-引入jar包\">#</a> 1.2.1 引入 jar 包</h3>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.qiniu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>qiniu-java-sdk<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>7.7.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>配置文件信息：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">qiniu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">accessKey</span><span class=\"token punctuation\">:</span> Zc1ktIEYgIhsY<span class=\"token punctuation\">-</span>MuNAT5Wf8WTowk1AeV30SVKBNQ</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>ofjyul<span class=\"token punctuation\">-</span>TpbriHRx8gJZWospjWArayyTjLZCBkL9</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">bucket</span><span class=\"token punctuation\">:</span> demo<span class=\"token punctuation\">-</span>demo<span class=\"token punctuation\">-</span>demo<span class=\"token punctuation\">-</span>demo</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//saqvg00o7.hb<span class=\"token punctuation\">-</span>bkt.clouddn.com/</pre></td></tr></table></figure><p>代码编写</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">QiniuDemoApplicationTests</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;qiniu.accessKey&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> accessKey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;qiniu.secretKey&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> secretKey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;qiniu.bucket&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> bucket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;qiniu.path&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 本地文件</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:\\\\demo\\\\基础.mp4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 获取文件后缀名</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 实例带 Region.autoRegion () 的配置对象</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Region</span><span class=\"token punctuation\">.</span><span class=\"token function\">autoRegion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 指定分片上传的版本为 V2 版本</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        configuration<span class=\"token punctuation\">.</span>resumableUploadAPIVersion <span class=\"token operator\">=</span> <span class=\"token class-name\">Configuration<span class=\"token punctuation\">.</span>ResumableUploadAPIVersion</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 实例化上传对象并传入配置信息</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">UploadManager</span> uploadManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadManager</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 创建时间对象</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">SimpleDateFormat</span> simpleDateFormat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 序列化当前时间</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">String</span> format <span class=\"token operator\">=</span> simpleDateFormat<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 通过 UUID + 当前时间 + 文件后缀名 创建出一个不容易碰撞的文件名</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">String</span> randomName <span class=\"token operator\">=</span> <span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> format <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 将 access_key 和 secret_key 传入上传策略中</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">Auth</span> auth <span class=\"token operator\">=</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>accessKey<span class=\"token punctuation\">,</span> secretKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// 上传时指定桶的名称</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">String</span> uploadToken <span class=\"token operator\">=</span> auth<span class=\"token punctuation\">.</span><span class=\"token function\">uploadToken</span><span class=\"token punctuation\">(</span>bucket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// 上传分片文件，最后一个参数说明：true，断点续传，false，没有断点续传（默认）</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            uploadManager<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> randomName<span class=\"token punctuation\">,</span> uploadToken<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">QiniuException</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上传失败, 原因：\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上传路径：\"</span> <span class=\"token operator\">+</span> path <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> randomName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行结果：</p>\n<pre><code>// 返回的路径可以进行访问地址源就是我们上传的视频而已\n上传路径：saqvg00o7.hb-bkt.clouddn.com/0a79c8333bb94d768ebb2f6cac84aa482024-03-22 19:42:18.mp4\n</code></pre>\n<p>查看七牛云的空间内容：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322194310969.png\" alt=\"image-20240322194310969\"></p>\n<p>可以看到视频上传成功了并且点击详情可以进行查看</p>\n<h2 id=\"13-下载代码演示\"><a class=\"markdownIt-Anchor\" href=\"#13-下载代码演示\">#</a> 1.3 下载代码演示：</h2>\n<p>下载资源分为：公开资源下载，私有资源下载；</p>\n<h3 id=\"131-公开资源下载\"><a class=\"markdownIt-Anchor\" href=\"#131-公开资源下载\">#</a> 1.3.1 公开资源下载</h3>\n<p>公开资源下载通过 HTTP GET 的方式访问资源 URL 即可。资源 URL 的构成如下：</p>\n<pre><code>http://&lt;domain&gt;/&lt;key&gt;\n</code></pre>\n<p>其中 <code>&lt;domain&gt;</code>  有两种形态：七牛子域名和自定义域名。</p>\n<p>七牛子域名是创建空间时默认分配的域名，开发者请前往<a href=\"https://portal.qiniu.com/bucket\">七牛开发者平台</a>，选择一个空间后查看<strong>测试域名</strong>即七牛子域名。子域名形式类似于 <em><a href=\"http://78re52.com1.z0.glb.clouddn.com\">78re52.com1.z0.glb.clouddn.com</a></em>，用户可以通过以下 URL 下载名为 <em>resource/flower.jpg</em> 的资源：</p>\n<pre><code>http://78re52.com1.z0.glb.clouddn.com/resource/flower.jpg\n</code></pre>\n<p>您也可以为某特定空间，申请绑定自定义域名，通过这个自定义域名访问资源，例如绑定的自定义域名为 <em><a href=\"http://i.example.com\">i.example.com</a></em>，您就可以通过以下 URL 访问同样的资源：</p>\n<pre><code>http://i.example.com/resource/flower.jpg\n</code></pre>\n<h3 id=\"132-私有资源下载\"><a class=\"markdownIt-Anchor\" href=\"#132-私有资源下载\">#</a> 1.3.2 私有资源下载</h3>\n<p>当您将空间设置成私有时，必须获得授权，才能对空间内的资源进行访问。</p>\n<p>私有资源下载是通过 HTTP GET 的方式访问特定的 URL。私有资源 URL 与公开资源 URL 相比只是增加了两个参数 <code>e</code>  和 <code>token</code> ，分别表示过期时间和<a href=\"https://developer.qiniu.com/kodo/manual/1202/download-token\">下载凭证</a>。一个完整的私有资源 URL 如下所示：</p>\n<pre><code>http://&lt;domain&gt;/&lt;key&gt;?e=&lt;deadline&gt;&amp;token=&lt;downloadToken&gt;\n</code></pre>\n<p>参数 <code>e</code>  表示 URL 的过期时间，采用<a href=\"https://developer.qiniu.com/kodo/glossary/1647/u#unixtime\"> Unix 时间戳</a>，单位为秒。超时的访问将返回 401 错误。参数 <code>token</code>  表示下载凭证。下载凭证是对资源访问的授权，不带下载凭证或下载凭证不合法都会导致 401 错误，表示验证失败。</p>\n<p><strong>注意：</strong></p>\n<ul>\n<li>如果请求方的时钟未校准，可能会造成有效期验证不正常，例如直接认为已过期。因此需要进行时钟校准。</li>\n<li>由于开发者无法保证客户端的时间都校准，所以应该在业务服务器上创建时间戳，并周期性校准业务服务器时钟。\n<ul>\n<li>token 必须放在请求的最后，token 之后的参数会被忽略。以请求  <code>http://test.cinem.net/aaaa.jpg?e=1778754963&amp;token=sQvk4AXf0rEkzcytkr...XjI0M:zwvwiM0wsMBRj46xcby05U=&amp;attname=geral_TS-PFS3010-8ET</code>  为例，此时 <code>attname=geral_TS-PFS3010-8ET</code>  会被忽略，并不生效</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"14-下载资源代码演示\"><a class=\"markdownIt-Anchor\" href=\"#14-下载资源代码演示\">#</a> 1.4 下载资源代码演示：</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 要下载到的路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> loadPath <span class=\"token operator\">=</span> <span class=\"token string\">\"E:\\\\\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 下载资源 url</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> downloadUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://saqvg00o7.hb-bkt.clouddn.com/0a79c8333bb94d768ebb2f6cac84aa482024-03-22%2019:42:18.mp4\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 获取文件的名称</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">String</span> substring <span class=\"token operator\">=</span> downloadUrl<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 实例化 HttpClient 对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">CloseableHttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 实例化请求对象传入请求 url</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token class-name\">HttpGet</span> httpGet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpGet</span><span class=\"token punctuation\">(</span>downloadUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token class-name\">CloseableHttpResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">InputStream</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">FileOutputStream</span> os <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token comment\">// 执行请求并返回响应对象</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpGet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token comment\">// 获取响应实体</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token class-name\">HttpEntity</span> entity <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\">// 判断实体是否为空</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entity <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         <span class=\"token comment\">// 创建对应的目录 上面的文件名有 % : 这个是不允许的会创建文件 / 目录失败所以先进行转换下次上传时注意格式就行</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>loadPath <span class=\"token operator\">+</span> substring<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         <span class=\"token comment\">// 通过 content 返回输入流对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         content <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         <span class=\"token comment\">// 创建输出流写出文件数据到指定位置</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         os <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>         <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>         <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>         <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            os<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token comment\">// 关闭流释放资源</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>os <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            os<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            content<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>下载结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322214724480.png\" alt=\"image-20240322214724480\"></p>\n<h2 id=\"15-删除指定资源\"><a class=\"markdownIt-Anchor\" href=\"#15-删除指定资源\">#</a> 1.5 删除指定资源：</h2>\n<p>注意：这里被坑了 10 分钟，因为文件名中带 % (空格自转的) 还有 - 导致删除返回状态码 298 (部分执行成功) 文件并没有被删除</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 资源 url 这里就需要注意了，上面的文件名 带 %(是空格自转的) 带 - 的会导致删除部分成功 也就是会返回 298 状态码 然后 文件并没有删除 就是这样 我就把文件名改了才删除成功的</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> <span class=\"token string\">\"http://saqvg00o7.hb-bkt.clouddn.com/0a7.mp4\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 获取文件名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">String</span> substring <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>substring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 实例带 Region.autoRegion () 的配置对象</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Region</span><span class=\"token punctuation\">.</span><span class=\"token function\">region0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 将 access_key 和 secret_key 传入策略中</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">Auth</span> auth <span class=\"token operator\">=</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>accessKey<span class=\"token punctuation\">,</span> secretKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 实例化资源管理对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token class-name\">BucketManager</span> bucketManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BucketManager</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 批量请求文件数量不能超 1000</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">BucketManager<span class=\"token punctuation\">.</span>BatchOperations</span> batchOperations <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BucketManager<span class=\"token punctuation\">.</span>BatchOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token comment\">// 批量删除</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   batchOperations<span class=\"token punctuation\">.</span><span class=\"token function\">addDeleteOp</span><span class=\"token punctuation\">(</span>bucket<span class=\"token punctuation\">,</span> substring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token comment\">// 请求批量删除</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token class-name\">Response</span> batch <span class=\"token operator\">=</span> bucketManager<span class=\"token punctuation\">.</span><span class=\"token function\">batch</span><span class=\"token punctuation\">(</span>batchOperations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\">// 获取请求的状态码</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">int</span> statusCode <span class=\"token operator\">=</span> batch<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>statusCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token comment\">// 判断状态码</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token comment\">//todo 298 记 这一个被文件名坑的一次</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>statusCode <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">QiniuException</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322222622298.png\" alt=\"image-20240322222622298\"></p>\n",
            "tags": [
                "java",
                "计算机学科",
                "七牛云"
            ]
        }
    ]
}