<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>homepage • Posts by &#34;服务管理&#34; category</title>
        <link>https://pigpigletsgo.github.io/homepage</link>
        <description>欢迎来我的博客空间</description>
        <language>zh-CN</language>
        <pubDate>Thu, 08 Feb 2024 12:46:22 +0800</pubDate>
        <lastBuildDate>Thu, 08 Feb 2024 12:46:22 +0800</lastBuildDate>
        <category>计算机底层</category>
        <category>linux</category>
        <category>问题总汇</category>
        <category>jdk版本问题</category>
        <category>JdbcTemplate</category>
        <category>报错</category>
        <category>编码问题</category>
        <category>springboot</category>
        <category>Jwt</category>
        <category>mybatis</category>
        <category>读取配置文件</category>
        <category>MyBatisPlus</category>
        <category>版本问题</category>
        <category>nginx</category>
        <category>java</category>
        <category>vim</category>
        <category>输入法</category>
        <category>Swing</category>
        <category>hexo</category>
        <category>shoka</category>
        <category>math</category>
        <category>english</category>
        <category>算法</category>
        <category>计算机学科</category>
        <category>C</category>
        <category>介绍</category>
        <category>基础</category>
        <category>mysql</category>
        <category>git</category>
        <category>web</category>
        <category>坑点</category>
        <category>nodeJs</category>
        <category>tools</category>
        <category>idea</category>
        <category>项目</category>
        <category>windows</category>
        <category>密码管理</category>
        <category>vscode</category>
        <category>database</category>
        <category>JDBC</category>
        <category>mongodb</category>
        <category>navicat</category>
        <category>知识点</category>
        <category>redis</category>
        <category>集群</category>
        <category>jvm</category>
        <category>config配置类</category>
        <category>maven</category>
        <category>数据结构与算法</category>
        <category>图</category>
        <category>多路查找树</category>
        <category>递归</category>
        <category>链表</category>
        <category>队列</category>
        <category>栈</category>
        <category>数组</category>
        <category>排序</category>
        <category>查找</category>
        <category>哈希表</category>
        <category>树结构</category>
        <category>spring</category>
        <category>程序员常用的10中算法</category>
        <category>编程题</category>
        <category>动态规划</category>
        <category>二叉树</category>
        <category>层序遍历</category>
        <category>贪心算法</category>
        <category>后序遍历</category>
        <category>广度优先搜索</category>
        <category>还原二叉树</category>
        <category>双指针</category>
        <category>快慢指针</category>
        <category>分而治之</category>
        <category>对称二叉树</category>
        <category>单调栈</category>
        <category>堆</category>
        <category>小顶堆</category>
        <category>大顶堆</category>
        <category>逆波兰表达式</category>
        <category>工具类</category>
        <category>servlet</category>
        <category>开源项目框架</category>
        <category>案例Demo</category>
        <category>网络编程</category>
        <category>菜单数据结构</category>
        <category>多线程</category>
        <category>分页</category>
        <category>lombok</category>
        <category>设计模式</category>
        <category>爬虫</category>
        <category>API的区别</category>
        <category>第三方库</category>
        <category>Minio</category>
        <category>hutool</category>
        <category>Thymeleaf</category>
        <category>七牛云</category>
        <category>代码经验</category>
        <category>vue3</category>
        <category>websocket</category>
        <category>前后端交互</category>
        <category>数据格式</category>
        <category>axios</category>
        <category>mybatisplus-join</category>
        <category>ORM</category>
        <category>avl树</category>
        <category>进阶</category>
        <category>二叉树搜索树</category>
        <category>二叉树的遍历</category>
        <category>heapify</category>
        <category>堆排序</category>
        <category>优先级队列</category>
        <category>完全二叉树</category>
        <category>动态数组</category>
        <category>红黑树</category>
        <category>SSM</category>
        <category>阻塞队列</category>
        <category>springcloud</category>
        <category>springsecurity</category>
        <category>MD5</category>
        <category>JWT</category>
        <category>thymeleaf</category>
        <category>springmvc</category>
        <category>源码</category>
        <category>整合jar包</category>
        <category>Junit</category>
        <category>拦截器</category>
        <category>IO</category>
        <category>String</category>
        <category>http</category>
        <category>lambda</category>
        <category>number</category>
        <category>stream流</category>
        <category>对象</category>
        <category>泛型</category>
        <category>集合</category>
        <category>jquery</category>
        <category>js</category>
        <category>JSR303</category>
        <category>Knife4j</category>
        <category>devtools</category>
        <category>Docker</category>
        <category>Elasticsearch</category>
        <category>Nacos</category>
        <category>springboot高级</category>
        <category>RabbitMQ</category>
        <category>部署</category>
        <category>OpenResty</category>
        <category>Seata</category>
        <category>Sentinel</category>
        <category>持久化</category>
        <category>Canal</category>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/02/08/computer-science/linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%861/</guid>
            <title>linux服务管理</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/02/08/computer-science/linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%861/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Thu, 08 Feb 2024 12:46:22 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;服务 (service) 本质就是进程，但是是运行在后台的，通常会监听某个端口，等待其它程序的请求，比如 (mysqld,sshd, 防火墙等等), 因此我们又成为守护进程，是 Linux 中非常重要的知识点&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;service 管理指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;service 服务名 [start|stop|restart|reload|status]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 CentOS7.0 后 &amp;lt;font color=&#39;red&#39;&amp;gt; 很多服务不再使用 service&amp;lt;/font&amp;gt;, 而是 &amp;lt; font color=&#39;red&#39;&amp;gt;systemctl&amp;lt;/font&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;service 指令管理的服务在 &lt;code&gt;/etc/init.d&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ls -l /etc/init.d/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-15-37-26.png&#34; alt=&#34;image_2023-01-06-15-37-26&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看全部系统服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;setup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果提示不存在则进行安装 &lt;code&gt;sudo yum -y install setuptool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成后即可执行命令:setup&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124524934.png&#34; alt=&#34;image-20240208124524934&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务的运行级别 (runlevel)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux 系统有 7 种运行级别 (runlevel):&amp;lt;font color=&#39;red&#39;&amp;gt; 常用的是级别 3 和 5&amp;lt;/font&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;运行级别 0: 系统停机状态，系统默认运行级别不能设为 0, 否则不能正常启动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 1: 单用户工作状态，root 权限，用于系统维护，禁止远程登陆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 2: 多用户状态 (没有 NFS), 不持支网络&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 3: 完全的多用户状态 (有 NFS), 登录后进入控制台命令行模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 4: 系统未使用，保留&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 5:X11 控制台，登录后进入图形 GUI 模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 6: 系统正常关闭并重启，默认运行级别不能设为 6, 否则不能正常启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开机的流程说明:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124539115.png&#34; alt=&#34;image-20240208124539115&#34; /&gt;&lt;/p&gt;
&lt;p&gt;CentOS7 后台运行级别说明&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;/etc/initab&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进行了简化，如下&lt;/p&gt;
&lt;p&gt;multi-user.target:analogous to runlevel 3&lt;/p&gt;
&lt;p&gt;graphical.target:analogous to runlevel 5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;chkconfig&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 chkconfig 命令可以给服务的各个运行级别设置自 启动 / 关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chkconfig 指令管理的服务在 &lt;code&gt;/etc/initab.d&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：CentOS7.0 后，很多服务使用 &amp;lt;font color=&#39;red&#39;&amp;gt;systemctl&amp;lt;/font &amp;gt; 管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;chkconfig 基本语法:&lt;/p&gt;
&lt;p&gt;查看服务:chkconfig  --list [|grep xxx]&lt;/p&gt;
&lt;p&gt;chkconfig   服务名  --list&lt;/p&gt;
&lt;p&gt;chkconfig   --level 5   服务名  on/off&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用细节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;chkconfig 重新设置服务后自启动或关闭，需要重启机器 reboot 生效&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-17-29-29.png&#34; alt=&#34;image_2023-01-06-17-29-29&#34; /&gt;&lt;/p&gt;
&lt;p&gt;比如将 network 服务在指定的运行级别下让其关闭的则执行下面命令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;chkconfig&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--level&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; network off&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;Systemctl 管理指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本语法:systemctl [start|stop|restart|status] 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl 指令管理的服务在 &lt;code&gt;/usr/lib/systemd/system&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl 设置服务的自启动状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;systemctl list-unit-files [|grep 服务名] (查看服务开机启动状态，grep 可以进行过滤)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl enable 服务名 (设置服务开机启动)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl disable 服务名 (关闭服务开机启动)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl is-enabled 服务名 (查询某个服务是否是自启动的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl status 服务名 (查看服务的状态)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl daemon reload (重新加载系统服务)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;细节讨论&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;关闭或者启用防火墙后，立即生效 [telnet 测试，某个端口即可]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;telnet 命令为 Windows 中的命令详细查看 Windows 中笔记&lt;a href=&#34;......%5CTyporanote%5CWindows%5C%E5%BC%80%E5%90%AFtelnet%E5%8A%9F%E8%83%BD.md&#34;&gt; Windows:Telnet 开启&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果开启了防火墙而且没有将端口开放则外部主机访问不到&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124554601.png&#34; alt=&#34;image-20240208124554601&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果希望设置某个服务自启动或关闭永久生效，要使用 systemctl [enable|disable] 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;打开或者关闭指定端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在真正的生产环境，往往需要将防火墙打开，但问题来了，如果我们把防火墙打开，那么外部请求数据包就不能跟服务器监听端口通讯，这时，需要打开指定的端口，比如 80,22,8080 等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;firewall 指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开端口:firewall-cmd --permanent --add-port = 端口号 / 协议&lt;/p&gt;
&lt;p&gt;关闭端口:firewall-cmd --permanent --remove-port = 端口号 / 协议&lt;/p&gt;
&lt;p&gt;重新载入，才能生效:firewall-cmd --reload&lt;/p&gt;
&lt;p&gt;查询端口是否开放:firewall-cmd --query-port = 端口 / 协议&lt;/p&gt;
&lt;p&gt;查看所有开放端口:firewall-cmd --list-ports&lt;/p&gt;
&lt;p&gt;查看端口号:netstat -ntlp|grep [端口号]&lt;/p&gt;
&lt;p&gt;查看防火墙配置规则:iptables -nL&lt;/p&gt;
&lt;p&gt;对其它主机开放指定端口:firewall-cmd --permanent --add-rich-rule=&amp;quot;rule family=&amp;quot;ipv4&amp;quot;source address port protocol=&amp;quot;tcp&amp;quot;port=&amp;quot;8080&amp;quot;accept&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开放指定端口&lt;/strong&gt;: firewall-cmd --permanent --zone=public --add-port=8080/tcp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⚠️&lt;strong&gt;注意&lt;/strong&gt;：执行操作后执行重载:firewall-cmd --reload&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
