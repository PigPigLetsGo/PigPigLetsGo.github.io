{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"springcloud\" category",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%AB%98%E7%BA%A7%E7%AF%87/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%AB%98%E7%BA%A7%E7%AF%87/",
            "title": "SpringCloud高级篇",
            "date_published": "2024-04-02T10:00:51.102Z",
            "content_html": "<h1 id=\"一-微服务保护\"><a class=\"markdownIt-Anchor\" href=\"#一-微服务保护\">#</a> 一、微服务保护🎄</h1>\n<ul>\n<li>Sentinel</li>\n</ul>\n<p>学习内容：</p>\n<ul>\n<li>初始 Sentinel</li>\n<li>流量控制</li>\n<li>隔离和降级</li>\n<li>授权规则</li>\n<li>规则持久化</li>\n</ul>\n<h2 id=\"11-初始sentinel\"><a class=\"markdownIt-Anchor\" href=\"#11-初始sentinel\">#</a> 1.1、初始 Sentinel🌳</h2>\n<ul>\n<li>雪崩问题及解决方案</li>\n<li>服务保护技术对比</li>\n<li>Sentinel 介绍和安装</li>\n<li>微服务整合 Sentinel</li>\n</ul>\n<h3 id=\"111-雪崩问题\"><a class=\"markdownIt-Anchor\" href=\"#111-雪崩问题\">#</a> 1.1.1、雪崩问题🌲</h3>\n<p>微服务调用链路中的某个服务故障，引起整个链路中的所有微服务都不可用，这就是雪崩。</p>\n<p><strong>场景</strong>：</p>\n<p>比方说在服务 A 内部依赖于服务 B，而服务 A 内部可能还有一些其它的业务比如说它依赖于服务 C 或者是依赖于服务 D</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161531964.png\" alt=\"image-20231016153100257\"></p>\n<p>现在假设说服务 D 出现了故障，那服务 A 内部依赖与服务 D 的业务请求就不能正常访问了</p>\n<p>因为服务 A 访问服务 D 就必然要等待服务 D 的响应结果，而因为服务 D 出现了故障不可能返回结果它会阻塞，那就导致了服务 A 内部业务也会阻塞，阻塞 它就不会释放 tomcat 的链接。当然其它业务请求不受影响还可以正常工作。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161532119.png\" alt=\"image-20231016153207881\"></p>\n<p>但是既然有第一个依赖于服务 D 这样的请求，那一定还会有第二个甚至第三个。这样依赖于服务 D 的业务请求越来越多，而它们都不会释放连接，那么时久一定会把服务 A 内部所有的链接都给占用了</p>\n<p>也就是说 tomcat 资源耗尽了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161537530.png\" alt=\"image-20231016153714784\"></p>\n<p>此时再有服务进来哪怕不是依赖于服务 D 的而是服务 B 的，是不是也进不来了。那就可以认为服务 A 也出现了故障</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161539417.png\" alt=\"image-20231016153923278\"></p>\n<p>这就造成了一个服务的故障导致了依赖于它的服务最终也出现了故障。在微服务里这种调用关系可不止这么简单</p>\n<p>那么服务 A 依赖于服务 D 导致最后给服务 D 拖垮了，那肯定还会有其它的服务也依赖于服务 D，最终也会被拖垮，将来其它依赖于服务 A 的也会出现故障，最终故障的服务越来越多那么整个微服务群就不可用了。</p>\n<p>这不就是雪崩了吗！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161541181.png\" alt=\"image-20231016154142767\"></p>\n<h3 id=\"112-解决雪崩问题\"><a class=\"markdownIt-Anchor\" href=\"#112-解决雪崩问题\">#</a> 1.1.2、解决雪崩问题🌲</h3>\n<p><strong>解决雪崩问题的常见方式有四种</strong>：</p>\n<p>1、<mark>超时处理</mark>：设定超时时间，请求超过一定时间没有响应结果就返回错误信息，不会无休止等待</p>\n<p>会在调用业务时加上一个超时时间比如说 1 秒钟，当服务 A 依赖于服务 C 时请求最多等待 1 秒钟，如果请求超过 1 秒钟就会立即结束这个请求，不再等待，返回给用户提示信息 (不好意思失败了)</p>\n<p>缺点：只能起到缓解作用，不能解决根本问题，因为请求速度大于等待时间就会出现问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161546216.png\" alt=\"image-20231016154632246\"></p>\n<p>2、<mark>舱壁模式</mark>：限定每个业务能使用的线程数，避免耗尽整个 tomcat 的资源，因此也叫线程隔离。</p>\n<p>舱壁模式是来自于现实生活中的船舱的设计，一些大型的轮船它都会把船体利用隔板分隔成独立的小的空间这样的隔板就叫做舱壁。因为这些空间之间是相互隔离的，假设说船体的某个部位撞上了冰山漏水了。那么最多只是把部分船舱填满水，因为是隔离的所以其它船舱不受影响。这样就提高了整艘船的容灾能力</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161550959.png\" alt=\"image-20231016155024959\"></p>\n<p>这种模式延续到程序设计里边是怎么做的呢？</p>\n<p>这是服务 A 里面的资源也就是 tomcat 就可以看做成整艘船。我们可以把 tomcat 里面的资源 (线程) 划分成一个一个独立的线程池。给每个业务分配一个线程池。现在业务 1 进来后它依赖于服务 B，它最多使用十个限制，访问业务 2 比方说它依赖于服务 C，它也最多使用十线程。</p>\n<p>现在假设说服务 C 出现故障了，这个业务 2 就会阻塞占用线程，但是它最多占用十个，这时它能够使用 tomcat 的资源是有限的，这样就把故障隔离到十个线程内了，因此也叫线程隔离。因此就避免了整个 tomcat 被耗尽的情况</p>\n<p>缺点：资源有一定的浪费，比如说服务 C 真的宕机了，现在每次请求来还让它尝试着去访问一下服务 C 还要占用十个线程也是一种浪费</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161558553.png\" alt=\"image-20231016155848381\"></p>\n<p>3、<mark>熔断降级</mark>：由<mark>断路器</mark>统计业务执行的异常比例，如果超出阈值则会<mark>熔断</mark>该业务，拦截访问该业务的一切请求。</p>\n<p>统计服务 A 里面的业务，比方说服务 A 里第一次业务访问是正常的，结果后面两次都出现了故障。这时断路器就会统计比例，三个请求一个正常两个故障，故障比例高达 60%。假设说阈值是 50% 超出了阈值，此时就会出现熔断。</p>\n<p>一旦被熔断如果在服务 A 内部还想要访问服务 D 的业务就无法再去访问服务 D 了，只要是访问服务 D 的业务就会被拦截</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161606208.png\" alt=\"image-20231016160627109\"></p>\n<p>4、<mark>流量控制</mark>：限制业务访问 QPS，避免服务因流量的突增而故障。</p>\n<p>QPS：每秒钟处理的请求数量</p>\n<p>比方说有一个微服务，它能承受的最大 QPS 为 2，也就是每秒钟最多处理两个请求。</p>\n<p>但是现在有无数个请求涌过来，就会出现故障，一旦这个服务出现故障，而依赖于这个服务的其它服务也就跟着出现故障就会出现雪崩问题</p>\n<p>所以我们要避免服务因为流量过高而引起故障，这时就需要用到 Sentinel 了</p>\n<p>现在假设说有无数个请求过来而 Sentinel 可以按照这个服务所能够承受的频率去释放请求，这时微服务就能从容应对这些请求了就避免了出现故障</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161613445.png\" alt=\"image-20231016161314587\"></p>\n<p>流量控制是预防雪崩，前面三种是已经有服务故障了我怎么样去避免这个故障传递给其它服务</p>\n<p>但是也不能说，那我就只用 流量控制呗，其它的我就不用了，这样显然是不对的。</p>\n<p>因为高并发引起的服务故障只是故障的原因之一，往往服务还会因为其它问题而出现故障。比方说网络问题或者说 fgc 引起的假死问题，这时我们就需要用到其它的解决方案了</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么是雪崩问题？</p>\n<ul>\n<li>微服务之间相互调用，因为调用链中一个服务故障，引起整个链路都无法访问的情况</li>\n</ul>\n<p>如何避免因瞬间高并发流量而导致服务故障？</p>\n<ul>\n<li>流量控制</li>\n</ul>\n<p>如何避免因服务故障引起的雪崩问题？</p>\n<ul>\n<li>超时处理</li>\n<li>线程隔离</li>\n<li>降级熔断</li>\n</ul>\n</blockquote>\n<h3 id=\"113-服务保护技术对比\"><a class=\"markdownIt-Anchor\" href=\"#113-服务保护技术对比\">#</a> 1.1.3、服务保护技术对比🌲</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Sentinel</th>\n<th>Hystrix</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>隔离策略</td>\n<td>信号量隔离</td>\n<td>线程池隔离 / 信号量隔离</td>\n</tr>\n<tr>\n<td>熔断降级策略</td>\n<td>基于慢调用比例或异常比例</td>\n<td>基于失败比例</td>\n</tr>\n<tr>\n<td>实时指标实现</td>\n<td>滑动窗口</td>\n<td>滑动窗口 (基于 RxJava)</td>\n</tr>\n<tr>\n<td>规则配置</td>\n<td>支持多种数据源</td>\n<td>支持多种数据源</td>\n</tr>\n<tr>\n<td>扩展性</td>\n<td>多个扩展点</td>\n<td>插件的形式</td>\n</tr>\n<tr>\n<td>基于注解的支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>限流</td>\n<td>基于 QPS，支持基于调用关系的限流</td>\n<td>有限的支持</td>\n</tr>\n<tr>\n<td>流量整形</td>\n<td>支持慢启动，匀速排队模式</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>系统自适应保护</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>控制台</td>\n<td>开箱即用，可配置规则，查看秒级监控，机器发现等</td>\n<td>不完善</td>\n</tr>\n<tr>\n<td>常见框架的适配</td>\n<td>Servlet，Spring Cloud，Dubbo，gRPC 等</td>\n<td>Servlet，Spring Cloud Netflix</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"12-认识sentinel\"><a class=\"markdownIt-Anchor\" href=\"#12-认识sentinel\">#</a> 1.2、认识 Sentinel🌳</h2>\n<p>Sentinel 是阿里巴巴开源的一款微服务流量控制组件。官网地址：<a href=\"https://sentinelguard.io/zh-cn/\">https://sentinelguard.io/zh-cn/</a></p>\n<p><strong>Sentinel 具有以下特征</strong>：</p>\n<p>1、<mark>丰富的应用场景</mark>：Sentinel 承接了阿里巴巴进 10 年的双十一大促流量的核心场景，例如秒杀 (即突发流量控制在系统容量可以承受的范围)，消息削峰添谷，集群流量控制，实时熔断下游不可用应用等。</p>\n<p>2、<mark>完备的实时监控</mark>：Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台集群秒级数据，甚至 500 台以下规模的集群的汇总运行情况</p>\n<p>3、<mark>广泛的开源生态</mark>：Sentinel 提供开箱即用的与其它开源框架 / 库的整合模块，例如与 Spring cloud，Dubbo，gRPC 的整合。您只需要引入相应的依赖并运行简单的配置即可快速的接入 Sentinel</p>\n<p>4、<mark>完善的 SPI 扩展点</mark>：Sentinel 提供简单易用，完善的 SPI 扩展接口。您可以通过实现扩展接口来快速的定制逻辑。例如定制规则管理，适配动态数据源等。</p>\n<h3 id=\"121-安装sentinel控制台\"><a class=\"markdownIt-Anchor\" href=\"#121-安装sentinel控制台\">#</a> 1.2.1、安装 Sentinel 控制台🌲</h3>\n<p>sentinel 官方提供了 UI 控制台，方便我们对系统做限流设置。大家可以在<a href=\"https://github.com/alibaba/Sentinel\"> Github</a> 下载。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161747500.png\" alt=\"image-20231016174714403\"></p>\n<p>1、将其拷贝到一个非中文目录，然后运行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> sentinel-dashboard-1.8.6.jar</pre></td></tr></table></figure><p>2、然后访问：localhost:8080 即可看到控制台页面，默认的账号和密码都是 sentinel</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161747766.png\" alt=\"image-20231016174746831\"></p>\n<h2 id=\"13-安装sentinel控制台\"><a class=\"markdownIt-Anchor\" href=\"#13-安装sentinel控制台\">#</a> 1.3、安装 Sentinel 控制台🌳</h2>\n<p>如果要修改 Sentinel 的默认端口，账号，密码，可以通过下列配置：</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>server.port</td>\n<td>8080</td>\n<td>服务端口</td>\n</tr>\n<tr>\n<td>sentinel.dashboard.auth.username</td>\n<td>sentinel</td>\n<td>默认用户名</td>\n</tr>\n<tr>\n<td>sentinel.dashboard.auth.password</td>\n<td>sentinel</td>\n<td>默认密码</td>\n</tr>\n</tbody>\n</table>\n<p>但是它已经是一个 jar 包了怎么改它的配置文件呢？</p>\n<p>修改配置方式：</p>\n<blockquote>\n<p>举例说明：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sentinel-dashboard-1.8.6.jar <span class=\"token parameter variable\">-Dserver.port</span><span class=\"token operator\">=</span><span class=\"token number\">8090</span></pre></td></tr></table></figure></blockquote>\n<h2 id=\"14-微服务与sentinel整合\"><a class=\"markdownIt-Anchor\" href=\"#14-微服务与sentinel整合\">#</a> 1.4、微服务与 Sentinel 整合🌳</h2>\n<h3 id=\"141-引入cloud-demo\"><a class=\"markdownIt-Anchor\" href=\"#141-引入cloud-demo\">#</a> 1.4.1、引入 cloud-demo🌲</h3>\n<p>要使用 Sentinel 肯定要结合微服务，这里我们使用 SpringCloud 工程，项目地址：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161754232.png\" alt=\"image-20231016175423216\"></p>\n<p>项目结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161755797.png\" alt=\"image-20231016175537988\"></p>\n<p>启动项目进行测试看看是否还可以正常使用：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161939226.png\" alt=\"image-20231016193950393\"></p>\n<p>访问页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161939102.png\" alt=\"image-20231016193935669\"></p>\n<p>一切正常后我们就开始整合</p>\n<h3 id=\"142-微服务整合sentinel\"><a class=\"markdownIt-Anchor\" href=\"#142-微服务整合sentinel\">#</a> 1.4.2、微服务整合 Sentinel🌲</h3>\n<p>我们在 order-service 中整合 Sentinel，并且链接 Sentinel 的控制台，步骤如下：</p>\n<p>1、引入 Sentinel 依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-sentinel<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、配置控制台地址</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">sentinel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">transport</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">dashboard</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></pre></td></tr></table></figure><p>3、访问微服务的任意端点，触发 Sentinel 监控</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161955434.png\" alt=\"image-20231016195535390\"></p>\n<h2 id=\"15-限流规则\"><a class=\"markdownIt-Anchor\" href=\"#15-限流规则\">#</a> 1.5、限流规则🌳</h2>\n<ul>\n<li>快速入门</li>\n<li>流控模式</li>\n<li>流控效果</li>\n<li>热点参数限流</li>\n</ul>\n<h3 id=\"151-蔟点链路\"><a class=\"markdownIt-Anchor\" href=\"#151-蔟点链路\">#</a> 1.5.1、蔟点链路🌲</h3>\n<p>蔟点链路：就是项目内的调用链路，链路中<mark>被监控</mark>的每个接口就是一个资源。默认情况下 Sentinel 会监控 SpringMVC 的每一个端点 (Endpoint)，因此 SpringMVC 的每一个端点 (Endpoint)，就是调用链路中的一个资源。</p>\n<p>流控，熔断等都是<mark>针对蔟点链路中的资源</mark>来设置的，因此我们可以点击对应资源后面的按钮来设置规则：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162003730.png\" alt=\"image-20231016200306361\"></p>\n<p>点击资源 /order/{orderId} 后面的流控按钮，就可以弹出表单。表单中可以添加流控规则，如下图所示：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162009637.png\" alt=\"image-20231016200951539\"></p>\n<p>其含义是限制 /order/{orderId} 这个资源的单击 QPS 为 1，即每秒只允许 1 次请求，超出的请求会被拦截并报错。</p>\n<p>针对来源中 defalt 表示一切请求都限流</p>\n<h4 id=\"1511-案例流控规则入门案例\"><a class=\"markdownIt-Anchor\" href=\"#1511-案例流控规则入门案例\">#</a> 1.5.1.1、案例，流控规则入门案例🌴</h4>\n<p><strong>需求</strong>：给 /order/{orderId} 这个资源设置流控规则，QPS 不能超过 5。然后利用 jmeter 测试。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162014028.png\" alt=\"image-20231016201450102\"></p>\n<p>这里使用 jemeter 进行并发的测试工具安装文章：<a href=\"../Jmeter/Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.md\">jmeter 安装及使用</a>.</p>\n<p>测试文件文章地址：<a href=\"../%E6%B5%8B%E8%AF%95%E6%96%87%E4%BB%B6/sentinel%E6%B5%8B%E8%AF%95.jmx\">sentinel 测试.jmx</a>.</p>\n<p>导入到 jmeter 中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162035976.png\" alt=\"image-20231016203528848\"></p>\n<p>如果点击没有反应就直接将 jmx 文件拖到蓝瓶子里面就算导入了</p>\n<p>右键，流控入门，点击启动，之后可以点击查看结果树来查看请求的情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162036099.png\" alt=\"image-20231016203617798\"></p>\n<p>这是设置 QPS 后的请求情况，没有限流的时候全是通过的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162037652.png\" alt=\"image-20231016203706692\"></p>\n<p>查看控制台的情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162032402.png\" alt=\"image-20231016203257242\"></p>\n<h3 id=\"152-流控模式\"><a class=\"markdownIt-Anchor\" href=\"#152-流控模式\">#</a> 1.5.2、流控模式🌲</h3>\n<p>在添加限流规则时，点击高级选项，可以选择三种流控模式：</p>\n<ul>\n<li>\n<p>直接：统计当前资源的请求，触发阈值时对当前资源直接限流，也是默认的模式</p>\n</li>\n<li>\n<p>关联：统计与当前资源相关的另一个资源，触发阈值时，对当前资源限流</p>\n<p>两个资源，A 触发了阈值，但我却对 B 做了限流</p>\n</li>\n<li>\n<p>链路：统计从指定链路访问到本资源的请求，触发阈值时，对指定链路限流</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162041214.png\" alt=\"image-20231016204109075\"></p>\n<h4 id=\"1521-流控模式-关联\"><a class=\"markdownIt-Anchor\" href=\"#1521-流控模式-关联\">#</a> 1.5.2.1、流控模式 - 关联🌴</h4>\n<ul>\n<li>关联模式：统计与当前资源相关的另一个资源，触发阈值时，对当前资源限流</li>\n<li>使用场景：比如用户支付时需要修改订单状态，同时用户要查询订单。查询和修改操作会争抢数据库锁，产生竞争。业务需求是有限支付和更新订单的业务，因此当修改订单业务触发阈值时，需要对查询订单业务限流。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162047957.png\" alt=\"image-20231016204748747\"></p>\n<p>当 /write 资源访问量触发阈值时，就会对 /read 资源限流，避免影响 /write 资源。</p>\n<h5 id=\"15211-案例流控模式-关联\"><a class=\"markdownIt-Anchor\" href=\"#15211-案例流控模式-关联\">#</a> 1.5.2.1.1、案例，流控模式 - 关联🎋</h5>\n<p>需求：</p>\n<ul>\n<li>在 OrderController 新建两个端点：/order/query 和 /order/update，无需实现业务</li>\n<li>配置流控规则，当 /order/update 资源被访问的 QPS 超过 5 个时，对 /order/query 请求限流</li>\n</ul>\n<p>重启服务后蔟点链路里面就会被清空了，我们需要重新去请求一下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162054136.png\" alt=\"image-20231016205436554\"></p>\n<p>分别请求一下 query 和 update 的接口</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162055490.png\" alt=\"image-20231016205532378\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162055118.png\" alt=\"image-20231016205543133\"></p>\n<p>再去查看蔟点链路就可以看到有信息了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162056790.png\" alt=\"image-20231016205631141\"></p>\n<p>配置流控规则，当 /order/update 资源被访问的 QPS 超过 5 个时，对 /order/query 请求限流。</p>\n<p>我们要对谁进行限流就对谁进行流控规则</p>\n<p>点击 query 的流控</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162058104.png\" alt=\"image-20231016205856014\"></p>\n<p>通过 jmeter 进行测试：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162101233.png\" alt=\"image-20231016210113073\"></p>\n<p>请求的地址就是 /order/update</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162101101.png\" alt=\"image-20231016210145527\"></p>\n<p>可以看到这个请求不会受到任何影响</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162102511.png\" alt=\"image-20231016210228553\"></p>\n<p>但，当访问 /order/query 时</p>\n<p>就发生了异常，update 触发阈值时对 query 限流就实现了这样一种关联模式了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162103557.png\" alt=\"image-20231016210318424\"></p>\n<blockquote>\n<p><strong>小结</strong>：</p>\n<p>满足下面条件可以使用关联模式：</p>\n<ul>\n<li>两个有竞争关系的资源</li>\n<li>一个优先级较高，一个优先级较低</li>\n</ul>\n</blockquote>\n<h4 id=\"1523-流控模式-链路\"><a class=\"markdownIt-Anchor\" href=\"#1523-流控模式-链路\">#</a> 1.5.2.3、流控模式 - 链路🌴</h4>\n<p>链路模式：只针对从指定链路访问到本资源的请求做统计，判断是否超过阈值。</p>\n<p>例如：有两条请求链路一个是从 test1 访问 common 资源另一个是从 test2 访问 common 资源：</p>\n<ul>\n<li>/test1 -&gt; /common</li>\n<li>/test2 -&gt; /common</li>\n</ul>\n<p>如果希望统计从 /test2 进入到 /common 的请求，则可以这样配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162107107.png\" alt=\"image-20231016210716025\"></p>\n<p>这个配置的意思：</p>\n<p>在做限流统计时，只统计从 test2 进入 common 的请求，test1 进来的不管。所以这种统计是对请求来源的一种统计</p>\n<p>什么情况下我们会用到这样的模式呢？通过如下案例了解</p>\n<h5 id=\"15231-案例流控模式-链路\"><a class=\"markdownIt-Anchor\" href=\"#15231-案例流控模式-链路\">#</a> 1.5.2.3.1、案例，流控模式 - 链路🎋</h5>\n<p>需求：有查询订单和创建订单业务，两者需要查询商品。针对从查询订单进入到查询商品的请求统计，并设置限流。</p>\n<p>步骤：</p>\n<p>1、在 OrderService 中添加一个 queryGoods 方法，不用实现业务</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@SentinelResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"goods\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">queryGoods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询商品\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、在 OrderController 中，改造 /order/query 端点，调用 OrderService 中的 queryGoods 方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">queryOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 查询商品</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   orderService<span class=\"token punctuation\">.</span><span class=\"token function\">queryGoods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 查询订单</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询订单\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token string\">\"查询订单成功\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 OrderController 中添加一个 /order/save 的端点，调用 OrderService 的 queryGoods 方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"save\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">saveOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   orderService<span class=\"token punctuation\">.</span><span class=\"token function\">queryGoods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新增订单\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token string\">\"新增订单成功\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、给 queryGoods 设置限流规则，从 /order/query 进入 queryGoods 的方法限制 QPS 必须小于 2</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170741307.png\" alt=\"image-20231017074152072\"></p>\n<ul>\n<li>\n<p>Sentinel 默认只标记 Controller 中的方法为资源，如果要标记其它方法，需要利用 @SentinelResource 注解，示例：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SentinelResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"goods\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">queryGoods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询商品\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>Sentinel 默认会将 Controller 方法做 context 整合，导致链路模式的流控失败，需要修改 application.yml，添加配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">sentinel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">transport</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">dashboard</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">web-context-unify</span><span class=\"token punctuation\">:</span> false // 关闭context整合</pre></td></tr></table></figure></li>\n</ul>\n<p>访问 order/query 和 order/save</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162148402.png\" alt=\"image-20231016214825324\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162148432.png\" alt=\"image-20231016214834464\"></p>\n<p>查看 sentinel 的蔟点链路信息</p>\n<p>可以看到 /order/query 与 /order/save 变成了两个独立的链路了，在之前没有关闭 context 整合时它俩是同一个跟链路下的子链路</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310162149544.png\" alt=\"image-20231016214905203\"></p>\n<p>现在我们就可以对 goods 添加流控规则了，也就是上面的第 4 步</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170741307.png\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170755887.png\" alt=\"image-20231017075526647\"></p>\n<p>使用 jmeter 进行测试</p>\n<p>发起 200 个请求每秒发起 4 个 ，而且同时发起两个请求</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170802306.png\" alt=\"image-20231017080217215\"></p>\n<p>可以看到请求 save 没问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170806261.png\" alt=\"image-20231017080631501\"></p>\n<p>可以看到请求 query 时是两个两个的。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170806763.png\" alt=\"image-20231017080641204\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>流控模式有哪些？</p>\n<ul>\n<li>直接：对当前资源限流</li>\n<li>关联：高优先级资源触发阈值，对低优先级资源限流</li>\n<li>链路：阈值统计时，只统计从指定资源进入当前资源的请求，是对请求来源的限流</li>\n</ul>\n</blockquote>\n<h4 id=\"1524-流控效果\"><a class=\"markdownIt-Anchor\" href=\"#1524-流控效果\">#</a> 1.5.2.4、流控效果🌲</h4>\n<p>流控效果是指请求达到流控阈值时应该采取的措施，包括三种：</p>\n<ul>\n<li>快速失败：达到阈值后，新的请求会被立即拒绝并抛出 FlowException 异常。是默认的处理方式。</li>\n<li>warm up：预热模式，对超出阈值的请求同样是拒绝并抛出异常。但这种模式阈值会动态变化，从一个较小值逐渐增加到最大阈值</li>\n<li>排队等待：让所有的请求按照先后次序排队执行，两个请求的剪个不能小于指定时长</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170813160.png\" alt=\"image-20231017081328807\"></p>\n<h5 id=\"15241-流控效果-warm-up\"><a class=\"markdownIt-Anchor\" href=\"#15241-流控效果-warm-up\">#</a> 1.5.2.4.1、流控效果 - warm up🌴</h5>\n<p>warm up 也叫预热模式，是应对服务冷启动的一种方案。请求阈值初始值是 threshold 除以 coldFactor，持续指定时长后，逐渐提高到 threshold 值。而 clodFactor 的默认值是 3.</p>\n<p>例如，我设置 QPS 的 threshold 为 10，预热时间为 5 秒，那么初始阈值就是 10 / 3，也就是 3，然后在 5 秒后逐渐增长到 10</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170818338.png\" alt=\"image-20231017081845114\"></p>\n<h6 id=\"152411-案例流控效果-warm-up\"><a class=\"markdownIt-Anchor\" href=\"#152411-案例流控效果-warm-up\">#</a> 1.5.2.4.1.1、案例，流控效果 - warm up🎋</h6>\n<p>需求：给 /order/{orderId} 这个资源设置限流，最大 QPS 为 10，利用 warm up 效果，预热时长为 5 秒</p>\n<p>请求一下通过 id 查询的 uri：<a href=\"http://localhost:8088/order/101\">http://localhost:8088/order/101</a></p>\n<p>然后回到 Sentinel 刷新页面，就可以看到 orderId 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170823021.png\" alt=\"image-20231017082330841\"></p>\n<p>给 orderId 添加一个流控规则</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170827278.png\" alt=\"image-20231017082705193\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170827270.png\" alt=\"image-20231017082714223\"></p>\n<p>使用 jmeter 进行测试：</p>\n<p>可以看到通过的 QPS 越来越多</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170829082.png\" alt=\"image-20231017082949095\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170830693.png\" alt=\"image-20231017083005138\"></p>\n<h5 id=\"15242-流控效果-排队等待\"><a class=\"markdownIt-Anchor\" href=\"#15242-流控效果-排队等待\">#</a> 1.5.2.4.2、流控效果 - 排队等待🌴</h5>\n<p>当请求超过 QPS 阈值时，快速失败和 warm up 会拒绝新的请求并抛出异常。而排队等待则是让所有请求进入一个队列中，然后按照阈值允许的时间间隔依次执行。后来的请求必须等待前面执行完成。如果请求预期的等待时间超出最大时长，则会被拒绝。</p>\n<p>例如：QPS=5，意味着每 200ms 处理一个队列中的请求；timeout=2000，意味着预期等待超过 2000ms 的请求会被拒绝并抛出异常</p>\n<p>比如下面的时间线，有无数个请求要进入队列执行，那第一个进入队列的请求它的等待时间一定是 0ms。但是同一时刻又来了一个请求那么第二个请求它一定要等待至少 200ms，所以它的预期等待时间就是 2 秒，后面的请求以此类推。直到等到时间最多为 2000ms 时，再来一个请求它的等待时间就是超出这 2000ms 的时间了，而超出的请求就会被拒绝</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170838123.png\" alt=\"image-20231017083846925\"></p>\n<p>好处：假设说请求 QPS 是波动型的，比如说第一秒钟一个请求也没来，这时队列是空的。结果第二秒一下来了 10 个请求，放到队列里然后每 200ms 放行一个换算成 QPS 就是 5，所以不管进入的 QPS 是怎样波动的出去的 QPS 一定是稳定的按照 200ms 一个的速度去放。所以就起到了流量整形的作用</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170854889.png\" alt=\"image-20231017085359679\"></p>\n<h6 id=\"152421-案例流控效果-排队等待\"><a class=\"markdownIt-Anchor\" href=\"#152421-案例流控效果-排队等待\">#</a> 1.5.2.4.2.1、案例，流控效果 - 排队等待🎋</h6>\n<p>需求：给 /order/{orderId} 这个资源设置限流，最大 QPS 为 10，利用排队的流控效果，超时时长设置为 5ss</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170859614.png\" alt=\"image-20231017085932633\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170901195.png\" alt=\"image-20231017090152352\"></p>\n<p>使用 jmeter 进行测试：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170908478.png\" alt=\"image-20231017090853567\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170909192.png\" alt=\"image-20231017090906285\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>流控效果有哪些？</p>\n<ul>\n<li>快速失败：QPS 超过阈值时，拒绝新的请求</li>\n<li>warm up：QPS 超过阈值时，拒绝新的请求；QPS 阈值是逐渐提升的，可以避免冷启动时高并发导致服务宕机。</li>\n<li>排队等待：请求会进入队列，按照阈值允许的时间间隔依次执行请求；如果请求预期等待时长大于超时时间，直接拒绝</li>\n</ul>\n</blockquote>\n<h3 id=\"153-热点参数限流\"><a class=\"markdownIt-Anchor\" href=\"#153-热点参数限流\">#</a> 1.5.3、热点参数限流🌲</h3>\n<p>之前的限流是统计访问某个资源的所有请求，判断是否超过 QPS 阈值。而热点参数限流是分别统计<mark>参数值相同</mark>的请求，判读是否超过 QPS 阈值。</p>\n<p>比如说：有一个资源是根据 id 查询商品，共有 4 个请求。如果按照原来的统计方式那 QPS 就是 4。而按照热点参数它会根据参数值来判断，前三个请求传递的 id 为 1，而最后一个传递的 id 为 2。所以 QPS 统计就会分开统计了，id 为 1 的统计为 3 个 QPS 就为 3，id 为 2 的统计为 1 个 QPS 就为 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170919488.png\" alt=\"image-20231017091910421\"></p>\n<h4 id=\"1531-配置热点限流\"><a class=\"markdownIt-Anchor\" href=\"#1531-配置热点限流\">#</a> 1.5.3.1、配置热点限流🌴</h4>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170920122.png\" alt=\"image-20231017092015196\"></p>\n<p>参数索引：代表当前列表中索引为 0 的参数也就是第一个</p>\n<p>单机阈值 + 统计窗口时长 = n 秒钟最多处理 5 个请求</p>\n<p>代表的含义是：对 hot 这个资源的 0 号参数 (第一个参数) 做统计，每 1 秒<strong>相同参数值</strong>的请求数不能超过 5</p>\n<h4 id=\"1532-配置热点限流高级项\"><a class=\"markdownIt-Anchor\" href=\"#1532-配置热点限流高级项\">#</a> 1.5.3.2、配置热点限流高级项🌴</h4>\n<p>在热点参数限流的高级选项中，可以对部分参数设置例外配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310170924654.png\" alt=\"image-20231017092441509\"></p>\n<p>结合上一个配置，这里的含义是对 0 号的 long 类型参数限流，每 1 秒相同参数的 QPS 不能超过 5，有两个例外：</p>\n<p>1、如果参数值是 100，则每 1 秒允许的 QPS 为 10</p>\n<p>2、如果参数值是 101，则每 1 秒允许的 QPS 为 15</p>\n<h4 id=\"1533-案例热点参数限流\"><a class=\"markdownIt-Anchor\" href=\"#1533-案例热点参数限流\">#</a> 1.5.3.3、案例，热点参数限流🌴</h4>\n<p>给 /order/{orderId} 这个资源添加热点参数限流，规则如下：</p>\n<ul>\n<li>默认的热点参数规则是每 1 秒请求量不超过 2</li>\n<li>给 102 这个参数设置例外：每 1 秒请求量不超过 4</li>\n<li>给 103 这个参数设置例外：每 1 秒请求量不超过 10</li>\n</ul>\n<blockquote>\n<p><font color='red'>注意</font>：</p>\n<p>热点参数限流对默认的 SpringMVC 资源无效</p>\n</blockquote>\n<p>步骤：</p>\n<p>1、热点参数限流对默认的 SpringMVC 资源无效，我们 order/{orderId} 这个资源恰好就是 Sentinel 默认对 SpringMVC 监控的一个资源，所以即便配置了热点参数也不会生效，只有通过 @SentinelResource 去声明的资源才可以配置热点参数限流</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SentinelResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hot\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;orderId&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span> <span class=\"token function\">queryOrderByUserId</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orderId\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> orderId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 根据 id 查询订单并返回</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> orderService<span class=\"token punctuation\">.</span><span class=\"token function\">queryOrderById</span><span class=\"token punctuation\">(</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这时资源就同时具备了两个名称了，一个是 order/{orderId} 这是默认的 SpringMVC 资源名称。</p>\n<p>另外一个就是我们自己起的 hot</p>\n<p>重启 orderService 服务后访问页面 uri：<a href=\"http://localhost:8088/order/101\">http://localhost:8088/order/101</a></p>\n<p>这样就可以看到蔟点链路了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171009407.png\" alt=\"image-20231017100944355\"></p>\n<p>2、配置热点限流，不要点击树形列表中的热点这个表单里面没有高级配置</p>\n<p>我们点击左边的选项栏中的热点规则，进行配置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171011792.png\" alt=\"image-20231017101141197\"></p>\n<p>点击新增热点限流规则就会弹出一个表单进行配置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171015751.png\" alt=\"image-20231017101511501\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171017813.gif\" alt=\"test\"></p>\n<p>使用 jmeter 进行测试：</p>\n<p>order/101 的请求结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171021326.png\" alt=\"image-20231017102157624\"></p>\n<p>order/102 请求的结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171022007.png\" alt=\"image-20231017102216489\"></p>\n<p>order/103 请求结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171022759.png\" alt=\"image-20231017102239351\"></p>\n<p>Sentinel 的控制台情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171022389.png\" alt=\"image-20231017102256408\"></p>\n<h2 id=\"16-隔离和降级\"><a class=\"markdownIt-Anchor\" href=\"#16-隔离和降级\">#</a> 1.6、隔离和降级🌳</h2>\n<ul>\n<li>FeignClient 整合 Sentinel</li>\n<li>线程隔离 (舱壁模式)</li>\n<li>熔断降级</li>\n</ul>\n<p><strong>回顾，隔离和降级的原理</strong></p>\n<p>虽然限流可以尽量避免因高并发而引起的服务故障，但服务还会因为其它原因而故障。而要将这些故障控制在一定范围，避免雪崩，就要靠线程隔离 (舱壁模式) 和熔断降级手段了。</p>\n<p>给每个业务划分线程池，当有请求访问业务 1 时最多使用十个线程，虽然服务 C 故障了请求过程中会阻塞但是最多只占用 10 个线程资源</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171031862.png\" alt=\"image-20231017103151291\"></p>\n<p>熔断降级会统计故障服务的比例，比如说服务 A 访问服务 D 成功的只有一个，故障的有两个这时的比例就是 60%。此时 断路器就会熔断业务，再有要请求服务 D 的业务就会快速失败</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171033093.png\" alt=\"image-20231017103347716\"></p>\n<p>不管是线程隔离还是熔断降级，都是对 <font color='red'>客户端 (调用方) </font>. 的保护</p>\n<h3 id=\"161-feign整合sentinel\"><a class=\"markdownIt-Anchor\" href=\"#161-feign整合sentinel\">#</a> 1.6.1、Feign 整合 Sentinel🌲</h3>\n<p>SpringCloud 中，微服务调用都是通过 Feign 来实现的，因此做客户端保护必须整合 Feign 和 Sentinel</p>\n<p>1、修改 OrderService 的 applicaiton.yml 文件，开启 Feign 的 Sentinel 功能</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">feign</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token key atrule\">sentinel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启 feign 对 sentinel 的支持</span></pre></td></tr></table></figure><p>2、给 FeignClient 编写失败后的降级逻辑</p>\n<p>2.1、方式一：FallbackClass，无法对远程调用的异常做处理</p>\n<p>2.2、方式二：FallbackFactory，可以对远程调用的异常做处理，我们选择这种</p>\n<p>2.2.1、在 feign-api 项目中定义类，实现 FallbackFactory：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserClientFallbackFactory</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FallbackFactory</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserClient</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 创建 UserClient 接口实现类，实现其中的方法，编写失败降级的处理逻辑</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token comment\">// 记录异常信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询用户异常\"</span><span class=\"token punctuation\">,</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\">// 根据业务需求返回默认的数据，这里是空用户</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2.2.2、在 feign-api 项目中的 DefaultFeignConfigration 类中将 UserClientFallbackFactory 注册为一个 Bean：</p>\n<p>声明 Bean 很简单，定义函数返回 new 出来的对象并注册 Bean 就行了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">UserClientFallbackFactory</span> <span class=\"token function\">userClientFallbackFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserClientFallbackFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2.2.3、在 feign-api 项目中的 UserClient 接口中使用 UserClientFallbackFactory：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"userservice\"</span><span class=\"token punctuation\">,</span> fallbackFactory <span class=\"token operator\">=</span> <span class=\"token class-name\">UserClientFallbackFactory</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、重启 orderService 服务</p>\n<p>重复完成后查看 Sentinel 的蔟点链路情况，下面的情况说明完成了 Feign 与 Sentinel 的整合了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171304966.png\" alt=\"image-20231017130442973\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Sentinel 支持的雪崩解决方案：</p>\n<ul>\n<li>线程隔离 (仓壁模式)</li>\n<li>降级熔断</li>\n</ul>\n<p>Feign 整合 Sentinel 的步骤：</p>\n<ol>\n<li>在 application.yml 中配置：feign.sentinel.enable = true</li>\n<li>给 FeignClient 编写 FallbackFactory 并注册为 Bean</li>\n<li>将 FallbackFactory 配置到 FeignClient</li>\n</ol>\n</blockquote>\n<h3 id=\"162-线程隔离\"><a class=\"markdownIt-Anchor\" href=\"#162-线程隔离\">#</a> 1.6.2、线程隔离🌲</h3>\n<p>线程隔离有两种方式实现：</p>\n<ul>\n<li>线程池隔离</li>\n<li>信号量隔离 (Sentinel 默认采用)</li>\n</ul>\n<p>通过案例来查看两个线程隔离的差别：</p>\n<p>假设说有四个服务 i，a，b，c 。服务 i 里面的业务依赖于服务 a，b，c。比方说来了一个请求，它的业务依赖于服务 a，b。如果说我们现在用的是线程池隔离那么它就会给这个业务所依赖的每个服务都创建线程池，请求来了以后不会使用请求本身的线程，而是去创建的线程池中分别取一个线程而用这个线程去调用 Feign 的客户端，发起远程调用。这样呢就把两个服务隔离了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171315936.png\" alt=\"image-20231017131457045\"></p>\n<p>而如果采用的是信号量的模式就简单多了。比如说来了一个请求，要访问服务 c。它会使用请求本身的线程直接去调用 Feign 的客户端去调用服务 c。那它怎么做隔离呢？它会在请求进入时做一个判断，维持了一个计数器。判断现在计数器还有没有。比如说计数器总数为 10 每进入一个请求计数器就会减 1，然后就可以去访问服务 c 了。当来了十个请求计数器被取完后再来新请求就会被拒绝。这样就等于利用计数器限制了最终线程的数量了。如果处理完请求计数器还是要还回去的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171319389.png\" alt=\"image-20231017131940276\"></p>\n<h4 id=\"1621-两者的优缺点\"><a class=\"markdownIt-Anchor\" href=\"#1621-两者的优缺点\">#</a> 1.6.2.1、两者的优缺点：</h4>\n<h5 id=\"线程池隔离\"><a class=\"markdownIt-Anchor\" href=\"#线程池隔离\">#</a> 线程池隔离</h5>\n<p><strong>优点</strong>：</p>\n<p>1、支持主动超时</p>\n<p>如果发现请求有点久了可以手动的终止线程</p>\n<p>2、支持异步调用</p>\n<p>每一次请求都是一个独立的线程而不是 tomcat 请求的线程</p>\n<p><strong>缺点</strong>：</p>\n<p>1、线程的额外开销比较大</p>\n<p>场景：</p>\n<p>1、低扇出</p>\n<p>扇出：比方说请求到我这个服务，而我这个服务依赖于其它的 n 个服务。就是从我这来了，来了一个而后我扇出了好几个。如果依赖的服务越多，那扇出也就越高，而扇出越高调用的越多我需要开启的线程也越多，消耗也就越大。所以它不适用于高扇出的场景！</p>\n<h5 id=\"信号量隔离\"><a class=\"markdownIt-Anchor\" href=\"#信号量隔离\">#</a> 信号量隔离</h5>\n<p><strong>优点</strong>：</p>\n<p>1、轻量级，无额外开销</p>\n<p><strong>缺点</strong>：</p>\n<p>1、不支持主动超时</p>\n<p>2、不支持异步调用</p>\n<p>场景：</p>\n<p>1、高频调用</p>\n<p>2、高扇出</p>\n<h4 id=\"1622-线程隔离-舱壁模式\"><a class=\"markdownIt-Anchor\" href=\"#1622-线程隔离-舱壁模式\">#</a> 1.6.2.2、线程隔离 (舱壁模式)🌴</h4>\n<p>在添加限流规则时，可以选择两种阈值类型：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171332558.png\" alt=\"image-20231017133257502\"></p>\n<ul>\n<li>QPS：就是每秒的请求数，在快速入门中已经演示过</li>\n<li>线程数：是该资源能使用的 tomcat 线程数的最大值。也就是通过限制线程数量，实现<font color='red'>舱壁模式</font>.</li>\n</ul>\n<h5 id=\"16221-案例线程隔离-舱壁模式\"><a class=\"markdownIt-Anchor\" href=\"#16221-案例线程隔离-舱壁模式\">#</a> 1.6.2.2.1、案例，线程隔离 (舱壁模式)🎋</h5>\n<p>需求：给 UserClient 的查询用户接口设置流控规则，线程数不能超过 2。然后利用 jmeter 测试。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171336102.png\" alt=\"image-20231017133620881\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171336135.png\" alt=\"image-20231017133657213\"></p>\n<p>配置完成！使用 jmeter 进行高并发测试：</p>\n<p>其中的线程数为 10，时间为 0。表示一瞬间发 10 个线程请求。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171337544.png\" alt=\"image-20231017133755763\"></p>\n<p>测试结果：</p>\n<p>但是怎么没有看到被拒绝的请求呢？</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171341275.png\" alt=\"image-20231017134110845\"></p>\n<p>其实我们做了降级策略了</p>\n<p>在 FeignClient 注解中加了 fallbackFactory</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"userservice\"</span><span class=\"token punctuation\">,</span> fallbackFactory <span class=\"token operator\">=</span> <span class=\"token class-name\">UserClientFallbackFactory</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>所以当线程隔离被降级以后它不是报错，而是会走这个降级逻辑返回一个空对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserClientFallbackFactory</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FallbackFactory</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserClient</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 创建 UserClient 接口实现类，实现其中的方法，编写失败降级的处理逻辑</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token comment\">// 记录异常信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询用户异常\"</span><span class=\"token punctuation\">,</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\">// 根据业务需求返回默认的数据，这里是空用户</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但是在 idea 的控制台会打印异常的信息</p>\n<pre><code>10-17 13:40:38:046 ERROR 1804 --- [nio-8088-exec-3] c.i.f.c.f.UserClientFallbackFactory : 查询用户异常\n</code></pre>\n<p>我们在回到 jmeter 点击请求查看详细情况，有的获取的数据是空的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171347804.png\" alt=\"image-20231017134731646\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>线程隔离的两种手段是？</p>\n<ul>\n<li>信号隔离</li>\n<li>线程池隔离</li>\n</ul>\n<p>信号量隔离的特点是？</p>\n<ul>\n<li>基于计数器模式，简单，开销小</li>\n</ul>\n<p>线程池隔离的特点是？</p>\n<ul>\n<li>基于线程池模式，有额外开销，但隔离控制更强</li>\n</ul>\n</blockquote>\n<h3 id=\"163-熔断降级\"><a class=\"markdownIt-Anchor\" href=\"#163-熔断降级\">#</a> 1.6.3、熔断降级🌲</h3>\n<p>熔断降级是解决雪崩问题的重要手段。其思路是由<font color='red'>断路器</font>统计服务调用的异常比例，慢请求比例，如果超出阈值则会<font color='red'>熔断</font>该服务。即拦截访问该服务的一切请求；而当请求恢复时，断路器会放行访问该服务的请求。</p>\n<p>断路器内部由一个状态机来实现的，这个状态机包含三种状态，分别是：closed，open，Half-Open</p>\n<p>closed 状态下，断路器不会拦截任何请求。不管请求是正常的还是异常的都可以访问，它会去统计调用异常的比例，如果统计过程中发现异常比例过高达到了阈值就会从 closed 状态切换到 open 状态、这时就会拦截进入该服务的一些请求了也就相当于是熔断了。熔断有一个持续的时间，当熔断时间结束就会从 open 状态切换到 half-open 状态 (半开状态)。half-open 状态会放行一次请求，然后根据这次请求的结果来判断下一步。</p>\n<p>比如说放行一次请求发现这个请求依赖是失败的那么就会再次进入 open 状态</p>\n<p>如果放行一次请求执行完了发现是成功的那么就会从 half-open 切换到 closed 状态</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171422210.png\" alt=\"image-20231017142215093\"></p>\n<p>我们知道断路器要想从 closed 状态进入到 open 状态需要判断服务有没有触发熔断的条件。而熔断判断的条件就是依据熔断策略来完成的，而在 Sentinel 里熔断的策略有三种：慢调用，异常比例，异常数</p>\n<h4 id=\"1631-熔断策略-慢调用\"><a class=\"markdownIt-Anchor\" href=\"#1631-熔断策略-慢调用\">#</a> 1.6.3.1、熔断策略 - 慢调用🌴</h4>\n<p><mark>慢调用</mark>：业务的响应时长 (RT) 大于指定时长的请求认定为慢调用请求。在指定时间内，如果请求数量超过设定的最小数量，慢调用比例大于设定的阈值，则触发熔断。例如：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171428040.png\" alt=\"image-20231017142805647\"></p>\n<p><strong>解读</strong>：RT 超过 500ms 的调用是慢调用，统计最近 10000ms 内的请求，如果请求量超过 10 次，并且慢调用比例不低于 0.5，则触发熔断，熔断时长为 5 秒。然后进入 half-open 状态，放行一次请求做测试。</p>\n<h5 id=\"16311-案例熔断策略-慢调用\"><a class=\"markdownIt-Anchor\" href=\"#16311-案例熔断策略-慢调用\">#</a> 1.6.3.1.1、案例，熔断策略 - 慢调用🎋</h5>\n<p>需求：给 UserClient 的查询用户接口设置降级规则，慢调用的 RT 阈值为 50ms，统计时间为 1 秒， 最小请求数量为 5，失败阈值比例为 0.4，熔断时长为 5</p>\n<p>问题：本地调用时间不可能那么长所以为了能够触发慢调用需要修改一下业务代码让其超过响应时间</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestHeader</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"Truth\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> truth<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 休眠，触发熔断</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"truth: \"</span> <span class=\"token operator\">+</span> truth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">return</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重启 userService 服务</p>\n<p>访问 order/101 时就会去请求 userId 为 1 的用户</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171439770.png\" alt=\"image-20231017143949635\"></p>\n<p>order/102</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171441135.png\" alt=\"image-20231017144136736\"></p>\n<p>order/101</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171441279.png\" alt=\"image-20231017144150302\"></p>\n<p>可以看到 102 请求时长基本不超过 10 毫秒，而 101 请求时长基本不下 70 毫秒。这样就能满足我们触发阈值的情况了</p>\n<p>然后就可以去配置熔断降级策略了，去 Sentinel 控制台中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171445150.png\" alt=\"image-20231017144506913\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171445998.png\" alt=\"image-20231017144515744\"></p>\n<p>然后我们就可以去进行测试了：</p>\n<p>这次的测试可以不用 jmeter 了，因为需要一秒内 5 次请求，有 2 次触发就行了很容易可以去刷新 order/{orderId} 的请求页面</p>\n<p>现在访问 order/102，是正常可以访问的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171448397.png\" alt=\"image-20231017144804306\"></p>\n<p>连续请求 5 次 order/101，也就是刷新 5 次页面</p>\n<p>再去访问 order/102 就会发现 user 中没有数据了，当 order 去查 user 的那一刻直接被熔断了，压根没有去查直接走降级逻辑返回 null 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171449564.png\" alt=\"image-20231017144859133\"></p>\n<p>等待 5 秒后再去刷新一个 order/102 页面，熔断就取消了可以请求到 user 的数据了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171451453.png\" alt=\"image-20231017145103496\"></p>\n<h4 id=\"1632-熔断策略-异常比例异常数\"><a class=\"markdownIt-Anchor\" href=\"#1632-熔断策略-异常比例异常数\">#</a> 1.6.3.2、熔断策略 - 异常比例，异常数🌴</h4>\n<ul>\n<li><mark>异常比例或异常数</mark>：统计指定时间内的 调用，如果调用次数超过指定的请求数，并且出现异常的比例达到设定的比例阈值 (或超过指定异常数) ，则触发熔断。例如：</li>\n</ul>\n<p>按照异常的比例熔断</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171454750.png\" alt=\"image-20231017145414614\"></p>\n<p>达到异常数量熔断</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171456985.png\" alt=\"image-20231017145619743\"></p>\n<p><strong>解读</strong>：统计最近 1000ms 内的请求，如果请求量超过 10 次，并且异常比例不低于 0.5，则触发熔断，熔断时长为 5 秒。然后进入 half-open 状态，放行一次请求做测试。</p>\n<h5 id=\"16321-案例熔断策略-异常比例\"><a class=\"markdownIt-Anchor\" href=\"#16321-案例熔断策略-异常比例\">#</a> 1.6.3.2.1、案例，熔断策略 - 异常比例🎋</h5>\n<p><strong>需求</strong>：给 UserClient 的查询用户接口设置降级规则，统计时间为 1 秒，最小请求数量为 5，失败阈值比例为 0.4，熔断时长为 5</p>\n<p><font color='red'>提示</font>：为了触发异常统计，我们需要修改 UserService 中的业务，抛出异常如下代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestHeader</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"Truth\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> truth<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"故意抛出异常，触发异常比例熔断\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"truth: \"</span> <span class=\"token operator\">+</span> truth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">return</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>给 UserClient 查询用户接口设置降级规则</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171511550.png\" alt=\"image-20231017151144666\"></p>\n<p>访问 order/102</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171512960.png\" alt=\"image-20231017151235103\"></p>\n<p>然后连续访问 n 次 order/101</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171516133.png\" alt=\"image-20231017151605944\"></p>\n<p>在访问 order/102 就发现被熔断了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171515798.png\" alt=\"image-20231017151556049\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Sentinel 熔断降级的策略有哪些？</p>\n<p>1、慢调用比例：超过指定时长的调用为慢调用，统计单位时长内慢调用的比例，超过阈值则熔断</p>\n<p>2、异常比例：统计单位时长内异常调用的比例，超过阈值则熔断</p>\n<p>3、异常数：统计单位时长内异常调用的次数，超过阈值则熔断</p>\n</blockquote>\n<h2 id=\"17-授权规则\"><a class=\"markdownIt-Anchor\" href=\"#17-授权规则\">#</a> 1.7、授权规则🌳</h2>\n<ul>\n<li>授权规则</li>\n<li>自定义异常结果</li>\n</ul>\n<h3 id=\"171-授权规则\"><a class=\"markdownIt-Anchor\" href=\"#171-授权规则\">#</a> 1.7.1、授权规则🌲</h3>\n<p>授权规则可以对调用方的来源做控制，有白名单和黑名单两种方式。</p>\n<blockquote>\n<p>我们学习网关的时候讲过，gateway 它不就是把门的吗。所有请求都要经过网关去做身份的认证，怎么到这儿又要整一个呢？</p>\n<p>万一公司出了一个内鬼，它把微服务地址泄露给了外边哪些不怀好意的人，那这些哥们就可以绕过网关直接访问微服务了。那网关里做的再严密也都没用了，所以 Sentinel 授权规则可以解决这个问题。授权规则会去验证你请求从哪来的。如果说你是从网关过来的那就放行，如果说你从别的地方来的就拦截</p>\n</blockquote>\n<ul>\n<li>白名单：来源 (origin) 在白名单内的调用者允许访问</li>\n<li>黑名单：来源 (origin) 在黑名单内的调用者不允许访问</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171530129.png\" alt=\"image-20231017153026632\"></p>\n<p>例如，我们限定只允许从网关来的请求访问 order-service，那么流控应用中就填写网关的名称</p>\n<p>那么这时</p>\n<p orderId=\"\">资源名填的就是：order-service 里面的受保护资源，比方说 order/</p>\n<p>流控应用填的就是：允许的调用者的名字 origin，请求来源名称，那么请求来源名称是怎么得到的呢？</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171531533.png\" alt=\"image-20231017153153844\"></p>\n<p>Sentinel 是通过 RequestOriginParser 这个接口的 parseOrigin 来获取请求的来源的。</p>\n<p>但是这个方法的返回结果只能是 default，也就是说无论是从网关过来还是浏览器过来它的来源名称都叫 default</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequestOriginParser</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   * 从请求 request 对象中获取 origin，获取方式自定义</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> <span class=\"token function\">parseOrigin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>所以我们必须自己想办法实现这个接口编写它的业务逻辑，让从网关过来的请求和从浏览器过来的请求返回不同的结果，这样来源名称不同就可以编写授权规则了</p>\n<p>例如，我们尝试从 reqeust 中获取一个名为 origin 的请求头，作为 origin 的值：</p>\n<p>这里 gateway 访问消费者也就是 orderservice 服务所以下面业务代码是写到 order 服务中的</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderOriginParser</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RequestOriginParser</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">parseOrigin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 1. 获取请求头</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">String</span> header <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 2. 非空判断</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            header <span class=\"token operator\">=</span> <span class=\"token string\">\"blank\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> header<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们还需要在 gateway 服务中，利用网关的过滤器添加名为 gateway 的 origin 头</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">default-filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> AddRequestHeader=origin<span class=\"token punctuation\">,</span>gateway <span class=\"token comment\"># 添加名为 origin 的请求头，值为 gateway</span></pre></td></tr></table></figure><p>重启 orderservice 服务和 gateway 服务</p>\n<p>随便访问一个 uri：<a href=\"http://localhost:8088/order/101\">http://localhost:8088/order/101</a></p>\n<p>然后查看 Sentinel 控制台中的蔟点链路</p>\n<p>然后我们就可以给 /order/{orderId} 配置授权规则：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171605527.png\" alt=\"image-20231017160506456\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171605725.png\" alt=\"image-20231017160532751\"></p>\n<p>此时我们再去访问 order/101 服务</p>\n<p>注意：这里 order/101 是绕过了网关的</p>\n<p>访问是不成功的。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171605535.png\" alt=\"image-20231017160543084\"></p>\n<p>那我们使用网关进行访问的</p>\n<p>可以正常访问</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171606887.png\" alt=\"image-20231017160611726\"></p>\n<p>但是由于上面直接跳过网关访问 order/101 的时候就会报错，页面的报错提示如下：</p>\n<p>说是限流异常这就不合理了，明明是授权异常怎么就限流异常了呢</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171609433.png\" alt=\"image-20231017160543084\"></p>\n<p>所以我们可以对其进行自定义异常：</p>\n<h3 id=\"172-自定义异常结果\"><a class=\"markdownIt-Anchor\" href=\"#172-自定义异常结果\">#</a> 1.7.2、自定义异常结果🌲</h3>\n<p>默认情况下，发生限流，降级，授权拦截时，都会抛出异常到调用方。如果要自定义异常时的返回结果，需要实现 BlockExceptionHanlder 接口：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BlockExcpetionHandler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   * 处理请求被限流，降级，授权拦截时抛出的异常：BlockException</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BlockExcpetion</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>而 BlockException 包含很多个子类，分别对应不同的场景：</p>\n<table>\n<thead>\n<tr>\n<th>异常</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FlowException</td>\n<td>限流异常</td>\n</tr>\n<tr>\n<td>ParamFlowException</td>\n<td>热点参数限流的异常</td>\n</tr>\n<tr>\n<td>DegradeException</td>\n<td>降级异常</td>\n</tr>\n<tr>\n<td>AuthorityException</td>\n<td>授权规则异常</td>\n</tr>\n<tr>\n<td>SystemBlockException</td>\n<td>系统规则异常</td>\n</tr>\n</tbody>\n</table>\n<p>我们在 order-service 中定义类，实现 BlockExceptionHandler 接口：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SentinelBlockHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BlockExceptionHandler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> httpServletRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BlockException</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"未知异常\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> status <span class=\"token operator\">=</span> <span class=\"token number\">429</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">FlowException</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token string\">\"请求被限流了 !\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">DegradeException</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token string\">\"请求被降级了 !\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ParamFlowException</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token string\">\"热点参数限流 !\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">AuthorityException</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            msg <span class=\"token operator\">=</span> <span class=\"token string\">\"请求没有权限 !\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            status <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/json;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        response<span class=\"token punctuation\">.</span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;\\\"message\\\": \\\"\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\",\\\"status\\\": \"</span> <span class=\"token operator\">+</span> status <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重启 orderservice 服务，然后访问一下 order/101。再去 Sentinel 控制台查看蔟点链路并添加授权规则：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171629649.png\" alt=\"image-20231017162948414\"></p>\n<p>然后再对 order/101 进行直接访问</p>\n<p>可以看到自定义异常成功了！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171630717.png\" alt=\"image-20231017163007309\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>获取请求来源的接口是什么？</p>\n<ul>\n<li>RequestOriginParser</li>\n</ul>\n<p>处理 BlockException 的接口是什么</p>\n<ul>\n<li>BlockExcpetionHandler</li>\n</ul>\n</blockquote>\n<h2 id=\"18-规则持久化\"><a class=\"markdownIt-Anchor\" href=\"#18-规则持久化\">#</a> 1.8、规则持久化🌳</h2>\n<ul>\n<li>规则管理模式</li>\n<li>实现 push 模式</li>\n</ul>\n<p>Sentinel 的控制台规则管理有三种模式：</p>\n<ul>\n<li>原始模式：Sentinel 的默认模式，将规则保存在内存，重启服务会丢失。</li>\n<li>pull 模式</li>\n<li>push 模式</li>\n</ul>\n<h3 id=\"181-规则管理模式-pull模式\"><a class=\"markdownIt-Anchor\" href=\"#181-规则管理模式-pull模式\">#</a> 1.8.1、规则管理模式 - pull 模式🌲</h3>\n<p>pull 模式：控制台将配置的规则推送到 Sentinel 客户端，而客户端会将配置规则保存在本地文件或数据库中。以后会定时去本地文件或数据库中查询，更新本地规则。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171635037.png\" alt=\"image-20231017163548813\"></p>\n<p>缺点：存在时效性问题，从而导致数据的不一致问题</p>\n<h3 id=\"182-规则管理模式-push模式\"><a class=\"markdownIt-Anchor\" href=\"#182-规则管理模式-push模式\">#</a> 1.8.2、规则管理模式 - push 模式🌲</h3>\n<p>push 模式：控制台将配置规则推送到远程配置中心，例如 Nacos。Sentinel 客户端监听 Nacos，获取配置变更的推送消息，完成本地配置更新</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171639844.png\" alt=\"image-20231017163912849\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Sentinel 的三种配置管理模式是什么？</p>\n<ul>\n<li>\n<p>原始模式：保存在内存</p>\n<p>不支持持久化</p>\n</li>\n<li>\n<p>pull 模式：保存在本地文件或数据库，定时去读取</p>\n<p>定时轮询存在时效性问题，导致数据不一致</p>\n</li>\n<li>\n<p>push 模式：保存在 Nacos，监听变更实时更新</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"183-实现push模式\"><a class=\"markdownIt-Anchor\" href=\"#183-实现push模式\">#</a> 1.8.3、实现 push 模式🌲</h3>\n<p>push 模式实现最为复杂，依赖于 Nacos，并且需要修改 Sentinel 控制台源码。</p>\n<p>详细步骤可以参考文章<a href=\"../sentinel%E6%8C%81%E4%B9%85%E5%8C%96/sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.md\"> sentinel 规则持久化</a>.</p>\n<h1 id=\"二-分布式事务\"><a class=\"markdownIt-Anchor\" href=\"#二-分布式事务\">#</a> 二、分布式事务🎄</h1>\n<ul>\n<li>seata</li>\n</ul>\n<p><strong>事务的 ACID 原则</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171718973.png\" alt=\"image-20231017171810630\"></p>\n<h2 id=\"21-分布式服务案例\"><a class=\"markdownIt-Anchor\" href=\"#21-分布式服务案例\">#</a> 2.1、分布式服务案例🌳</h2>\n<p>微服务下单业务，在下单时会调用订单服务，创建订单并写入数据库。然后订单服务调用账户服务和库存服务：</p>\n<ul>\n<li>账户服务负责扣减用户余额</li>\n<li>库存服务负责扣减商品库存</li>\n</ul>\n<p>比方说以下微服务：里面包含三个服务 订单服务，账户服务，库存服务。现在有一个用户下单的业务，用户下单时我希望订单服务去创建订单并且写入数据库，而后它再去调用账户服务和库存服务。账户服务去扣减用户的余额，而库存服务则去扣减商品库存。里面就包含了三个不同的微服务调用，而每个微服务都有自己独立的数据库，也就是独立的事务。最终希望的肯定是下单业务一旦执行每一个服务都要成功，如果失败都失败。但是能不能达到这样的结果呢下面进行验证</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171720793.png\" alt=\"image-20231017172030706\"></p>\n<h2 id=\"22-演示分布式事务问题\"><a class=\"markdownIt-Anchor\" href=\"#22-演示分布式事务问题\">#</a> 2.2、演示分布式事务问题 🌳</h2>\n<p>在分布式系统下，一个业务跨越多个服务或数据源，每个服务都是一个分支事务，要保证所有分支事务最终状态一致这样的事务就是<font color='red'>分布式事务</font>.</p>\n<p>1、导入微服务项目：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171737590.png\" alt=\"image-20231017173700559\"></p>\n<p>2、创建数据库，名为 seata_demo，然后导入 SQL 文件，改 SQL 文件在 seata-demo 项目中的 SQL 文件夹中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171737039.png\" alt=\"image-20231017173733114\"></p>\n<p>3、启动 nacos，所有微服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171955624.png\" alt=\"image-20231017195536248\"></p>\n<p>4、测试下单功能，发送 Post 请求</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171956965.png\" alt=\"image-20231017195605740\"></p>\n<p>发送请求后查看数据库</p>\n<p>账户表</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171956775.png\" alt=\"image-20231017195643886\"></p>\n<p>库存表</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171957799.png\" alt=\"image-20231017195701407\"></p>\n<p>可以发现，账户余额扣了 200 变成了 800，而库存扣了 2 变成了 8</p>\n<p>那么我们让扣除库存的时候报错看看会发生什么情况。</p>\n<p>现在库存不够 10 个了我请求扣 10 个就会发生报错。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171958176.png\" alt=\"image-20231017195804119\"></p>\n<p>可以看到响应结果 500 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171958776.png\" alt=\"image-20231017195845362\"></p>\n<p>此时我们再查看数据库的情况</p>\n<p>账户表</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171959625.png\" alt=\"image-20231017195918162\"></p>\n<p>库存表</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171959448.png\" alt=\"image-20231017195930412\"></p>\n<p>账户表的余额被扣了 200，但是库存表的数量却没有发生变化，这样显然是不合理的。</p>\n<p>下面我们来分析下这件事儿。</p>\n<p>在上面的业务中，订单服务去创建了订单然后去调用了账户服务和库存服务完成余额扣减和库存扣减，其中订单服务和账户服务都创建成功了。而库存服务在执行的时候却因为库存不足而失败了。那按照理论上讲这里报错前面都应该跟着回滚</p>\n<p>原因：</p>\n<p>1、每个服务都是独立的库存服务抛出异常其它服务也不知道</p>\n<p>2、每个服务都是独立的所以它们的事务也是独立的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172023838.png\" alt=\"image-20231017202319388\"></p>\n<p>如果要解决分布式事务的问题，首先要考虑四点：</p>\n<p>首先第一点：分布式事务产生的原因，这个上述分析过了。</p>\n<p>第二点：理解理论基础</p>\n<p>第三点：弄清 seata 原理</p>\n<p>第四点：利用 seata 手动实践，解决分布式事务问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172032081.png\" alt=\"image-20231017203228913\"></p>\n<p>学习内容：</p>\n<ul>\n<li>理论基础</li>\n<li>初始 Seata</li>\n<li>手动实践</li>\n<li>高可用</li>\n</ul>\n<h2 id=\"23-理论基础\"><a class=\"markdownIt-Anchor\" href=\"#23-理论基础\">#</a> 2.3、理论基础🌳</h2>\n<ul>\n<li>CAP 定理</li>\n<li>BASE 理论</li>\n</ul>\n<h3 id=\"231-cap定理\"><a class=\"markdownIt-Anchor\" href=\"#231-cap定理\">#</a> 2.3.1、CAP 定理🌲</h3>\n<p>1998 年，加州大学的计算机科学 Eric Brewer 提出，分布式系统有三个指标：</p>\n<p>1、Consistency (一致性)</p>\n<p>2、Availability (可用性)</p>\n<p>3、Partition tolerance (分区容错性)</p>\n<p>Eric Brewer 说，分布式系统无法同时满足这三个指标。</p>\n<p>这个结论就叫做 CAP 定理。</p>\n<p>三个圆不会同时重叠，最多两两重叠，也就是说同时满足两个</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172037268.png\" alt=\"image-20231017203753986\"></p>\n<h4 id=\"2311-cap定理-consistency\"><a class=\"markdownIt-Anchor\" href=\"#2311-cap定理-consistency\">#</a> 2.3.1.1、CAP 定理 - Consistency🌴</h4>\n<p>Consistency (一致性) ：用户访问分布式系统中的任意节点，得到的数据必须一致</p>\n<p>比方说有两个节点，第一个节点上有个数据叫 data 值为 0，第二个节点也是如此。现在用户不管是访问哪个节点，结果都是一样的。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172043065.png\" alt=\"image-20231017204312228\"></p>\n<p>但是，如果我对节点 node1 的数据进行了修改，这时两个节点的数据就不一样了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172044702.png\" alt=\"image-20231017204437374\"></p>\n<p>为了满足一致性就一定要把 node1 的数据同步到 node2 中，一旦数据同步完成，数据就再此一致了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172044179.png\" alt=\"image-20231017204454104\"></p>\n<p>所以，作为一个分布式系统在做数据备份的时候一定要及时完成数据同步这样才能满足一致性</p>\n<h4 id=\"2312-cap定理-availability\"><a class=\"markdownIt-Anchor\" href=\"#2312-cap定理-availability\">#</a> 2.3.1.2、CAP 定理 - Availability🌴</h4>\n<p>Availability (可用性) ：用户访问集群中的任意健康节点，必须能得到响应，而不是超时或拒绝</p>\n<p>比如说 node3 的请求被阻塞或者拒绝了，那所有的请求进来无法访问了，这时 node3 就是不可用了</p>\n<p>所以可用性是指这个节点能不能被正常的访问</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172048465.png\" alt=\"image-20231017204818409\"></p>\n<h4 id=\"2313-cap定理-partition-tolerance\"><a class=\"markdownIt-Anchor\" href=\"#2313-cap定理-partition-tolerance\">#</a> 2.3.1.3、CAP 定理 - Partition tolerance🌴</h4>\n<p>Partition (分区) ：因为网络故障或其它原因导致分布式系统中的部分节点与其它节点失去连接，形成独立分区。</p>\n<p>Tolerance (容错) ：在集群出现分区时，整个系统也要持续对外提供服务</p>\n<p>比如说 node3 因为网络故障与 node1 与 node2 断开了连接。node1 与 node2 之间正常访问。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172052718.png\" alt=\"image-20231017205201677\"></p>\n<p>此时整个集群就会被划分成两个区了。node1 和 node2 它俩是一个区，node3 自己是一个区，这时如果有用户向 node2 写入了一个数据，node2 可以把数据同步给 node1 的但是 node3 上不能同步到数据，因此这两个区的数据就不一致了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172055775.png\" alt=\"image-20231017205544452\"></p>\n<p>那如果我一定要满足数据的一致性呢，那我是不是可以让 node3 等待 node2 网络的恢复和数据的同步，在恢复之前所有来访问我的请求我都阻塞在这里。如果这么做可能会满足数据的一致性，但是 node3 明明是一个健康的节点结果进来的请求你都卡在这里不让人家访问，那 node3 不就是不可用了吗，所以它就不满足 可用性了。</p>\n<p>我要想满足可用性，我就没办法保证一致性。</p>\n<p>我要保证数据一致性，我就没办法让 node3 是可用性的</p>\n<p>当网络出现分区时，可用性和一致性没有办法同时满足。但是网络分区也是不可避免的。</p>\n<p>当 p 一定要实现，那么这时 c 和 a 之间就要做出抉择了。要么 c 要么 a 没有办法同时满足。这就是 CAP 定理了的原因了</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>简述 CAP 定理内容？</p>\n<ul>\n<li>分布式系统节点通过网络连接，一定会出现分区问题 §</li>\n<li>当分区出现时，系统的一致性 © 和可用性 (A) 就无法同时满足</li>\n</ul>\n<p>思考：elasticsearch 集群是 CP 还是 AP？</p>\n<p>答：ES 集群当网络出现故障时，有节点与其它节点断开连接的时候。es 集群处于一个警告状态，出现故障的节点过了一段时间后就会从集群中剔除，而这个节点上原来的数据分片。会分散到其它健康的节点上，而故障节点从集群中剔除用户无法访问了因此就牺牲了 可用性了。而数据会负责其它节点数据同步可以正常进行保证了数据的一致性。</p>\n<p>因此 es 集群显然是一个 CP。满足高一致性低可用性</p>\n</blockquote>\n<p>我们知道在分布式系统下网络分区是不可避免的，所以不得不在一致性和可用性之间做出一个选择。</p>\n<p>但是这两个特性都很重要我一个都不想放弃我该怎么办呢？Base 理论正好可以解决这个问题</p>\n<h3 id=\"232-base理论\"><a class=\"markdownIt-Anchor\" href=\"#232-base理论\">#</a> 2.3.2、BASE 理论🌲</h3>\n<p>BASE 理论是对 CAP 的一种解决思路，包含三个思想：</p>\n<ul>\n<li>Basically Available (基本可用)：分布式系统在出现故障时，允许损失部分可用性，即保证核心可用。</li>\n<li>Soft State (软状态)：在一定时间内，允许出现中间状态，比如临时的不一致状态。</li>\n<li>Eventually Consistent (最终一致性)：虽然无法保证强一致性，但是在软状态结束后，最终达到数据一致。</li>\n</ul>\n<p>而分布式事务最大的问题是各个子事务的一致性问题，因此可以借签 CAP 定理的 BASE 理论：</p>\n<ul>\n<li>AP 模式：各子事务分别执行和提交，允许出现结果不一致，然后采用弥补措施恢复数据即可，实现<font color='red'>最终一致</font>.</li>\n<li>CP 模式：各个子事务执行后互相等待，同时提交，同时回滚，达成<font color='red'>强一致</font>。但事务等待过程中，处于弱可用状态。</li>\n</ul>\n<h4 id=\"2321-分布式事务模型\"><a class=\"markdownIt-Anchor\" href=\"#2321-分布式事务模型\">#</a> 2.3.2.1、分布式事务模型🌴</h4>\n<p>解决分布式事务，各个子系统之间必须能感知到彼此的事务状态，才能保证状态一致，因此需要一个事务协调者来协调每一个事务的参与者 (子系统事务)。</p>\n<p>用户下单调用订单服务，然后去调用账户服务和库存服务。那这个地方我们就需要一个事务的协调者了，每个微服务都跟事务协调者保持联系，如果你现在要做强一致。订单服务执行的时候不要提交，扣款服务，扣库存服务，但是库存服务执行完后发现失败了。怎么知道的。它们要把自己的执行结果告知给协调者，然后协调者一看有人失败了将来再通知其它服务让它们做回滚，这样大家就能保持一致了</p>\n<p>每一个事务的参与者 (子系统事务)。</p>\n<p>这里的子系统事务，称为<font color='red'> 分支事务</font>.；有关联的各个分支事务 在一起称为 <font color='red'>全局事务</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310172141933.png\" alt=\"image-20231017214146879\"></p>\n<p>所以事务协调者，就是去协调各个分支事物的状态让它们达成一致</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>简述 BASE 理论三个思想：</p>\n<ol>\n<li>基本可用</li>\n<li>软状态</li>\n<li>最终一致</li>\n</ol>\n<p>解决分布式事务的思想和模型：</p>\n<ol>\n<li>全局事务：整个分布式事务</li>\n<li>分支事务：分布式事务中包含的每个子系统的事务</li>\n<li>最终一致思想：各分支事务分别执行并提交，如果有不一致的情况，再想办法恢复数据</li>\n<li>强一致思想：各分支事务执行完业务不要提交，等待彼此结果。而后统一提交或回滚</li>\n</ol>\n</blockquote>\n<h2 id=\"24-初始seata\"><a class=\"markdownIt-Anchor\" href=\"#24-初始seata\">#</a> 2.4、初始 Seata🌳</h2>\n<ul>\n<li>Seata 的架构</li>\n<li>部署 TC 服务</li>\n<li>微服务集成 Seata</li>\n</ul>\n<p>Seata 是 2019 年 1 月份蚂蚁金服和阿里巴巴共同开源的分布式事务解决方案。致力于提供高性能和简单易用的分布式事务服务，为用户打造一站式的分布式解决方案。</p>\n<p>官网地址：<a href=\"https://seata.io/zh-cn/\">https://seata.io/zh-cn/</a></p>\n<p><strong>Seata 事务管理中有三个重要的角色</strong>：</p>\n<p>1、TC (Transaction Coordinator) - 事务协调者：维护全局和分布式事务的状态，协调全局事务提交和回滚。</p>\n<p>2、TM (Transaction Manager) - 事务管理器：定义全局事务的范围，开始全局事务，提交或回滚全局事务。</p>\n<p>3、RM (Resource Manager) - 资源管理器：管理分支事务处理的资源，与 TC 交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180745437.png\" alt=\"image-20231018074554248\"></p>\n<p>Seata 根据要做强一致还是最终一致又延伸出了好几种不同的解决方案：</p>\n<p><strong>Seata 提供了四个不同的分布式解决方案</strong>：</p>\n<p>1、XA 模式：强一致性分阶段事务模式，牺牲了一定的可用性，无业务侵入</p>\n<p>2、TCC 模式：最终一致的分阶段事务模式，有业务侵入</p>\n<p>3、AT 模式：最终一致的分阶段事务模式，无业务侵入，也是 Seata 的默认模式</p>\n<p>4、SAGA 模式：长事务模式，有业务侵入</p>\n<h3 id=\"241-部署tc服务\"><a class=\"markdownIt-Anchor\" href=\"#241-部署tc服务\">#</a> 2.4.1、部署 TC 服务🌲</h3>\n<p>参考文章：<a href=\"../Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.md\">seata 的部署和集成</a>.</p>\n<h3 id=\"242-手动实践\"><a class=\"markdownIt-Anchor\" href=\"#242-手动实践\">#</a> 2.4.2、手动实践🌲</h3>\n<ul>\n<li>XA 模式</li>\n<li>AT 模式</li>\n<li>TCC 模式</li>\n<li>SAGA 模式</li>\n</ul>\n<h4 id=\"2421-xa模式原理\"><a class=\"markdownIt-Anchor\" href=\"#2421-xa模式原理\">#</a> 2.4.2.1、XA 模式原理🌴</h4>\n<p>XA 规则 是 X/Open 组织定义的分布式事务处理 (DTP，Distributed Transaction Processing) 标准，XA 规范 描述了全局的 TM 与局部的 RM 之间的接口，几乎所有主流的数据库都对 XA 规范 提供了支持。</p>\n<p>这种模式，它把分布式事务定义成了两个阶段。第一阶段为 “准备阶段” 在此阶段中实物协调者会向事务参与者 (RM) 去发起一个准备的请求，在上面讲述中 RM 是资源管理器，但是在 XA 标准中这个 RM 其实都是由数据区实现的。也就是说数据库本身实现了 RM 功能。事务协调者通知这些数据库去执行自己的业务，但是执行完不要提交，然后把执行结果告知事务协调者</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181016731.png\" alt=\"Snipaste_2023-10-18_10-16-42\"></p>\n<p>然后进行 “第二阶段” 事务协调者通知 RM 可以提交了。事务结束</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181017816.png\" alt=\"image-20231018101741714\"></p>\n<p>如果 第一阶段 有任意一个服务失败了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181018842.png\" alt=\"image-20231018101839751\"></p>\n<p>那么第二阶段，事务协调者就会通知所有的 RM 进行回滚</p>\n<p>XA 模式，其实就是基于数据库本身的特性去实现的一种分布式事务</p>\n<h4 id=\"2422-seata的xa模式\"><a class=\"markdownIt-Anchor\" href=\"#2422-seata的xa模式\">#</a> 2.4.2.2、seata 的 XA 模式🌴</h4>\n<p>seata 的 XA 模式做了一些调整，但大体相似：</p>\n<p>TM 注册全局事务，TM 作为分布式入口自然去调用微服务，调用微服务里面的 RM 拦截请求，seata 里面也实现了 RM，数据库也有 RM，在这个情况下 seata 的 RM 仅仅是代理你的请求。然后做一下分支事务的注册，接下来的事就是直接调用数据库了执行业务 SQL，但是执行完不提交，去报告一下事务的状态到 TC 就行了。所以 TC 此时就冲当了事务协调的作用了</p>\n<p>至此，第一阶段结束</p>\n<p>第二阶段 TM 发现业务结束了就去通知 TC，然后 TC 去检查事务的状态，都成功就成功。有一个失败就要回滚</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181126968.png\" alt=\"image-20231018112632854\"></p>\n<p>如果我们只看核心部分就和 XA 没有什么太大的区别了</p>\n<p><strong>RM 一阶段的工作</strong>：</p>\n<p>1、注册分支实物到 TC</p>\n<p>2、执行分支业务 sql 但不提交</p>\n<p>3、报告执行状态到 TC</p>\n<p><strong>TC 二阶段的工作</strong>：</p>\n<ul>\n<li>TC 检测各分支事务执行状态\n<ul>\n<li>如果都成功，通过所有 RM 提交事务</li>\n<li>如果有失败，通过所有 RM 回滚事务</li>\n</ul>\n</li>\n</ul>\n<p><strong>RM 二阶段的工作</strong>：</p>\n<ul>\n<li>接收 TC 指令，提交或回滚事务</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181128704.png\" alt=\"image-20231018112758938\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>XA 模式的优点是什么？</p>\n<ul>\n<li>事务的强一致性，满足 ACID 原则</li>\n<li>常用数据库都支持，实现简单，并且没有代码侵入</li>\n</ul>\n<p>XA 模式的缺点是什么？</p>\n<ul>\n<li>因为一阶段需要锁定数据库资源，等待二阶段结束才释放，性能较差</li>\n<li>依赖关系型数据库实现事务</li>\n</ul>\n</blockquote>\n<h4 id=\"2423-实现xa模式\"><a class=\"markdownIt-Anchor\" href=\"#2423-实现xa模式\">#</a> 2.4.2.3、实现 XA 模式🌴</h4>\n<p>Seata 的 starter 已经完成了 XA 模式的自动装配，实现非常简单，步骤如下：</p>\n<p>1、修改 application.yml 文件 (每个参与事务的微服务)，开启 XA 模式</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">data-source-proxy-mode</span><span class=\"token punctuation\">:</span> XA <span class=\"token comment\"># 开启数据源代理的 XA 模式</span></pre></td></tr></table></figure><p>2、给发起全局事务的入口方法添加 @GlobalTransactional 注解，本例中是 OrderServiceImpl 中的 create 方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@GlobalTransactional</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Order</span> order<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 创建订单</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   orderMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 扣用户余额</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      accountClient<span class=\"token punctuation\">.</span><span class=\"token function\">deduct</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">// 扣库存</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">deduct</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getCommodityCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FeignException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下单失败，原因:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">contentUTF8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">contentUTF8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、重启服务并测试</p>\n<p>目前的 account_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181144973.png\" alt=\"image-20231018114458627\"></p>\n<p>目前 storage_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181145948.png\" alt=\"image-20231018114522634\"></p>\n<p>使用 postman 进行发送请求测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181146511.png\" alt=\"image-20231018114629170\"></p>\n<p>测试后 account_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181146234.png\" alt=\"image-20231018114658167\"></p>\n<p>测试后 storage_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181147047.png\" alt=\"image-20231018114715998\"></p>\n<p>可以看到没有问题，下面测试 异常 的情况</p>\n<p>postman 测试如下：</p>\n<p>将存库数量改为 10，当前的库存数据是不足 10 个的因此执行就会出问题可以看到状态码 500 已经异常了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181148645.png\" alt=\"image-20231018114814272\"></p>\n<p>我们看下数据库有没有回滚啊</p>\n<p>测试后 account_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181149371.png\" alt=\"image-20231018114937327\"></p>\n<p>测试后 storage_tbl 表单信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181149916.png\" alt=\"image-20231018114955744\"></p>\n<p>可以看到没有任何变化</p>\n<p>看下 idea 的控制台的打印信息：</p>\n<p>accountApplication 打印出了事务回滚的信息，其它的是报错的信息，因为报错本身就没有执行成功</p>\n<pre><code>10-18 11:48:06:076  INFO 18016 --- [h_RMROLE_1_2_16] i.s.c.r.p.c.RmBranchRollbackProcessor    : rm handle branch rollback process:xid=192.168.45.1:8091:4251845158843265029,branchId=4251845158843265031,branchType=XA,resourceId=jdbc:mysql:///seata_demo,applicationData=null\n10-18 11:48:06:080  INFO 18016 --- [h_RMROLE_1_2_16] io.seata.rm.AbstractRMHandler            : Branch Rollbacking: 192.168.45.1:8091:4251845158843265029 4251845158843265031 jdbc:mysql:///seata_demo\n10-18 11:48:06:083  INFO 18016 --- [h_RMROLE_1_2_16] i.s.rm.datasource.xa.ResourceManagerXA   : 192.168.45.1:8091:4251845158843265029-4251845158843265031 was rollbacked\n10-18 11:48:06:084  INFO 18016 --- [h_RMROLE_1_2_16] io.seata.rm.AbstractRMHandler            : Branch Rollbacked result: PhaseTwo_Rollbacked\n</code></pre>\n<h4 id=\"2424-at模式原理\"><a class=\"markdownIt-Anchor\" href=\"#2424-at模式原理\">#</a> 2.4.2.4、AT 模式原理🌴</h4>\n<p>AT 模式同样是分阶段提交的事务模型，不过却弥补了 XA 模型中资源锁定周期过长的缺陷。</p>\n<p>AT 模式执行完业务 sql 后会直接提交事务，而不是等待对方的执行。在执行业务 sql 的时候由 RM 拦截这次的执行并且给数据形成一个快照，快照名为：undo log，如果失败了就可以根据快照进行恢复了。在第一阶段就已经提交了，第二阶段将 log 给删除</p>\n<p>阶段一 RM 的工作：</p>\n<p>1、注册分支事务</p>\n<p>2、<font color='red'>记录 undo-log (数据快照)</font>.</p>\n<p>3、执行业务 sql 并<font color='red'>提交</font>.</p>\n<p>4、报告事务状态</p>\n<p>阶段二提交时 RM 的工作：</p>\n<p>1、删除 undo-log 即可</p>\n<p>阶段二回滚时 RM 的工作：</p>\n<p>1、根据 undo-log 恢复数据到更新前</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181329271.png\" alt=\"image-20231018132921268\"></p>\n<p>下面通过一个例子来进行比喻：</p>\n<p>例如，一个分支业务的 SQL 是这样的：update tb_account set money = money - 10 where id = 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181333976.png\" alt=\"image-20231018133322819\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>简述 AT 模式与 XA 模式最大的区别是什么？</p>\n<ul>\n<li>XA 模式一阶段不提交事务，锁定资源；AT 模式一阶段直接提交，不锁定资源</li>\n<li>XA 模式依赖数据库机制实现回滚；AT 模式利用数据快照实现数据回滚</li>\n<li>XA 模式强一致；AT 模式最终一致</li>\n</ul>\n</blockquote>\n<h5 id=\"24241-at模式的脏写问题\"><a class=\"markdownIt-Anchor\" href=\"#24241-at模式的脏写问题\">#</a> 2.4.2.4.1、AT 模式的脏写问题🎋</h5>\n<p>上述得知，AT 模式相对于 XA 模式来讲，性能得到了一些提升，因为 AT 模式在第一阶段的时候执行事务会直接提交。而不是等待各个分支一起执行完，因此资源锁定周期短 性能就比较好了。但是也正是因为它提前释放了资源没有去做锁，这就导致了在并发访问情况下会存在一些安全问题。</p>\n<p>比如说有个 account 表，业务是修改 money 字段让其减 10，那么有一个线程开启了这个样事务。事务开启第一件事就是获取数据库锁，并生成一个快照。然后执行 sql 从 100 改为 90，然后提交事务，事务一旦提交锁就释放了，数据也就改了。第一阶段完成就轮到第二阶段，但同一时刻因为是并发现在有另外一个线程也开启了事务执行这个业务。事务 2 等待事务 1 释放锁了，然后拿到锁才能去保存快照并执行业务 sql 将 90 改 为 80，然后提交事务并释放锁。</p>\n<p>如果这时事务 1 拿到锁后它要做回滚，因为事务 1 的第二阶段还没做完，这时事务 1 的快照数据为 money=100 这是回滚就出问题了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181351685.png\" alt=\"image-20231018135124412\"></p>\n<p>为了解决这个问题 AT 模式引入了一个叫 “全局锁” 的东西</p>\n<p><mark>全局锁</mark>：由 TC 记录当前正在操作某行数据的事务，改事务持有全局锁，具备执行权。</p>\n<p>TC 通过一张表来进行记录，分别记录：当前由哪个事务在操作，操作的哪张表，主键 操作这张表的哪一行数据。通过记录查看这个表的这行数据就只能被这个事务进行操作，其它事务不能操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181402045.png\" alt=\"image-20231018140242928\"></p>\n<p>尽管如此，事务 1 在操作 money 字段的时候也可能会有一个没有被 seata 管理的业务来操作 money 字段此时就会产生脏写的问题了。分布式事务我们应该尽量的避免两个操作同一个字段。但是再怎么避免也不是不可能的情况</p>\n<p>AT 模式也对这种方式做了一些处理。</p>\n<p>当事务 1 第二阶段进行回滚时，会拿到 更新前的快照和更新后的快照。然后用更新后的快照数据去对当前的数据库数据做对比，判断是否一致，如果不一致就会记录异常，发送警告，人工介入</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181414617.png\" alt=\"image-20231018141424667\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>AT 模式的优点：</p>\n<ul>\n<li>一阶段完成直接提交事务，释放数据库资源，性能比较好</li>\n<li>利用全局锁实现读写隔离</li>\n<li>没有代码侵入，框架自动完成回滚和提交</li>\n</ul>\n<p>AT 模式的缺点：</p>\n<ul>\n<li>两阶段之间属于软状态，属于最终一致</li>\n<li>框架的快照功能会影响性能，但比 XA 模式好很多</li>\n</ul>\n</blockquote>\n<h4 id=\"2425-实现at模式\"><a class=\"markdownIt-Anchor\" href=\"#2425-实现at模式\">#</a> 2.4.2.5、实现 AT 模式🌴</h4>\n<p>AT 模式中的快照生成，回滚等动作都是由框架自动完成，没有任何代码侵入，因此实现非常简单。</p>\n<p>1、导入 SQL 文件：seata-at.sql。打开 sql 文件其中 lock_table 导入到 TC 服务关联的数据库，undo_log 表导入到微服务管理的数据库：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181426661.png\" alt=\"image-20231018142639716\"></p>\n<p>2、修改 application.yml 文件，将事务模式修改为 AT 模式即可：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">data-source-proxy-mode</span><span class=\"token punctuation\">:</span> AT <span class=\"token comment\"># 开启数据源代理的 AT 模式</span></pre></td></tr></table></figure><p>3、重启服务并测试</p>\n<p>目前的数据库数据</p>\n<p>account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181429533.png\" alt=\"image-20231018142929459\"></p>\n<p>storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181429518.png\" alt=\"image-20231018142946308\"></p>\n<p>使用 postman 进行测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181430146.png\" alt=\"image-20231018143051522\"></p>\n<p>测试后的 account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181431746.png\" alt=\"image-20231018143114523\"></p>\n<p>测试后的 storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181431267.png\" alt=\"image-20231018143133064\"></p>\n<p>使用 postman 进行一次失败的测试：</p>\n<p>库存数据现在不够 10 个我们扣减 10 个此时就会产生异常</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181432899.png\" alt=\"image-20231018143222278\"></p>\n<p>测试后的 account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181432696.png\" alt=\"image-20231018143252735\"></p>\n<p>测试后的 storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181433130.png\" alt=\"image-20231018143302062\"></p>\n<p>可以发现没有发生任何的变化啊。说明事务生效了，整个分布式事务都回滚了</p>\n<p>accountApplication 服务在 idea 控制台中打印的信息如下：</p>\n<p>可以看到最终删除了一个叫 undo_log 的表的数据也就是快照数据</p>\n<pre><code>10-18 14:32:15:309  INFO 19080 --- [h_RMROLE_1_2_16] i.s.c.r.p.c.RmBranchRollbackProcessor    : rm handle branch rollback process:xid=192.168.45.1:8091:4251845158843265037,branchId=4251845158843265039,branchType=AT,resourceId=jdbc:mysql:///seata_demo,applicationData=null\n10-18 14:32:15:310  INFO 19080 --- [h_RMROLE_1_2_16] io.seata.rm.AbstractRMHandler            : Branch Rollbacking: 192.168.45.1:8091:4251845158843265037 4251845158843265039 jdbc:mysql:///seata_demo\n10-18 14:32:15:347  INFO 19080 --- [h_RMROLE_1_2_16] i.s.r.d.undo.AbstractUndoLogManager      : xid 192.168.45.1:8091:4251845158843265037 branch 4251845158843265039, undo_log deleted with GlobalFinished\n10-18 14:32:15:348  INFO 19080 --- [h_RMROLE_1_2_16] io.seata.rm.AbstractRMHandler            : Branch Rollbacked result: PhaseTwo_Rollbacked\n</code></pre>\n<h4 id=\"2426-tcc模式原理\"><a class=\"markdownIt-Anchor\" href=\"#2426-tcc模式原理\">#</a> 2.4.2.6、TCC 模式原理🌴</h4>\n<p>TCC 模式与 AT 模式非常相似，每阶段都是独立事务，不同的是 TCC 通过人工编码来实现数据恢复。需要实现三个方法：</p>\n<p>1、Try：资源的检测和预留</p>\n<p>2、Confirm：完成资源操作业务；要求 Try 成功 Confirm 一定要能成功</p>\n<p>3、Cancel：预留资源释放，可以理解为 try 的反向操作</p>\n<p>举例，一个扣减用户余额的业务。假设账户 A 原来余额是 100，需要余额扣减 30 元</p>\n<ul>\n<li>\n<p>阶段一 (Try)：检查余额是否充足，如果充足则冻结金额增加 30 元，可用余额扣除 30</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181448987.png\" alt=\"image-20231018144806649\"></p>\n</li>\n<li>\n<p>阶段二 (Confirm)：假如要提交，则冻结金额扣减 30</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181448879.png\" alt=\"image-20231018144815748\"></p>\n</li>\n<li>\n<p>阶段二 (Cancel)：如果要回滚，则冻结金额扣减 30，可用余额增加 30</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181448428.png\" alt=\"image-20231018144824406\"></p>\n</li>\n</ul>\n<p>TCC 的工作模型图：</p>\n<p>由 TM 开启并注册全局事务到 TC 上，然后 TM 通知每一个分支事务去执行，分支事务被 RM 做拦截，RM 先去注册一下分支事务。然后再执行操作，第一阶段进行 Try。Try 是一个独立的资源会直接提交，提交后报告事务的状态。二阶段：TM 通知 TC 事务结束了，然后 TC 做事务状态的判断，看看分支资源够不够。如果够直接 Confirm 提交，如果不够就执行 Cancel 逻辑进行回滚。</p>\n<p>而这三个 Try，Confirm，Cancel 都是需要人工编写的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181456139.png\" alt=\"image-20231018145621001\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>TCC 模式的每个阶段是做什么的？</p>\n<ul>\n<li>Try：资源检查和预留</li>\n<li>Confirm：业务执行和提交</li>\n<li>Cancel：预留资源的释放</li>\n</ul>\n<p>TCC 的优点是什么？</p>\n<ul>\n<li>一阶段完成直接提交事务，释放数据库资源，性能好</li>\n<li>相比 AT 模型，无需生成快照，无需使用全局锁，性能最强</li>\n<li>不依赖数据库事务，而是依赖补偿操作，可以用于非事务型数据库比如：redis</li>\n</ul>\n<p>TCC 的缺点是什么？</p>\n<ul>\n<li>有代码侵入，需要认为编写 Try，Confirm 和 Cancel 接口，太麻烦</li>\n<li>软状态，事务是最终一致</li>\n<li>需要考虑 Confirm 和 Cancel 的失败情况，做好幂等处理</li>\n</ul>\n</blockquote>\n<h5 id=\"24261-案例改造account-service服务利用tcc实现分布式事务\"><a class=\"markdownIt-Anchor\" href=\"#24261-案例改造account-service服务利用tcc实现分布式事务\">#</a> 2.4.2.6.1、案例，改造 account-service 服务，利用 TCC 实现分布式事务🎋</h5>\n<p>需求如下：</p>\n<p>1、修改 acoount-service，编写 Try，Confirm，Cancel 逻辑</p>\n<p>2、Try 业务：添加冻结金额，扣减可用金额</p>\n<p>3、Confirm 业务：删除冻结金额</p>\n<p>4、Cancel 业务：删除冻结金额，恢复可用金额</p>\n<p>5、保证 Confirm，Cancel 接口的<font color='red'>幂等性</font>.</p>\n<p>6、允许<font color='red'>空回滚</font>.</p>\n<p>7、拒绝<font color='red'>业务悬挂</font>.</p>\n<h5 id=\"24262-tcc的空回滚和业务悬挂\"><a class=\"markdownIt-Anchor\" href=\"#24262-tcc的空回滚和业务悬挂\">#</a> 2.4.2.6.2、TCC 的空回滚和业务悬挂🎋</h5>\n<blockquote>\n<p>当某分支事务的 try 阶段阻塞时，可能导致全局事务超时而触发二阶段的 cancel 操作。在未执行 try 操作时先执行了 cancel 操作，这时 cancel 不能做回滚，就是<font color='red'>空回滚</font>.</p>\n<p>因此也不能报错。报错就会重试就会陷入一个死循环中。</p>\n<p>对于已经空回滚的业务，如果以后继续执行 try，就永远不可能 Confirm 或 Cancel，这就是<font color='red'>业务悬挂</font>。应当阻止执行空回滚后的 try 操作，避免悬挂</p>\n</blockquote>\n<p>当第二个事务去执行的时候就会被阻塞，阻塞后得不到执行 TM 就会卡在这里，等待超时后就会报一个错误给 TC 了，TC 此时就会返回一个回滚的通知于是 RM 就会执行 Cancel 的逻辑了。</p>\n<p>第一个分支执行 Cancel 没问题因为它已经 Try 了，但是第二个分支就出问题了 还没冻结金额就去恢复金额去了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181514887.png\" alt=\"image-20231018151440530\"></p>\n<p>​</p>\n<p><strong>业务分析</strong></p>\n<p>为了实现空回滚，防止业务悬挂，以及幂等性要求。我们必须在数据库记录冻结金额的同时，记录当前事务 id 和执行状态，为此我们设计了一张表 (account_freeze_tbl 这个表在项目中 sql 文件夹已经提供了)：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181702525.png\" alt=\"image-20231018170230443\"></p>\n<p>有了表后我们还需要创建实体类和 mapper</p>\n<p>实体类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"account_freeze_tbl\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountFreeze</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INPUT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> xid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> freezeMoney<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">TRY</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">CONFIRM</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">CANCEL</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>mapper</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountFreezeMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AccountFreeze</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"24263-声明tcc接口\"><a class=\"markdownIt-Anchor\" href=\"#24263-声明tcc接口\">#</a> 2.4.2.6.3、声明 TCC 接口：</h5>\n<p>TCC 的 Try，Confirm，Cancel 方法都需要在接口中基于注解来声明，语法如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@LocalTCC</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountTCCService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// Try 逻辑，@TwoPhaseBusinessAction 中的 name 属性要与当前方法名一致，用于指定 Try 逻辑对应方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@TwoPhaseBusinessAction</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"deduct\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            commitMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"confirm\"</span><span class=\"token punctuation\">,</span> rollbackMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"cancel\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">deduct</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@BusinessActionContextParameter</span><span class=\"token punctuation\">(</span>paramName <span class=\"token operator\">=</span> <span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token annotation punctuation\">@BusinessActionContextParameter</span><span class=\"token punctuation\">(</span>paramName <span class=\"token operator\">=</span> <span class=\"token string\">\"money\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 二阶段 confirm 确认方法，可以另命名，但要保证与 commitMethod 一致</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// @Param context 上下文，可以传递 Try 方法的参数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// @return boolean 执行是否成功</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">boolean</span> <span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BusinessActionContext</span> ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 二阶段回滚方法，要保证与 rollbackMethod 一致</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BusinessActionContext</span> ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>实现类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountTccServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountTCCService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountMapper</span> mapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountFreezeMapper</span> freezeMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AccountTccServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountMapper</span> mapper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                 <span class=\"token class-name\">AccountFreezeMapper</span> freezeMapper<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapper <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>freezeMapper <span class=\"token operator\">=</span> freezeMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deduct</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 1. 获取事务 id</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">String</span> xid <span class=\"token operator\">=</span> <span class=\"token class-name\">RootContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 1.1. 判断 freeze 中是否有冻结记录，如果有，一定是 CANCEL 执行过，要拒绝业务</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">AccountFreeze</span> freeze1 <span class=\"token operator\">=</span> freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span>xid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>freeze1 <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// CANCEL 执行过，要拒绝业务</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 2. 扣减可用余额</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        mapper<span class=\"token punctuation\">.</span><span class=\"token function\">deduct</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 3. 记录冻结金额，事务状态</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">AccountFreeze</span> freeze <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountFreeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setUserId</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setFreezeMoney</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountFreeze<span class=\"token punctuation\">.</span>State</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TRY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setXid</span><span class=\"token punctuation\">(</span>xid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>freeze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BusinessActionContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\">// 1. 获取事务 id</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">String</span> xid <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getXid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\">// 2. 根据 id 删除冻结记录</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span>xid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BusinessActionContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">// 1. 从上下文中获取 用户的 id 和余额</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token class-name\">String</span> xid <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getXid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">String</span> userId <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getActionContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">AccountFreeze</span> freeze <span class=\"token operator\">=</span> freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span>xid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">// 1.1. 空回滚的判断，判断 freeze 是否为 null，为 null 证明 try 没有执行，需要空回滚</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>freeze <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token comment\">// 证明 try 没有执行，需要回滚</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            freeze <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountFreeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setUserId</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setFreezeMoney</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountFreeze<span class=\"token punctuation\">.</span>State</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CANCEL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setXid</span><span class=\"token punctuation\">(</span>xid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>freeze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\">// 1.2. 幂等判断</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>freeze<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">AccountFreeze<span class=\"token punctuation\">.</span>State</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CANCEL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token comment\">// 已经处理过一次 CANCEL 了，无需重复处理</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token comment\">// 2. 恢复可用余额</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        mapper<span class=\"token punctuation\">.</span><span class=\"token function\">refund</span><span class=\"token punctuation\">(</span>freeze<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> freeze<span class=\"token punctuation\">.</span><span class=\"token function\">getFreezeMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token comment\">// 3. 将冻结金额清零，状态改为 CANCEL</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setFreezeMoney</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        freeze<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountFreeze<span class=\"token punctuation\">.</span>State</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CANCEL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> freezeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>freeze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>目前的数据库数据</p>\n<p>account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181752228.png\" alt=\"image-20231018175239070\"></p>\n<p>storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181752894.png\" alt=\"image-20231018175252816\"></p>\n<p>使用 postman 进行测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181753247.png\" alt=\"image-20231018175315999\"></p>\n<p>请求完后查看数据库的数据</p>\n<p>account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181753982.png\" alt=\"image-20231018175345921\"></p>\n<p>storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181754323.png\" alt=\"image-20231018175359525\"></p>\n<p>测试失败的 postman 请求</p>\n<p>因为此时库存的数量不够 10 个，我们减去 10 个就会产生异常</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181754231.png\" alt=\"image-20231018175428861\"></p>\n<p>查看数据库的数据情况</p>\n<p>测试后的 account_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181932222.png\" alt=\"image-20231018193221241\"></p>\n<p>测试后的 storage_tbl 表的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181932553.png\" alt=\"image-20231018193242522\"></p>\n<p>可以看到完成了数据的回滚</p>\n<h4 id=\"2427-saga模式\"><a class=\"markdownIt-Anchor\" href=\"#2427-saga模式\">#</a> 2.4.2.7、Saga 模式🌴</h4>\n<p>Saga 模式是 SEATA 提供的长事务解决方案。也分为两个阶段：</p>\n<ul>\n<li>一阶段：直接提交本地事务</li>\n<li>二阶段：成功则什么都不做，失败则通过编写补偿业务来回滚</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181938269.png\" alt=\"image-20231018193808535\"></p>\n<p>Saga 模式优点：</p>\n<p>1、事务参与者可以基于事务驱动实现异步调用，吞吐高</p>\n<p>2、一阶段直接提交事务，无锁，性能好</p>\n<p>3、不用编写 TCC 中的三个阶段，实现简单</p>\n<p>缺点：</p>\n<p>1、软状态支持时间不确定，时效性差</p>\n<p>2、没有锁，没有事务隔离，会有脏写</p>\n<h4 id=\"2428-四种模式对比\"><a class=\"markdownIt-Anchor\" href=\"#2428-四种模式对比\">#</a> 2.4.2.8、四种模式对比🌴</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>XA</th>\n<th>AT</th>\n<th>TCC</th>\n<th>SAGA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>一致性</td>\n<td>强一致</td>\n<td>弱一致</td>\n<td>弱一致</td>\n<td>最终一致</td>\n</tr>\n<tr>\n<td>隔离性</td>\n<td>完全隔离</td>\n<td>基于全局锁隔离</td>\n<td>基于资源预留隔离</td>\n<td>无隔离</td>\n</tr>\n<tr>\n<td>代码侵入</td>\n<td>无</td>\n<td>无</td>\n<td>有，要编写三个接口</td>\n<td>有，要编写状态机和补偿业务</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>差</td>\n<td>好</td>\n<td>非常好</td>\n<td>非常好</td>\n</tr>\n<tr>\n<td>场景</td>\n<td>对一致性，隔离性有高要求的业务</td>\n<td>基于关系型数据库的大多数分布式场景都可以</td>\n<td>对性能要求较高的事务<br />有非关系型数据库要参与的事务</td>\n<td>业务流程长，业务流程多<br />参与者包含其它公司或遗留系统服务，无法提供 TCC 模式要求的三个接口</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"三-高可用\"><a class=\"markdownIt-Anchor\" href=\"#三-高可用\">#</a> 三、高可用🎄</h1>\n<ul>\n<li>高可用集群结构</li>\n<li>实现高可用集群</li>\n</ul>\n<p><strong>TC 的异地多机房容灾架构</strong></p>\n<p>TC 服务作为 Seata 的核心服务，一定要保证<mark>高可用</mark>和<mark>异地容灾</mark>.</p>\n<p>具体实现查看文章：<a href=\"../Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.md\">seata 的部署和集成.md</a>.</p>\n<h1 id=\"四多级缓存\"><a class=\"markdownIt-Anchor\" href=\"#四多级缓存\">#</a> 四，多级缓存🎄</h1>\n<p>亿级流量的缓存方案</p>\n<h2 id=\"41-传统缓存的问题\"><a class=\"markdownIt-Anchor\" href=\"#41-传统缓存的问题\">#</a> 4.1、传统缓存的问题🌳</h2>\n<p>传统的缓存策略一般是请求到达 Tomcat 后，先查询 redis，如果未命中则查询数据库，存在下面的问题：</p>\n<p>1、请求要经过 Tomcat 处理，Tomcat 的性能成为整个系统的瓶颈</p>\n<p>2、Redis 缓存失效时，会对数据库产生冲击</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191526124.png\" alt=\"image-20231019152653849\"></p>\n<h2 id=\"42-多级缓存方案\"><a class=\"markdownIt-Anchor\" href=\"#42-多级缓存方案\">#</a> 4.2、多级缓存方案🌳</h2>\n<p>多级缓存就是充分利用请求处理的每个环节，分别添加缓存，减轻 Tomcat 压力，提升服务性能：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191532661.png\" alt=\"image-20231019153224519\"></p>\n<p>用作缓存的 Nginx 是业务 Nginx，需要部署为集群，再有专门的 Nginx 用来做反向代理：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191534434.png\" alt=\"image-20231019153411071\"></p>\n<h2 id=\"43-jvm进程缓存\"><a class=\"markdownIt-Anchor\" href=\"#43-jvm进程缓存\">#</a> 4.3、JVM 进程缓存🌳</h2>\n<ul>\n<li>导入商品案例</li>\n<li>初始 Caffeine</li>\n<li>实现进程缓存</li>\n</ul>\n<h3 id=\"431-导入商品案例\"><a class=\"markdownIt-Anchor\" href=\"#431-导入商品案例\">#</a> 4.3.1、导入商品案例🌲</h3>\n<p>查看文章：<a href=\"./%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5%E8%AF%B4%E6%98%8E/%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5%E8%AF%B4%E6%98%8E.md\">案例导入说明</a>.</p>\n<h3 id=\"432-初始caffeine\"><a class=\"markdownIt-Anchor\" href=\"#432-初始caffeine\">#</a> 4.3.2、初始 Caffeine🌲</h3>\n<h4 id=\"4321-本地进程缓存\"><a class=\"markdownIt-Anchor\" href=\"#4321-本地进程缓存\">#</a> 4.3.2.1、本地进程缓存🌴</h4>\n<p>缓存在日常开发中起到至关重要的作用。由于是存储在内存中，数据的读取速度是非常快的，能大量减少对数据库的访问，减少数据库的压力。我们吧缓存分为两类：</p>\n<p>1、分布式缓存，例如 Redis：</p>\n<ul>\n<li>优点：存储容量更大，可靠性更好，可以在集群间共享</li>\n<li>缺点：访问缓存有网络开销</li>\n<li>场景：缓存数据量较大，可靠性要求较高，需要在集群间共享</li>\n</ul>\n<p>2、进程本地缓存，例如 HashMap，GuavaCache：</p>\n<ul>\n<li>优点：读取本地内存，没有网络开销，速度更快</li>\n<li>缺点：存储容量有限，可靠性较低，无法共享</li>\n<li>场景：性能要求较高，缓存数据量较小</li>\n</ul>\n<p>Caffeine 是一个基于 java8 开发的，提供了近乎最佳命中率的高性能的本地缓存库。目前 Spring 内部的缓存使用的就是 Caffeine。Github 地址：<a href=\"https://github.com/ben-manes/caffeine\">https://github.com/ben-manes/caffeine</a></p>\n<h5 id=\"43211-caffeine示例\"><a class=\"markdownIt-Anchor\" href=\"#43211-caffeine示例\">#</a> 4.3.2.1.1、Caffeine 示例🎋</h5>\n<p>可以通过 item-service 项目中的单元测试来学习 Caffeine 的使用：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testBasicOpsTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 构建 cache 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cache <span class=\"token operator\">=</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 存数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 3. 取数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">String</span> gf <span class=\"token operator\">=</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf = \"</span> <span class=\"token operator\">+</span> gf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 4. 取数据，如果未命中，则查询数据库</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token class-name\">String</span> defaultGF <span class=\"token operator\">=</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"defaultGF\"</span><span class=\"token punctuation\">,</span> key <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\">// 4.1. 根据 key 去查询数据库</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token string\">\"是个傻子\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"defaultGF = \"</span> <span class=\"token operator\">+</span> defaultGF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//------------------ 执行结果 ------------------</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>gf <span class=\"token operator\">=</span> 郭明然</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>defaultGF <span class=\"token operator\">=</span> 是个傻子</pre></td></tr></table></figure><p>Caffeine 提供了三种缓存驱逐策略：</p>\n<p>1、基于容量：设置缓存的数量上限</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testBasicOpsTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 构建 cache 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cache <span class=\"token operator\">=</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">maximumSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存大小上限为 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 2. 存数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">//        try &#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">//            // 延迟 10ms，给清理线程一点时间</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">//            Thread.sleep(100);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">//        &#125; catch (InterruptedException e) &#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token comment\">//            throw new RuntimeException(e);</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">// 3. 取数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//---------------- 打印结果 ----------------</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>郭明然</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>郭明然<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>郭明然<span class=\"token number\">2</span></pre></td></tr></table></figure><p>使用线程睡眠让其等待 10ms 给清理线程一点时间</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testBasicOpsTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 构建 cache 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cache <span class=\"token operator\">=</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">maximumSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存大小上限为 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 2. 存数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 延迟 10ms，给清理线程一点时间</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10l</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">// 3. 取数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//---------------- 打印结果 ----------------</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>郭明然<span class=\"token number\">2</span></pre></td></tr></table></figure><p>2、基于时间：设置缓存的有效时间</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testBasicOpsTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 构建 cache 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cache <span class=\"token operator\">=</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">expireAfterWrite</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存有效期为 10 秒，从最后一次写入开始计时</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 2. 存数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"郭明然2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 3. 取数据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 延迟 10ms，给清理线程一点时间</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">11000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">getIfPresent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//------------------- 打印结果 -------------------</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>郭明然</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">null</span></pre></td></tr></table></figure><p>3、基于引用：设置缓存为软引用或弱引用，利用 GC 来回收缓存数据。性能较差，不建议使用。</p>\n<p><mark>软引用</mark>：内存不足时才会回收；       <mark>弱引用</mark>：就算内存充足时也会回收；</p>\n<p>在默认情况下，当一个缓存元素过期的时候，Caffeine 不会自动立即将其清理和驱逐。而是在一次读或写操作后，或者在空闲时间完成对失效数据的驱逐。</p>\n<h3 id=\"433-实现进程缓存\"><a class=\"markdownIt-Anchor\" href=\"#433-实现进程缓存\">#</a> 4.3.3、实现进程缓存🌲</h3>\n<h4 id=\"4331-案例实现商品的查询的本地进程缓存\"><a class=\"markdownIt-Anchor\" href=\"#4331-案例实现商品的查询的本地进程缓存\">#</a> 4.3.3.1、案例，实现商品的查询的本地进程缓存🌴</h4>\n<p>利用 Caffeine 实现下列需求：</p>\n<p>1、给根据 id 查询商品的业务添加缓存，缓存未命中时查询数据库</p>\n<p>2、给根据 id 查询商品存库的业务添加缓存，缓存未命中时查询数据库</p>\n<p>3、缓存初始大小为 100</p>\n<p>4、缓存上限为 10000</p>\n<p>步骤：</p>\n<p>1、给根据 id 查询商品的业务添加缓存，缓存未命中时查询数据库</p>\n<p>2、给根据 id 查询商品存库的业务添加缓存，缓存未命中时查询数据库</p>\n<p>3、缓存初始大小为 100</p>\n<p>4、缓存上限为 10000</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CaffeineConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">itemCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">initialCapacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存初始化大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">maximumSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">10_000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存最大上限值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ItemStock</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">itemStockCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Caffeine</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">initialCapacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存初始化大小</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">maximumSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">10_000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置缓存最大上限值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>5、在 controller 层进行两个缓存对象的自动装配</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> itemCache<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ItemStock</span><span class=\"token punctuation\">></span></span> itemStockCache<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>6、编写缓存代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 优先根据缓存查，如果未命中则查询数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> itemCache<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> key <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">return</span> itemService<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">ne</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">one</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/stock/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ItemStock</span> <span class=\"token function\">findStockById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">return</span> itemStockCache<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> key <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">return</span> stockService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>请求接口进行测试：<a href=\"http://localhost:8081/item/10001\">http://localhost:8081/item/10001</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191732546.png\" alt=\"image-20231019173236082\"></p>\n<p>第一次请求我们可以在 idea 控制台中看到打印了一段执行 SQL 的日志，说明查了一下数据库</p>\n<pre><code>17:31:53:355 DEBUG 5692 --- [nio-8081-exec-1] c.h.item.mapper.ItemMapper.selectOne     : ==&gt;  Preparing: SELECT id,name,title,price,image,category,brand,spec,status,create_time,update_time FROM tb_item WHERE (status &lt;&gt; ? AND id = ?)\n17:31:53:383 DEBUG 5692 --- [nio-8081-exec-1] c.h.item.mapper.ItemMapper.selectOne     : ==&gt; Parameters: 3(Integer), 10001(Long)\n17:31:53:405 DEBUG 5692 --- [nio-8081-exec-1] c.h.item.mapper.ItemMapper.selectOne     : &lt;==      Total: 1\n</code></pre>\n<p>清空 idea 控制台再对该页面进行一次访问，因为缓存一开始就是空的</p>\n<p>当我们执行过一次后数据就会被缓存起来，第二次执行就直接拿缓存的数据了可以看到控制台很干净没有一点打印信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191733727.png\" alt=\"image-20231019173347678\"></p>\n<p>当然库存也是一样的道理</p>\n<p>访问 uri：<a href=\"http://localhost:8081/item/stock/10001\">http://localhost:8081/item/stock/10001</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191735447.png\" alt=\"image-20231019173509976\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191734949.png\" alt=\"image-20231019173456734\"></p>\n<p>清空控制台信息进行第二次访问，此时数据已经被缓存起来了。</p>\n<p>二次依旧很干净</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191735198.png\" alt=\"image-20231019173553835\"></p>\n<h1 id=\"五-lua语言入门\"><a class=\"markdownIt-Anchor\" href=\"#五-lua语言入门\">#</a> 五、Lua 语言入门🎄</h1>\n<p>因为 Nginx 开发需要使用 Lua 语言来进行编程，所以我们就需要学习 Lua 语言</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191745432.png\" alt=\"image-20231019174517515\"></p>\n<p>学习内容：</p>\n<ul>\n<li>初始 Lua</li>\n<li>变量和循环</li>\n<li>条件控制，函数</li>\n</ul>\n<h2 id=\"51-初始lua\"><a class=\"markdownIt-Anchor\" href=\"#51-初始lua\">#</a> 5.1、初始 Lua🌳</h2>\n<p>Lua 是一种轻量级小巧的脚本语言，用标准 C 语言编写并以源代码形式开放，其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。官网：<a href=\"http://www.lua.org/\">http://www.lua.org/</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191751131.png\" alt=\"image-20231019175148607\"></p>\n<h3 id=\"511-helloworld\"><a class=\"markdownIt-Anchor\" href=\"#511-helloworld\">#</a> 5.1.1、HelloWorld🌲</h3>\n<p>1、在 Linux 虚拟机的任意目录下，新建一个 hello.lua 文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim hello.lua</span></pre></td></tr></table></figure><p>2、添加下面的内容</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>print<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>3、运行</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lua hello.lua</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Hello World<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h3 id=\"512-数据类型\"><a class=\"markdownIt-Anchor\" href=\"#512-数据类型\">#</a> 5.1.2、数据类型🌲</h3>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nil</td>\n<td>这个最简单，只有值 nil 属于该类，表示一个无效值 (在条件表达式中相当于 false)</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>包含两个值：false 和 true</td>\n</tr>\n<tr>\n<td>number</td>\n<td>表示双精度类型的实浮点数</td>\n</tr>\n<tr>\n<td>string</td>\n<td>字符串由一对双引号或单引号来表示</td>\n</tr>\n<tr>\n<td>function</td>\n<td>由 C 或 Lua 编写的函数</td>\n</tr>\n<tr>\n<td>table</td>\n<td>Lua 中的表 (table) 其实是一个 “关联数组” (associative arrays)，数组的索引可以是数字，字符串或表类型。在 Lua 里，table 的创建是通过 “构造表达式” 来完成，最简单构造表达式是 { }，用来创建一个空表。</td>\n</tr>\n</tbody>\n</table>\n<p>可以利用 type 函数测试给定变量或者值的类型</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim hello.lua</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lua hello.lua</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat hello.lua</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>print<span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim hello.lua</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lua hello.lua</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>number</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat hello.lua</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>print<span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">(</span><span class=\"token number\">10.4</span> * <span class=\"token number\">3</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h3 id=\"513-变量\"><a class=\"markdownIt-Anchor\" href=\"#513-变量\">#</a> 5.1.3、变量🌲</h3>\n<p>Lua 声明变量的时候，并不需要指定数据类型：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 声明字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 声明数字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> num <span class=\"token operator\">=</span> <span class=\"token number\">21</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 声明布尔类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">local</span> flag <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 声明数组 key 为索引的 table </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">local</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lua'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">-- 声明 table ，类似 java 的 map</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">local</span> map <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Jack'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问 table：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 访问数组，lua 数组的角标从 1 开始</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 访问 table</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>字符串拼接使用  <code>..</code></p>\n<h3 id=\"514-循环\"><a class=\"markdownIt-Anchor\" href=\"#514-循环\">#</a> 5.1.4、循环🌲</h3>\n<p>数组，table 都可以利用 for 循环来遍历</p>\n<ul>\n<li>遍历数组：</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 声明数组 key 为索引的 table</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lua'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 遍历数组</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><ul>\n<li>遍历 table</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 声明 map，也就是 table</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> map <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Jack'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 遍历 table</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span>value <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3 id=\"515-函数\"><a class=\"markdownIt-Anchor\" href=\"#515-函数\">#</a> 5.1.5、函数🌲</h3>\n<p>定义函数的语法：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> 函数名<span class=\"token punctuation\">(</span> argument1<span class=\"token punctuation\">,</span> argument2<span class=\"token punctuation\">,</span> argument3 <span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">-- 函数体</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">return</span> 返回值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>例如，定义一个函数，用来打印数组：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3 id=\"516-条件控制\"><a class=\"markdownIt-Anchor\" href=\"#516-条件控制\">#</a> 5.1.6、条件控制🌲</h3>\n<p>类似 Java 的条件控制，例如 if , else 语法：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>布尔表达式<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">-- [布尔表达式为 true 时执行该语句块 --]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">-- [布尔表达式为 false 时执行该语句块 --]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>与 java 不同，布尔表达式中的逻辑运算是基于英文单词：</p>\n<table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>and</td>\n<td>逻辑与操作符。若 A 为 false，则返回 A，否则返回 B</td>\n<td>(A and B) 为 false</td>\n</tr>\n<tr>\n<td>or</td>\n<td>逻辑或操作符。若 A 为 true，则返回 A，否则返回 B</td>\n<td>(A or B) 为 true</td>\n</tr>\n<tr>\n<td>not</td>\n<td>逻辑非操作符。与逻辑运算结果相反，如果条件为 true，逻辑非为 false</td>\n<td>not (A and B) 为 true</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"六-多级缓存\"><a class=\"markdownIt-Anchor\" href=\"#六-多级缓存\">#</a> 六、多级缓存🎄</h1>\n<ul>\n<li>安装 OpenResty</li>\n<li>OpenResty 快速入门</li>\n<li>请求参数处理</li>\n<li>查询 Tomcat</li>\n<li>Redis 缓存预热</li>\n<li>查询 Redis 缓存</li>\n<li>Nginx 本地缓存</li>\n</ul>\n<h2 id=\"61-初始openresty\"><a class=\"markdownIt-Anchor\" href=\"#61-初始openresty\">#</a> 6.1、初始 OpenResty🌳</h2>\n<p>OpenResty 是一个基于 Nginx 的高性能 Web 平台，用于方便地搭建能够处理高并发，扩展性极高的动态 Web 应用，Web 服务和动态网关。具备下列特点：</p>\n<ul>\n<li>具备 Nginx 的完整功能</li>\n<li>基于 Lua 语言进行扩展，集成了大量精良的 Lua 库，第三方模块</li>\n<li>允许使用 Lua 自定义业务逻辑，自定义库</li>\n</ul>\n<p>官方网站：<a href=\"https://openresty.org/cn/\">https://openresty.org/cn/</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200852606.png\" alt=\"image-20231020085036341\"></p>\n<h3 id=\"611-openresty安装\"><a class=\"markdownIt-Anchor\" href=\"#611-openresty安装\">#</a> 6.1.1、OpenResty 安装🌲</h3>\n<p>查看文章：<a href=\"./OpenResty%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85OpenResty.md\">安装 OpenResty</a>.</p>\n<h3 id=\"612-案例openresty快速入门实现商品详情页数据查询\"><a class=\"markdownIt-Anchor\" href=\"#612-案例openresty快速入门实现商品详情页数据查询\">#</a> 6.1.2、案例，OpenResty 快速入门，实现商品详情页数据查询🌲</h3>\n<p>商品详情页目前展示的是假数据，在浏览器的控制台可以看到查询商品信息的请求：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200915073.png\" alt=\"image-20231020091453815\"></p>\n<p>而这个请求最终被反向代理到虚拟机的 OpenResty 集群：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200915958.png\" alt=\"image-20231020091503555\"></p>\n<p>需求：在 OpenResty 中接收这个请求，并返回一段商品的假数据。</p>\n<p>步骤：一。</p>\n<p>1、在 nginx.conf 的 http 下面，添加对 OpenResty 的 Lua 模块的加载</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># lua 模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>lua_package_path <span class=\"token string\">\"/usr/local/openresty/lualib/?.lua;;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># c 模块     </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lua_package_cpath <span class=\"token string\">\"/usr/local/openresty/lualib/?.so;;\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、在 nginx.conf 的 server 下面，添加对 /api/item 这个路径的监听</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 这里可以理解为就是 SpringMVC 中的 Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>location /api/item <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>default_type application/json<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 这里可以理解为就是 Service 业务逻辑层</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>content_by_lua_file lua/item.lua<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>步骤：二。</p>\n<p>1、在 nginx 目录创建文件夹：lua</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir lua</span></pre></td></tr></table></figure><p>2、在 lua 文件夹下，新建文件：item.lua</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch lua/item.lua</span></pre></td></tr></table></figure><p>3、内容如下：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">--  返回假数据，这里的 ngx.say () 函数，就是写数据到 Response 中</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;\"id\":10001, \"name\":\"SALSA AIR\"&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里面的假数据去 uri：<a href=\"http://localhost/item.html?id=10001%E4%B8%AD%E6%89%93%E5%BC%80%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%80%89%E6%8B%A9vue%E7%84%B6%E5%90%8E%E8%B5%8B%E5%80%BCItem%E4%B9%9F%E5%B0%B1%E6%98%AFObject%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B0%86%E9%87%8C%E9%9D%A2%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BD%9C%E4%B8%BA%E5%81%87%E6%95%B0%E6%8D%AE%E4%BD%BF%E7%94%A8\">http://localhost/item.html?id=10001 中打开控制台选择 vue 然后赋值 Item 也就是 Object 对象，将里面的数据作为假数据使用</a></p>\n<p>这个页面是从 nginx 代理里面访问过来的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200940251.png\" alt=\"image-20231020094054757\"></p>\n<p>将假数据拷贝到 ngx.say (‘’) 里面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200942719.png\" alt=\"image-20231020094215395\"></p>\n<p>为了能区分一下是否成功，我们将里面的一些数据进行一下修改</p>\n<p>此处只是修改了尺寸和价格</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;\"id\":10001,\"name\":\"SALSA AIR\",\"title\":\"RIMOWA 31寸托运箱拉杆箱 SALSA AIR系列果绿色 820.70.36.4\",\"price\":27900,\"image\":\"https://m.360buyimg.com/mobilecms/s720x720_jfs/t6934/364/1195375010/84676/e9f2c55f/597ece38N0ddcbc77.jpg!q70.jpg.webp\",\"category\":\"拉杆箱\",\"brand\":\"RIMOWA\",\"spec\":\"\",\"status\":1,\"createTime\":\"2019-04-30T16:00:00.000+00:00\",\"updateTime\":\"2019-04-30T16:00:00.000+00:00\",\"stock\":2999,\"sold\":31290&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>完整的 nginx.conf 配置内容：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#user  nobody;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">error_log</span>  logs/error.log</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">include</span>       mime.types</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># lua 模块</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">lua_package_path</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.lua;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># c 模块     </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">lua_package_cpath</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.so;;\"</span></span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /api/item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、重新加载配置</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> reload</pre></td></tr></table></figure><p>查看商品页面，没有刷新前</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200946010.png\" alt=\"image-20231020094617482\"></p>\n<p>刷新后</p>\n<p>可以看到尺寸和价格被修改了但是中文也乱码了。。。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200951850.png\" alt=\"image-20231020095132419\"></p>\n<h2 id=\"62-openresty获取请求参数\"><a class=\"markdownIt-Anchor\" href=\"#62-openresty获取请求参数\">#</a> 6.2、OpenResty 获取请求参数🌳</h2>\n<p>OpenResty 提供了各种 API 用来获取不同类型的请求参数：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200958589.png\" alt=\"image-20231020095810221\"></p>\n<h3 id=\"621-案例获取请求路径中的商品id信息拼接到json结果中返回\"><a class=\"markdownIt-Anchor\" href=\"#621-案例获取请求路径中的商品id信息拼接到json结果中返回\">#</a> 6.2.1、案例，获取请求路径中的商品 id 信息，拼接到 json 结果中返回🌲</h3>\n<p>在查询商品信息的请求中，通过路径占位符的方式，传递了商品 id 到后台：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201002974.png\" alt=\"image-20231020100241654\"></p>\n<p>需求：在 OpenResty 中接收这个请求，并获取路径中的 id 信息，拼接到结果的 json 字符串中返回</p>\n<p>OpenResty 中接受请求</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">location</span> ~ /api/item(\\d+)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>并获取路径中的 id 信息，拼接到结果的 json 字符串中返回</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 获取路径参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> id <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 返回结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;\"id\":'</span> <span class=\"token operator\">..</span> id <span class=\"token operator\">..</span> <span class=\"token string\">',\"name\":\"SALSA AIR\",\"title\":\"RIMOWA 31寸托运箱拉杆箱 SALSA AIR系列果绿色 820.70.36.4\",\"price\":27900,\"image\":\"https://m.360buyimg.com/mobilecms/s720x720_jfs/t6934/364/1195375010/84676/e9f2c55f/597ece38N0ddcbc77.jpg!q70.jpg.webp\",\"category\":\"拉杆箱\",\"brand\":\"RIMOWA\",\"spec\":\"\",\"status\":1,\"createTime\":\"2019-04-30T16:00:00.000+00:00\",\"updateTime\":\"2019-04-30T16:00:00.000+00:00\",\"stock\":2999,\"sold\":31290&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>重启 Linux 中的 nginx 服务器</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> reload</pre></td></tr></table></figure><p>访问页面进行测试：</p>\n<p><a href=\"http://localhost/item.html?id=10001\">http://localhost/item.html?id=10001</a></p>\n<p>请求结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201022922.png\" alt=\"image-20231020102241989\"></p>\n<p><a href=\"http://localhost/item.html?id=10002\">http://localhost/item.html?id=10002</a></p>\n<p>请求结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201023953.png\" alt=\"image-20231020102259850\"></p>\n<p>可以看到 id 就不再是写死的了，而是可以事实变化的</p>\n<h2 id=\"63-查询tomcat\"><a class=\"markdownIt-Anchor\" href=\"#63-查询tomcat\">#</a> 6.3、查询 Tomcat🌳</h2>\n<p>先看下多级缓存的架构。目前已经准备好了 nginx 反向代理服务器，它去接受前端的请求并且转到 OpenResty，服务端也编写好了进程缓存 OpenResty 也搭好了，但是 OpenResty 接收到请求后要查询数据。我们先实现从 Tomcat 去查然后再存储到缓存中。</p>\n<p>需要注册 OPenResty 在虚拟机上，而 Tomcat 在本机上，ip 地址不同</p>\n<p>两个 ip 地址访问的便捷方式：不管虚拟机的 ip 地址是什么只要官前三位就行了，然后把最后一位替换成 1 一定得到的就是 windows 电脑的位置。前提是需要关闭防火墙</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201030614.png\" alt=\"image-20231020103028998\"></p>\n<h3 id=\"631-案例获取请求路径中的商品id信息根据id向tomcat查询商品信息\"><a class=\"markdownIt-Anchor\" href=\"#631-案例获取请求路径中的商品id信息根据id向tomcat查询商品信息\">#</a> 6.3.1、案例，获取请求路径中的商品 id 信息，根据 id 向 Tomcat 查询商品信息🌲</h3>\n<p>这里要修改 item.lua，满足下面的需求：</p>\n<p>1、获取请求参数中的 id</p>\n<p>2、根据 id 向 Tomcat 服务发送请求，查询商品信息</p>\n<p>3、根据 id 向 Tomcat 服务发送请求，查询库存信息</p>\n<p>4、组装商品信息，库存信息，序列化为 Json 格式并返回</p>\n<p>步骤：</p>\n<p>一，nginx 内部发送 Http 请求</p>\n<p>nginx 提供了内部 API 用以发送 http 请求：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 注意：这里的 path 是路径，并不包含 ip 和端口。这个请求会被 nginx 内部的 server 监听并处理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 这肯定不行，因为我们希望可以发送给 Tomcat 所以就要指定 Tomcat 的 ip 和端口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">local</span> resp = ngx.location.capture(<span class=\"token string\">\"/path\"</span>,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   \t<span class=\"token directive\"><span class=\"token keyword\">method</span> = ngx.HTTP_GET, -- 请求方式</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      args =</span> <span class=\"token punctuation\">&#123;</span>a = 1, b = 2<span class=\"token punctuation\">&#125;</span>, -- get方式传参数</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      body = \"c=3&amp;d=4\" -- post方式传参数</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><p>返回的响应内容包括：</p>\n<ul>\n<li>resp.status：响应状态码</li>\n<li>resp.header：响应头，是一个 table</li>\n<li>resp.body：响应体，就是响应数据</li>\n</ul>\n<p>我们希望这个请求发送到 Tomcat 服务器，所以还需要编写一个 server 来对这个路径做反向代理：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">location</span> /path</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\"># 这里是 windows 电脑的 ip 和 Java 服务端口，需要确保 windows 防火墙处于关闭状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://192.168.137.169:8081</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编写代码：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">location</span> /item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://192.168.137.1:8081</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">location</span> ~ /api/item/(\\d+)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Tomcat 的反向代理搞定了，以后只要调用 capture API 请求是 item 开头就一定能达到 Tomcat。所以以后就可以放心的使用这套 API 了，那么既然这个 API 经常要使用。那我们可以将发请求的代码封装成一个函数</p>\n<h4 id=\"6311-封装http查询的函数\"><a class=\"markdownIt-Anchor\" href=\"#6311-封装http查询的函数\">#</a> 6.3.1.1、封装 HTTP 查询的函数🌴</h4>\n<p>我们可以吧 http 查询的请求封装为一个函数，放到 OPenResty 函数库中，方便后期使用。</p>\n<p>1、在 /usr/local/openresty/lualib 目录下创建 common.lua 文件：</p>\n<p>为什么是这个位置？ 因为在上述配置 nginx 加载模块中指定的路径就是加载这个位置的任何.lua 文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /usr/local/openresty/lualib/common.lua</pre></td></tr></table></figure><p>2、在 common.lua 中封装 http 查询的函数</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 封装函数，发送 http 请求，并解析响应</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">capture</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        method <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>HTTP_GET<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        args <span class=\"token operator\">=</span> params<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">-- 记录错误信息，返回 404</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"http not found, path: \"</span><span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">,</span> <span class=\"token string\">\", args: \"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 将方法导出</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">local</span> _M <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    read_http <span class=\"token operator\">=</span> read_http</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">return</span> _M</pre></td></tr></table></figure><p>在 item.lua 文件中编写代码如下：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 导入 common 函数库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> common <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">local</span> read_http <span class=\"token operator\">=</span> common<span class=\"token punctuation\">.</span>read_http</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 获取路径参数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">local</span> id <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 查询商品信息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">local</span> itemJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/item/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 查询库存信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">local</span> stockJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/item/stock\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- 返回结果</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>itemJSON<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>访问 uri 进行一下请求测试：<a href=\"http://localhost/item.html?id=10003\">http://localhost/item.html?id=10003</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201318784.png\" alt=\"image-20231020131800919\"></p>\n<p>返回的数据</p>\n<pre><code>&#123;\n    &quot;id&quot;: 10003,\n    &quot;name&quot;: &quot;韩版牛仔裤&quot;,\n    &quot;title&quot;: &quot;唐狮新品牛仔裤女学生韩版宽松裤子 A款/中牛仔蓝（无绒款） 26&quot;,\n    &quot;price&quot;: 84600,\n    &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t26989/116/124520860/644643/173643ea/5b860864N6bfd95db.jpg!q70.jpg.webp&quot;,\n    &quot;category&quot;: &quot;牛仔裤&quot;,\n    &quot;brand&quot;: &quot;唐狮&quot;,\n    &quot;spec&quot;: &quot;&#123;\\&quot;颜色\\&quot;: \\&quot;蓝色\\&quot;, \\&quot;尺码\\&quot;: \\&quot;26\\&quot;&#125;&quot;,\n    &quot;status&quot;: 1,\n    &quot;createTime&quot;: &quot;2019-05-01T00:00:00.000+00:00&quot;,\n    &quot;updateTime&quot;: &quot;2019-05-01T00:00:00.000+00:00&quot;,\n    &quot;stock&quot;: null,\n    &quot;sold&quot;: null\n&#125;\n</code></pre>\n<p>现在所有的商品都能正常查询了，但是！</p>\n<p>里面的，销量和存库的数据还没有。</p>\n<p>但是如果要是有 3 张表，4 张表，5 张表都需要把它们拼接起来，所以最终需要的是完整的数据</p>\n<p>但是 itemJSON 得到的数据是一个 Json 数据，我们需要转换为 Lua 里面的对象，使用 table 这个数据类型来进行存储</p>\n<p>如下就是将 JSON 反序列化为 Lua 对象的方式：</p>\n<h4 id=\"6312-json结果处理\"><a class=\"markdownIt-Anchor\" href=\"#6312-json结果处理\">#</a> 6.3.1.2、JSON 结果处理🌴</h4>\n<p>OPenResty 提供了一个 cjson 的模块用来处理 JSON 的序列化和反序列化。</p>\n<p>官方地址：<a href=\"https://github.com/openresty/lua-cjson/\">https://github.com/openresty/lua-cjson/</a></p>\n<p>该模块的目录位置如下：/usr/local/openresty/lualib/</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201330405.png\" alt=\"image-20231020133045031\"></p>\n<p><strong>使用</strong>：</p>\n<p>1、导入 cjson 模块：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> cjson <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cjson'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>2、序列化：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   name <span class=\"token operator\">=</span> <span class=\"token string\">'jack'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   age <span class=\"token operator\">=</span> <span class=\"token number\">21</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">local</span> json <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>3、反序列化</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> json <span class=\"token operator\">=</span> <span class=\"token string\">'&#123;\"name\": \"jack\", \"age\": 21&#125;'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 反序列化</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">local</span> obj <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>继续下面的代码步骤：</p>\n<p>1、将请求到的 json 数据序列化为 lua 中的 table 数据</p>\n<p>2、再将序列化的数据进行调用拼接</p>\n<p>3、拼接完毕后再将 lua 中 table 数据序列化为 json 响应到前端</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 导入 common 函数库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> common <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">local</span> read_http <span class=\"token operator\">=</span> common<span class=\"token punctuation\">.</span>read_http</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 导入 cjson 库</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">local</span> cjson <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cjson'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 获取路径参数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">local</span> id <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- 查询商品信息</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">local</span> itemJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/item/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- 查询库存信息</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">local</span> stockJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/item/stock/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">-- JSON 转化为 lua 的 table</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">local</span> item <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>itemJSON<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">local</span> sto <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>stockJSON<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">-- 组合数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>item<span class=\"token punctuation\">.</span>stock <span class=\"token operator\">=</span> sto<span class=\"token punctuation\">.</span>stock</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>item<span class=\"token punctuation\">.</span>sold <span class=\"token operator\">=</span> sto<span class=\"token punctuation\">.</span>sold</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">-- 把 item 序列化为 json 返回结果</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>请求 uri 进行测试：<a href=\"http://localhost/item.html?id=10004\">http://localhost/item.html?id=10004</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201343013.png\" alt=\"image-20231020134303536\"></p>\n<p>请求到的数据</p>\n<pre><code>&#123;\n    &quot;spec&quot;: &quot;&#123;\\&quot;颜色\\&quot;: \\&quot;白色\\&quot;, \\&quot;尺码\\&quot;: \\&quot;36\\&quot;&#125;&quot;,\n    &quot;sold&quot;: 974,\n    &quot;status&quot;: 1,\n    &quot;updateTime&quot;: &quot;2019-05-01T00:00:00.000+00:00&quot;,\n    &quot;title&quot;: &quot;森马(senma)休闲鞋女2019春季新款韩版系带板鞋学生百搭平底女鞋 黄色 36&quot;,\n    &quot;stock&quot;: 99999,\n    &quot;price&quot;: 10400,\n    &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t1/29976/8/2947/65074/5c22dad6Ef54f0505/0b5fe8c5d9bf6c47.jpg!q70.jpg.webp&quot;,\n    &quot;createTime&quot;: &quot;2019-05-01T00:00:00.000+00:00&quot;,\n    &quot;category&quot;: &quot;休闲鞋&quot;,\n    &quot;name&quot;: &quot;休闲板鞋&quot;,\n    &quot;brand&quot;: &quot;森马&quot;,\n    &quot;id&quot;: 10004\n&#125;\n</code></pre>\n<p>可以看到有库存和销量的数据了</p>\n<h3 id=\"632-tomcat集群的负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#632-tomcat集群的负载均衡\">#</a> 6.3.2、Tomcat 集群的负载均衡🌲</h3>\n<p>我们已经实现了，从 OPenResty 向 tomcat 发送一个 http 请求去查询商品信息返回页面，完成渲染。但是在上述实现案例中 Tomcat 只有一台</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201346554.png\" alt=\"image-20231020134614455\"></p>\n<p>在实际生产中 Tomcat 一定是一个集群。所以 OPenResty 再发送请求时必须得对多台 Tomcat 实现一个负载均衡</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201349192.png\" alt=\"image-20231020134913570\"></p>\n<p>比方说 负载均衡挑选了 8081，然后请求就会到达 8081 然后去查询数据库。</p>\n<p>查询完数据库后会形成一个 jvm 进程缓存，保存在 8081 这台服务器上，缓存有了以后下次可以直接读取缓存就不用查询数据库了性能就非常好了。但是非常可惜的是进程缓存是不能共享的 8081 有这个缓存，8082 并没有，而负载均衡的规则是 轮询。如果这样访问缓存就会在多台 Tomcat 去冗余的保存。第一个占用额外空间，第二是缓存的命中率也有点惨</p>\n<p>如果说我想要商品 10001 第一次查询完以后永远都有缓存。那么我必须让 item/10001 这个请求每次都指向同一个服务器，这样才能保证这个缓存一直生效。假如说又来一个 item/10002 那我就让它指向下一个服务器。</p>\n<p>不同商品永远访问不同服务器，相同商品永远访问同一个服务器，这样就能保证缓存永远命中。</p>\n<p>这样 jvm 进程缓存才有意义。但是现在是轮询肯定做不到这一点，所以我们需要修改 nginx 负载均衡的算法了。</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># tomcat 集群配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">upstream</span> tomcat-cluster</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\"># 根据请求过来的路径来计算 hash 值然后决定访问哪个服务器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token directive\"><span class=\"token keyword\">hash</span> <span class=\"token variable\">$request_uri</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">server</span> 192.168.249.128:8081</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">server</span> 192.168.249.128:8082</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">include</span>       mime.types</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># lua 模块</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">lua_package_path</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.lua;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># c 模块     </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">lua_package_cpath</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.so;;\"</span></span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">upstream</span> tomcat-cluster</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">hash</span> <span class=\"token variable\">$request_uri</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server</span> 192.168.249.128:8081</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server</span> 192.168.249.128:8082</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://tomcat-cluster</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> ~ /api/item/(\\d+)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 idea 中开启 8082 端口的服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201435034.png\" alt=\"image-20231020143541296\"></p>\n<p>启动</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201436217.png\" alt=\"image-20231020143629316\"></p>\n<p>访问 uri 进行测试：<a href=\"http://localhost/item.html?id=10001\">http://localhost/item.html?id=10001</a></p>\n<p>这个 uri 访问请求到的 Tomcat 服务为如下：</p>\n<p>idea 控制台中打印信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201441979.png\" alt=\"image-20231020144146827\"></p>\n<p>访问 uri 进行测试：<a href=\"http://localhost/item.html?id=10002\">http://localhost/item.html?id=10002</a></p>\n<p>这个 uri 访问请求到的 Tomcat 服务为如下：</p>\n<p>idea 控制台中打印信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201442866.png\" alt=\"image-20231020144213109\"></p>\n<p>将连个服务的控制台打印的信息都清空然后再去访问一下 10001 和 10002</p>\n<p>控制台都没有打印任何的信息说明缓存起作用了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201443037.png\" alt=\"image-20231020144338972\"></p>\n<h2 id=\"64-添加redis缓存的需求\"><a class=\"markdownIt-Anchor\" href=\"#64-添加redis缓存的需求\">#</a> 6.4、添加 Redis 缓存的需求🌳</h2>\n<p>请求成功后不应该直接查询 jvm 进程缓存而是应该先到 redis 中看看有没有缓存再去看 jvm 进程缓存</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201447926.png\" alt=\"image-20231020144727615\"></p>\n<h3 id=\"641-添加redis缓存要面临的问题\"><a class=\"markdownIt-Anchor\" href=\"#641-添加redis缓存要面临的问题\">#</a> 6.4.1、添加 Redis 缓存要面临的问题🌲</h3>\n<h4 id=\"6411-冷启动与缓存预热\"><a class=\"markdownIt-Anchor\" href=\"#6411-冷启动与缓存预热\">#</a> 6.4.1.1、冷启动与缓存预热🌴</h4>\n<p><mark>冷启动</mark>：服务刚刚启动时，Redis 中并没有缓存，如果所有商品数据都在第一次查询是添加缓存，可能会给数据库带来较大压力</p>\n<p><mark>缓存预热</mark>：在实际开发中，我们可以利用大数据统计用户访问的热点数据，在项目启动时将这些热点数据提前查询并保存到 Redis 中</p>\n<p>我们数据流量较少，可以在启动时将所有数据都存入缓存中。</p>\n<h4 id=\"6412-缓存预热\"><a class=\"markdownIt-Anchor\" href=\"#6412-缓存预热\">#</a> 6.4.1.2、缓存预热🌴</h4>\n<p>步骤：</p>\n<p>1、利用 Docker 安装 Redis</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run --name redis -p 6379:6379 -d redis redis-server --appendonly yes</span></pre></td></tr></table></figure><p>2、在 item-service 服务中引入 redis 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>3、配置 Redis 地址</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span></pre></td></tr></table></figure><p>4、编写初始化类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InitializingBean</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">StringRedisTemplate</span> redisTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ItemService</span> itemService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IItemStockService</span> stockService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ObjectMapper</span> <span class=\"token constant\">MAPPER</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 初始化缓存</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 1. 查询商品信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> itemService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 2. 放入缓存</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 2.1. 序列化为 json</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">MAPPER</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 2.2. 存入 redis</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:id:\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 1. 查询库存信息</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ItemStock</span><span class=\"token punctuation\">></span></span> list1 <span class=\"token operator\">=</span> stockService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 2. 放入缓存</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ItemStock</span> itemStock <span class=\"token operator\">:</span> list1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token comment\">// 2.1. 序列化为 json</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">MAPPER</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>itemStock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">// 2.2. 存入 redis</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:stock:id:\"</span> <span class=\"token operator\">+</span> itemStock<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重启或启动 8081 和 8082 两个服务器</p>\n<p>可以看到启动时 redis 初始化缓存去查询了数据库此时可以看下 redis 中的数据情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201513672.png\" alt=\"image-20231020151344361\"></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker exec -it redis redis-cli</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> keys *</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:id:10004\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:stock:id:10004\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:id:10002\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:stock:id:10005\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:id:10001\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:stock:id:10001\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:stock:id:10003\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:id:10003\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:stock:id:10002\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"item:id:10005\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><h2 id=\"65-查询redis缓存\"><a class=\"markdownIt-Anchor\" href=\"#65-查询redis缓存\">#</a> 6.5、查询 Redis 缓存🌳</h2>\n<h3 id=\"651-openresty的redis模块\"><a class=\"markdownIt-Anchor\" href=\"#651-openresty的redis模块\">#</a> 6.5.1、OpenResty 的 Redis 模块🌲</h3>\n<p>OPenResty 提供了操作 Redis 的模块，我们只要引入该模块就能直接使用：</p>\n<p>在 common.lua 文件中进行编写</p>\n<ul>\n<li>引入 Redis 模块，并初始化 Redis 对象</li>\n</ul>\n<p>为什么引入模块中文件名中间需要一个 . ？</p>\n<p>解释：因为我们上述文章中都是引入的 lualib 目录下的模块因为直接在 lua 目录所以可以直接写文件名就行了。但是这个 redis 可不再 lualib 根目录中而是在 resty 目录下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201533407.png\" alt=\"image-20231020153335950\"></p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 引入 redis 模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> redis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resty.redis'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 初始化 redis 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> red <span class=\"token operator\">=</span> redis<span class=\"token punctuation\">:</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 设置 redis 超时时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>red<span class=\"token punctuation\">:</span><span class=\"token function\">set_timeouts</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>封装函数，用来释放 Redis 链接，其实是放入连接池</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 关闭 redis 连接的工具方法，其实是放入连接池</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_max_idle_time <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> <span class=\"token comment\">-- 连接的空闲时间，单位是毫秒</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_size <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\">-- 连接池大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">set_keepalive</span><span class=\"token punctuation\">(</span>pool_max_idle_time<span class=\"token punctuation\">,</span> pool_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"放入redis连接池失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>OPenResty 提供了操作 Redis 的模块，我们只要引入该模块就能直接使用：</p>\n<ul>\n<li>封装函数，从 Redis 读数据并返回：</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 查询 redis 的方法 ip 和 port 是 redis 地址，key 是查询的 key</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">-- 获取一个连接</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"连接redis失败 : \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">local</span> resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">-- 查询失败处理</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\", key = \"</span> <span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">-- 得到的数据为空处理</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> resp <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>null <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        resp <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis数据为空, key = \"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>完整的代码编写：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 引入 redis 模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> redis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resty.redis'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 初始化 redis 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> red <span class=\"token operator\">=</span> redis<span class=\"token punctuation\">:</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 设置 redis 超时时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>red<span class=\"token punctuation\">:</span><span class=\"token function\">set_timeouts</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 关闭 redis 连接的工具方法，其实是放入连接池</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_max_idle_time <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> <span class=\"token comment\">-- 连接的空闲时间，单位是毫秒</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_size <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\">-- 连接池大小</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">set_keepalive</span><span class=\"token punctuation\">(</span>pool_max_idle_time<span class=\"token punctuation\">,</span> pool_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"放入redis连接池失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">-- 查询 redis 的方法 ip 和 port 是 redis 地址，key 是查询的 key</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">-- 获取一个连接</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"连接redis失败 : \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">local</span> resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">-- 查询失败处理</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\", key = \"</span> <span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">-- 得到的数据为空处理</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> resp <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>null <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        resp <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis数据为空, key = \"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">-- 封装函数，发送 http 请求，并解析响应</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">capture</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        method <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>HTTP_GET<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        args <span class=\"token operator\">=</span> params<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">-- 记录错误信息，返回 404</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"http 查询失败了~, path: \"</span><span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">,</span> <span class=\"token string\">\", args: \"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">-- 将方法导出</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">local</span> _M <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    read_http <span class=\"token operator\">=</span> read_http<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    read_redis <span class=\"token operator\">=</span> read_redis</pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">return</span> _M</pre></td></tr></table></figure><p>在 item.lua 文件中进行导入 redis 工具函数</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> read_redis <span class=\"token operator\">=</span> common<span class=\"token punctuation\">.</span>read_redis</pre></td></tr></table></figure><p>由于添加了 redis 缓存那么之前的查询商品信息和库存的函数就需要修改了。</p>\n<p>但是需要修改两个太麻烦了所以对其进行封装函数：</p>\n<p>需求：</p>\n<p>1、修改 item.lua，封装一个函数 read_data，实现先查询 redis，如果未命中，再查询 tomcat</p>\n<p>2、修改 item.lua，查询商品和库存时都调用 read_data 这个函数</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 封装查询函数，先查询 redis，如果未命中再查询 tomcat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">-- 判断 redis 是否命中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">-- redis 查询失败，再查询 tomcat</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    resp <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>编写完封装函数后将原来的请求函数进行替换</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 查询商品信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> itemJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:id:\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/item/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 查询库存信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> stockJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:stock:id:\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/item/stock/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>item.lua 文件的完整代码：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 导入 common 函数库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> common <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">local</span> read_http <span class=\"token operator\">=</span> common<span class=\"token punctuation\">.</span>read_http</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> read_redis <span class=\"token operator\">=</span> common<span class=\"token punctuation\">.</span>read_redis</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 导入 cjson 库</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">local</span> cjson <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cjson'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">-- 封装查询函数，先查询 redis，如果未命中再查询 tomcat</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">-- 判断 redis 是否命中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">-- redis 查询失败，再查询 tomcat</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis查询失败,尝试查询http, key :\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    resp <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">-- 获取路径参数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">local</span> id <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">-- 查询商品信息</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">local</span> itemJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:id:\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/item/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">-- 查询库存信息</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">local</span> stockJSON <span class=\"token operator\">=</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:stock:id:\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/item/stock/\"</span> <span class=\"token operator\">..</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">-- JSON 转化为 lua 的 table</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">local</span> item <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>itemJSON<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">local</span> sto <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>stockJSON<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">-- 组合数据</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>item<span class=\"token punctuation\">.</span>stock <span class=\"token operator\">=</span> sto<span class=\"token punctuation\">.</span>stock</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>item<span class=\"token punctuation\">.</span>sold <span class=\"token operator\">=</span> sto<span class=\"token punctuation\">.</span>sold</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">-- 把 item 序列化为 json 返回结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>cjson<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>重启虚拟机中的 nginx</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># nginx -s reload</span></pre></td></tr></table></figure><p>访问 uri 进行测试：<a href=\"http://localhost/item.html?id=10002\">http://localhost/item.html?id=10002</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201603830.png\" alt=\"image-20231020160328617\"></p>\n<p>查看 idea 控制台</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201603637.png\" alt=\"image-20231020160349587\"></p>\n<p>将控制台信息清空后再次访问 uri：<a href=\"http://localhost/item.html?id=10002\">http://localhost/item.html?id=10002</a></p>\n<p>控制台情况</p>\n<p>说明数据已经被缓存了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201604800.png\" alt=\"image-20231020160432732\"></p>\n<p>我们把两个服务器全关了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201605790.png\" alt=\"image-20231020160510420\"></p>\n<p>再访问一下 uri：<a href=\"http://localhost/item.html?id=10002\">http://localhost/item.html?id=10002</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310201634990.png\" alt=\"image-20231020163445555\"></p>\n<p>可以看到如果没有启动 Tomcat 也没事儿因为先去看了下 Redis 发现有相关数据直接拿来就不找服务器了。</p>\n<h2 id=\"66-nginx本地缓存\"><a class=\"markdownIt-Anchor\" href=\"#66-nginx本地缓存\">#</a> 6.6、Nginx 本地缓存🌳</h2>\n<p>OPenResty 为 Nginx 提供了 shard dict 的功能，可以在 Nginx 的多个 worker 之间共享数据，实现缓存功能。</p>\n<p>1、开启共享字典，在 nginx.conf 的 http 下添加配置</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 共享字典，也就是本地缓存，名称叫做：item_cache，大小 150m</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_shared_dict</span> item_cache <span class=\"token number\">150m</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、操作共享字典</p>\n<p>在 item.lua 文件中导入</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 导入共享词典，本地缓存</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> item_cache <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span>item_cache</pre></td></tr></table></figure><h3 id=\"661-案例在查询商品时优先查询openresty的本地缓存\"><a class=\"markdownIt-Anchor\" href=\"#661-案例在查询商品时优先查询openresty的本地缓存\">#</a> 6.6.1、案例，在查询商品时，优先查询 OPenResty 的本地缓存🌲</h3>\n<p>需求：</p>\n<p>1、修改 item.lua 中的 read_data 函数，优先查询本地缓存，未命中时在查询 Redis，Tomcat</p>\n<p>2、查询 Redis 或 Tomcat 成功后，将数据写入本地缓存，并设置有效期</p>\n<p>3、商品基本信息，有效期 30 分钟</p>\n<p>4、库存信息，有效期 1 分钟</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 封装查询函数，先查询 redis，如果未命中再查询 tomcat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">read_data</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> expire<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">-- 查询本地缓存</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">local</span> val <span class=\"token operator\">=</span> item_cache<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> val <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    val <span class=\"token operator\">=</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6379</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">-- 判断查询结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> val <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">-- redis 查询失败，查询 tomcat</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        val <span class=\"token operator\">=</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">-- 查询成功，把数据写入本地缓存</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  item_cache<span class=\"token punctuation\">:</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">,</span> expire<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">-- 返回数据</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> val</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>测试</p>\n<p>切换到 nginx 目录下来监控 error.log 文件的打印情况</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># nginx -s reload</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># pwd</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/usr/local/openresty/nginx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># tail -f logs/error.log</span></pre></td></tr></table></figure><h1 id=\"七-缓存同步\"><a class=\"markdownIt-Anchor\" href=\"#七-缓存同步\">#</a> 七、缓存同步🎄</h1>\n<ul>\n<li>数据同步策略</li>\n<li>安装 Canal</li>\n<li>监听 Canal</li>\n</ul>\n<h2 id=\"71-数据同步策略\"><a class=\"markdownIt-Anchor\" href=\"#71-数据同步策略\">#</a> 7.1、数据同步策略🌳</h2>\n<p>缓存数据同步的常见方式有三种：</p>\n<p><mark>1、设置有效期</mark>：给缓存设置有效期，到期后自动删除。再次查询时更新</p>\n<p>1.1、优势：简单，方便</p>\n<p>1.2、缺点：时效性差，缓存过期之前可能不一致</p>\n<p>1.3、场景：更新频率较低，时效性要求低的业务</p>\n<p><mark>2、同步双写</mark>：在修改数据库的同时，直接修改缓存</p>\n<p>2.1、优势：时效性强，缓存与数据库强一致</p>\n<p>2.2、缺点：有代码侵入，耦合度高</p>\n<p>2.3、场景：对一致性，时效性要求较高的缓存数据</p>\n<p><mark>3、异步通知</mark>：修改数据库时发送事件通知，相关服务监听到通知后修改缓存数据</p>\n<p>3.1、优势：低耦合，可以同时通知多个缓存服务</p>\n<p>3.2、缺点：时效性一般，可能存在终极爱你不一致状态</p>\n<p>3.3、场景：时效性要求一般，有多个服务需要同步</p>\n<h3 id=\"711-缓存同步策略\"><a class=\"markdownIt-Anchor\" href=\"#711-缓存同步策略\">#</a> 7.1.1、缓存同步策略🌲</h3>\n<p>异步通知可以使用基于 MQ 的异步通知</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210915149.png\" alt=\"image-20231021091552370\"></p>\n<p>但是基于 MQ 还是要修改里面的代码发送消息，而下面要讲的是基于 Canal 的异步通知</p>\n<p>基于 Canal 的异步通知</p>\n<p>canal 可以去监听数据库的变化</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210917386.png\" alt=\"image-20231021091750935\"></p>\n<h3 id=\"712-初始canal\"><a class=\"markdownIt-Anchor\" href=\"#712-初始canal\">#</a> 7.1.2、初始 Canal🌲</h3>\n<p>Canal 意译为 水道 / 管道 / 沟渠，Canal 是阿里巴巴旗下的一款开源项目，基于 Java 开发。基于数据库增量日志解析，提供增量数据订阅 &amp; 消费。GiHub 地址：<a href=\"https://github.com/alibaba/canal\">https://github.com/alibaba/canal</a></p>\n<p>Canal 是基于 mysql 的主从同步来实现的，MySQL 主从同步的原理如下：</p>\n<p>master 就是 mysql 的主节点，slave 就是 mysql 的从节点。主从数据是要做同步的，那它怎么做到的呢？首先 mysql 的主节点在做增删改查时就回去记录日志到 binary.log 文件中这个文件称为二进制日志文件。其中记录的就是 binary log events，里面记录的就是业务 sql。slave 会开启一个线程不断的来读取这个日志文件把这个文件读过来放到一个 relay log 文件中。这样主节点做了哪些 sql 从节点 也做哪些 sql</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210922728.png\" alt=\"image-20231021092228657\"></p>\n<p>而 Canal 就是把自己伪装成 MySQL 的一个 Slave 节点，从而监听 master 的 binary log 变化。再把得到的变化信息通知给 Canal 的客户端，进而完成对其它数据库的同步。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210929872.png\" alt=\"image-20231021092859461\"></p>\n<h3 id=\"713-canal安装\"><a class=\"markdownIt-Anchor\" href=\"#713-canal安装\">#</a> 7.1.3、Canal 安装🌲</h3>\n<p>查看文章：<a href=\"./Canal/%E5%AE%89%E8%A3%85Canal.md\">安装 Canal</a>.</p>\n<h3 id=\"714-canal客户端\"><a class=\"markdownIt-Anchor\" href=\"#714-canal客户端\">#</a> 7.1.4、Canal 客户端🌲</h3>\n<p>Canal 提供了各种语言的客户端，当 Canal 监听到 binlog 变化时，会通知 Canal 的客户端。不过这里我们会使用 Github 上的第三方开源的 canal-stater。地址：<a href=\"https://github.com/NormanGyllenhaal/canal-client\">https://github.com/NormanGyllenhaal/canal-client</a></p>\n<p>引入依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>top.javatool<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>canal-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.2.1-RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>编写配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">canal</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span> dkx1 <span class=\"token comment\"># canal 实例名称，要跟 canal-server 运行时设置的 destiation 一致</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">11111</span> <span class=\"token comment\"># canal 地址</span></pre></td></tr></table></figure><p>编写监听器，监听 Canal 消息：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 指定要监听的表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@CanalTable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tb_item\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span>                                    <span class=\"token comment\">// 指定表关联的实体类</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EntryHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 下面三个重写方法是，监听到数据库的增删改的消息的</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">EntryHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> before<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Item</span> after<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">EntryHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>before<span class=\"token punctuation\">,</span> after<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">EntryHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Canal 推送给 canal-client 的是被修改的这一行数据 (row) ，而我们引入的 canal-client 则会帮我们把行数据封装到 item 实体类中。这个过程中需要知道数据库与实体的映射关系，要用到 JPA 的几个注解：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tb_item\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTO</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 标记表中的 id 字段</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Id</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span><span class=\"token comment\">// 商品 id</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> 其它字段 省略</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> updateTime<span class=\"token punctuation\">;</span><span class=\"token comment\">// 更新时间</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// @Transient 标记不属于表中的字段  忽略</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>exist <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Transient</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> stock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>exist <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Transient</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> sold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编写 redis 的缓存类 ，添加两个函数，一个新增或更新，一个是删除</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">saveItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">MAPPER</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:id:\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonProcessingException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteItemById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item:id:\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>定义完 redis 的缓存类里面的函数后再回到编写监听器的类里面编写代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@CanalTable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tb_item\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EntryHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisHandler</span> redisHandler<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Cache</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> cache<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        redisHandler<span class=\"token punctuation\">.</span><span class=\"token function\">saveItem</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> before<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Item</span> after<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>after<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> after<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        redisHandler<span class=\"token punctuation\">.</span><span class=\"token function\">saveItem</span><span class=\"token punctuation\">(</span>after<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">EntryHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>before<span class=\"token punctuation\">,</span> after<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 写数据到 jvm 进程缓存</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        cache<span class=\"token punctuation\">.</span><span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 写数据到 redis</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        redisHandler<span class=\"token punctuation\">.</span><span class=\"token function\">deleteItemById</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">EntryHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务查看 idea 打印信息：</p>\n<pre><code>meters: 10005(Long)\n14:50:32:387 DEBUG 4956 --- [nio-8081-exec-7] c.h.i.mapper.ItemStockMapper.selectById  : &lt;==      Total: 1\n14:50:32:472  INFO 4956 --- [l-client-thread] t.j.c.client.client.AbstractCanalClient  : 获取消息 Message[id=-1,entries=[],raw=false,rawEntries=[]]\n14:50:34:474  INFO 4956 --- [l-client-thread] t.j.c.client.client.AbstractCanalClient  : 获取消息 Message[id=-1,entries=[],raw=false,rawEntries=[]]\n14:50:36:477  INFO 4956 --- [l-client-thread] t.j.c.client.client.AbstractCanalClient  : 获取消息 Message[id=-1,entries=[],raw=false,rawEntries=[]]\n14:50:38:478  INFO 4956 --- [l-client-thread] t.j.c.client.client.AbstractCanalClient  : 获取消息 Message[id=-1,entries=[],raw=false,rawEntries=[]]\n14:50:40:472  INFO 4956 --- [l-client-thread] t.j.c.client.client.AbstractCanalClient  : 获取消息 Message[id=-1,entries=[],raw=false,rawEntries=[]]\n</code></pre>\n<p>表示 canal 与 java 成功的连接到了</p>\n<p>那么测试一下数据同步打开 8081 端口的页面</p>\n<p>比如说修改 10001 这个商品的数据：</p>\n<p>原来的数据如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211452116.png\" alt=\"image-20231021145237319\"></p>\n<p>修改后的数据如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211453292.png\" alt=\"image-20231021145302067\"></p>\n<p>点击确定</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211453164.png\" alt=\"image-20231021145357351\"></p>\n<p>再查看 idea 的控制台信息：</p>\n<p>可以看到打印了一堆日志信息</p>\n<pre><code>  version: 1\n  logfileName: &quot;mysql-bin.000006&quot;\n  logfileOffset: 1173\n  serverId: 1000\n  serverenCode: &quot;UTF-8&quot;\n  executeTime: 1697871191000\n  sourceType: MYSQL\n  schemaName: &quot;&quot;\n  tableName: &quot;&quot;\n  eventLength: 91\n&#125;\nentryType: TRANSACTIONBEGIN\nstoreValue: &quot; H&quot;\n, header &#123;\n  version: 1\n  logfileName: &quot;mysql-bin.000006&quot;\n  logfileOffset: 1344\n  serverId: 1000\n  serverenCode: &quot;UTF-8&quot;\n  executeTime: 1697871191000\n  sourceType: MYSQL\n  schemaName: &quot;dkx&quot;\n  tableName: &quot;tb_item&quot;\n  eventLength: 620\n  eventType: UPDATE\n  props &#123;\n    key: &quot;rowsCount&quot;\n    value: &quot;1&quot;\n  &#125;\n&#125;\nentryType: ROWDATA\nstoreValue: &quot;\\b_\\020\\002P\\000b\\324\\n\\n&amp;\\b\\000\\020\\373\\377\\377\\377\\377\\377\\377\\377\\377\\001\\032\\002id \\001(\\0000\\000B\\00510001R\\006bigint\\nd\\b\\001\\020\\f\\032\\005title \\000(\\0000\\000BCRIMOWA 21\\345\\257\\270\\346\\211\\230\\350\\277\\220\\347\\256\\261\\346\\213\\211\\346\\235\\206\\347\\256\\261 SALSA AIR\\347\\263\\273\\345\\210\\227\\346\\236\\234\\347\\273\\277\\350\\211\\262 820.70.36.4R\\fvarchar(264)\\n)\\b\\002\\020\\f\\032\\004name \\000(\\0000\\000B\\tSALSA AIRR\\fvarchar(128)\\n)\\b\\003\\020\\373\\377\\377\\377\\377\\377\\377\\377\\377\\001\\032\\005price \\000(\\0000\\000B\\00516900R\\006bigint\\n\\226\\001\\b\\004\\020\\f\\032\\005image \\000(\\0000\\000Buhttps://m.360buyimg.com/mobilecms/s720x720_jfs/t6934/364/1195375010/84676/e9f2c55f/597ece38N0ddcbc77.jpg!q70.jpg.webpR\\fvarchar(200)\\n-\\b\\005\\020\\f\\032\\bcategory \\000(\\0000\\000B\\t\\346\\213\\211\\346\\235\\206\\347\\256\\261R\\fvarchar(200)\\n\\'\\b\\006\\020\\f\\032\\005brand \\000(\\0000\\000B\\006RIMOWAR\\fvarchar(100)\\nG\\b\\a\\020\\f\\032\\004spec \\000(\\0000\\000B\\'&#123;\\&quot;\\351\\242\\234\\350\\211\\262\\&quot;: \\&quot;\\347\\272\\242\\350\\211\\262\\&quot;, \\&quot;\\345\\260\\272\\347\\240\\201\\&quot;: \\&quot;26\\345\\257\\270\\&quot;&#125;R\\fvarchar(200)\\n\\032\\b\\b\\020\\004\\032\\006status \\000(\\0000\\000B\\0011R\\003int\\n6\\b\\t\\020]\\032\\vcreate_time \\000(\\0000\\000B\\0232019-05-01 00:00:00R\\bdatetime\\n6\\b\\n\\020]\\032\\vupdate_time \\000(\\0000\\000B\\0232019-05-01 00:00:00R\\bdatetime\\022&amp;\\b\\000\\020\\373\\377\\377\\377\\377\\377\\377\\377\\377\\001\\032\\002id \\001(\\0000\\000B\\00510001R\\006bigint\\022d\\b\\001\\020\\f\\032\\005title \\000(\\0000\\000BCRIMOWA 21\\345\\257\\270\\346\\211\\230\\350\\277\\220\\347\\256\\261\\346\\213\\211\\346\\235\\206\\347\\256\\261 SALSA AIR\\347\\263\\273\\345\\210\\227\\346\\236\\234\\347\\273\\277\\350\\211\\262 820.70.36.4R\\fvarchar(264)\\022)\\b\\002\\020\\f\\032\\004name \\000(\\0000\\000B\\tSALSA AIRR\\fvarchar(128)\\022)\\b\\003\\020\\373\\377\\377\\377\\377\\377\\377\\377\\377\\001\\032\\005price \\000(\\0010\\000B\\00528900R\\006bigint\\022\\226\\001\\b\\004\\020\\f\\032\\005image \\000(\\0000\\000Buhttps://m.360buyimg.com/mobilecms/s720x720_jfs/t6934/364/1195375010/84676/e9f2c55f/597ece38N0ddcbc77.jpg!q70.jpg.webpR\\fvarchar(200)\\022-\\b\\005\\020\\f\\032\\bcategory \\000(\\0000\\000B\\t\\346\\213\\211\\346\\235\\206\\347\\256\\261R\\fvarchar(200)\\022\\'\\b\\006\\020\\f\\032\\005brand \\000(\\0000\\000B\\006RIMOWAR\\fvarchar(100)\\022G\\b\\a\\020\\f\\032\\004spec \\000(\\0010\\000B\\'&#123;\\&quot;\\351\\242\\234\\350\\211\\262\\&quot;: \\&quot;\\347\\272\\242\\350\\211\\262\\&quot;, \\&quot;\\345\\260\\272\\347\\240\\201\\&quot;: \\&quot;33\\345\\257\\270\\&quot;&#125;R\\fvarchar(200)\\022\\032\\b\\b\\020\\004\\032\\006status \\000(\\0000\\000B\\0011R\\003int\\0226\\b\\t\\020]\\032\\vcreate_time \\000(\\0000\\000B\\0232019-05-01 00:00:00R\\bdatetime\\0226\\b\\n\\020]\\032\\vupdate_time \\000(\\0000\\000B\\0232019-05-01 00:00:00R\\bdatetime&quot;\n],raw=false,rawEntries=[]]\n</code></pre>\n<p>我们再去访问商品数据的展示页面查看数据是否被修改了</p>\n<p>访问 uri：<a href=\"http://localhost/item.html?id=10001#index\">http://localhost/item.html?id=10001#index</a></p>\n<p>可以看到这个页面的数据也被修改了说明缓存同步成功了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211504526.png\" alt=\"image-20231021150447258\"></p>\n<h1 id=\"八-总结多级缓存架构\"><a class=\"markdownIt-Anchor\" href=\"#八-总结多级缓存架构\">#</a> 八、总结多级缓存架构🎄</h1>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211510207.png\" alt=\"image-20231021151019996\"></p>\n<p>有一个页面叫 item.html 放到了 windows 的 nginx 服务器上。它的 主要作用就是一个静态资源服务器和反向代理服务器。当用户通过浏览器来请求它时它就可以把页面返回给用户而浏览器在渲染时发现缺少数据就会发送 ajax 请求来查询数据。查询地址就是 item/10001 这时的 nginx 反向代理服务器不回去处理业务，只是做反向代理，所以它会把请求代理给 OPenResty 集群，想要去查询数据又有先去本地如果有则直接返回，本地共享词典数据只能在当前 nginx 中使用。如果我们部署成 OPenResty 集群它们之间的内存是不共享的，所以这里也可以采用通过 id 计算 hash 来路由指定集群服务器的方式这样就会保证 OPenResty 缓存一直生效。本地缓存如果未命中则去查询 redis 缓存，命中则返回，未命中则查询 tomcat。查询 tomcat 也是集群也做了 jvm 进程缓存，tomcat 服务器之间是不共享内存的所以还需要使用通过 id 计算 hash 值的方式来路由指定 tomcat 服务器</p>\n<p>那么多级缓存完成后就会面临一个问题就是数据同步的问题。</p>\n<p>mysql 的数据进行了修改 redis 和 tomcat 进程缓存和 nginx 缓存都需要做同步</p>\n<p>在 OPenResty 中使用的超时同步，设置过期时间过期自动删除就变成新数据了，这种方式适合于更新频率较低的数据</p>\n<p>而 redis 与 mysql 之间的数据同步采用了 canal 监听 mysql 的方式</p>\n<h1 id=\"九-服务异步通讯\"><a class=\"markdownIt-Anchor\" href=\"#九-服务异步通讯\">#</a> 九、服务异步通讯🎄</h1>\n<p>高级篇 - rabbitmq 的高级特性</p>\n<p>我们已经学习过它的基本用法了，学习了如何利用 springamqp 收和发消息，但是收和发消息只是 mq 的最基本的功能。因为在收和发消息的过程当中还有很多问题需要思考需要去解决这时就需要使用 mq 的高级特性去解决了</p>\n<p>MQ 的一些常见问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211532979.png\" alt=\"image-20231021153238893\"></p>\n<p>学习内容：</p>\n<ul>\n<li>消息可靠性</li>\n<li>死信交换机</li>\n<li>惰性队列</li>\n<li>MQ 集群</li>\n</ul>\n<h2 id=\"91-消息可靠性问题\"><a class=\"markdownIt-Anchor\" href=\"#91-消息可靠性问题\">#</a> 9.1、消息可靠性问题🌳</h2>\n<p>消息从生产者发送到 exchange，再到 queue，再到消费者，有哪些导致消息丢失的可能性？</p>\n<p>先来温习一下 mq 的整个流程</p>\n<p>消息的发送者称为 publisher，它把消息投递给交换机 exchange，而交换机会根据 routingkey 将消息路由到队列 queue 中，而队列再把消息投递给消费者 consumer</p>\n<p>在整个这样的流程当中消息可能会发生丢失</p>\n<ul>\n<li>发送时丢失：\n<ul>\n<li>生产者发送的消息未送达 exchange</li>\n<li>消息到达 exchange 后未达到 queue</li>\n</ul>\n</li>\n<li>MQ 宕机，queue 将消息丢失</li>\n<li>consumer 接收到消息后未消息就宕机</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211536652.png\" alt=\"image-20231021153606449\"></p>\n<p>针对上述问题我们来学习如下内容：</p>\n<ul>\n<li>生产者消息确认</li>\n<li>消息持久化</li>\n<li>消费者消息确认</li>\n<li>消费失败重试机制</li>\n</ul>\n<h3 id=\"911-生产者确认机制\"><a class=\"markdownIt-Anchor\" href=\"#911-生产者确认机制\">#</a> 9.1.1、生产者确认机制🌲</h3>\n<p>RabbitMQ 提供了 publisher confirm 机制来避免消息发送到 MQ 过程中丢失。消息发送到 MQ 以后，会返回一个结果给发送者，表示消息是否处理成功。结果有两种请求：</p>\n<ul>\n<li>publisher-confirm，发送者确认\n<ul>\n<li>消息成功投递到交换机，返回 ack</li>\n<li>消息未投递到交换机，返回 nack</li>\n</ul>\n</li>\n<li>publisher-return，发送者回执\n<ul>\n<li>消息投递到交换机了，但是没有路由到队列。返回 ACK，及路由失败原因。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211546864.png\" alt=\"image-20231021154614145\"></p>\n<blockquote>\n<p><font color='red'>注意</font>：</p>\n<p>确认机制发送消息时，需要给每个消息设置一个全局唯一 id，以区分不同消息，避免 ack 冲突</p>\n</blockquote>\n<p>引入 demo 工程</p>\n<p>首先，需要引入项目：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a></p>\n<p>拉取分支：mq-advanced-demo 代码演示</p>\n<h2 id=\"92-springamqp实现生产者确认\"><a class=\"markdownIt-Anchor\" href=\"#92-springamqp实现生产者确认\">#</a> 9.2、SpringAMQP 实现生产者确认🌳</h2>\n<p>1、在 publisher 这个微服务的 applicaiton.yml 中添加配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># rabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">#------------------------------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">publisher-confirm-type</span><span class=\"token punctuation\">:</span> correlated</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">publisher-returns</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token key atrule\">mandatory</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p>配置说明：</p>\n<ul>\n<li>publishe-confirm-type：开启 publisher-confirm，这里支持两种类型：\n<ul>\n<li>simple：同步等待 confirm 结果，直到超时</li>\n<li>correlated：异步回调，定义 ConfirmCallback，MQ 返回结果时会回调这个 ConfirmCallback</li>\n</ul>\n</li>\n<li>publish-returns：开启 publish-return 功能，同样是基于 callback 机制，不过是定义 ReturnCallback</li>\n<li>template.mandatory：定义消息路由失败时的策略。true，则调用 ReturnCallback; false：则直接丢弃消息</li>\n</ul>\n<p>2、每个 RabbitTemplate 只能配置一个 ReturnCallback，因此需要在项目启动过程中配置：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//                         实现 Spring 工厂的通知</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CommonConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextAware</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 重写 Bean 工厂准备好后调用的函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 取出 RabbitTempalte 的 Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RabbitTemplate</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 配置 ReturnCallback</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 记录日志 &#123;&#125; 为占位符</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送到队列失败，响应码：&#123;&#125;，失败原因：&#123;&#125;，\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token string\">\"交换机：&#123;&#125;，路由key：&#123;&#125;，消息：&#123;&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    i<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// 如果有需要的话，重发消息</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>returncallback 是 exchange 路由不到 queue 时，才触发的回调</p>\n<p>confirmcallback 是在消息达不到交换机时，才回调</p>\n<p>3、发送消息，指定消息 ID，消息 ConfirmCallback</p>\n<p>先使用 test 代码进行一下测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211718275.png\" alt=\"image-20231021171827222\"></p>\n<p>发送消息的代码中，有 交换机，但是 Routingkey 不存在，所以我们需要去创建一下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211719943.png\" alt=\"image-20231021171807188\"></p>\n<p>点击 bind</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211719018.png\" alt=\"image-20231021171942977\"></p>\n<p>但是！在发送消息的测试代码中以前是那样写的，但是现在要做消息确认机制所以就要多传递一个参数了</p>\n<p>测试代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringAmqpTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendMessage2SimpleQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">String</span> routingKey <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello, spring amqp!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 1.1. 准备 CorrelationData</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 1.2. 消息 ID</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">CorrelationData</span> correlationData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorrelationData</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 1.3. 准备 ConfirmCallback</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 成功的回调函数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        correlationData<span class=\"token punctuation\">.</span><span class=\"token function\">getFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addCallback</span><span class=\"token punctuation\">(</span>confirm <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 判断结果</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>confirm<span class=\"token punctuation\">.</span><span class=\"token function\">isAck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token comment\">// ACK</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息成功投递到交换机 ！消息ID: &#123;&#125;\"</span><span class=\"token punctuation\">,</span> correlationData<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">// NACK</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息投递到交换机失败了 ！ 消息ID: &#123;&#125;\"</span><span class=\"token punctuation\">,</span> correlationData<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">// 重发消息</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">// 失败的回调函数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> throwable <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">// 记录日志</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送失败 ! \"</span><span class=\"token punctuation\">,</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">// 重发消息</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"amq.topic\"</span><span class=\"token punctuation\">,</span> routingKey<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span>correlationData <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行这个测试代码</p>\n<p>idea 控制台打印信息如下：</p>\n<pre><code>消息成功投递到交换机 ！消息ID: a4abf2f4-85f5-4fdc-bb73-7be9ab91b6bd\n</code></pre>\n<p>查看消息队列是否接受到了一个消息并查看内容</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211737447.png\" alt=\"image-20231021173713091\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211737796.png\" alt=\"image-20231021173730615\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>SpringAMQP 中处理消息确认的几种情况：</p>\n<ul>\n<li>publisher-confirm\n<ul>\n<li>消息成功发送到 exchange，返回 ack</li>\n<li>消息发送失败，没有到达交换机，返回 nack</li>\n<li>消息发送过程中出现异常，没有收到回执</li>\n</ul>\n</li>\n<li>消息成功发送到 exchange，但没有路由到 queue\n<ul>\n<li>调用 ReturnCallback</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>以上就是生产确认的机制了。通过这些机制就能够确认消息 能够到达消息队列</p>\n<h2 id=\"93-消息持久化\"><a class=\"markdownIt-Anchor\" href=\"#93-消息持久化\">#</a> 9.3、消息持久化🌳</h2>\n<p>由于 RabbitMQ 默认是内存存储，如果此时 mq 发生了宕机，消息也是有可能丢失的。要想让消息真正安全，我们必须确保这个消息能够做到持久化。也就是把它写入到磁盘中</p>\n<p>在消费者的 config 类中进行配置</p>\n<p>1、交换机持久化：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">DirectExchange</span> <span class=\"token function\">simpleExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 三个参数：交换机名称，是否持久化，当没有 queue 与其绑定时是否自动删除</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple.direct\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、队列持久化</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">simpleQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 使用 QueueBuilder 构建队列，durable 就是持久化的</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务进行测试，结果如下：</p>\n<p>队列</p>\n<p>其中的 D 就是 durable 就是持久化的意思</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211756121.png\" alt=\"image-20231021175655932\"></p>\n<p>交换机</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211759449.png\" alt=\"image-20231021175939976\"></p>\n<p>关闭所有服务器</p>\n<p>发送一下消息进行测试一下消息是否也能持久化</p>\n<p>我们向 simple.queue 中发送一条消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211831349.png\" alt=\"image-20231021183122204\"></p>\n<p>此时队列中就会存留一条消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211833155.png\" alt=\"image-20231021183339726\"></p>\n<p>那么现在我们队列里面有消息了，并且队列已经持久化了，我们再去重启 mq 来测试一下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker restart mq</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mq</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>回到页面中进行查看</p>\n<p>可以看到消息 没了！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211835842.png\" alt=\"image-20231021183522398\"></p>\n<p>这就证明消息没有持久化，那我们的目的是让消息也能持久啊，那怎么办？</p>\n<p>3、消息持久化，SpringAMQP 中的消息默认是持久的，可以通过 MessageProperties 中的 DeliveryMode 来指定：</p>\n<p>在测试代码中进行编写：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDurableMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, spring\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                             <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 消息体</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 持久化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动成功后查看队列情况：</p>\n<p>可以看到队列中就有了一条消息了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211842026.png\" alt=\"image-20231021184255870\"></p>\n<p>在队列的详情页面里面的 get message 中可以看到 delivery_mode：2 表示消息持久化</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211844251.png\" alt=\"image-20231021184420061\"></p>\n<p>重启 mq 测试消息是否真的就是持久化了：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker restart mq</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mq</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost nginx<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>访问 mq 队里情况：</p>\n<p>可以看到这条消息还存在着</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211845144.png\" alt=\"image-20231021184553048\"></p>\n<h2 id=\"94-消费者确认\"><a class=\"markdownIt-Anchor\" href=\"#94-消费者确认\">#</a> 9.4、消费者确认🌳</h2>\n<p>RabbitMQ 支持消费者确认机制，即：消费者处理消息后可以向 MQ 发送 ack 回执，MQ 收到 ack 回执后才会删除消息。而 SpringAMQP 则允许配置三种确认模式：</p>\n<ul>\n<li>manual：手动 ack，需要在业务代码结束后，调用 api 发送 ack</li>\n<li>auto：自动 ack，由 Spring 检测 listener 代码是否出现异常，没有异常则返回 ack；抛出异常则返回 nack</li>\n<li>none：关闭 ack，MQ 假定消费者获取消息后会成功处理，因此消息投递后立即被删除</li>\n</ul>\n<p>配置方式是修改 application.yml 文件，添加下面配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># rabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">listener</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">simple</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">prefetch</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">acknowledge-mode</span><span class=\"token punctuation\">:</span> auto <span class=\"token comment\"># 自动 ack</span></pre></td></tr></table></figure><p>先看下 mq 的队列情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310212025971.png\" alt=\"image-20231021202521333\"></p>\n<p>队列中有一条消息</p>\n<p>我们在 consumer 的消费代码编写一个异常</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenSimpleQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">*</span>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到simple.queue的消息：【\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者处理消息成功 ！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>配置完成后启动 consumer 服务进行测试</p>\n<p>此时程序走到 debug 处，没有执行完毕我们看下现在的队列情况</p>\n<p>可以看到它没有删除这条消息而是标记为了 Unacked</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310212027453.png\" alt=\"image-20231021202727506\"></p>\n<p>如果程序不进行一直等待则会变回原来的状态</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310212029138.png\" alt=\"image-20231021202909987\"></p>\n<p>java 代码程序往下走就会抛出异常，但是它会进行重新投递</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310212048599.gif\" alt=\"test\"></p>\n<p>但是我们并不希望它就这样失败了就无脑重试那怎么办呢？看下面的内容。</p>\n<h2 id=\"95-失败重试机制\"><a class=\"markdownIt-Anchor\" href=\"#95-失败重试机制\">#</a> 9.5、失败重试机制🌳</h2>\n<p>当消费者出现异常后，消费会不断 requue (重新入队) 到队列，再重新发送给消费者，然后再次异常，再次 requeue，无限循环，导致 mq 的消息处理飙升，带来不必要的压力：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310212051338.png\" alt=\"image-20231021205137135\"></p>\n<p>我们可以利用 Spring 的 retry 机制，在消费者出现异常时利用本地重试，而不是无限制的 requeue 到 mq 队列。</p>\n<p>当然本地重试也不是无限让它一直重试</p>\n<p>在消费者服务中进行配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># rabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">listener</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">simple</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">prefetch</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">acknowledge-mode</span><span class=\"token punctuation\">:</span> auto</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">retry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启消费者失败重试</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">initial-interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span> <span class=\"token comment\"># 初始的失败等待时长为 1 秒</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token key atrule\">multiplier</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token comment\"># 下次失败的等待时长倍数，下次等待时长 = multiplier *last-interval</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token key atrule\">max-attempts</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token comment\"># 最大重试次数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">stateless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># true 无状态；false 有状态。如果业务中包含事务，这里改为 false</span></pre></td></tr></table></figure><p>启动消费者服务后进行测试 idea 控制台打印如下：</p>\n<p>报了一个异常，说重试次数耗尽了</p>\n<pre><code>mqp.rabbit.support.ListenerExecutionFailedException: Retry Policy Exhausted\n\tat org.springframework.amqp.rabbit.retry.RejectAndDontRequeueRecoverer.recover(RejectAndDontRequeueRecoverer.java:45) ~[spring-rabbit-2.2.15.RELEASE.jar:2.2.15.RELEASE]\n\tat org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean.lambda$createRecoverer$0(StatelessRetryOperationsInterceptorFactoryBean.java:74) ~[spring-rabbit-2.2.15.RELEASE.jar:2.2.15.RELEASE]\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$ItemRecovererCallback.recover(RetryOperationsInterceptor.java:141) ~[spring-retry-1.2.5.RELEASE.jar:na]\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:512) ~[spring-retry-1.2.5.RELEASE.jar:na]\n</code></pre>\n<p>这条消息就会被丢弃掉</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310220940740.png\" alt=\"image-20231022094032330\"></p>\n<h3 id=\"951-消费者失败消息处理策略\"><a class=\"markdownIt-Anchor\" href=\"#951-消费者失败消息处理策略\">#</a> 9.5.1、消费者失败消息处理策略🌲</h3>\n<p>在开启重试模式后，重试次数耗尽，如果消息依然失败，则需要有 MessageRecoverer 接口来处理，它包含三种不同的实现：</p>\n<p>1、RejectAndDontRequeueRecoverer：重试耗尽后，直接 reject，丢弃消息。默认就是这种方式</p>\n<p>2、ImmediateRequeueMessageRecoverer：重试耗尽后，返回 nack，消息重新入队</p>\n<p>3、RepublishMessageRecoverer：重试耗尽后，将失败消息投递到指定的交换机</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221014285.png\" alt=\"image-20231022101421805\"></p>\n<p>测试下 RepublishMessageRcoverer 处理模式：</p>\n<p>1、首先，定义接收失败消息的交换机，队列及其绑定关系：</p>\n<p>2、然后定义 RepublishMessageRecoverer：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorMessageConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DirectExchange</span> <span class=\"token function\">errorMessageExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error.direct\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">errorQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error.queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">errorMessageBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token function\">errorQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">errorMessageExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageRecoverer</span> <span class=\"token function\">republishMessageRecoverer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RepublishMessageRecoverer</span><span class=\"token punctuation\">(</span>rabbitTemplate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"error.direct\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动消费者服务查看 mq 的交换机和队列情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221027869.png\" alt=\"image-20231022102732042\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221027294.png\" alt=\"image-20231022102744943\"></p>\n<p>发送一条消息进行测试，找到 simple.queue 进行发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221030573.png\" alt=\"image-20231022103002600\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221032487.png\" alt=\"image-20231022103250120\"></p>\n<p>idea 控制台打印情况</p>\n<pre><code>消费者接收到simple.queue的消息：【hello spring !】\n消费者接收到simple.queue的消息：【hello spring !】\n消费者接收到simple.queue的消息：【hello spring !】\n10:30:18:538  WARN 6996 --- [ntContainer#0-1] o.s.a.r.retry.RepublishMessageRecoverer  : Republishing failed message to exchange 'error.direct' with routing key error\n</code></pre>\n<p>然后再查看队列情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221031933.png\" alt=\"image-20231022103105401\"></p>\n<p>在 error.queue 队列的详细消息中可以看到报错的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221032636.png\" alt=\"image-20231022103202192\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>如何确保 RabbitMQ 消息的可靠性？</p>\n<ol>\n<li>开启生产者确认机制，确保生产者的消息能到达队列</li>\n<li>开启持久化功能，确保消息未消费前在队列中不会丢失</li>\n<li>开启消费者确认机制为 auto，由 spring 确认消息处理成功后完成 ack</li>\n<li>开启消费者失败重试机制，并设置 MessageRecoverer，多次重试失败后将消息投递到异常交换机，交由人工处理</li>\n</ol>\n</blockquote>\n<h1 id=\"十-死信交换机\"><a class=\"markdownIt-Anchor\" href=\"#十-死信交换机\">#</a> 十、死信交换机🎄</h1>\n<ul>\n<li>初识死信交换机</li>\n<li>TTL</li>\n<li>延迟队列</li>\n</ul>\n<h2 id=\"101-初识死信交换机\"><a class=\"markdownIt-Anchor\" href=\"#101-初识死信交换机\">#</a> 10.1、初识死信交换机🌳</h2>\n<p>当一个队列中的消息满足下列情况之一时，可以称为<font color='red'>死信 (dead letter)</font>：</p>\n<p>1、消费者使用 basic.reject 或 basic.nack 声明消费失败，并且消息的 requeue 参数设置为 false</p>\n<p>2、消息是一个过期消息，超时无人消费</p>\n<p>3、要投递的队列消息堆积满了，最早的消息可能成为死信</p>\n<p>如果该队列配置了 dead-letter-exchange 属性，指定了一个交换机，那么队列中的死信就会投递到这个交换机中，而这个交换机称为<font color='red'>死信交换机</font>. (Dead Letter Exchange ， 简称 DLX)。</p>\n<p>如果有一个消息发送到了消费者，假设消费者采用默认的重试机制不断重试直到次数耗尽就会将消息拒绝，而消息一旦被拒绝默认情况下就会被丢弃了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221043785.png\" alt=\"image-20231022104354267\"></p>\n<p>如果说不想丢失就必须给 simple.queue 这个队列绑定死信交换机，这时消息就不会被丢弃了而是变成一个死信再回到队列，队列再投递到死信交换机。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221046386.png\" alt=\"image-20231022104628552\"></p>\n<p>交换机不能存储消息那么为了保证消息不丢失，还需要绑定一个队列，这个消息就会到达 dl.queue 队列中称为死信队列</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221049450.png\" alt=\"image-20231022104901077\"></p>\n<p>这里与上述的 消费者失败消息处理策略 一样，但是还是有差异的，就是在上述方式中，所有的失败消息都是有消费者来做投递的。而在现在的方式中是由队列做投递的</p>\n<p>如果只是做消息的兜底处理建议使用上述方式，如果是做消息兜底处理以及额外的功能建议使用当前方式</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么样的消息会成为死信？</p>\n<p>1、消息被消费者 reject 或者返回 nack</p>\n<p>2、消息超时未消费</p>\n<p>3、队列满了</p>\n<p>如何给队列绑定死信交换机？</p>\n<p>1、给队列设置 dead-letter-exchange 属性，指定一个交换机</p>\n<p>2、给队列设置 dead-letter-routing-key 属性，设置死信交换机与死信队列的 RoutingKey</p>\n</blockquote>\n<h2 id=\"102-ttl\"><a class=\"markdownIt-Anchor\" href=\"#102-ttl\">#</a> 10.2、TTL🌳</h2>\n<p>TTL，也就是 Time-To-Live。如果一个队列中的消息 TTL 结束仍未消费，则会变为死信，TTL 超时分为两种情况：</p>\n<p>1、消息所在的队列设置了存活时间</p>\n<p>2、消息本身设置了存活时间</p>\n<p>假如一个消息自己设置了时间为 5000 毫秒到消息发出去，到达了队列的时候就会开始计时，计时结束后这个消息就会成为死信，从而投递到死信交换机 最终到达了死信队列。这时如果恰好有一个消费者在监听死信队列它就会收到这个死信消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221102065.gif\" alt=\"test\"></p>\n<p>我们声明一组死信交换机和队列，基于注解方式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"dl.queue\"</span><span class=\"token punctuation\">,</span> durable <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"dl.direct\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token string\">\"dl\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDlQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到了dl.queue的延迟消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>要给队列设置超时时间，需要在声明队列的类中编写如下代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TTLMessageConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DirectExchange</span> <span class=\"token function\">ttlDirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ttl.direct\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">ttlQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ttl.queue\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 指定队列名称，并持久化</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">ttl</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置队列的超时时间，10 秒</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">deadLetterExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dl.direct\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 指定死信交换机</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">deadLetterRoutingKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dl\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 指定死信 RoutingKey</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">ttlBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token function\">ttlQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">ttlDirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ttl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编写发布者代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testTTLMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, ttl message\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                             <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ttl.direct\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ttl\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 3. 记录日志</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息已经成功发送了 ！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务进行测试：</p>\n<p>消息发布者发送出去的时间为：46</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221122622.png\" alt=\"image-20231022112215176\"></p>\n<p>消息接收者接收到消息时间为：56</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221122464.png\" alt=\"image-20231022112249139\"></p>\n<p>延迟了 10 秒钟的时间，这样延迟消息就实现了</p>\n<p>上述是基于队列实现的延迟消息，下面来学习给消息设置延迟时间</p>\n<p>发送消息时，给消息本身设置超时时间：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testTTLMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, ttl message\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                             <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setExpiration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5000\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置消息的延迟时间为 5 秒</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ttl.direct\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ttl\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 3. 记录日志</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息已经成功发送了 ！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务器测试查看消息延迟多久时间：</p>\n<p>发送者发送消息时间为：16</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221127666.png\" alt=\"image-20231022112741830\"></p>\n<p>接受者收到消息时间为：21</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221128275.png\" alt=\"image-20231022112808892\"></p>\n<p>消息延迟了 5 秒的时间，<mark>当队列与消息本身都设置了延迟时间时，以最短的时间为准</mark>。</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>消息超时的两种方式是？</p>\n<p>1、给队列设置 ttl 属性，进入队列后超过 ttl 时间的消息变为死信</p>\n<p>2、给消息设置 ttl 属性，队列接收到消息超过 ttl 时间后变为死信</p>\n<p>3、两者共存时，以时间短的 ttl 为准</p>\n<p>如何实现发送一个消息 20 秒后消费者才收到消息？</p>\n<p>1、给消息的目标队列指定死信交换机</p>\n<p>2、消费者监听与死信交换机绑定的队列</p>\n<p>3、发送消息时给消息设置 tll 为 20 秒</p>\n</blockquote>\n<p>下面学习延迟队列的插件来实现延迟消息</p>\n<h2 id=\"103-延迟队列\"><a class=\"markdownIt-Anchor\" href=\"#103-延迟队列\">#</a> 10.3、延迟队列🌳</h2>\n<p>利用 TTL 结合死信交换机，我们实现了消息发出后，消费者延迟收到消息的效果。这种消息模式就称为 <font color='red'>延迟队列 (Delay Queue) 模式</font>.</p>\n<p>延迟队列的使用场景包括：</p>\n<p>1、延迟发送短信</p>\n<p>2、用户下单，如果用户在 15 分钟内未支付，则自动取消</p>\n<p>3、预约工作会议，20 分钟后自动通知所有参会人员</p>\n<h3 id=\"1031-延迟队列插件\"><a class=\"markdownIt-Anchor\" href=\"#1031-延迟队列插件\">#</a> 10.3.1、延迟队列插件🌲</h3>\n<p>因为延迟队列的需求非常多，所以 RabbitMQ 的官方也推出了一个插件，原生支持延迟队列效果。</p>\n<p>详细安装查看文章：<a href=\"../RabbitMQ/%E9%AB%98%E7%BA%A7%E7%AF%87/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 部署指南</a>.</p>\n<h3 id=\"1032-springamqp使用延迟队列插件\"><a class=\"markdownIt-Anchor\" href=\"#1032-springamqp使用延迟队列插件\">#</a> 10.3.2、SpringAMQP 使用延迟队列插件🌲</h3>\n<p>DelayExchange 的本质还是官方的三种交换机，只是添加了延迟功能。因此使用时只需要声明一个交换机，交换机的类型可以是任意类型，然后设定 delayed 属性为 true 即可</p>\n<p>基于注解方式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"delay.queue\"</span><span class=\"token punctuation\">,</span> durable <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"delay.direct\"</span><span class=\"token punctuation\">,</span> delayed <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token string\">\"delay\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDelayExchange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到了delay.queue的延迟消息 , &#123;&#125;\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先启动消费者服务让它先等着</p>\n<p>查看 mq 的交换机情况：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221614876.png\" alt=\"image-20231022161400235\"></p>\n<p>然后我们向这个 delay 为 true 的交换机中发送消息，一定要给消息添加一个 header: x-delay，值为延迟的时间，单位为毫秒：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSndDelayMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, ttl message\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                             <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-delay\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置消息的延迟时间为 5 秒</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 1.1. 准备 CorrelationData</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 1.2. 消息 ID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">CorrelationData</span> correlationData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorrelationData</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delay.direct\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"delay\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span>correlationData <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再启动发布者测试代码进行发布：</p>\n<p>发布后测试代码会提示一个错误但是这个错误是没有问题的，因为延迟它会误以为需要重试，就会触发重发机制。但是我们不需要对延迟消息进行重试，所以我们需要对其做一下判断</p>\n<pre><code>ERROR 17588 --- [nectionFactory1] cn.itcast.mq.config.CommonConfig         : 消息发送到队列失败，响应码：312，失败原因：NO_ROUTE，交换机：delay.direct，路由key：delay，消息：(Body:'[B@71c09e9d(byte[18])' MessageProperties [headers=&#123;spring_returned_message_correlation=b85f2836-22b6-406e-9e49-d5f44a07af32&#125;, contentType=application/octet-stream, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, receivedDelay=5000, deliveryTag=0])\n</code></pre>\n<p>对 receivedDelay 进行判断是否存在值</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//                         实现 Spring 工厂的通知</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CommonConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextAware</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 重写 Bean 工厂准备好后调用的函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 取出 RabbitTempalte 的 Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RabbitTemplate</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 配置 ReturnCallback</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 判断是否是延迟消息</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReceivedDelay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\">// 是一个延迟消息，忽略这个错误提示</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 记录日志 &#123;&#125; 为占位符</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送到队列失败，响应码：&#123;&#125;，失败原因：&#123;&#125;，\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token string\">\"交换机：&#123;&#125;，路由key：&#123;&#125;，消息：&#123;&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    i<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 如果有需要的话，重发消息</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在运行发布者测试代码后打印如下：</p>\n<p>可以看到就没有错误提示了，也就解决了明明没有错误却重试的问题了</p>\n<pre><code>16:22:35:703  INFO 2568 --- [           main] cn.itcast.mq.spring.SpringAmqpTest       : 消息发送成功\n</code></pre>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>延迟队列插件的使用步骤包括哪些？</p>\n<p>1、声明一个交换机，添加 delayed 属性为 true</p>\n<p>2、发送消息时，添加 x-delay 头，值为超时时间</p>\n</blockquote>\n<h1 id=\"十一-惰性队列\"><a class=\"markdownIt-Anchor\" href=\"#十一-惰性队列\">#</a> 十一、惰性队列🎄</h1>\n<ul>\n<li>消息堆积问题</li>\n<li>惰性队列</li>\n</ul>\n<h2 id=\"111-消息堆积问题\"><a class=\"markdownIt-Anchor\" href=\"#111-消息堆积问题\">#</a> 11.1、消息堆积问题🌳</h2>\n<p>当生产者发送消息的速度超过了消费者处理消息的速度，就会导致队列中的消息堆积，直到队列存储消息达到上限。最早接收到的消息，可能就会成为死信，会被丢弃，这就是<font color='red'>消息堆积</font>问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221629911.gif\" alt=\"test\"></p>\n<p><strong>解决消息堆积有三种思路</strong>：</p>\n<p>1、增加更多消费者，提高消费速度</p>\n<p>2、在消费者内开启线程池加快消息处理速度</p>\n<p>3、扩大队列容积，提高堆积上限</p>\n<h2 id=\"112-惰性队列\"><a class=\"markdownIt-Anchor\" href=\"#112-惰性队列\">#</a> 11.2、惰性队列🌳</h2>\n<p>从 RabbitMQ 的 3.6.0 版本开始，就增加了 Lazy Queues 的概念，也就是<font color='red'>惰性队列</font>.</p>\n<p>惰性队列的特征如下：</p>\n<p>1、接受到消息后直接存入磁盘而非内存</p>\n<p>2、消费者要消费时才会从磁盘中读取并加载到内存</p>\n<p>3、支持数百万条的消息存储</p>\n<p>而要设置一个队列为惰性队列，只需要在声明队列时，指定 x-queue-mode 属性为 lazy 即可。可以通过命令行将一个运行中的队列修改为惰性队列：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl set_policy <span class=\"token class-name\">Lazy</span> <span class=\"token string\">\"^lazy-queue$\"</span> '<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"queue-mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lazy\"</span><span class=\"token punctuation\">&#125;</span>' <span class=\"token operator\">--</span>apply<span class=\"token operator\">-</span><span class=\"token keyword\">to</span> <span class=\"token namespace\">queues</span></pre></td></tr></table></figure><p>用 SpringAMQP 声明惰性队列分两种方式：</p>\n<p>@Bean 方式</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LazyConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">lazyQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lazy.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 开启 x-queue-mode 为 lazy</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注解方式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queuesToDeclare <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tname <span class=\"token operator\">=</span> <span class=\"token string\">\"lazy.queue\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   durable <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token string\">\"arguments\"</span> <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Argument</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"x-queue-mode\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"lazy\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenLazyQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收到 lazy.queue的消息: &#123;&#125;\"</span> <span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编写测试代码进行百万消息测试：</p>\n<p>先对 delay.direct 消息队列进行百万消息的测试</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLazyQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, ttl message\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                                <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NON_PERSISTENT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delay.direct\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到它没有存储磁盘而却呢爆红了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221657687.png\" alt=\"image-20231022165706663\"></p>\n<p>下面测试惰性队列的情况：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLazyQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 1. 准备消息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, ttl message\"</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                                <span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">setDeliveryMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDeliveryMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NON_PERSISTENT</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">// 2. 发送消息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lazy.queue\"</span><span class=\"token punctuation\">,</span>  message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到消息都存储到了磁盘中，这样性能就会比较好</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221702921.png\" alt=\"image-20231022170213243\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>消息堆积问题的解决方案？</p>\n<p>1、队列上绑定多个消费者，提高消费速度</p>\n<p>2、给消费者开启线程池，提高消费速度</p>\n<p>3、使用惰性队列，可以再 mq 中保存更多消息</p>\n<p>惰性队列的优点有哪些？</p>\n<p>1、基于磁盘存储，消息上限高</p>\n<p>2、没有间歇性的 page-out，性能比较稳定</p>\n<p>惰性队列的缺点有哪些？</p>\n<p>1、基于磁盘存储，消息时效性会降低</p>\n<p>2、性能受限于磁盘的 IO</p>\n</blockquote>\n<h1 id=\"十二-mq集群\"><a class=\"markdownIt-Anchor\" href=\"#十二-mq集群\">#</a> 十二、MQ 集群🎄</h1>\n<ul>\n<li>集群分类</li>\n<li>普通集群</li>\n<li>镜像集群</li>\n<li>仲载队列</li>\n</ul>\n<h2 id=\"121-集群分类\"><a class=\"markdownIt-Anchor\" href=\"#121-集群分类\">#</a> 12.1、集群分类🌳</h2>\n<p>RabbitMQ 是基于 Erlang 语言编写，而 Erlang 又是一个面向并发的语言，天然支持集群模式，搭建比较简单。RabbitMQ 的集群有两种模式：</p>\n<p>1、<mark>普通集群</mark>：是一种分布式集群，将队列分散到集群的各个节点，从而提高整个集群的并发能力。</p>\n<p>2、<mark>镜像集群</mark>：是一种主从集群，普通集群的基础上，添加了主从备份功能，提高集群的数据可用性。</p>\n<p>镜像集群虽然支持主从，但主从同步并不是强一致的，某些情况下可能有数据丢失的风险。因此在 RabbitMQ 的 3.8 版本以后，推出了新的功能：<mark>仲载队列</mark> 来代替镜像集群，底层采用 Raft 协议确保主从的数据一致性。</p>\n<h3 id=\"1211-普通集群\"><a class=\"markdownIt-Anchor\" href=\"#1211-普通集群\">#</a> 12.1.1、普通集群🌲</h3>\n<p>普通集群，或者叫标准集群 (classic cluster) ，具备下列特征：</p>\n<ul>\n<li>会在集群的各个节点间共享部分数据， 包括：交换机，队列元信息。不包含队列中的消息。</li>\n</ul>\n<p>比如说有三台 RabbitMQ，然后创建一个交换机</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221716648.png\" alt=\"image-20231022171634984\"></p>\n<p>由于交换机可以在各个节点间共享，所以将来这三个节点都能看到</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221717792.png\" alt=\"image-20231022171726859\"></p>\n<p>但是，现在要创建一个队列这个队列叫 queue1 它是在第一个交换机上声明的，此时队列是不共享的。但是有队列元信息，比如说 queue1 它会有其它节点上有 queue1 的名字，位置等信息。相当于是一个引用</p>\n<ul>\n<li>当访问集群某节点时，如果队列不在该节点，会从数据所在节点传递到当前节点并返回</li>\n</ul>\n<p>比如说现在有一个消费者绑定到了 queue1 但是在访问的时候不小心访问到了第三个节点。这个节点上没有 queue1 但是有 queue1 的元信息，当获取数据的时候就会根据第三节点有 queue1 的位置信息来找到 queue1 然后拿到数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221722945.png\" alt=\"image-20231022172221484\"></p>\n<ul>\n<li>队列所在节点宕机，队列中的消息就会丢失</li>\n</ul>\n<p>比如说 queue1 挂了，因为第三节点和 queue1 是引用关系再来取数据的时候就取不到了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221723703.png\" alt=\"image-20231022172351386\"></p>\n<h4 id=\"12111-搭建普通集群\"><a class=\"markdownIt-Anchor\" href=\"#12111-搭建普通集群\">#</a> 12.1.1.1、搭建普通集群🌴</h4>\n<p>搭建普通集群可以参考文章：<a href=\"../RabbitMQ/%E9%AB%98%E7%BA%A7%E7%AF%87/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 部署指南</a>.</p>\n<h3 id=\"1212-镜像集群\"><a class=\"markdownIt-Anchor\" href=\"#1212-镜像集群\">#</a> 12.1.2、镜像集群🌲</h3>\n<p>比方说，三个节点，交换机都能看到。那队列呢这时就要看你是不是镜像了。比方说在 queue1 这个节点上创建了一个队列。因为是在节点 1 上创建的 queue1 队列所以节点 1 就是 queue1 的主节点，然后我们还可以挑出一个镜像节点。比如说在节点二上做一个镜像，那么节点二就会找节点一去同步 queue1 的所有数据。这样它俩的数据就共享了。</p>\n<p>而主节点和镜像节点是可以互相备份的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221753072.png\" alt=\"image-20231022175329422\"></p>\n<p>镜像集群：本质是主从模式，具备下面的特征：</p>\n<p>1、交换机，队列，队列中的消息会在各个 mq 的镜像节点之间同步备份。</p>\n<p>2、创建队列的节点被称为该队列的<strong>主节点</strong>，备份到的其它节点叫做该队列的<strong>镜像</strong>节点。</p>\n<p>3、一个队列的主节点可能是另一个队列的镜像节点</p>\n<p>4、所有操作都是主节点完成，然后同步给镜像节点</p>\n<p>5、主宕机后，镜像节点会替代成新的主</p>\n<p>比方说 queue1 它的镜像节点是在 queue2 上，queue2 这个队列是在节点 2 上的，但是它可以再节点 3 上备份，而 queue3 是在节点 3 上，而它的镜像节点是在节点 1 上。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221942543.png\" alt=\"image-20231022194205210\"></p>\n<h4 id=\"12121-搭建镜像集群\"><a class=\"markdownIt-Anchor\" href=\"#12121-搭建镜像集群\">#</a> 12.1.2.1、搭建镜像集群🌴</h4>\n<p>搭建镜像集群可以参考文章：<a href=\"../RabbitMQ/%E9%AB%98%E7%BA%A7%E7%AF%87/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 部署指南</a>.</p>\n<h3 id=\"1213-仲载队列\"><a class=\"markdownIt-Anchor\" href=\"#1213-仲载队列\">#</a> 12.1.3、仲载队列🌲</h3>\n<p>仲载队列：仲载队列是在 3.8 版本以后才有的新功能，用来替代镜像队列，具备下列特征：</p>\n<p>1、与镜像队列一样，都是主从模式，支持主从数据同步</p>\n<p>2、使用非常简单，没有复杂的配置</p>\n<p>3、主从同步基于 Raft 协议，强一致</p>\n<h4 id=\"12131-仲载队列搭建\"><a class=\"markdownIt-Anchor\" href=\"#12131-仲载队列搭建\">#</a> 12.1.3.1、仲载队列搭建🌴</h4>\n<p>仲载队列搭建可以参考文章：<a href=\"../RabbitMQ/%E9%AB%98%E7%BA%A7%E7%AF%87/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 部署指南</a>.</p>\n",
            "tags": [
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/sentinel/sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/sentinel/sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96/",
            "title": "Sentinel规则持久化",
            "date_published": "2024-04-02T10:00:51.099Z",
            "content_html": "<h1 id=\"sentinel-规则持久化\"><a class=\"markdownIt-Anchor\" href=\"#sentinel-规则持久化\">#</a> Sentinel 规则持久化</h1>\n<h2 id=\"一-修改order-service服务\"><a class=\"markdownIt-Anchor\" href=\"#一-修改order-service服务\">#</a> 一、修改 order-service 服务</h2>\n<p>修改 OrderService，让其监听 Nacos 中的 sentinel 规则配置。</p>\n<p>具体步骤如下：</p>\n<h3 id=\"1引入依赖\"><a class=\"markdownIt-Anchor\" href=\"#1引入依赖\">#</a> 1. 引入依赖</h3>\n<p>在 order-service 中引入 sentinel 监听 nacos 的依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.csp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>sentinel-datasource-nacos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"2配置nacos地址\"><a class=\"markdownIt-Anchor\" href=\"#2配置nacos地址\">#</a> 2. 配置 nacos 地址</h3>\n<p>在 order-service 中的 application.yml 文件配置 nacos 地址及监听的配置信息：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">sentinel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">flow</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token key atrule\">dataId</span><span class=\"token punctuation\">:</span> orderservice<span class=\"token punctuation\">-</span>flow<span class=\"token punctuation\">-</span>rules</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token key atrule\">groupId</span><span class=\"token punctuation\">:</span> SENTINEL_GROUP</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token key atrule\">rule-type</span><span class=\"token punctuation\">:</span> flow <span class=\"token comment\"># 还可以是：degrade、authority、param-flow</span></pre></td></tr></table></figure><h2 id=\"二-修改sentinel-dashboard源码\"><a class=\"markdownIt-Anchor\" href=\"#二-修改sentinel-dashboard源码\">#</a> 二、修改 sentinel-dashboard 源码</h2>\n<p>SentinelDashboard 默认不支持 nacos 的持久化，需要修改源码。</p>\n<h3 id=\"1-解压\"><a class=\"markdownIt-Anchor\" href=\"#1-解压\">#</a> 1. 解压</h3>\n<p>解压课前资料中的 sentinel 源码包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644436.png\" alt=\"image-20210618201340086\"></p>\n<p>然后并用 IDEA 打开这个项目，结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644159.png\" alt=\"image-20210618201412878\"></p>\n<h3 id=\"2-修改nacos依赖\"><a class=\"markdownIt-Anchor\" href=\"#2-修改nacos依赖\">#</a> 2. 修改 nacos 依赖</h3>\n<p>在 sentinel-dashboard 源码的 pom 文件中，nacos 的依赖默认的 scope 是 test，只能在测试时使用，这里要去除：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644823.png\" alt=\"image-20210618201607831\"></p>\n<p>将 sentinel-datasource-nacos 依赖的 scope 去掉：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.csp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>sentinel-datasource-nacos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"3-添加nacos支持\"><a class=\"markdownIt-Anchor\" href=\"#3-添加nacos支持\">#</a> 3. 添加 nacos 支持</h3>\n<p>在 sentinel-dashboard 的 test 包下，已经编写了对 nacos 的支持，我们需要将其拷贝到 main 下。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644434.png\" alt=\"image-20210618201726280\"></p>\n<h3 id=\"4-修改nacos地址\"><a class=\"markdownIt-Anchor\" href=\"#4-修改nacos地址\">#</a> 4. 修改 nacos 地址</h3>\n<p>然后，还需要修改测试代码中的 NacosConfig 类：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644320.png\" alt=\"image-20210618201912078\"></p>\n<p>修改其中的 nacos 地址，让其读取 application.properties 中的配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644820.png\" alt=\"image-20210618202047575\"></p>\n<p>在 sentinel-dashboard 的 application.properties 中添加 nacos 地址配置：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">nacos.addr</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">localhost:8848</span></pre></td></tr></table></figure><h3 id=\"5-配置nacos数据源\"><a class=\"markdownIt-Anchor\" href=\"#5-配置nacos数据源\">#</a> 5. 配置 nacos 数据源</h3>\n<p>另外，还需要修改 com.alibaba.csp.sentinel.dashboard.controller.v2 包下的 FlowControllerV2 类：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644684.png\" alt=\"w\"></p>\n<p>让我们添加的 Nacos 数据源生效：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644334.png\" alt=\"image-20210618202334536\"></p>\n<h3 id=\"6-修改前端页面\"><a class=\"markdownIt-Anchor\" href=\"#6-修改前端页面\">#</a> 6. 修改前端页面</h3>\n<p>接下来，还要修改前端页面，添加一个支持 nacos 的菜单。</p>\n<p>修改 src/main/webapp/resources/app/scripts/directives/sidebar/ 目录下的 sidebar.html 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644086.png\" alt=\"image-20210618202433356\"></p>\n<p>将其中的这部分注释打开：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644031.png\" alt=\"image-20210618202449881\"></p>\n<p>修改其中的文本：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644504.png\" alt=\"image-20210618202501928\"></p>\n<h3 id=\"7-重新编译-打包项目\"><a class=\"markdownIt-Anchor\" href=\"#7-重新编译-打包项目\">#</a> 7. 重新编译、打包项目</h3>\n<p>运行 IDEA 中的 maven 插件，编译和打包修改好的 Sentinel-Dashboard：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310171644941.png\" alt=\"image-20210618202701492\"></p>\n<h3 id=\"8启动\"><a class=\"markdownIt-Anchor\" href=\"#8启动\">#</a> 8. 启动</h3>\n<p>启动方式跟官方一样：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> sentinel-dashboard.jar</pre></td></tr></table></figure><p>如果要修改 nacos 地址，需要添加参数：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> <span class=\"token parameter variable\">-Dnacos.addr</span><span class=\"token operator\">=</span>localhost:8848 sentinel-dashboard.jar</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "springcloud",
                "Sentinel",
                "持久化"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90/",
            "title": "seata的部署和集成",
            "date_published": "2024-04-02T10:00:51.091Z",
            "content_html": "<h1 id=\"seata的部署和集成\"><a class=\"markdownIt-Anchor\" href=\"#seata的部署和集成\">#</a> seata 的部署和集成</h1>\n<h1 id=\"一-部署seata的tc-server\"><a class=\"markdownIt-Anchor\" href=\"#一-部署seata的tc-server\">#</a> 一、部署 Seata 的 tc-server</h1>\n<h2 id=\"1下载\"><a class=\"markdownIt-Anchor\" href=\"#1下载\">#</a> 1. 下载</h2>\n<p>首先我们要下载 seata-server 包，地址在<a href=\"http://seata.io/zh-cn/blog/download.html\"> http</a><a href=\"http://seata.io/zh-cn/blog/download.html\">😕/seata.io/zh-cn/blog/download</a><a href=\"http://seata.io/zh-cn/blog/download.html\">.</a><a href=\"http://seata.io/zh-cn/blog/download.html\">html</a></p>\n<p>当然，课前资料也准备好了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750149.png\" alt=\"image-20210622202357640\"></p>\n<h2 id=\"2解压\"><a class=\"markdownIt-Anchor\" href=\"#2解压\">#</a> 2. 解压</h2>\n<p>在非中文目录解压缩这个 zip 包，其目录结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750336.png\" alt=\"image-20210622202515014\"></p>\n<h2 id=\"3修改配置\"><a class=\"markdownIt-Anchor\" href=\"#3修改配置\">#</a> 3. 修改配置</h2>\n<p>修改 conf 目录下的 registry.conf 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750504.png\" alt=\"image-20210622202622874\"></p>\n<p>内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">registry</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">  # tc 服务的注册中心类，这里选择 nacos，也可以是 eureka、zookeeper 等</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">  type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">  nacos</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">    # seata tc 服务注册到 nacos 的服务名称，可以自定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">    application</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"seata-tc-server\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">    serverAddr</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"127.0.0.1:8848\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">    group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"DEFAULT_GROUP\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">    namespace</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">    cluster</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"SH\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">    username</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">    password</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">config</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">  # 读取 tc 服务端的配置文件的方式，这里是从 nacos 配置中心读取，这样如果 tc 是集群，可以共享配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">  type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">  # 配置 nacos 地址等信息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">  nacos</span> <span class=\"token value attr-value\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">    serverAddr</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"127.0.0.1:8848\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">    namespace</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">    group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"SEATA_GROUP\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">    username</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key attr-name\">    password</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key attr-name\">    dataId</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"seataServer.properties\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>Seata-1.7.0 版本的配置如下：</p>\n<p>找到 yml 配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180927758.png\" alt=\"image-20231018092704361\"></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7091</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>logback<span class=\"token punctuation\">-</span>spring.xml</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>user.home<span class=\"token punctuation\">&#125;</span>/logs/seata</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">extend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">logstash-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">4560</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">kafka-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">bootstrap-servers</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">9092</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">topic</span><span class=\"token punctuation\">:</span> logback_to_logstash</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">console</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># support: nacos, consul, apollo, zk, etcd3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\"># 改这里会报错</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> seataServer.properties</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># support: nacos, eureka, redis, zk, consul, etcd3, sofa</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token key atrule\">preferred-networks</span><span class=\"token punctuation\">:</span> 30.240.*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> SH</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token key atrule\">store</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\"># support: file 、 db 、 redis</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> db</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span> druid</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token key atrule\">db-type</span><span class=\"token punctuation\">:</span> mysql</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>13306/seata<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;rewriteBatchedStatements=true&amp;serverTimezone=GMT</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token key atrule\">min-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token key atrule\">max-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token key atrule\">global-table</span><span class=\"token punctuation\">:</span> global_table</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token key atrule\">branch-table</span><span class=\"token punctuation\">:</span> branch_table</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token key atrule\">lock-table</span><span class=\"token punctuation\">:</span> lock_table</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token key atrule\">distributed-lock-table</span><span class=\"token punctuation\">:</span> distributed_lock</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token key atrule\">query-limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">#  server:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#    service-port: 8091 #If not configured, the default is '$&#123;server.port&#125; + 1000'</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token key atrule\">tokenValidityInMilliseconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1800000</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token key atrule\">ignore</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      <span class=\"token key atrule\">urls</span><span class=\"token punctuation\">:</span> /<span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.css</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.js</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.html</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.map</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.svg</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.png</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.ico</span><span class=\"token punctuation\">,</span>/console<span class=\"token punctuation\">-</span>fe/public/<span class=\"token important\">**</span><span class=\"token punctuation\">,</span>/api/v1/auth/login</pre></td></tr></table></figure><h2 id=\"4在nacos添加配置\"><a class=\"markdownIt-Anchor\" href=\"#4在nacos添加配置\">#</a> 4. 在 nacos 添加配置</h2>\n<p>特别注意，为了让 tc 服务的集群可以共享配置，我们选择了 nacos 作为统一配置中心。因此服务端配置文件 seataServer.properties 文件需要在 nacos 中配好。</p>\n<p>格式如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750398.png\" alt=\"image-20210622203609227\"></p>\n<p>配置内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 数据存储方式，db 代表数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">store.mode</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">db</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">store.db.datasource</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">druid</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">store.db.dbType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mysql</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">store.db.driverClassName</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">store.db.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&amp;rewriteBatchedStatements=true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">store.db.user</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">store.db.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">store.db.minConn</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">store.db.maxConn</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">30</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">store.db.globalTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">global_table</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">store.db.branchTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">branch_table</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">store.db.queryLimit</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">100</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">store.db.lockTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">lock_table</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">store.db.maxWait</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5000</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 事务、日志等配置</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">server.recovery.committingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">server.recovery.asynCommittingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">server.recovery.rollbackingRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">server.recovery.timeoutRetryPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">server.maxCommitRetryTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">-1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">server.maxRollbackRetryTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">-1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">server.rollbackRetryTimeoutUnlockEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">server.undo.logSaveDays</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">7</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">server.undo.logDeletePeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">86400000</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 客户端与服务端传输方式</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token key attr-name\">transport.serialization</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">seata</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token key attr-name\">transport.compressor</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">none</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 关闭 metrics 功能，提高性能</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token key attr-name\">metrics.enabled</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token key attr-name\">metrics.registryType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">compact</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token key attr-name\">metrics.exporterList</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">prometheus</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key attr-name\">metrics.exporterPrometheusPort</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">9898</span></pre></td></tr></table></figure><p><mark>其中的数据库地址、用户名、密码都需要修改成你自己的数据库信息。</mark></p>\n<h2 id=\"5创建数据库表\"><a class=\"markdownIt-Anchor\" href=\"#5创建数据库表\">#</a> 5. 创建数据库表</h2>\n<p>特别注意：tc 服务在管理分布式事务时，需要记录事务相关数据到数据库中，你需要提前创建好这些表。</p>\n<p>新建一个名为 seata 的数据库，运行课前资料提供的 sql 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750346.png\" alt=\"image-20210622204145159\"></p>\n<p>这些表主要记录全局事务、分支事务、全局锁信息：</p>\n<pre><code class=\"language-mysql\">\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- 分支事务表\n-- ----------------------------\nDROP TABLE IF EXISTS `branch_table`;\nCREATE TABLE `branch_table`  (\n  `branch_id` bigint(20) NOT NULL,\n  `xid` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `transaction_id` bigint(20) NULL DEFAULT NULL,\n  `resource_group_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `resource_id` varchar(256) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `branch_type` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `status` tinyint(4) NULL DEFAULT NULL,\n  `client_id` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `application_data` varchar(2000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `gmt_create` datetime(6) NULL DEFAULT NULL,\n  `gmt_modified` datetime(6) NULL DEFAULT NULL,\n  PRIMARY KEY (`branch_id`) USING BTREE,\n  INDEX `idx_xid`(`xid`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\n-- ----------------------------\n-- 全局事务表\n-- ----------------------------\nDROP TABLE IF EXISTS `global_table`;\nCREATE TABLE `global_table`  (\n  `xid` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `transaction_id` bigint(20) NULL DEFAULT NULL,\n  `status` tinyint(4) NOT NULL,\n  `application_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `transaction_service_group` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `transaction_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `timeout` int(11) NULL DEFAULT NULL,\n  `begin_time` bigint(20) NULL DEFAULT NULL,\n  `application_data` varchar(2000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `gmt_create` datetime NULL DEFAULT NULL,\n  `gmt_modified` datetime NULL DEFAULT NULL,\n  PRIMARY KEY (`xid`) USING BTREE,\n  INDEX `idx_gmt_modified_status`(`gmt_modified`, `status`) USING BTREE,\n  INDEX `idx_transaction_id`(`transaction_id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;\n\nSET FOREIGN_KEY_CHECKS = 1;\n</code></pre>\n<h2 id=\"6启动tc服务\"><a class=\"markdownIt-Anchor\" href=\"#6启动tc服务\">#</a> 6. 启动 TC 服务</h2>\n<p>进入 bin 目录，运行其中的 seata-server.bat 即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750008.png\" alt=\"image-20210622205427318\"></p>\n<p>启动成功后，seata-server 应该已经注册到 nacos 注册中心了。</p>\n<p>打开浏览器，访问 nacos 地址：<a href=\"http://localhost:8848\">http://localhost:8848</a>，然后进入服务列表页面，可以看到 seata-tc-server 的信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750053.png\" alt=\"image-20210622205901450\"></p>\n<h1 id=\"二-微服务集成seata\"><a class=\"markdownIt-Anchor\" href=\"#二-微服务集成seata\">#</a> 二、微服务集成 seata</h1>\n<h2 id=\"1引入依赖\"><a class=\"markdownIt-Anchor\" href=\"#1引入依赖\">#</a> 1. 引入依赖</h2>\n<p>首先，我们需要在微服务中引入 seata 依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 版本较低，1.3.0，因此排除 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>seata-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">&lt;!--seata starter 采用 1.4.2 版本 --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.seata<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>seata-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;seata.version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"2修改配置文件\"><a class=\"markdownIt-Anchor\" href=\"#2修改配置文件\">#</a> 2. 修改配置文件</h2>\n<p>需要修改 application.yml 文件，添加一些配置：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># TC 服务注册中心的配置，微服务根据这些信息去注册中心获取 tc 服务地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 参考 tc 服务自己的 registry.conf 中的配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># tc</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server <span class=\"token comment\"># tc 服务在 nacos 中的服务名称</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> SH</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">tx-service-group</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>demo <span class=\"token comment\"># 事务组，根据这个获取 tc 服务的 cluster 名称</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">vgroup-mapping</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 事务组与 TC 服务 cluster 的映射关系</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">seata-demo</span><span class=\"token punctuation\">:</span> SH</pre></td></tr></table></figure><p>要从 nacos 中找到一个服务，我需要知道什么信息。</p>\n<p>我们从 nacos 找到一个服务至少需要知道 namespace，group，application-name 和 cluster</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180945757.png\" alt=\"image-20231018094533567\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180948844.png\" alt=\"image-20231018094851842\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>nacos 服务名称组成包括？</p>\n<ul>\n<li>namespace + group + serviceName + cluster</li>\n</ul>\n<p>seata 客户端获取 tc 的 cluster 名称方式</p>\n<ul>\n<li>以 tx-group-service 的值为 key 到 vgroupMapping 中查找</li>\n</ul>\n</blockquote>\n<h1 id=\"三-tc服务的高可用和异地容灾\"><a class=\"markdownIt-Anchor\" href=\"#三-tc服务的高可用和异地容灾\">#</a> 三、TC 服务的高可用和异地容灾</h1>\n<h2 id=\"1模拟异地容灾的tc集群\"><a class=\"markdownIt-Anchor\" href=\"#1模拟异地容灾的tc集群\">#</a> 1. 模拟异地容灾的 TC 集群</h2>\n<p>计划启动两台 seata 的 tc 服务节点：</p>\n<table>\n<thead>\n<tr>\n<th>节点名称</th>\n<th>ip 地址</th>\n<th>端口号</th>\n<th>集群名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>seata</td>\n<td>127.0.0.1</td>\n<td>8091</td>\n<td>SH</td>\n</tr>\n<tr>\n<td>seata2</td>\n<td>127.0.0.1</td>\n<td>8092</td>\n<td>HZ</td>\n</tr>\n</tbody>\n</table>\n<p>之前我们已经启动了一台 seata 服务，端口是 8091，集群名为 SH。</p>\n<p>现在，将 seata 目录复制一份，起名为 seata2</p>\n<p>修改 seata2/conf/registry.conf 内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">registry</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># tc 服务的注册中心类，这里选择 nacos，也可以是 eureka、zookeeper 等</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token directive\"><span class=\"token keyword\">type</span> = <span class=\"token string\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># seata tc 服务注册到 nacos 的服务名称，可以自定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    application = \"seata-tc-server\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    serverAddr = \"127.0.0.1:8848\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    group = \"DEFAULT_GROUP\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    namespace = \"\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cluster = \"HZ\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    username = \"nacos\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    password = \"nacos\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">config</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\"># 读取 tc 服务端的配置文件的方式，这里是从 nacos 配置中心读取，这样如果 tc 是集群，可以共享配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token directive\"><span class=\"token keyword\">type</span> = <span class=\"token string\">\"nacos\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># 配置 nacos 地址等信息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    serverAddr = \"127.0.0.1:8848\"</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    namespace = \"\"</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    group = \"SEATA_GROUP\"</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    username = \"nacos\"</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    password = \"nacos\"</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    dataId = \"seataServer.properties\"</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Seata-1.7.0 版本的配置如下：</p>\n<p>找到 yml 配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310181958636.png\" alt=\"image-20231018092704361\"></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7091</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>logback<span class=\"token punctuation\">-</span>spring.xml</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>user.home<span class=\"token punctuation\">&#125;</span>/logs/seata</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">extend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">logstash-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">4560</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">kafka-appender</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">bootstrap-servers</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">9092</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">topic</span><span class=\"token punctuation\">:</span> logback_to_logstash</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">console</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> seata</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># support: nacos, consul, apollo, zk, etcd3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\"># 改这里会报错</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> seataServer.properties</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># support: nacos, eureka, redis, zk, consul, etcd3, sofa</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token key atrule\">preferred-networks</span><span class=\"token punctuation\">:</span> 30.240.*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span> seata<span class=\"token punctuation\">-</span>tc<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> DEFAULT_GROUP</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> HZ <span class=\"token comment\"># 修改集群地址</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token comment\">##if use MSE Nacos with auth, mutex with username/password attribute</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token comment\">#access-key: \"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token comment\">#secret-key: \"\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token key atrule\">store</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\"># support: file 、 db 、 redis</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> db</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span> druid</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token key atrule\">db-type</span><span class=\"token punctuation\">:</span> mysql</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>13306/seata<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;rewriteBatchedStatements=true&amp;serverTimezone=GMT</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token key atrule\">min-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token key atrule\">max-conn</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token key atrule\">global-table</span><span class=\"token punctuation\">:</span> global_table</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token key atrule\">branch-table</span><span class=\"token punctuation\">:</span> branch_table</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token key atrule\">lock-table</span><span class=\"token punctuation\">:</span> lock_table</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token key atrule\">distributed-lock-table</span><span class=\"token punctuation\">:</span> distributed_lock</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token key atrule\">query-limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token key atrule\">max-wait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#  server:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">#    service-port: 8091 #If not configured, the default is '$&#123;server.port&#125; + 1000'</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token key atrule\">tokenValidityInMilliseconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1800000</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token key atrule\">ignore</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token key atrule\">urls</span><span class=\"token punctuation\">:</span> /<span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.css</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.js</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.html</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.map</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.svg</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.png</span><span class=\"token punctuation\">,</span>/<span class=\"token important\">**/*.ico</span><span class=\"token punctuation\">,</span>/console<span class=\"token punctuation\">-</span>fe/public/<span class=\"token important\">**</span><span class=\"token punctuation\">,</span>/api/v1/auth/login</pre></td></tr></table></figure><p>进入 seata2/bin 目录，然后运行命令：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>seata-server<span class=\"token punctuation\">.</span>bat <span class=\"token operator\">-</span>p 8092</pre></td></tr></table></figure><p>1.7.0 版本实在不行就配置文件里修改端口号</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182005822.png\" alt=\"image-20231018200503303\"></p>\n<p>打开 nacos 控制台，查看服务列表：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750772.png\" alt=\"image-20210624151150840\"></p>\n<p>点进详情查看：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180750333.png\" alt=\"image-20210624151221747\"></p>\n<h2 id=\"2将事务组映射配置到nacos\"><a class=\"markdownIt-Anchor\" href=\"#2将事务组映射配置到nacos\">#</a> 2. 将事务组映射配置到 nacos</h2>\n<p>接下来，我们需要将 tx-service-group 与 cluster 的映射关系都配置到 nacos 配置中心。</p>\n<p>新建一个配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310180751774.png\" alt=\"image-20210624151507072\"></p>\n<p>配置的内容如下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 事务组映射关系</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">service.vgroupMapping.seata-demo</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">SH</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">service.enableDegrade</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">service.disableGlobalTransaction</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 与 TC 服务的通信配置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">transport.type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">TCP</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">transport.server</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NIO</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">transport.heartbeat</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">transport.enableClientBatchSendRequest</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.bossThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyBoss</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.workerThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyServerNIOWorker</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.serverExecutorThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyServerBizHandler</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.shareBossWorker</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientSelectorThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyClientSelector</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientSelectorThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.clientWorkerThreadPrefix</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">NettyClientWorkerThread</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.bossThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">transport.threadFactory.workerThreadSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">default</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">transport.shutdown.wait</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">3</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># RM 配置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">client.rm.asyncCommitBufferLimit</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10000</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryTimes</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">30</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">client.rm.lock.retryPolicyBranchRollbackOnConflict</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key attr-name\">client.rm.reportRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key attr-name\">client.rm.tableMetaCheckEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token key attr-name\">client.rm.tableMetaCheckerInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">60000</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token key attr-name\">client.rm.sqlParserType</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">druid</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token key attr-name\">client.rm.reportSuccessEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token key attr-name\">client.rm.sagaBranchRegisterEnable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># TM 配置</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token key attr-name\">client.tm.commitRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key attr-name\">client.tm.rollbackRetryCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token key attr-name\">client.tm.defaultGlobalTransactionTimeout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">60000</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheck</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheckAllowTimes</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token key attr-name\">client.tm.degradeCheckPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">2000</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># undo 日志配置</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token key attr-name\">client.undo.dataValidation</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token key attr-name\">client.undo.logSerialization</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jackson</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token key attr-name\">client.undo.onlyCareUpdateColumns</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token key attr-name\">client.undo.logTable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">undo_log</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.enable</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">zip</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token key attr-name\">client.undo.compress.threshold</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">64k</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token key attr-name\">client.log.exceptionRate</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">100</span></pre></td></tr></table></figure><h2 id=\"3微服务读取nacos配置\"><a class=\"markdownIt-Anchor\" href=\"#3微服务读取nacos配置\">#</a> 3. 微服务读取 nacos 配置</h2>\n<p>接下来，需要修改每一个微服务的 application.yml 文件，让微服务读取 nacos 中的 client.properties 文件：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seata</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> SEATA_GROUP <span class=\"token comment\"># 这里和 nacos 添加配置文件中的 group 要一致</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> client.properties</pre></td></tr></table></figure><p>重启微服务，现在微服务到底是连接 tc 的 SH 集群，还是 tc 的 HZ 集群，都统一由 nacos 的 client.properties 来决定了。</p>\n<p>8092</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182016810.png\" alt=\"image-20231018201640218\"></p>\n<p>7091</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182017126.png\" alt=\"image-20231018201658572\"></p>\n<p>可以看到 8092 没有任何人注册，而是都注册到了 7091 上了</p>\n<p>我们去 nacos 控制台中对刚才创建的配置文件的集群地址进行修改为：HZ</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182019284.png\" alt=\"image-20231018201902967\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182019735.png\" alt=\"image-20231018201919714\"></p>\n<p>在 8092 的 seata 启动窗口就可以看到如下信息：</p>\n<p>此时服务就全部都切换到了 8092 这个 seata 服务上了，7091 就没用了甚至于停掉也没有问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310182027851.png\" alt=\"image-20231018202705207\"></p>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "部署",
                "Seata"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/canal/%E5%AE%89%E8%A3%85Canal/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/canal/%E5%AE%89%E8%A3%85Canal/",
            "title": "安装和配置Canal",
            "date_published": "2024-04-02T10:00:51.085Z",
            "content_html": "<h1 id=\"安装和配置canal\"><a class=\"markdownIt-Anchor\" href=\"#安装和配置canal\">#</a> 安装和配置 Canal</h1>\n<p>下面我们就开启 mysql 的主从同步机制，让 Canal 来模拟 salve</p>\n<h1 id=\"1开启mysql主从\"><a class=\"markdownIt-Anchor\" href=\"#1开启mysql主从\">#</a> 1. 开启 MySQL 主从</h1>\n<p>Canal 是基于 MySQL 的主从同步功能，因此必须先开启 MySQL 的主从功能才可以。</p>\n<p>这里以之前用 Docker 运行的 mysql 为例：</p>\n<h2 id=\"11开启binlog\"><a class=\"markdownIt-Anchor\" href=\"#11开启binlog\">#</a> 1.1. 开启 binlog</h2>\n<p>打开 mysql 容器挂载的日志文件，我的在 <code>/tmp/mysql/conf</code>  目录:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310210931806.png\" alt=\"image-20210813153241537\"></p>\n<p>修改文件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /tmp/mysql/conf/my.cnf</pre></td></tr></table></figure><p>添加内容：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">log-bin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql/mysql-bin</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 数据库名称</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">binlog-do-db</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">dkx</span></pre></td></tr></table></figure><p>配置解读：</p>\n<ul>\n<li><code>log-bin=/var/lib/mysql/mysql-bin</code> ：设置 binary log 文件的存放地址和文件名，叫做 mysql-bin</li>\n<li><code>binlog-do-db=dkx</code> ：指定对哪个 database 记录 binary log events，这里记录 heima 这个库</li>\n</ul>\n<p>最终效果：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">mysqld</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>skip-name-resolve</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">character_set_server</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">utf8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">datadir</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">server-id</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">log-bin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/var/lib/mysql/mysql-bin</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">binlog-do-db</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">dkx</span></pre></td></tr></table></figure><p>重启 mysql</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> restart mysql</pre></td></tr></table></figure><p>可以看到如下图中出现了指定文件表示成功！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211007103.png\" alt=\"image-20231021100731994\"></p>\n<h2 id=\"12设置用户权限\"><a class=\"markdownIt-Anchor\" href=\"#12设置用户权限\">#</a> 1.2. 设置用户权限</h2>\n<p>接下来添加一个仅用于数据同步的账户，出于安全考虑，这里仅提供对 heima 这个库的操作权限。</p>\n<pre><code class=\"language-mysql\">create user canal@'%' IDENTIFIED by 'canal';\nGRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT,SUPER ON *.* TO 'canal'@'%' identified by 'canal';\nFLUSH PRIVILEGES;\n</code></pre>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> canal IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'canal'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> SLAVE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> CLIENT <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>FLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>mysql 8.0.2 可以使用如下命令：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> canal IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'canal'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">VIEW</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> SLAVE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLICATION</span> CLIENT <span class=\"token keyword\">ON</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'canal'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>FLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>重启 mysql 容器即可</p>\n<pre><code>docker restart mysql\n</code></pre>\n<p>测试设置是否成功：在 mysql 控制台，或者 Navicat 中，输入命令：</p>\n<pre><code>show master status;\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211015054.png\" alt=\"image-20231021101552134\"></p>\n<h1 id=\"2安装canal\"><a class=\"markdownIt-Anchor\" href=\"#2安装canal\">#</a> 2. 安装 Canal</h1>\n<h2 id=\"21创建网络\"><a class=\"markdownIt-Anchor\" href=\"#21创建网络\">#</a> 2.1. 创建网络</h2>\n<p>我们需要创建一个网络，将 MySQL、Canal、MQ 放到同一个 Docker 网络中：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create dkx</pre></td></tr></table></figure><p>让 mysql 加入这个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network connect dkx mysql</pre></td></tr></table></figure><h2 id=\"23安装canal\"><a class=\"markdownIt-Anchor\" href=\"#23安装canal\">#</a> 2.3. 安装 Canal</h2>\n<p>课前资料中提供了 canal 的镜像压缩包:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310211145229.png\" alt=\"image-20210813161804292\"></p>\n<p>大家可以上传到虚拟机，然后通过命令导入：</p>\n<pre><code>docker load -i canal.tar\n</code></pre>\n<p>然后运行命令创建 Canal 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-p</span> <span class=\"token number\">11111</span>:11111 <span class=\"token parameter variable\">--name</span> canal <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.destinations</span><span class=\"token operator\">=</span>dkx1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.master.address</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.249.128:3306  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.dbUsername</span><span class=\"token operator\">=</span>canal  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.dbPassword</span><span class=\"token operator\">=</span>canal  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.connectionCharset</span><span class=\"token operator\">=</span>UTF-8 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.tsdb.enable</span><span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.gtidon</span><span class=\"token operator\">=</span>false  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">canal.instance.filter.regex</span><span class=\"token operator\">=</span>dkx<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">..</span>* <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token parameter variable\">--network</span> dkx1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token parameter variable\">-d</span> canal/canal-server:v1.1.5</pre></td></tr></table></figure><p>说明:</p>\n<ul>\n<li><code>-p 11111:11111</code> ：这是 canal 的默认监听端口</li>\n<li><code>-e canal.instance.master.address=mysql:3306</code> ：数据库地址 (同一网络可以使用容器名互联) 和端口，如果不知道 mysql 容器地址，可以通过 <code>docker inspect 容器id</code>  来查看</li>\n<li><code>-e canal.instance.dbUsername=canal</code> ：数据库用户名</li>\n<li><code>-e canal.instance.dbPassword=canal</code>  ：数据库密码</li>\n<li><code>-e canal.instance.filter.regex=</code> ：要监听的表名称</li>\n</ul>\n<p>表名称监听支持的语法：</p>\n<pre><code>mysql 数据解析关注的表，Perl正则表达式.\n多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\\\) \n常见例子：\n1.  所有表：.*   or  .*\\\\..*\n2.  canal schema下所有表： canal\\\\..*\n3.  canal下的以canal打头的表：canal\\\\.canal.*\n4.  canal schema下的一张表：canal.test1\n5.  多个规则组合使用然后以逗号隔开：canal\\\\..*,mysql.test1,mysql.test2 \n</code></pre>\n<p>查看启动日志，查看是否启动成功了：</p>\n<pre><code class=\"language-sh·\">[root@localhost tmp]# docker logs -f canal\nDOCKER_DEPLOY_TYPE=VM\n==&gt; INIT /alidata/init/02init-sshd.sh\n==&gt; EXIT CODE: 0\n==&gt; INIT /alidata/init/fix-hosts.py\n==&gt; EXIT CODE: 0\n==&gt; INIT DEFAULT\nGenerating SSH1 RSA host key: [  OK  ]\nStarting sshd: [  OK  ]\nStarting crond: [  OK  ]\n==&gt; INIT DONE\n==&gt; RUN /home/admin/app.sh\n==&gt; START ...\nstart canal ...\nstart canal successful\n==&gt; START SUCCESSFUL ...\n</code></pre>\n<p>查看 canal 是否与 mysql 进行建立连接了</p>\n<p>步骤：</p>\n<p>1、进入 canal 内部</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker exec -it canal bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、使用命令监控 canal 的日志信息</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-rwxr-xr-x. <span class=\"token number\">1</span> admin admin <span class=\"token number\">3941</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> app.sh</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> admin admin   <span class=\"token number\">43</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> bin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">1</span> admin admin   <span class=\"token number\">66</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> canal-server</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rwxr-xr-x. <span class=\"token number\">1</span> admin admin  <span class=\"token number\">670</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> health.sh</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lrwxrwxrwx. <span class=\"token number\">1</span> admin admin   <span class=\"token number\">44</span> Apr <span class=\"token number\">19</span>  <span class=\"token number\">2021</span> node_exporter -<span class=\"token operator\">></span> /home/admin/node_exporter-0.18.1.linux-arm64</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> admin admin   <span class=\"token number\">56</span> Jun  <span class=\"token number\">5</span>  <span class=\"token number\">2019</span> node_exporter-0.18.1.linux-arm64</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># tail -f canal-server/logs/canal/canal.log</span></pre></td></tr></table></figure><p>打印日志如下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.324 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class=\"token comment\">## set default uncaught exception handler</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.376 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class=\"token comment\">## load canal configurations</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.392 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class=\"token comment\">## start the canal server.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:37.466 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalController - <span class=\"token comment\">## start the canal server[172.22.0.3(172.22.0.3):11111]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2023</span>-10-21 <span class=\"token number\">10</span>:31:39.126 <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span> INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class=\"token comment\">## the canal server is running now ......</span></pre></td></tr></table></figure><p>可以看到启动没什么问题</p>\n<p>查看 mysql 连接的日志</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@a02803287608 admin<span class=\"token punctuation\">]</span><span class=\"token comment\"># tail -f canal-server/logs/dkx1/dkx1.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">find</span> start position successfully, EntryPosition<span class=\"token punctuation\">[</span>included<span class=\"token operator\">=</span>false,journalName<span class=\"token operator\">=</span>mysql-bin.000006,position<span class=\"token operator\">=</span><span class=\"token number\">4</span>,serverId<span class=\"token operator\">=</span><span class=\"token number\">1000</span>,gtid<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>null<span class=\"token operator\">></span>,timestamp<span class=\"token operator\">=</span><span class=\"token number\">1697857809000</span><span class=\"token punctuation\">]</span> cost <span class=\"token builtin class-name\">:</span> 521ms , the next step is binlog dump</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud",
                "Canal"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/OpenResty/%E5%AE%89%E8%A3%85OpenResty/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/OpenResty/%E5%AE%89%E8%A3%85OpenResty/",
            "title": "安装OpenResty",
            "date_published": "2024-04-02T10:00:51.080Z",
            "content_html": "<h1 id=\"安装openresty\"><a class=\"markdownIt-Anchor\" href=\"#安装openresty\">#</a> 安装 OpenResty</h1>\n<h1 id=\"1安装\"><a class=\"markdownIt-Anchor\" href=\"#1安装\">#</a> 1. 安装</h1>\n<p>首先你的 Linux 虚拟机必须联网</p>\n<h2 id=\"1安装开发库\"><a class=\"markdownIt-Anchor\" href=\"#1安装开发库\">#</a> <strong>1）安装开发库</strong></h2>\n<p>首先要安装 OpenResty 的依赖开发库，执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> pcre-devel openssl-devel gcc --skip-broken</pre></td></tr></table></figure><h2 id=\"2安装openresty仓库\"><a class=\"markdownIt-Anchor\" href=\"#2安装openresty仓库\">#</a> <strong>2）安装 OpenResty 仓库</strong></h2>\n<p>你可以在你的 CentOS 系统中添加  <code>openresty</code>  仓库，这样就可以便于未来安装或更新我们的软件包（通过  <code>yum check-update</code>  命令）。运行下面的命令就可以添加我们的仓库：</p>\n<pre><code>yum-config-manager --add-repo https://openresty.org/package/centos/openresty.repo\n</code></pre>\n<p>如果提示说命令不存在，则运行：</p>\n<pre><code>yum install -y yum-utils \n</code></pre>\n<p>然后再重复上面的命令</p>\n<h2 id=\"3安装openresty\"><a class=\"markdownIt-Anchor\" href=\"#3安装openresty\">#</a> <strong>3）安装 OpenResty</strong></h2>\n<p>然后就可以像下面这样安装软件包，比如  <code>openresty</code> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openresty</pre></td></tr></table></figure><h2 id=\"4安装opm工具\"><a class=\"markdownIt-Anchor\" href=\"#4安装opm工具\">#</a> <strong>4）安装 opm 工具</strong></h2>\n<p>opm 是 OpenResty 的一个管理工具，可以帮助我们安装一个第三方的 Lua 模块。</p>\n<p>如果你想安装命令行工具  <code>opm</code> ，那么可以像下面这样安装  <code>openresty-opm</code>  包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openresty-opm</pre></td></tr></table></figure><h2 id=\"5目录结构\"><a class=\"markdownIt-Anchor\" href=\"#5目录结构\">#</a> <strong>5）目录结构</strong></h2>\n<p>默认情况下，OpenResty 安装的目录是：/usr/local/openresty</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200901485.png\" alt=\"image-20200310225539214\"></p>\n<p>看到里面的 nginx 目录了吗，OpenResty 就是在 Nginx 基础上集成了一些 Lua 模块。</p>\n<h2 id=\"6配置nginx的环境变量\"><a class=\"markdownIt-Anchor\" href=\"#6配置nginx的环境变量\">#</a> <strong>6）配置 nginx 的环境变量</strong></h2>\n<p>打开配置文件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/profile</pre></td></tr></table></figure><p>在最下面加入两行：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NGINX_HOME</span><span class=\"token operator\">=</span>/usr/local/openresty/nginx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;NGINX_HOME&#125;</span>/sbin:<span class=\"token environment constant\">$PATH</span></pre></td></tr></table></figure><p>NGINX_HOME：后面是 OpenResty 安装目录下的 nginx 的目录</p>\n<p>然后让配置生效：</p>\n<pre><code>source /etc/profile\n</code></pre>\n<h1 id=\"2启动和运行\"><a class=\"markdownIt-Anchor\" href=\"#2启动和运行\">#</a> 2. 启动和运行</h1>\n<p>OpenResty 底层是基于 Nginx 的，查看 OpenResty 目录的 nginx 目录，结构与 windows 中安装的 nginx 基本一致：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200901105.png\" alt=\"image-20210811100653291\"></p>\n<p>所以运行方式与 nginx 基本一致：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nginx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 重新加载配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> reload</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 停止</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> stop</pre></td></tr></table></figure><p>nginx 的默认配置文件注释太多，影响后续我们的编辑，这里将 nginx.conf 中的注释部分删除，保留有效部分。</p>\n<p>修改 <code>/usr/local/openresty/nginx/conf/nginx.conf</code>  文件，内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#user  nobody;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">error_log</span>  logs/error.log</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">include</span>       mime.types</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 Linux 的控制台输入命令以启动 nginx：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx</pre></td></tr></table></figure><p>然后访问页面：<a href=\"http://192.168.150.101:8081\">http://192.168.150.101:8081</a>，注意 ip 地址替换为你自己的虚拟机 IP：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200910980.png\" alt=\"image-20231020091008283\"></p>\n<h1 id=\"3备注\"><a class=\"markdownIt-Anchor\" href=\"#3备注\">#</a> 3. 备注</h1>\n<p>加载 OpenResty 的 lua 模块：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#lua 模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_package_path</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.lua;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#c 模块     </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_package_cpath</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.so;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>监听浏览器请求</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /api/item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>common.lua</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 封装函数，发送 http 请求，并解析响应</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">capture</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        method <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>HTTP_GET<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        args <span class=\"token operator\">=</span> params<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">-- 记录错误信息，返回 404</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"http not found, path: \"</span><span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">,</span> <span class=\"token string\">\", args: \"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 将方法导出</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">local</span> _M <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    read_http <span class=\"token operator\">=</span> read_http</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">return</span> _M</pre></td></tr></table></figure><p>释放 Redis 连接 API：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 关闭 redis 连接的工具方法，其实是放入连接池</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_max_idle_time <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> <span class=\"token comment\">-- 连接的空闲时间，单位是毫秒</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_size <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\">-- 连接池大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">set_keepalive</span><span class=\"token punctuation\">(</span>pool_max_idle_time<span class=\"token punctuation\">,</span> pool_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"放入redis连接池失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>读取 Redis 数据的 API：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 查询 redis 的方法 ip 和 port 是 redis 地址，key 是查询的 key</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">-- 获取一个连接</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"连接redis失败 : \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">local</span> resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">-- 查询失败处理</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\", key = \"</span> <span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">-- 得到的数据为空处理</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> resp <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>null <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        resp <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis数据为空, key = \"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>开启共享词典：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 共享字典，也就是本地缓存，名称叫做：item_cache，大小 150m</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_shared_dict</span> item_cache <span class=\"token number\">150m</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "springcloud",
                "OpenResty"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/",
            "title": "二、服务拆分及远程调用",
            "date_published": "2024-04-02T10:00:51.073Z",
            "content_html": "<h2 id=\"二-服务拆分及远程调用\"><a class=\"markdownIt-Anchor\" href=\"#二-服务拆分及远程调用\">#</a> 二、服务拆分及远程调用🎄</h2>\n<ul>\n<li>服务拆分</li>\n<li>服务间调用</li>\n</ul>\n<h3 id=\"21-服务拆分注意事项\"><a class=\"markdownIt-Anchor\" href=\"#21-服务拆分注意事项\">#</a> 2.1、服务拆分注意事项🌳</h3>\n<ol>\n<li>不同微服务，不要重复开发相同业务</li>\n<li>微服务数据独立，不要访问其它微服务的数据库</li>\n<li>微服务可以将自己的业务暴漏为接口，供其它微服务调用</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041408195.png\" alt=\"image-20231004140816014\"></p>\n<p>前往查看代码：</p>\n<p><a href=\"https://gitee.com/doukaixin/typora/tree/cloud-demo%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/\">https://gitee.com/doukaixin/typora/tree/cloud-demo 代码演示 /</a></p>\n<p>查询的结果：</p>\n<p>user</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615225.png\" alt=\"image-20231004160050762\"></p>\n<p>order</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615730.png\" alt=\"image-20231004160120577\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>微服务需要根据业务模块拆分，做到单一职责，不要重复开发相同业务</li>\n<li>微服务可以将业务暴漏为接口，供其它微服务使用</li>\n<li>不同微服务都应该有自己独立的数据库</li>\n</ol>\n</blockquote>\n<h3 id=\"22-微服务远程调用\"><a class=\"markdownIt-Anchor\" href=\"#22-微服务远程调用\">#</a> 2.2、微服务远程调用🌳</h3>\n<p>案例：根据订单 id 查询订单功能</p>\n<p>需求：根据订单 id 查询订单的同时，把订单所属的用户信息一起返回</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615033.png\" alt=\"image-20231004154028321\"></p>\n<h4 id=\"221-远程调用方式分析\"><a class=\"markdownIt-Anchor\" href=\"#221-远程调用方式分析\">#</a> 2.2.1、远程调用方式分析🌲</h4>\n<p>现在 user 服务对外暴漏了一个 RestFull 的接口，只要我们在 url 中输入对应的地址就一定能拿到用户信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615089.png\" alt=\"image-20231004154213334\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615140.png\" alt=\"image-20231004154408769\"></p>\n<p>如何在 java 中发送 http 请求呢？</p>\n<h4 id=\"222-操作步骤演示\"><a class=\"markdownIt-Anchor\" href=\"#222-操作步骤演示\">#</a> 2.2.2、操作步骤演示：🌲</h4>\n<h5 id=\"一-注册resttemplate\"><a class=\"markdownIt-Anchor\" href=\"#一-注册resttemplate\">#</a> 一、注册 RestTemplate🌴</h5>\n<p>在 order-service 的 OrderApplication ，SpringBoot 启动类中注册 RestTemplate</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* 创建 RestTemplate 并注入 Spring 容器</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"二-修改方法\"><a class=\"markdownIt-Anchor\" href=\"#二-修改方法\">#</a> 二、修改方法🌴</h5>\n<p>修改 order-service 中的 OrderService 的 queryOrderById 方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RestTemplate</span> restTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span> <span class=\"token function\">queryOrderById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> orderId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 1. 查询订单</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Order</span> order <span class=\"token operator\">=</span> orderMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 2. 利用 RestTemplate 发起 http 请求，查询用户</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 2.1 url 路径</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:8081/user/\"</span> <span class=\"token operator\">+</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 2.2 发送请求，实现远程调用</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 默认返回 json 数据类型，我们可以指定返回的类型为 user 对象类型</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForObject</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 3. 封装 User 对象到 Order</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        order<span class=\"token punctuation\">.</span><span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 4. 返回</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>微服务调用方式\n<ul>\n<li>基于 RestTemplate 发起的 http 请求实现远程调用</li>\n<li>http 请求做远程调用是与语言无关的调用，只要知道对方的 ip，端口，接口路径，请求参数即可</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"223-提供者与消费者\"><a class=\"markdownIt-Anchor\" href=\"#223-提供者与消费者\">#</a> 2.2.3、提供者与消费者🌳</h4>\n<ul>\n<li>服务提供者：一次业务中，被其它微服务调用的服务。(提供接口给其它微服务)</li>\n<li>服务消费者：一次业务中，调用其它微服务的服务。(调用其它微服务提供的接口)</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041615963.png\" alt=\"image-20231004161322330\"></p>\n<blockquote>\n<p><strong>思考问题</strong>：</p>\n<p>服务 A 调用服务 B，服务 B 调用服务 C，那么服务 B 是什么角色？</p>\n<p><strong>答</strong>：</p>\n<p>服务 B 是什么角色要看相对于谁而言，如果相对于 A 调 B 那它就是提供者，相对 B 调 C 它又变成了消费者</p>\n<p>因此我们可以认为一个服务它既可以是提供者也可以是消费者</p>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>服务调用关系\n<ul>\n<li>服务提供者：暴漏接口给其它微服务调用</li>\n<li>服务消费者：调用其它微服务提供的接口</li>\n<li>提供者与消费者 角色其实是<mark>相对</mark>的</li>\n<li>一个服务可以同时服务提供者和服务消费者</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"23-eureka注册中心\"><a class=\"markdownIt-Anchor\" href=\"#23-eureka注册中心\">#</a> 2.3、Eureka 注册中心🌳</h3>\n<ul>\n<li>远程调用的问题</li>\n<li>eureka 原理</li>\n<li>搭建 EurekaServer</li>\n<li>服务注册</li>\n<li>服务发现</li>\n</ul>\n<p><strong>服务调用出现的问题</strong>。</p>\n<ul>\n<li>服务消费者该如何获取服务提供者的地址信息？</li>\n<li>如果有多个服务提供者，消费者该如何选择？</li>\n<li>消费者如何得知服务提供者的健康状态？</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041642943.png\" alt=\"image-20231004164239712\"></p>\n<h4 id=\"231-eureka的作用\"><a class=\"markdownIt-Anchor\" href=\"#231-eureka的作用\">#</a> 2.3.1、Eureka 的作用🌲</h4>\n<p>在 Eureka 的结构当中，分成了两个 (概念 / 角色)。<mark>第一个</mark><mark>角色</mark>就是<mark> Server 服务端</mark>它的名字叫做 “<mark>注册中心</mark>” 其作用是：<mark>记录</mark>和<mark>管理这些微服务</mark>.</p>\n<p>而另外<mark>第二个角色</mark>就是<mark> user-service 服务提供者</mark>和<mark> order-service 服务消费者</mark>，不管是<mark>提供者</mark>还是<mark>消费者</mark>都是微服务所以统称为：<mark>Eureka 的客户端</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041647816.png\" alt=\"image-20231004164706564\"></p>\n<p><mark>user-service 服务提供者启动时会将自己的信息注册给 Eureka</mark> (每一个服务启动时都会做这件事，只要是 Eureka 的客户端)</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041649276.png\" alt=\"image-20231004164916779\"></p>\n<p><mark>order-service 服务消费者找 Eureka 去查询一下有没有 user-service</mark>，然后<mark> Eureka 查询到的话就返回给 order-service 关于 user-service 的地址信息</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041651392.png\" alt=\"image-20231004165136110\"></p>\n<p>现在我们拿到<mark>列表服务的信息</mark>了，这时就由<mark>负载均衡从三个地址信息里面挑出一个然后进行请求</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041654642.png\" alt=\"image-20231004165416209\"></p>\n<p>那么问题又来了，挑出来的这个会不会是<font color='red'>挂掉</font>的呢？</p>\n<p><strong>答</strong>：不会！<mark>因为 user-service 服务每隔 30 秒都会想 Eureka 发送一次心跳，来确认一下自己的状态，如果它不跳了 Eureka 就会将 user-service 从列表中移除掉</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041657023.png\" alt=\"image-20231004165753458\"></p>\n<blockquote>\n<p><strong>eureka 的作用</strong>.</p>\n<ul>\n<li>消费者该如何获取服务提供者具体信息？\n<ul>\n<li>服务提供者启动时向 eureka 注册自己的信息</li>\n<li>eureka 保存这些信息</li>\n<li>消费者根据服务名称向 eureka 拉取提供者信息</li>\n</ul>\n</li>\n<li>如果有多个服务提供者，消费者该如何选择？\n<ul>\n<li>服务消费者利用负载均衡算法，从服务列表中挑选一个</li>\n</ul>\n</li>\n<li>消费者如何感知服务提供者健康状态？\n<ul>\n<li>服务提供者会每隔 30 秒向 EurekaServer 发送心跳请求，报告健康状态</li>\n<li>eureka 会更新记录服务列表信息，心跳不正常会被剔除</li>\n<li>消费者就可以拉取到最新的信息</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>在 Eureka 架构中，微服务角色有两类：</p>\n<ul>\n<li>EurekaServer：服务端，注册中心\n<ul>\n<li>记录服务信息</li>\n<li>心跳监控</li>\n</ul>\n</li>\n<li>EurekaClient：客户端\n<ul>\n<li>provider (提供者)：服务提供者，例如案例中的 user-service\n<ul>\n<li>注册自己的信息到 EurekaServer</li>\n<li>每隔 30 秒向 EurekaServer 发送心跳</li>\n</ul>\n</li>\n<li>consumer (消费者)：服务消费者，例如案例中的 order-service\n<ul>\n<li>根据服务名称从 EurekaServer 拉取服务列表</li>\n<li>基于服务列表做负载均衡，选中一个微服务后发起远程调用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"232-动手实践\"><a class=\"markdownIt-Anchor\" href=\"#232-动手实践\">#</a> 2.3.2、动手实践🌲</h4>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041710804.png\" alt=\"image-20231004171046625\"></p>\n<h5 id=\"2321-搭建eurekaserver\"><a class=\"markdownIt-Anchor\" href=\"#2321-搭建eurekaserver\">#</a> 2.3.2.1 、搭建 EurekaServer🌴</h5>\n<p>搭建 EurekaServer 服务步骤如下：</p>\n<p>1、创建项目，引入 spring-cloud-starter-netflix-eureka-server 的依赖</p>\n<p>这里的版本号由父模块进行了统一管理，这里出错了可能是版本与 SpringBoot 不对应的问题需要降低某一方或升级某一方的版本号</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">&lt;!--eureka 服务端 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-netflix-eureka-server<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、编写启动类，添加 @EnableEurekaServer 注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>netflix<span class=\"token punctuation\">.</span>eureka<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableEurekaServer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@EnableEurekaServer</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EurekaServerApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EurekaServerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、添加 appliation.yml 文件，编写下面的配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10086</span> <span class=\"token comment\">#服务端口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 为了做服务注册才配的信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> eurekaserver <span class=\"token comment\">#服务名称</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">eureka</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">service-url</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#eureka 地址信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">defaultZone</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>10086/eureka</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 自己就有 eureka 为什么还要配置地址信息呢？</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 原因：eurka 自己也是一个微服务，所以 eureka 在启动的时候会将自己注册到 eureka 中</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#      这是为了将来 eureka 集群之间通信去用的，比方说启动了三个 eureka 将来这三个</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#      eureka 之间会相互注册，这样它们就可以做数据交流了。所以 defaultZone 应该</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#      配置的是 eureka 集群的地址如果有多个使用逗号隔开</span></pre></td></tr></table></figure><p>启动进行访问测试是否正常</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041749630.png\" alt=\"image-20231004174930549\"></p>\n<p>启动正常。这里面最重要的在于如下：</p>\n<p>每个实例的状态</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041750880.png\" alt=\"image-20231004175000766\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>搭建 EurekaServer\n<ul>\n<li>引入 eureka-server 依赖</li>\n<li>添加 @EnableEurekaServer 注解</li>\n<li>在 application.yml 中配置 eureka 地址</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h5 id=\"2322-注册user-service\"><a class=\"markdownIt-Anchor\" href=\"#2322-注册user-service\">#</a> 2.3.2.2、注册 user-service🌴</h5>\n<p>将 user-service 服务注册到 EurekaServer 步骤如下：</p>\n<p>1、在 user-service 项目引入 spring-cloud-starter-netflix-eureka-client 的依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--eureka 客户端依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-netflix-eureka-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、在 appliation.yml 文件，编写下面的配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/cloud_user<span class=\"token punctuation\">?</span>useSSL=false<span class=\"token important\">&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># user 服务名称</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key atrule\">mybatis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">type-aliases-package</span><span class=\"token punctuation\">:</span> cn.itcast.user.pojo</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">map-underscore-to-camel-case</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">cn.itcast</span><span class=\"token punctuation\">:</span> debug</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">pattern</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">dateformat</span><span class=\"token punctuation\">:</span> MM<span class=\"token punctuation\">-</span>dd HH<span class=\"token punctuation\">:</span>mm<span class=\"token punctuation\">:</span>ss<span class=\"token punctuation\">:</span>SSS</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key atrule\">eureka</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">service-url</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># eureka 地址信息</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token key atrule\">defaultZone</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>10086/eureka</pre></td></tr></table></figure><p>操作完成！</p>\n<p>如果要将服务消费者注册到 eureka 中 将同样的方法配置到 order-service 中然后访问 eureka 地址</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041815937.png\" alt=\"image-20231004181537727\"></p>\n<p>另外，我们可以将 user-service 多次启动，模拟多实例部署，但为了避免端口冲突，需要修改端口设置：-Dserver.port=8082</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041905212.png\" alt=\"image-20231004190504048\"></p>\n<p>设置好后运行 user 的新服务再次访问就会出现两个实例</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041921428.png\" alt=\"image-20231004192115170\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>服务注册\n<ul>\n<li>引入 eureka-client 依赖</li>\n<li>在 application.yml 中配置 eureka 地址</li>\n</ul>\n</li>\n<li>无论是消费者还是提供者，<mark>引入 eureka-client 依赖</mark>，知道<mark> eureka 地址后</mark>，都可以完成<mark>服务注册</mark>.</li>\n</ol>\n</blockquote>\n<h5 id=\"2323-在order-service完成服务拉取\"><a class=\"markdownIt-Anchor\" href=\"#2323-在order-service完成服务拉取\">#</a> 2.3.2.3、在 order-service 完成服务拉取🌴</h5>\n<p>服务拉取是基于服务名称获取服务列表，然后在对服务列表负载均衡</p>\n<p>1、修改 OrderService 的代码，修改访问的 url 路径，用<mark>服务名</mark>代替 ip，端口：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://userservice/user/\"</span> <span class=\"token operator\">+</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、在 order-service 项目的启动类 OrderApplication 中的 RestTemplate 添加<mark>负载均衡</mark>注解：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@LoadBalanced</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问 order 地址</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041937389.png\" alt=\"image-20231004193719047\"></p>\n<p>在 order 与 user 的控制台中就会打印查询的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041938409.png\" alt=\"image-20231004193801716\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>搭建 EurekaServer\n<ul>\n<li><mark>引入 eureka-server 依赖</mark>.</li>\n<li>启动类中添加 @EnableEurekaServer 注解</li>\n<li><mark>在 application.yml 中配置 eureka 地址</mark>.</li>\n</ul>\n</li>\n<li>服务注册\n<ul>\n<li><mark>引入 eureka-client 依赖</mark>.</li>\n<li><mark>在 application.yml 中配置 eureka 地址</mark>.</li>\n</ul>\n</li>\n<li>服务发现 / 拉取\n<ul>\n<li><mark>引入 eureka-client 依赖</mark>.</li>\n<li><mark>在 application.yml 中配置 eureka 地址</mark>.</li>\n<li>启动类中的 Bean。给 RestTemplate 添加 @LoadBalanced 注解</li>\n<li>用服务提供者的服务名称远程调用</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-http%E5%AE%A2%E6%88%B7%E7%AB%AFFeign/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-http%E5%AE%A2%E6%88%B7%E7%AB%AFFeign/",
            "title": "五、http客户端Feign",
            "date_published": "2024-04-02T10:00:51.070Z",
            "content_html": "<h2 id=\"五-http客户端feign\"><a class=\"markdownIt-Anchor\" href=\"#五-http客户端feign\">#</a> 五、http 客户端 Feign🎄</h2>\n<ul>\n<li>Feign 替代 RestTemplate</li>\n<li>自定义配置</li>\n<li>Feign 使用优化</li>\n<li>最佳实践</li>\n</ul>\n<h3 id=\"51-resttemplate方式调用存在的问题\"><a class=\"markdownIt-Anchor\" href=\"#51-resttemplate方式调用存在的问题\">#</a> 5.1、RestTemplate 方式调用存在的问题🌳</h3>\n<p>先来看我们以前利用 RestTemplate 发起远程调用的代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 2. 利用 RestTemplate 发起 http 请求，查询用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 2.1 url 路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://userservice/user/\"</span> <span class=\"token operator\">+</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 2.2 发送请求，实现远程调用</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 默认返回 json 数据类型，我们可以指定返回的类型为 user 对象类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForObject</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><font color='red'>上面存在下面的问题</font>：</p>\n<ul>\n<li>代码可读性差，编程体验不统一</li>\n<li>参数复杂 URL 难以维护</li>\n</ul>\n<h3 id=\"52-feign的介绍\"><a class=\"markdownIt-Anchor\" href=\"#52-feign的介绍\">#</a> 5.2、Feign 的介绍🌳</h3>\n<p>Feign 是一个声明式的 http 客户端，官方地址：<a href=\"https://github.com/OpenFeign/feign\">https://github.com/OpenFeign/feign</a></p>\n<p>其作用就是帮助我们优雅的实现 http 请求的发送，解决上面提到的问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061557922.png\" alt=\"image-20231006155457781\"></p>\n<h3 id=\"53-定义和使用feign客户端\"><a class=\"markdownIt-Anchor\" href=\"#53-定义和使用feign客户端\">#</a> 5.3、定义和使用 Feign 客户端🌳</h3>\n<p>使用 Feign 的步骤如下：</p>\n<p>1、引入依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--feign 客户端依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-openfeign<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、在 order-service 的启动类添加注解开启 Feign 的功能：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableFeignClients</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 如果我们创建的远程调用类不在启动类的扫描范围则可以使用下面的方式扫描远程调用类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// @EnableFeignClients(basePackages = \"com.atguigu.gulimail.member.feign\")</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cn.itcast.order.mapper\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OrderApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    @Bean</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    @LoadBalanced</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    public RestTemplate restTemplate()</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        return new RestTemplate();</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">/*  @Bean</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    public IRule randomRule()</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        return new RandomRule();</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    &#125;*/</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061559467.png\" alt=\"image-20231006155927233\"></p>\n<p>3、编写 Feign 客户端</p>\n<p>声明一个远程调用，定义了一个接口叫 UserClient 这个接口将来封装的就是所有对 userservice 发起的远程调用。</p>\n<p>在接口上添加了注解 @FeignClient (“服务名称”) 并且指定了服务名称</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userservice\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">User</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>主要是基于 SpringMVC 的注解来声明远程调用的信息，比如：</p>\n<ul>\n<li>服务名称：userservice</li>\n<li>请求方式：GET</li>\n<li id=\"\">请求路径：/user/</li>\n<li>请求参数：Login id</li>\n<li>返回值类型：User</li>\n</ul>\n<p>4、修改 order-service 中的 queryOrderById 的方法内容：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">OrderMapper</span> orderMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserClient</span> userClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span> <span class=\"token function\">queryOrderById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> orderId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 1. 查询订单</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Order</span> order <span class=\"token operator\">=</span> orderMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 2. 用 Feign 远程调用</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userClient<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 3. 封装 User 对象到 Order</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        order<span class=\"token punctuation\">.</span><span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 4. 返回</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里需要注意的是 order-service 与 user-service 是否在同一个 namespace 中，否则访问就会报错 500 状态码。</p>\n<p>报错具体信息为：</p>\n<pre><code>Load balancer does not have available server for client: userservice\n//翻译\n负载均衡器没有客户端可用的服务器:userservice\n</code></pre>\n<p><font color='red'>罪魁祸首</font>.</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">cluster-name</span><span class=\"token punctuation\">:</span> HZ <span class=\"token comment\"># 集群名称</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 这个 namespace 就是罪魁祸首</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># namespace: ed32fa6f-e9e3-4483-b860-7bcd9731d0d9 # 命名空间，填 ID dev 环境</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">ephemeral</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 设置是否为临时实例 设置为非临时实例</span></pre></td></tr></table></figure><p>上面的报错中可以先去 nacos 控制台看一下注册中心的情况这是个好习惯不然就是找错半天。</p>\n<p>启动 order-service 服务和 user-service 服务访问 url：<a href=\"http://localhost:8080/order/101\">http://localhost:8080/order/101</a></p>\n<p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061640421.png\" alt=\"image-20231006164032976\"></p>\n<p>再将两个 user-service 启动然后刷新页面访问 10 次 url：<a href=\"http://localhost:8080/order/101%E6%9F%A5%E7%9C%8Bidea%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E6%89%93%E5%8D%B0\">http://localhost:8080/order/101 查看 idea 控制台的打印</a></p>\n<p>8081</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061651107.png\" alt=\"image-20231006165128092\"></p>\n<p>8082</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061651416.png\" alt=\"image-20231006165138249\"></p>\n<p>8083</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061651654.png\" alt=\"image-20231006165147393\"></p>\n<p>都访问到了，说明我们不仅仅实现了远程调用而且还实现了负载均衡。Feign 非常的强大底层还集成了负载均衡的功能</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Feign 的使用步骤</p>\n<ol>\n<li>引入依赖</li>\n<li>添加 @EnableFeignClients 注解</li>\n<li>编写 FeignClient 接口</li>\n<li>使用 FeignClient 中定义的方法代替 RestTemplate</li>\n</ol>\n</blockquote>\n<h3 id=\"54-自定义feign配置\"><a class=\"markdownIt-Anchor\" href=\"#54-自定义feign配置\">#</a> 5.4、自定义 Feign 配置🌳</h3>\n<p>Feign 运行自定义配置来覆盖默认配置，可以修改的配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font color='red'>feign.Logger.Level</font></td>\n<td>修改日志级别</td>\n<td>包含四种不同的级别：NONE，BASIC，HEADERS，FULL</td>\n</tr>\n<tr>\n<td>feign.codec.Decoder</td>\n<td>响应结果的解析器</td>\n<td>http 远程调用的结果做解析，例如解析 json 字符串为 java 对象</td>\n</tr>\n<tr>\n<td>feign.codec.Encoder</td>\n<td>请求参数编码</td>\n<td>将请求参数编码，便于通过 http 请求发送</td>\n</tr>\n<tr>\n<td>feign.contract</td>\n<td>支持的注解格式</td>\n<td>默认是 SpringMVC 的注解</td>\n</tr>\n<tr>\n<td>feign.Retryer</td>\n<td>失败重试机制</td>\n<td>请求失败的重试机制，默认是没有，不过会使用 Ribbon 的重试</td>\n</tr>\n</tbody>\n</table>\n<p>一般我们需要配置的就是日志级别。</p>\n<p>feign.Logger.Level：</p>\n<p>NONE：没有任何日志</p>\n<p>BASIC：发起一次 http 请求时，记录请求是什么时候发的，什么时候结束的，耗时等基本信息</p>\n<p>HEADERS：除了请求信息还有请求头和响应体信息</p>\n<p>FULL：完整的记录日志</p>\n<h4 id=\"541-配置feign日志有两种方式\"><a class=\"markdownIt-Anchor\" href=\"#541-配置feign日志有两种方式\">#</a> 5.4.1、配置 Feign 日志有两种方式：🌲</h4>\n<h5 id=\"方式一\"><a class=\"markdownIt-Anchor\" href=\"#方式一\">#</a> 方式一🌴</h5>\n<p>方式一：配置文件方式</p>\n<p>1、全局生效</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">feign</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 这里 default 就是全局配置，如果是写服务名称，则是针对某个微服务的配置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">loggerLevel</span><span class=\"token punctuation\">:</span> FULL <span class=\"token comment\"># 完整日志</span></pre></td></tr></table></figure><p>2、局部生效</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">feign</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">userservice</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 这里 default 就是全局配置，如果是写服务名称，则是针对某个微服务的配置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">loggerLevel</span><span class=\"token punctuation\">:</span> FULL <span class=\"token comment\"># 完整日志</span></pre></td></tr></table></figure><p>启动 order-service 服务访问 utl：<a href=\"http://127.0.0.1:8080/order/101\">http://127.0.0.1:8080/order/101</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310070911106.png\" alt=\"image-20231007091133634\"></p>\n<h5 id=\"方式二\"><a class=\"markdownIt-Anchor\" href=\"#方式二\">#</a> 方式二🌴</h5>\n<p>配置 Feign 日志的方式二：java 代码方式，需要先声明一个 Bean：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FeignClientConfiguration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Logger<span class=\"token punctuation\">.</span>Level</span> <span class=\"token function\">feignLogLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Logger<span class=\"token punctuation\">.</span>Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASIC</span><span class=\"token punctuation\">;</span> # 日志级别</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>1、而后如果是全局配置，则把它放到 @EnableFeignClients 这个注解中：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableFeignClients</span><span class=\"token punctuation\">(</span>defaultConfiguration <span class=\"token operator\">=</span> <span class=\"token class-name\">FeignClientConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>2、 如果是局部配置，则把它放到 @FeignClient 这个注解中：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"userservice\"</span><span class=\"token punctuation\">,</span> configuration <span class=\"token operator\">=</span> <span class=\"token class-name\">FeignClientConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>重新启动 order-service 服务访问 utl：<a href=\"http://127.0.0.1:8080/order/101\">http://127.0.0.1:8080/order/101</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310070914510.png\" alt=\"image-20231007091445317\"></p>\n<p><font color='red'>注意</font>：如果配置文件方式与代码方式同时开启的话，它会使用配置文件的方式。</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Feign 的日志配置：</p>\n<ol>\n<li>\n<p>方式一是配置文件，feign.client.config.xxx.loggerLevel</p>\n<ol>\n<li>如果 xxx 是 default 则代表全局</li>\n<li>如果 xxx 是服务名称，例如 userservice 则代表局限于某服务</li>\n</ol>\n</li>\n<li>\n<p>方式二是 java 代码配置 Logger.Level 这个 Bean</p>\n<ol>\n<li>如果在 @EnableFeignClients 注解声明则代表全局</li>\n<li>如果在 @FeignClient 注解中声明则代表局限于某服务</li>\n</ol>\n<ul>\n<li><font color='red'>注意</font>：这两个注解一个是启动类的，一个是远程调用接口的。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"55-feign的性能优化\"><a class=\"markdownIt-Anchor\" href=\"#55-feign的性能优化\">#</a> 5.5、Feign 的性能优化🌳</h3>\n<p>Feign 底层的客户端实现：</p>\n<ul>\n<li>URLConnection：默认实现，不支持连接池</li>\n<li>Apache HttpClient：支持连接池</li>\n<li>OKHttp：支持连接池</li>\n</ul>\n<p>因此优化 Feign 的性能主要包括：</p>\n<ol>\n<li>使用连接池代替默认的 URLConnection</li>\n<li>日志级别，最好用 basic 或 none，因为开日志也会拉低性能</li>\n</ol>\n<h4 id=\"551-feign的性能优化-连接池配置\"><a class=\"markdownIt-Anchor\" href=\"#551-feign的性能优化-连接池配置\">#</a> 5.5.1、Feign 的性能优化 - 连接池配置🌲</h4>\n<p>Feign 添加 HttpClient 的支持：</p>\n<p>引入依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--httpClient 的依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.github.openfeign<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>feign-httpclient<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>配置连接池：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">feign</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token key atrule\">httpclient</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启 feign 对 httpClient 的支持</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token key atrule\">max-connections</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span> <span class=\"token comment\"># 最大的连接数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token key atrule\">max-connections-per-route</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span> <span class=\"token comment\"># 每个路径的最大连接数</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>Feign 的优化：</p>\n<ol>\n<li>日志级别尽量用 basic</li>\n<li>使用 HttpClient 或 OKHttp 代替 URLConnection\n<ol>\n<li>引入 feign-httpClient 依赖</li>\n<li>配置文件开启 httpClient 功能，设置连接池参数</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"56-feign的最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#56-feign的最佳实践\">#</a> 5.6、Feign 的最佳实践🌳</h3>\n<h4 id=\"561-方式一\"><a class=\"markdownIt-Anchor\" href=\"#561-方式一\">#</a> 5.6.1、方式一🌲</h4>\n<p>方式一 (继承)：给消费者的 FeignClient 和提供者的 controller 定义统一的父接口作为标准</p>\n<blockquote>\n<p>在 UserClient 接口中使用 GetMapping 声明远程调用所需要的信息，比如请求方式，参数，路径，返回值等。</p>\n<p>这个接口最终的目的是什么：是让消费者基于这些声明信息发送一次 http 的请求，而这个请求就会达到 userservice 服务对应的一个实例上 UserController 的 queryById。我们拿这两个做一个对比：请求方式都是 GET，请求路径 findById 是 “user/{id}”，而 queryById 是 “/{id}” 原因是 类上已经有 “/user” 了，方法名不一样不用管。参数一样。</p>\n<p>所以两个方法对比结果是：除了方法名外，其它都一样。而这两个方法的声明是必须要一样的否则报错</p>\n<p>order-service 基于 UserClient 访问 UserService 而 UserClient 中声明了请求方式，请求参数，请求路径等信息。那么 order-service 就基于这些信息发送 http 请求，而 UserService 恰好在接收这个请求。如果 UserClient 中的 findById 与 UserController 中的 queryById 声明的不一样，比如发送的是 post 请求而接收的是 get 请求它们就匹配不到了。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310070954683.png\" alt=\"image-20231007095439949\"></p>\n<p><font color='red'>问题</font>：既然它们两个一模一样那么就意味着可以做一下抽取</p>\n<p>假如定义了一个接口叫 UserAPI，现在我想定义一个 Feign 客户端接口类就不用再写了直接继承 UserAPI 就好了</p>\n<p>还有 UserController ，直接实现 UserAPI 这个接口。就是给 Feign 客户端和 Controller 定义统一标准，它俩就可以不用再去写了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071011316.png\" alt=\"image-20231007101108979\"></p>\n<p>但是这种方式也有一个问题如下是 Spring 官网给出的一段说明：</p>\n<p>简单理解下面的说明就是：一般情况下我们不推荐去共享接口在服务端和客户端之间，它会造成紧耦合</p>\n<p>什么是紧耦合呢：两个微服务 userservice 和 orderservice 都已经实现相同接口了从 api 层面都已经耦合了为紧耦合，将来 UserAPI 中声明变了 UserClient 与 UserController 都要跟着变</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071012804.png\" alt=\"image-20231007101211588\"></p>\n<p>而且这种方案对 SpringMVC 不起作用</p>\n<h4 id=\"562-方式二\"><a class=\"markdownIt-Anchor\" href=\"#562-方式二\">#</a> 5.6.2、方式二🌲</h4>\n<p>方式二 (抽取)：将 FeignClient 抽取为独立模块，并且把接口有关的 POJO，默认的 Feign 配置都放到这个模块中，提供给所有消费者使用</p>\n<p>解释：</p>\n<p>UserController 对外暴漏查询用户的接口，有两个微服务 order-service 和 pay-service 假如它俩都需要去查询用户，之前的方式是各写各自的 UserClient 然后都去调 UserController 查询用户接口，如果说将来微服务越来越多十几个都来调 UserController 那 UserClient 就等于写了十多遍了这样就是重复开发了，很麻烦。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071024820.png\" alt=\"image-20231007102445971\"></p>\n<p>所以准备一个 feign-api (项目 - 独立模块) ，它为消费者把 Client 定义好，接口定义过程中的实体类，Feign 的配置它都管了</p>\n<p>将来消费者要使用就引依赖就可以了，引入了后直接调用 UserController 查询用户</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071027366.png\" alt=\"image-20231007102717991\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Feign 的最佳实践：</p>\n<ol>\n<li>让 controller 和 FeignClient 继承同一接口</li>\n<li>将 FeignClient，POJO，Feign 的默认配置都定义到一个项目中 (独立模块) 统一抽取出来打 jar 包，供所有消费者使用</li>\n</ol>\n</blockquote>\n<h4 id=\"563-演示方式二\"><a class=\"markdownIt-Anchor\" href=\"#563-演示方式二\">#</a> 5.6.3、演示方式二🌲</h4>\n<h5 id=\"5631-抽取feignclient\"><a class=\"markdownIt-Anchor\" href=\"#5631-抽取feignclient\">#</a> 5.6.3.1、抽取 FeignClient🌴</h5>\n<p><strong>实现最佳实践方式二的步骤如下</strong>：</p>\n<p>1、首先创建一个 module，命名为 feign-api，然后引入 feign 的 starter 依赖</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071056767.png\" alt=\"image-20231007105607975\"></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">></span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>cn.itcast.demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>cloud-demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>feign-api1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>packaging</span><span class=\"token punctuation\">></span></span>jar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>packaging</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>feign-api1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>http://maven.apache.org<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-openfeign<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、将 order-service 中编写的 UserClient，User，FeignConfiguration 都复制到 feign-api 项目中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071101541.png\" alt=\"image-20231007110150030\"></p>\n<p>3、将 order-service 中的 config，clients，User 都删除，在 order-service 中引入 feign-api 的依赖</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071103048.png\" alt=\"image-20231007110347974\"></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 引入 feign-api--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>cn.itcast.demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>feign-api1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>4、修改 order-service 中的所有与上述三个组件有关的 import 部分，改成导入 feign-api 中的包</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071106503.png\" alt=\"image-20231007110622216\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071106713.png\" alt=\"image-20231007110644248\"></p>\n<p>5、重启测试</p>\n<p>但是呢这里细心的可能已经注意到了有地方不对劲启动后也会报错！</p>\n<p>报错为：找不到 UserClient 的 Bean</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071114496.png\" alt=\"image-20231007111359869\"></p>\n<p>这是为什么呢？</p>\n<blockquote>\n<p>原因：</p>\n<p>项目启动 SpringBoot 启动类扫描包的范围是 cn.itcast.order。而 UserClient 导入的包路径却是 cn.itcast.feign.clients.UserClient</p>\n<p>SpringBoot 从 order 包开始扫描而导入依赖的路径从 itcast 就不一样了，有一个解决办法就是将 SpringBoot 扫描的范围扩大，但是！！！这是不合理的。不能这样</p>\n</blockquote>\n<h6 id=\"56311-如下两种解决方案\"><a class=\"markdownIt-Anchor\" href=\"#56311-如下两种解决方案\">#</a> 5.6.3.1.1、如下两种解决方案：🎋</h6>\n<p>当定义的 FeignClient 不在 SpringBootApplication 的扫描包范围时，这些 FeignClient 无法使用。有两种方式解决：</p>\n<p>方式一：指定 FeignClient 所在包 (全拿来)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableFeignClients</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"cn.itcast.feign.clients\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>方式二：指定 FeignClient 字节码 (精准打击，推荐使用：用哪个就指定那个)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableFeignClients</span><span class=\"token punctuation\">(</span>clients <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>使用第二种方式解决代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>feign<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserClient</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>feign<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FeignClientConfiguration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapperScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>openfeign<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableFeignClients</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@EnableFeignClients</span><span class=\"token punctuation\">(</span>clients <span class=\"token operator\">=</span> <span class=\"token class-name\">UserClient</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> defaultConfiguration <span class=\"token operator\">=</span> <span class=\"token class-name\">FeignClientConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cn.itcast.order.mapper\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OrderApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再次启动项目</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071126898.png\" alt=\"image-20231007112615337\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>不同包的 FeignClient 的导入有两种方式：</p>\n<ol>\n<li>在 @EnableFeignClients 注解中添加 basePackages，指定 FeignClient 所在的包</li>\n<li>在 @EnableFeignClients 注解中添加 clients，指定具体 FeignClient 的字节码</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-gateway/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-gateway/",
            "title": "六、统一网关Gateway",
            "date_published": "2024-04-02T10:00:51.067Z",
            "content_html": "<h2 id=\"六-统一网关gateway\"><a class=\"markdownIt-Anchor\" href=\"#六-统一网关gateway\">#</a> 六、统一网关 Gateway🎄</h2>\n<ul>\n<li>为什么需要网关</li>\n<li>gateway 快速入门</li>\n<li>断言工厂</li>\n<li>过滤器工厂</li>\n<li>全局过滤器</li>\n<li>跨域问题</li>\n</ul>\n<h3 id=\"61-为什么需要网关\"><a class=\"markdownIt-Anchor\" href=\"#61-为什么需要网关\">#</a> 6.1、为什么需要网关🌳</h3>\n<p>先看下现在的微服务结构：</p>\n<p>我们有很多个不同的服务，每个服务都需要去访问数据库完成自己的业务功能，并且微服务都可以在 nacos 里面完成服务注册，配置管理。当微服务内部又相互调用关系时，我们就可以利用 feign 组件去做了。而外部用户需要访问时则让它直接发请求到微服务就行了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071145537.png\" alt=\"image-20231007114556885\"></p>\n<p>但是！这里其实存在一个问题。</p>\n<p>我们微服务直接摆在那里允许任何人发请求来访问是不是不太安全呢？你要知道不是所有业务都对外公开的</p>\n<p>所以我们需要对用户的身份进行验证，如果说你是符号条件的人员才能让你进去看相关的内容和操作否则拦住不让进。</p>\n<p>那这件事儿就是由网关来做的。</p>\n<p>一切请求一定先到网关再到微服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071149540.png\" alt=\"image-20231007114955240\"></p>\n<p>这就是网关功能之一：身份认证和权限校验</p>\n<p>但是还有一个问题。</p>\n<p>比如说某用户要做一个用户查询，那么网关能处理用户查询的业务吗？不能！肯定要把请求转发到对应的处理用户查询的服务。比如说 userService。因此网关必须做一件事儿了，它需要根据用户请求判断是找 userService 还是 orderService 如果弄错了就要出问题了。</p>\n<p>而这个动作我们称之为：服务路由，负载均衡</p>\n<h3 id=\"62-网关功能\"><a class=\"markdownIt-Anchor\" href=\"#62-网关功能\">#</a> 6.2、网关功能：🌳</h3>\n<ul>\n<li>身份认证和权限校验</li>\n<li>服务路由，负载均衡</li>\n<li>请求限流</li>\n</ul>\n<h3 id=\"63-网关的技术实现\"><a class=\"markdownIt-Anchor\" href=\"#63-网关的技术实现\">#</a> 6.3、网关的技术实现🌳</h3>\n<p>在 SpringCloud 中网关的实现包括两种：</p>\n<ul>\n<li>gateway</li>\n<li>zuul</li>\n</ul>\n<blockquote>\n<p>zuul 与 gateway 对比：</p>\n<p>Zuul 是基于 Servlet 的实现，属于阻塞式编程。而 SpringCloudGateway 则是基于 Spring5 中提供的 WebFlux，属于响应式编程的实现，具备更好的性能。</p>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>网关的作用：</p>\n<ul>\n<li>对用户请求做身份认证，权限校验</li>\n<li>将用户请求路由到微服务，并实现负载均衡</li>\n<li>对用户请求做限流</li>\n</ul>\n</blockquote>\n<h3 id=\"64-搭建网关服务\"><a class=\"markdownIt-Anchor\" href=\"#64-搭建网关服务\">#</a> 6.4、搭建网关服务🌳</h3>\n<p>搭建网关服务的步骤：</p>\n<p>1、创建新的 module，引入 SpringCloudGateway 的依赖和 nacos 的服务发现依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 网关依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-gateway<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">&lt;!--nacos 服务发现依赖 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、编写路由配置及 nacos 地址</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#=========== 这些配置让网关能够联系上 nacos 实现服务注册和发现 ====</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10010</span> <span class=\"token comment\"># 网关端口                              #||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gateway <span class=\"token comment\"># 服务名称                           #||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>                                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址          #||</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#========================= 网关路由配置 =====================</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              ||</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可    ||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             ||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">-</span>service                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//orderservice                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span>                                  <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/order/<span class=\"token important\">**</span>                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#=========================================================</span></pre></td></tr></table></figure><p>访问 gateway 网关 uri：<a href=\"http://localhost:10010/user/1\">http://localhost:10010/user/1</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071601031.png\" alt=\"image-20231007160105779\"></p>\n<p>503 的各种原因：</p>\n<p>1、注意 yml 配置文件中的 uri 配置 lb// 服务名，是否与 nacos 中的自定义服务名相同。</p>\n<ul>\n<li>解释：gateway 的路由规则是基于 nacos 配置中心来定位项目的</li>\n</ul>\n<p>2、如果配置文件没问题，Spring Cloud 2020 版本报 503 错误，需要手动添加 loadbalancer 依赖</p>\n<ul>\n<li>\n<p>在当前项目的 pom.xml 文件中导入如下依赖即可</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-loadbalancer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ul>\n<p>再次访问 gateway 网关 uri：<a href=\"http://localhost:10010/user/1\">http://localhost:10010/user/1</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071600956.png\" alt=\"image-20231007160021450\"></p>\n<center>路由过程流程图</center>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071618234.png\" alt=\"image-20231007161853807\"></p>\n<p>微服务都可以注册到 nacos 注册中心，这时用户发送了请求，请求进入网关但是网关无法处理这个业务。所以它只能是基于路由规则去做判断，而上面我们定义了两个规则一个是把 user 请求开头的路径代理到 userservice，另一个是把 order 请求开头的路径代理到 orderservice。网关拿着 userserivce 去注册中心拉取服务列表然后做负载均衡，至此流程完毕！</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>网关搭建步骤：</p>\n<ol>\n<li>创建项目，引入 nacos 服务发现和 gateway 依赖</li>\n<li>配置 application.yml，包括服务基本信息，nacos 地址，路由</li>\n</ol>\n<p>路由配置包括：</p>\n<ol>\n<li>路由 id：路由的唯一标示</li>\n<li>路由目标 (uri)：路由的目标地址，http 代表固定地址，lb 代表根据服务名负载均衡</li>\n<li>路由断言 (predicates)：判断路由的规则</li>\n<li>过滤器 (filters)：对请求或响应做处理</li>\n</ol>\n</blockquote>\n<h3 id=\"65-路由断言工厂route-predicate-factory\"><a class=\"markdownIt-Anchor\" href=\"#65-路由断言工厂route-predicate-factory\">#</a> 6.5、路由断言工厂 Route Predicate Factory🌳</h3>\n<p>网关路由可以配置的内容包括：</p>\n<ul>\n<li>路由 id：路由唯一标示</li>\n<li>uri：路由目的地，支持 lb 和 http 两种</li>\n<li><font color='red'>predicates：路由断言，判断请求是否符合要求，符合则转发到路由目的地</font>.</li>\n<li>filters：路由过滤器，处理请求或响应</li>\n</ul>\n<p>断言我们知道就是一种判断的规则，那断言工厂又是什么呢？</p>\n<h4 id=\"651-路由断言工厂route-predicate-factory\"><a class=\"markdownIt-Anchor\" href=\"#651-路由断言工厂route-predicate-factory\">#</a> 6.5.1、路由断言工厂 Route Predicate Factory🌲</h4>\n<ul>\n<li>\n<p>我们在配置文件中写的断言规则只是字符串，这些字符串会被 (断言工厂) Prediacte Factory 读取并处理，转变为路由判断的条件</p>\n</li>\n<li>\n<p>例如 Path=/user/*** 是按照路径匹配，这个规则是由</p>\n<p>org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory 类来处理的</p>\n</li>\n<li>\n<p>像这样的断言工厂在 SpringCloudGateway 还有十几个，每个都有自己的判断规则和条件</p>\n</li>\n</ul>\n<p><strong>Spring 提供了 11 种基本的 Predicate 工厂</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>After</td>\n<td>是某个时间点后的请求</td>\n<td>- After=2037-01-20T17:42:47.789-07:00[America/Denver]</td>\n</tr>\n<tr>\n<td>Before</td>\n<td>是某个时间点之前的请求</td>\n<td>- Before=2031-04-13T15:14:47.433+08:00[Asia/Shanghai]</td>\n</tr>\n<tr>\n<td>Between</td>\n<td>是某两个时间点之前的请求</td>\n<td>- Between=2037-01-20T17:42:47.789-07:00[America/Denver]<br />,2037-01-21T17:42:47.789-07:00[America/Denver]</td>\n</tr>\n<tr>\n<td>Cookie</td>\n<td>请求必须包含某些 Cookie</td>\n<td>- Cookie=chocolate，ch.p</td>\n</tr>\n<tr>\n<td>Header</td>\n<td>请求必须包含某些 header</td>\n<td>- Header=X-Request-Id，\\d+</td>\n</tr>\n<tr>\n<td>Host</td>\n<td>请求必须是访问某个 host (域名)</td>\n<td><code>- Host**.somehost.org，**.anotherhost.org</code></td>\n</tr>\n<tr>\n<td>Method</td>\n<td>请求方式必须是指定方式</td>\n<td>- Method=GET，POST</td>\n</tr>\n<tr>\n<td>Path</td>\n<td>请求路径必须符合指定规则</td>\n<td>- Path=/red/{segment}，/blue/**</td>\n</tr>\n<tr>\n<td>Query</td>\n<td>请求参数必须包含指定参数</td>\n<td>- Query=name，jack 或者 - Query=name</td>\n</tr>\n<tr>\n<td>RemoteAddr</td>\n<td>请求者的 ip 必须是指定范围</td>\n<td>- RemoteAddr=192.168.1.1/24</td>\n</tr>\n<tr>\n<td>Weight</td>\n<td>权重处理</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>功能演示：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#=========== 这些配置让网关能够联系上 nacos 实现服务注册和发现 ====</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10010</span> <span class=\"token comment\"># 网关端口                              #||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gateway <span class=\"token comment\"># 服务名称                           #||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>                                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址          #||</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#========================= 网关路由配置 =====================</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              ||</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可    ||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             ||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> order_service                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//orderservice                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span>                                  <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/order/<span class=\"token important\">**</span>                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\"># 配置断言规则是在 2037 年之后才能访问</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">-</span> After=2037<span class=\"token punctuation\">-</span>01<span class=\"token punctuation\">-</span>20T17<span class=\"token punctuation\">:</span>42<span class=\"token punctuation\">:</span>47.789<span class=\"token punctuation\">-</span>07<span class=\"token punctuation\">:</span>00<span class=\"token punctuation\">[</span>America/Denver<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr></table></figure><p><mark>使用 Query 的方式如下：</mark></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> test_route</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.baidu.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 断言规则当我们访问某个 url 比如：http://localhost:8088/?url=qq 那么此时就会跳转到 qq 的网址 访问 url=baidu 就到百度了</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">-</span> Query=url<span class=\"token punctuation\">,</span>baidu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> qq_route</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.qq.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">-</span> Query=url<span class=\"token punctuation\">,</span>qq</pre></td></tr></table></figure><p>访问 uri：<a href=\"http://127.0.0.1:10010/order/101\">http://127.0.0.1:10010/order/101</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071706489.png\" alt=\"image-20231007170619279\"></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#=========== 这些配置让网关能够联系上 nacos 实现服务注册和发现 ====</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10010</span> <span class=\"token comment\"># 网关端口                              #||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gateway <span class=\"token comment\"># 服务名称                           #||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>                                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址          #||</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#========================= 网关路由配置 =====================</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              ||</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可    ||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             ||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> order_service                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//orderservice                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span>                                  <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/order/<span class=\"token important\">**</span>                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\"># 配置断言规则是在 2037 年之后才能访问</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">-</span> Before=2037<span class=\"token punctuation\">-</span>01<span class=\"token punctuation\">-</span>20T17<span class=\"token punctuation\">:</span>42<span class=\"token punctuation\">:</span>47.789<span class=\"token punctuation\">-</span>07<span class=\"token punctuation\">:</span>00<span class=\"token punctuation\">[</span>America/Denver<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr></table></figure><p>访问 uri：<a href=\"http://127.0.0.1:10010/order/101\">http://127.0.0.1:10010/order/101</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071707263.png\" alt=\"image-20231007170751853\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>\n<p>PredicateFactory 的作用是什么？</p>\n<p>读取用户定义的断言条件，对请求做判断</p>\n</li>\n<li>\n<p>Path=/user/** 是什么含义？</p>\n<p>路径是以 /user 开头的就认为是符合的</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"66-路由过滤gatewayfilter\"><a class=\"markdownIt-Anchor\" href=\"#66-路由过滤gatewayfilter\">#</a> 6.6、路由过滤 GatewayFilter🌳</h3>\n<p>GatewayFilter 是网关中提供的一种过滤器，可以对进入网关的<mark>请求</mark>和微服务返回的<mark>响应</mark>做<mark>处理</mark>。</p>\n<p>请求：</p>\n<blockquote>\n<p>当用户向网关发起请求时，需要先做路由里面会有一个断言工厂它可以基于我们配置的规则完成请求路由去判断到底应该到哪个微服务。但是路由之后也并不能直接向微服务发起请求。因为我们还可以给路由配置各种各样的过滤器</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071746074.png\" alt=\"image-20231007174642784\"></p>\n<blockquote>\n<p>这些过滤器会形成一个过滤器链。那么用户的请求就一定要经过这些过滤器链，然后才能到达微服务。</p>\n<p>那么在这个过程当中过滤器就可以对进入网关的请求做各种处理。比如说对请求头或者请求参数做什么处理都是没问题的。</p>\n</blockquote>\n<p>响应：</p>\n<blockquote>\n<p>当用户请求给微服务后，微服务处理完了要返回一个结果。而这个结果肯定也是先到达了网关，网关同样会经过过滤器链来逐层处理这个响应结果，最终才会返回给用户</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071754515.png\" alt=\"image-20231007175153476\"></p>\n<blockquote>\n<p>那么在这个过程当中过滤器可以对响应做些什么事儿呢？比如说把响应头检查一下加一些头信息之类的</p>\n</blockquote>\n<p>对请求或响应做出各种各样的处理，具体能做出什么样的处理那就要看 Spring 里面提供的过滤工厂了</p>\n<h4 id=\"661-过滤器工厂gatewayfilterfactory\"><a class=\"markdownIt-Anchor\" href=\"#661-过滤器工厂gatewayfilterfactory\">#</a> 6.6.1、过滤器工厂 GatewayFilterFactory🌲</h4>\n<p>Spring 提供了 31 种不同的路由过滤器工厂。例如：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AddRequestHeader</td>\n<td>给当前请求添加一个请求头</td>\n</tr>\n<tr>\n<td>RemoveRequestHeader</td>\n<td>移除请求中的一个请求头</td>\n</tr>\n<tr>\n<td>AddResponseHeader</td>\n<td>给响应结果中添加一个响应头</td>\n</tr>\n<tr>\n<td>RemoveResponseHeader</td>\n<td>从响应结果中移除有一个响应头</td>\n</tr>\n<tr>\n<td>RequestRateLimiter</td>\n<td>限制请求的流量</td>\n</tr>\n<tr>\n<td>…</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"6611-代码案例\"><a class=\"markdownIt-Anchor\" href=\"#6611-代码案例\">#</a> 6.6.1.1、代码案例🌴</h5>\n<p><strong>给所有进入 userservice 的请求添加一个请求头</strong>.</p>\n<p>给所有进入 userservice 的请求添加一个请求头：Truth=itcast is freaking awesome!</p>\n<p>实现方式：</p>\n<p>在 gateway 中修改 application.yml 文件，给 userservice 的路由添加过滤器：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                          </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可   </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 过滤器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">-</span> AddRequestHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># 添加请求头</span></pre></td></tr></table></figure><p>在 UserController 类中编写 queryById 使用注解 @RequestHeader 获取请求头的信息，加上 require=false 表示没获取到也没有关系，不加会报错。输出请求头的信息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserService</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestHeader</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"Truth\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> truth<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"truth: \"</span> <span class=\"token operator\">+</span> truth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问 uri：<a href=\"http://localhost:10010/user/1\">http://localhost:10010/user/1</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071926883.png\" alt=\"image-20231007192552616\"></p>\n<p>可以正常访问我们查看 idea 控制台中 user-service 的打印有没有请求体信息输出的那句话</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071928357.png\" alt=\"image-20231007192850157\"></p>\n<p>可以看到请求头信息被打印出来了。</p>\n<p>但是有个问题，我如果想要给全部的微服务都加请求头信息呢，这时可以使用默认过滤器来配置</p>\n<h5 id=\"6612-默认过滤器\"><a class=\"markdownIt-Anchor\" href=\"#6612-默认过滤器\">#</a> 6.6.1.2、默认过滤器🌴</h5>\n<p>如果要对所有的路由都生效，则可以将过滤器工厂写到 default 下。格式如下：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                          </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可   </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">default-filters</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 默认过滤器，会对所有的路由请求都生效</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">-</span> AddRequestHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># 添加请求头</span></pre></td></tr></table></figure><p>多访问几次 uri：<a href=\"http://localhost:10010/user/1\">http://localhost:10010/user/1</a></p>\n<p>查看每个服务的打印信息是否有请求头信息</p>\n<p>8081</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071938856.png\" alt=\"image-20231007193808029\"></p>\n<p>8082</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071938158.png\" alt=\"image-20231007193834963\"></p>\n<p>8083</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310071939348.png\" alt=\"image-20231007193903983\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>过滤器的作用是什么？\n<ol>\n<li>对路由的请求或响应做加工处理，比如添加请求头</li>\n<li>配置在路由下的过滤器只对当前路由的请求生效</li>\n</ol>\n</li>\n<li>defaultFilters 的作用是什么？\n<ol>\n<li>对所有路由都生效的过滤器</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"662-全局过滤器globalfilter\"><a class=\"markdownIt-Anchor\" href=\"#662-全局过滤器globalfilter\">#</a> 6.6.2、全局过滤器 GlobalFilter🌲</h4>\n<p>全局过滤器的作用也是处理一切进入网关的请求和微服务响应，与 GatewayFilter 的作用一样。</p>\n<p>区别在于 GatewayFilter 通过配置定义，处理逻辑是固定的。而 GlobalFilter 的逻辑需要自己写代码实现可操作性更高。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ClobalFilter</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   * 处理当前请求，有必要的话通过 &#123;@link GatewayFilterChain&#125; 将请求交给下一个过滤器处理</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   * @param exchange 请求上下文，里面可以获取 Request，Response 等信息</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   * @param chain 用来把请求委托给下一个过滤器</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   * @return &#123;@code Mono&lt;Void>&#125; 返回标示当前过滤器业务结束</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">Mono</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerWebExchange</span> exchange<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GatewayFilterChain</span> chain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"6621-代码案例\"><a class=\"markdownIt-Anchor\" href=\"#6621-代码案例\">#</a> 6.6.2.1、代码案例🌴</h5>\n<p><strong>定义全局过滤器，拦截并判断用户身份</strong>.</p>\n<p>需求：定义全局过滤器，拦截请求，判断请求的参数是否满足下面条件：</p>\n<ul>\n<li>参数中是否有 authorization</li>\n<li>authorization 参数值是否为 admin</li>\n</ul>\n<p>如果同时满足则放行，否则拦截</p>\n<p>在 gateway 服务中创建一个 AuthorizeFilter 类实现 GlobalFilter 接口并重写过滤器方法来达到自己的目的</p>\n<p>目的：请求头有 authorization=admin 的信息则可以访问网关后的服务，否则拦截</p>\n<p>@Order：配置多个过滤器的执行优先级 21 亿到负 21 亿  数值越小优先级越高</p>\n<p>也可以实现 Ordered 并重写 getOrder 函数来实现多过滤器执行优先级</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GatewayFilterChain</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GlobalFilter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Order</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>reactive<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerHttpRequest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MultiValueMap</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerWebExchange</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">reactor<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Mono</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @2023/10/719:53</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// @Order：设置多个过滤器执行的优先级顺序，可以通过注解也可以通过方法</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token annotation punctuation\">@Order</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorizeFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">GlobalFilter</span><span class=\"token comment\">/*, Ordered*/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Mono</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerWebExchange</span> exchange<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GatewayFilterChain</span> chain<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 1. 获取请求参数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">ServerHttpRequest</span> request <span class=\"token operator\">=</span> exchange<span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">MultiValueMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> params <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 2. 获取参数中的 authorization 参数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">String</span> auth <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">getFirst</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"authorization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 3. 判断参数值是否等于 admin</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">// 4. 是，放行</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">return</span> chain<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>exchange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 5. 否拦截</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// 5.1 设置状态码返回给用户</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        exchange<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNAUTHORIZED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">// 5.2 拦截请求</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> exchange<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setComplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    重写执行过滤器优先级的方法</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    @Override</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    public int getOrder () &#123;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        return -1;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问 uri：<a href=\"http://127.0.0.1:10010/user/1\">http://127.0.0.1:10010/user/1</a></p>\n<p>次 uri 没有写在请求头信息 authorization=admin</p>\n<p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072014686.png\" alt=\"image-20231007201452411\"></p>\n<p>由于访问被拦截所以服务在 idea 中控制台没有打印任何请求的响应数据</p>\n<p>这次携带上请求头信息 authorization=admin 再进行访问 uri：<a href=\"http://127.0.0.1:10010/user/1?authorization=admin\">http://127.0.0.1:10010/user/1?authorization=admin</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072015402.png\" alt=\"image-20231007201545206\"></p>\n<p>访问成功！</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>\n<p>全局过滤器的作用是什么？</p>\n<p>对所有路由都生效的过滤器，并且可以自定义处理逻辑</p>\n</li>\n<li>\n<p>实现全局过滤器的步骤？</p>\n<ol>\n<li>实现 GlobalFilter 接口</li>\n<li>添加 @Order 注解或实现 Ordered 接口</li>\n<li>编写处理逻辑</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"663-过滤器执行顺序\"><a class=\"markdownIt-Anchor\" href=\"#663-过滤器执行顺序\">#</a> 6.6.3、过滤器执行顺序🌲</h4>\n<p>请求进入网关会碰到三类过滤器：当前路由的过滤器，DefaultFilter，GlobalFilter</p>\n<p><font color='red'>请求路由后</font>，会将当前路由过滤器和 DefaultFilter，GlobalFilter，合并到一个过滤器链 (集合) 中，排序后依次执行每个过滤器</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072025396.png\" alt=\"image-20231007202537098\"></p>\n<p>网关中所有过滤器最终都是 GatewayFilter 类型，既然是同一种类型那就可以存到一个集合中去做排序了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072029369.png\" alt=\"image-20231007202943934\"></p>\n<p>新的问题是，怎么排序呢？</p>\n<ul>\n<li>每一个过滤器都必须指定一个 int 类型的 order 值，<mark>order 值越小，优先级越高，执行顺序越靠前</mark>。</li>\n<li>GlobalFilter 通过实现 Ordered 接口，或者添加 @Order 注解来指定 order 值，由我们自己指定</li>\n<li>路由过滤器和 defaultFilter 的 order 由 Spring 指定，默认是按照声明顺序从 1 递增。</li>\n<li><font color='red'>当过滤器的 order 值一样时</font>，会按照 defaultFilter &gt; 路由过滤器 &gt; GlobalFilter 的顺序执行。</li>\n</ul>\n<p>默认按照声明顺序从 1 递增的解释：</p>\n<blockquote>\n<p>每个过滤器声明时有一个 order 值标记每加一个就会递增 order 值，而且路由过滤器和 defaultFilter 两个 order 是分开的，还有自定义的 GlobalFilter 我们自己设置 order 值也可能会一样，值都冲突了该怎么排序呢？</p>\n</blockquote>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                          </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可   </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">-</span> AddRequestHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">-</span> AxxxHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">-</span> AxxxHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">default-filters</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 默认过滤器，会对所有的路由请求都生效</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">-</span> AddRequestHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">-</span> AxxxHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">-</span> AxxxHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># order 3</span></pre></td></tr></table></figure><p>可以参考下面几个类的源码来查看：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072041796.png\" alt=\"image-20231007204141622\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>路由过滤器，defaultFilter，全局过滤器的执行顺序？\n<ol>\n<li>order 值越小，优先级越高</li>\n<li>当 order 值一样时，顺序是 defaultFilter 最先，然后是局部的路由过滤器，最后是全局过滤器</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"67-跨域问题处理\"><a class=\"markdownIt-Anchor\" href=\"#67-跨域问题处理\">#</a> 6.7、跨域问题处理🌳</h3>\n<blockquote>\n<p>在学习前后端分离项目时已经学习过了解决跨域问题，那为什么在微服务中还要学习跨域问题呢？</p>\n<p>这是因为在微服务中所有的请求都要先经过网关再到微服务，也就是说跨域请求你不需要在每个微服务里都去处理。仅仅在网关处理就可以了，但是网关又跟我们以前实现不一样，网关是基于 WebFlux 实现的，没有 Servlet 相关的 API 因此我们以前所学的解决方案不一定能够适用。</p>\n</blockquote>\n<p>跨域：域名不一致就是跨域，主要包括：</p>\n<ul>\n<li>域名不同：<a href=\"http://www.taobao.xn--comwww-k76j.taobao.xn--orgwww-k76j.jd.xn--commiaosha-jh7q.js.com\">www.taobao.com 和 www.taobao.org 和 www.jd.com 和 miaosha.js.com</a></li>\n<li>域名相同，端口不同：localhost:8080 和 loclahost:8081</li>\n<li>但是我们前面学习一直用的 8080 访问 8081 端口的数据就没有出现什么问题啊这是怎么回事呢？</li>\n</ul>\n<p><strong>原因</strong>：跨域问题：<mark>浏览器禁止</mark>请求的发起者与服务端发生跨域<mark> ajax 请求</mark>，请求被浏览器拦截的问题</p>\n<p>order-service 和 user-service 和浏览器没有关系，也没有用到 ajax 所以不会出现跨域问题</p>\n<p><mark>解决方案</mark>：CORS</p>\n<h4 id=\"671-演示案例\"><a class=\"markdownIt-Anchor\" href=\"#671-演示案例\">#</a> 6.7.1、演示案例🌲</h4>\n<p>前端页面</p>\n<p>index.html</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ie=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/axios/dist/axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:10010/user/1?authorization=admin\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>访问页面后查看浏览器控制台的打印信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072111173.png\" alt=\"image-20231007211114669\"></p>\n<p>这里有严重的问题因为 gateway 服务配置文件允许跨域的请求不可能是上图中 uri 的样子，我们需要使用一个服务器启动页面然后将 uri 允许跨域请求即可，比如我下面是使用 tomcat 启动的这个页面端口号为：8898</p>\n<p>可以看到报错了说是跨域问题</p>\n<p><strong>网关处理跨域采用的同样是 CORS 方案，并且只需要简单配置即可实现</strong>：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#=========== 这些配置让网关能够联系上 nacos 实现服务注册和发现 ====</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10010</span> <span class=\"token comment\"># 网关端口                              #||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gateway <span class=\"token comment\"># 服务名称                           #||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>                                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址          #||</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#========================= 网关路由配置 =====================</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span>                                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 网关路由配置                              ||</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> user_service <span class=\"token comment\"># 路由 id，自定义，只要唯一即可    ||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># uri 有两种方式的写法                             ||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># uri: http://127.0.0.1:8081 # 路由的目标地址 http 就是固定地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//userservice <span class=\"token comment\"># 路由的目标地址 lb (LoadBalance) 就是负载均衡，后面跟服务名称</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 路由断言，也就是判断请求是否符合路由规则的条件</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/user/<span class=\"token important\">**</span> <span class=\"token comment\"># 这个是按照路径匹配，只要以 /user/ 开头就符合要求</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#          filters: # 过滤器</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#            - AddRequestHeader=Truth,Itcast is freaking awesome! # 添加请求头</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> order_service                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> lb<span class=\"token punctuation\">:</span>//orderservice                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span>                                  <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">-</span> Path=/order/<span class=\"token important\">**</span>                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token comment\"># 配置断言规则是在 2037 年之后才能访问</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">-</span> Before=2037<span class=\"token punctuation\">-</span>01<span class=\"token punctuation\">-</span>20T17<span class=\"token punctuation\">:</span>42<span class=\"token punctuation\">:</span>47.789<span class=\"token punctuation\">-</span>07<span class=\"token punctuation\">:</span>00<span class=\"token punctuation\">[</span>America/Denver<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token key atrule\">default-filters</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">-</span> AddRequestHeader=Truth<span class=\"token punctuation\">,</span>Itcast is freaking awesome<span class=\"token tag\">!</span> <span class=\"token comment\"># 添加请求头</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#=========================== 全局的跨域处理 =============================</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token key atrule\">globalcors</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 全局的跨域处理                                    #||</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token comment\"># ajax 采用的是 cors 方案，cors 是浏览器去问服务器让不让这个请求跨域，     ||</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token comment\"># 但是这个请求方式是  option，默认情况下这种请求会被网关拦截的，而加上这个配置就是不拦截           # option 请求，这样 cors 请求就能正常发出了。                         ||</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token key atrule\">add-to-simple-url-handler-mapping</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 解决 options 请求被拦截问题</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token key atrule\">corsConfigurations</span><span class=\"token punctuation\">:</span>                                        <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token key atrule\">'[/**]'</span><span class=\"token punctuation\">:</span>                                                 <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token key atrule\">allowedOrigins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 允许哪些网站的跨域请求                   #||</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>              <span class=\"token comment\"># - \"http://localhost:8090\"                            #||</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token punctuation\">-</span> <span class=\"token string\">\"http://localhost:8898\"</span>                    <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token key atrule\">allowedMethods</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 允许的跨域 ajax 的请求方式                #||</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>              <span class=\"token punctuation\">-</span> <span class=\"token string\">\"GET\"</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>              <span class=\"token punctuation\">-</span> <span class=\"token string\">\"POST\"</span>                                             <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>              <span class=\"token punctuation\">-</span> <span class=\"token string\">\"DELETE\"</span>                                           <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>              <span class=\"token punctuation\">-</span> <span class=\"token string\">\"PUT\"</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>              <span class=\"token punctuation\">-</span> <span class=\"token string\">\"OPTIONS\"</span>                                          <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token key atrule\">allowedHeaders</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span> <span class=\"token comment\"># 允许在请求中携带的头信息             #||</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token key atrule\">allowCredentials</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否允许携带 cookie              #||</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token key atrule\">maxAge</span><span class=\"token punctuation\">:</span> <span class=\"token number\">360000</span> <span class=\"token comment\"># 这次跨域检测的有效期                     #||</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#====================================================================</span></pre></td></tr></table></figure><p>重启 Gateway 服务然后再访问 uri：<a href=\"http://localhost:8898/index.html\">http://localhost:8898/index.html</a></p>\n<p>配置文件中本机地址是 localhost 就不要用 127.0.0.1 这样也会被跨域拦截</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310072130838.png\" alt=\"image-20231007213052264\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>CORS 跨域要配置的参数包括哪几个？</p>\n<ul>\n<li>允许哪些域名跨域？</li>\n<li>允许哪些请求头？</li>\n<li>允许哪些请求方式？</li>\n<li>是否允许使用 cookie？</li>\n<li>有效期是多久？</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "title": "三、Ribbon负载均衡",
            "date_published": "2024-04-02T10:00:51.064Z",
            "content_html": "<h1 id=\"三-ribbon负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#三-ribbon负载均衡\">#</a> 三、Ribbon 负载均衡🎄</h1>\n<ul>\n<li>负载均衡原理</li>\n<li>负载均衡策略</li>\n<li>懒加载</li>\n</ul>\n<h3 id=\"31-负载均衡流程\"><a class=\"markdownIt-Anchor\" href=\"#31-负载均衡流程\">#</a> 3.1、负载均衡流程🌳</h3>\n<p>直接通过 http:userservice/user/1 无法访问。并<font color='red'>不是</font>一个   <font color='red'>真实可用的地址</font>.</p>\n<p>当 order-service 发起请求时，是无法到达 user-service 服务的，因此一定会有人将请求拦截下来做一下处理找到真是 ip 和端口才行</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050854814.png\" alt=\"image-20231005085431639\"></p>\n<p>order-service 发送请求被 Ribbon 拦截它得到请求指定的是哪个服务 (userservice)，然后就去找 eureka 拉取 userservice 的服务列表。</p>\n<p>拿到服务列表后再进行负载均衡挑选一个进行请求</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041945961.png\" alt=\"image-20231004194527737\"></p>\n<p>具体 Ribbon 什么时候拦截处理这些请求的具体看源码：</p>\n<p>在 RestTemplate 的 Bean 中添加的 @LoadBalanced 注解就代表将来 RestTemplate 发起的请求要被 Ribbon 进行拦截和处理了。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@LoadBalanced</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么拦截的动作是谁来完成的呢？</p>\n<p>是 LoadBalancerInterceptor 来完成的。它实现了一个接口 ClientHttpRequestInterceptor 这个接口是干什么呢的？</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoadBalancerInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ClientHttpRequestInterceptor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><p>ClientHttpRequestInterceptor 它会去拦截由客户端发起的 http 请求，而 RestTemplate 不正是一个发 http 请求的客户端吗，所以就会被这个拦截器所拦截</p>\n<p>ClientHttpRequestInterceptor 这个接口中定义的一个方法为：intercept</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ClientHttpResponse</span> <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ClientHttpRequestExecution</span> execution<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>那么我们回到它的实现类 LoadBalancerInterceptor 这个拦截器既然实现了 ClientHttpRequestInterceptor 接口就一定会实现 intercept 方法</p>\n<p>我们在重写方法处打上断点 * 表示断点</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientHttpResponse</span> <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ClientHttpRequestExecution</span> execution<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">*</span>   <span class=\"token class-name\">URI</span> originalUri <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">String</span> serviceName <span class=\"token operator\">=</span> originalUri<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span>serviceName <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Request URI does not contain a valid hostname: \"</span> <span class=\"token operator\">+</span> originalUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientHttpResponse</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loadBalancer<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>requestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> execution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们可以认为由 RestTemplate 发起的请求就一定会被 intercept 拦截</p>\n<p>开启 debug 访问 url：<a href=\"http://127.0.0.1:8080/order/101\">http://127.0.0.1:8080/order/101</a></p>\n<p>就会执行到断点处</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050930000.png\" alt=\"image-20231005093021344\"></p>\n<p>证明这个请求确实被拦截了，获取请求地址拿到的是 http://userservice/user/1 这不就是哪个无法直接访问的地址吗</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050932340.png\" alt=\"image-20231005093231384\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientHttpResponse</span> <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ClientHttpRequestExecution</span> execution<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 获取请求地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">URI</span> originalUri <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// http://userservice/user/1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 获取主机名 (不是指本地主机名) url 中的主机名也就是服务名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 拿到服务名称后找 eureka 拉取服务列表信息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">String</span> serviceName <span class=\"token operator\">=</span> originalUri<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// serviceName: userservice</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 得到服务名称后怎么完成拉取的呢</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span>serviceName <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Request URI does not contain a valid hostname: \"</span> <span class=\"token operator\">+</span> originalUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// Ribbon 的负载均衡客户端去执行</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loadBalancer<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>requestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> execution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>进入 execute 方法，执行 getLoadBalancer 得到一个对象，这个对象名为：DynamicServerListLoadBalancer 就是动态服务列表负载均衡器</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050945434.png\" alt=\"image-20231005094542640\"></p>\n<p>在服务列表中可以看到 8081，8082 成功的被拉取到了已经。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050947059.png\" alt=\"image-20231005094741094\"></p>\n<p>所以 getLoadBalancer 这个方法就是在根据服务名称找 eureka 拉取服务列表，下一步就是负载均衡了</p>\n<p>进入 getServer 看看是怎么做的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050949067.png\" alt=\"image-20231005094951601\"></p>\n<p>rule (规则) 在 DynamicServerListLoadBalancer 中选择一个那么选择时是有一种规则来选的那么这个 rule 是个什么类型对象呢</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050953275.png\" alt=\"image-20231005095131490\"></p>\n<p>叫做 IRule (I 就是接口的意思 Rule 就是规则的意思) 那么就是一个规则的接口的意思，那它一定会有实现类通过 ctrl+h 查看实现类</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050953846.png\" alt=\"image-20231005095318356\"></p>\n<p>它的实现类都有以下几个</p>\n<p>RandomRule：随机规则</p>\n<p>RoundRobinRule：轮询调度</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310050955516.png\" alt=\"image-20231005095544615\"></p>\n<p>而它默认的负载均衡规则：ZoneAvoidanceRule</p>\n<p>那么看到这里我们就清楚了负载均衡的策略是由 IRule 接口来决定的</p>\n<p>然后进行返回 getServer 拿到一个服务为 8081，拿到服务信息了就可以用真是的 ip，端口来替代原来的 http://userservice/user/1 服务名称。去发送真实的请求了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051001998.png\" alt=\"image-20231005095838892\"></p>\n<p><strong>总结一下</strong>：</p>\n<p>当请求进入 Ribbon 后会怎么去处理呢，请求会被一个拦截器 拦截名为：LoadBalancerInterceptor 拦截后会得到请求的服务名称 userservice 然后将服务名称交给 RibbonLoadBalancerClient 它再将服务交给 DynamicServerListLoadBalancer 它会去 eureka 中拉取服务列表信息，然后从服务列表中挑选一个而这个负载均衡是 IRule 来做的根据规则挑一个出来选中了 8081 服务，将值返回给 RibbonLoadBalancerClient 然后用这个 ip，端口替换服务名称得到真实的请求地址最后就请求到了 8081 服务</p>\n<p>这就是整个 Ribbon 工作的流程了！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310042032809.png\" alt=\"image-20231004203247209\"></p>\n<h4 id=\"311-irule接口实现\"><a class=\"markdownIt-Anchor\" href=\"#311-irule接口实现\">#</a> 3.1.1、IRule 接口实现🌲</h4>\n<p>IRule 接口决定了负载均衡的策略，下面详细学习 IRule 这个接口都有哪些实现以及自己如何修改它的每个实现</p>\n<p>Ribbon 的负载均衡规则是一个叫做 IRule 的接口来定义的，每一个子接口都是一种规则：</p>\n<center>IRule接口继承关系结构图</center>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310042036620.png\" alt=\"image-20231004203629391\"></p>\n<h3 id=\"32-负载均衡策略\"><a class=\"markdownIt-Anchor\" href=\"#32-负载均衡策略\">#</a> 3.2、负载均衡策略🌳</h3>\n<table>\n<thead>\n<tr>\n<th>内置负载均衡规则类</th>\n<th>规则描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>RoundRobinRule</td>\n<td>简单轮询服务列表来选择服务器。它是 Ribbon 默认的负载均衡规则</td>\n</tr>\n<tr>\n<td>AvailabilityFilteringRule</td>\n<td>对以下两种服务器进行忽略：<br />(1) 在默认情况下，这台服务器如果 3 次连接失败，这台服务器就会被设置为 “短路” 状态。短路状态将<br />持续 30 秒，如果再次连接失败，短路的持续就会几何级的增加。<br />(2) 并发数过高的服务器。如果一个服务器的并发连接数过高，配置了 AvailabilityFilterngRule 规则的客户端也会将其忽略。并发连接数的上限，可以由客户端的<clientName></clientConfigNameSpace>.ActiveConnectionsLimit 属性进行配置。</td>\n</tr>\n<tr>\n<td>WeightedResponseTimeRule</td>\n<td>为每一个服务器赋予一个权重值。服务器响应时间越长，这个服务器的权重就越小。这个规则会随机选择服务器，这个权重值会影响服务器的选择。</td>\n</tr>\n<tr>\n<td><font color='red'>ZoneAvoidanceRule</font></td>\n<td>以区域可用的服务器为基础进行服务器的选择。使用 Zone 对服务器进行分类，这个 Zone 可以理解为一个机房，一个机架等。而后再对 Zone 内的多个服务做轮询。</td>\n</tr>\n<tr>\n<td>BestAvailableRule</td>\n<td>忽略哪些短路的服务器，并选择并发数较低的服务器。</td>\n</tr>\n<tr>\n<td>RandomRule</td>\n<td>随机选择一个可用的服务器。</td>\n</tr>\n<tr>\n<td>RetryRule</td>\n<td>重试机制的选择逻辑。</td>\n</tr>\n</tbody>\n</table>\n<p>通过定义 IRule 实现可以修改负载均衡规则，有两种方式：</p>\n<p>1、代码方式：在 order-service 中的 OrderAppliction 类中，定义一个新的 IRule</p>\n<p>这样就会让负载均衡规则从轮询变成随机规则</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">IRule</span> <span class=\"token function\">randomRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、配置文件方式：在 order-service 的 application.yml 文件中，添加新的配置也可以修改规则：</p>\n<p>先指定服务名称，再去执行负载均衡规则因此这种配置方案它是针对某个微服务而言的。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">userservice</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">ribbon</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">NFLoadBalancerRuleClassName</span><span class=\"token punctuation\">:</span> com.netflix.loadbalancer.RandomRule <span class=\"token comment\"># 负载均衡规则</span></pre></td></tr></table></figure><h3 id=\"33-饥饿加载\"><a class=\"markdownIt-Anchor\" href=\"#33-饥饿加载\">#</a> 3.3、饥饿加载🌳</h3>\n<p><mark>Ribbon 默认是采用懒加载</mark>，即第一次访问时才会去创建 LoadBalanceClient，请求时间会很长。</p>\n<p>而饥饿加载则会在<mark>项目启动时创建</mark>，降低第一次访问时的耗时，通过下面配置开启饥饿加载：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">userservice</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 服务名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">ribbon</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 负载均衡规则</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">eager-load</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启饥饿加载</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">clients</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 指定对 userservice 这个服务饥饿加载</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\"># 如果多个服务需要饥饿加载则写如下格式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\"># clients:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">#     - userservice</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">#     - 服务名 1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">#     - 服务名 2</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>Ribbon 负载均衡规则\n<ul>\n<li>规则接口是 IRule</li>\n<li>默认实现是 ZoneAvoidanceRule，根据 zone 选择服务列表，然后轮询</li>\n</ul>\n</li>\n<li>负载均衡自定义方式\n<ul>\n<li>代码方式：配置灵活，但修改时需要重新打包发布</li>\n<li>配置方式：直观，方便，无需重新打包发布，但是无法做全局配置</li>\n</ul>\n</li>\n<li>饥饿加载\n<ul>\n<li>开启饥饿加载</li>\n<li>指定饥饿加载的微服务名称</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/SpringCloud%E5%85%A5%E9%97%A8/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/SpringCloud%E5%85%A5%E9%97%A8/",
            "title": "一、SpringCloud入门|介绍",
            "date_published": "2024-04-02T10:00:51.057Z",
            "content_html": "<h2 id=\"零-springcloud\"><a class=\"markdownIt-Anchor\" href=\"#零-springcloud\">#</a> 零、SpringCloud🎄</h2>\n<h3 id=\"01-什么是微服务\"><a class=\"markdownIt-Anchor\" href=\"#01-什么是微服务\">#</a> 0.1、什么是微服务？🌳</h3>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040903119.png\" alt=\"image-20231004090313859\"></p>\n<p>微服务做的第一件事就是<mark>拆分</mark>。</p>\n<p><font color='red'>因为传统的单体架构，所有的业务功能全部都写在一起随着业务越来越复杂代码也越来越耦合将来想要升级维护就会很困难</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040905977.png\" alt=\"image-20231004090509652\"></p>\n<h3 id=\"02-拆分\"><a class=\"markdownIt-Anchor\" href=\"#02-拆分\">#</a> 0.2、拆分🌳</h3>\n<p>所以需要进行<mark>拆分</mark>.</p>\n<p>微服务在做拆分的时候会根据<mark>业务功能模块把一个单体的项目拆分成许多个独立的项目</mark>，<mark>每个项目完成一部分业务功能</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040909340.png\" alt=\"image-20231004090908822\"></p>\n<h3 id=\"03-服务集群\"><a class=\"markdownIt-Anchor\" href=\"#03-服务集群\">#</a> 0.3、服务集群🌳</h3>\n<p>将来<mark>独立开发</mark>和<mark>部署</mark>，我们把一个<mark>独立的项目</mark>称为一个<mark>服务</mark>.</p>\n<p>一个大型的互联网项目会包含数百甚至上千个服务最终形成一个<mark>服务集群</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040910853.png\" alt=\"image-20231004091001079\"></p>\n<h3 id=\"04-调用关系\"><a class=\"markdownIt-Anchor\" href=\"#04-调用关系\">#</a> 0.4、调用关系🌳</h3>\n<p>而<strong>一个业务往往就需要有多个服务共同来完成</strong>。</p>\n<p><font color='red'>比如说一个请求来了可能会去调用服务 A，然后 A 调用了服务 B，B 调用了 C。当业务越来越多越来越复杂的时候这些服务中间的关系就会越来越复杂</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040911835.png\" alt=\"image-20231004091151122\"></p>\n<p>这么复杂的调用关系让人去记录和维护这是不可能的，那怎么办呢？</p>\n<h3 id=\"05-注册中心\"><a class=\"markdownIt-Anchor\" href=\"#05-注册中心\">#</a> 0.5、注册中心🌳</h3>\n<p>在微服务中就会有一个组件叫做 “<mark>注册中心</mark>”</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040912887.png\" alt=\"image-20231004091258876\"></p>\n<p>它可以去<mark>记录</mark>微服务中<mark>每一个微服务</mark>的<strong> IP</strong>，<strong>端口</strong>，以及<strong>可以干什么事儿这些信息</strong>.</p>\n<p><mark>当有一个服务调用另外的服务时</mark>它<font color='red'>不需要自己去记录对方的 IP</font>了<mark>直接找注册中心</mark>，从<mark>注册中心获取对应的 服务信息</mark>.</p>\n<p>随着服务越来越多，每个服务都有自己的配置文件，将来如果要更改配置难道需要我们逐一去修改吗，这样太麻烦了</p>\n<h3 id=\"06-配置中心\"><a class=\"markdownIt-Anchor\" href=\"#06-配置中心\">#</a> 0.6、配置中心🌳</h3>\n<p>所以在微服务中还有一个 “<mark>配置中心</mark>”</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040916028.png\" alt=\"image-20231004091637687\"></p>\n<p>它可以去<mark>管理整个服务群里成千上百的配置</mark>。<strong>如果有配置需要变更直接找</strong><mark>配置中心</mark><strong>就可以了</strong>，它会通知相关的微服务实现<mark>配置的热更新</mark>。当我们微服务运行起来以后用户就可以访问我们了。</p>\n<h3 id=\"07-网关组件\"><a class=\"markdownIt-Anchor\" href=\"#07-网关组件\">#</a> 0.7、网关组件🌳</h3>\n<p>但是！这时还需要一个 <mark>网关组件</mark>.</p>\n<p>网关就像小区的看门大爷，不是谁都随便进出的</p>\n<p><mark>网关一方面就是对用户身份做校验</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040920302.png\" alt=\"image-20231004092022457\"></p>\n<p><mark>另一方面可以将用户的请求路由到我们具体的服务，在路由过程中可以做<strong>负载均衡</strong></mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040921256.png\" alt=\"image-20231004092134757\"></p>\n<p>这时服务接收到用户的请求去处理业务该访问数据库时就访问数据库，以后把查询到的数据返回给用户</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040922644.png\" alt=\"image-20231004092258211\"></p>\n<p>数据库也可能是<strong>集群</strong>但是没有用户多，可能会扛不住因此还加入了 <mark>缓存</mark>.</p>\n<h3 id=\"08-缓存\"><a class=\"markdownIt-Anchor\" href=\"#08-缓存\">#</a> 0.8、缓存🌳</h3>\n<p>缓存是什么</p>\n<p><mark>缓存就是把数据库查询出常用的数据存放到内存当中</mark>，内存查询效率比数据库快很多，而<font color='red'>缓存还不能是单体缓存为了做高并发还是分布式缓存</font>。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040925055.png\" alt=\"image-20231004092528106\"></p>\n<p>用户请求先到<mark>缓存</mark>，<mark>缓存未命中了再去查数据库</mark>.</p>\n<h3 id=\"09-分布式搜索功能\"><a class=\"markdownIt-Anchor\" href=\"#09-分布式搜索功能\">#</a> 0.9、分布式搜索功能🌳</h3>\n<p>一些<mark>海量</mark>的<mark>复杂</mark>的<mark>搜索统计和分析缓存做不了</mark>。这个时候我们需要用到<mark>分布式搜索功能</mark>.</p>\n<p>那<mark>数据库主要的职责就是写数据操作</mark>还有<mark>事务安全类型</mark>要求较高的一些数据存储</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040928230.png\" alt=\"image-20231004092815751\"></p>\n<h3 id=\"010-异步消息队列\"><a class=\"markdownIt-Anchor\" href=\"#010-异步消息队列\">#</a> 0.10、异步消息队列🌳</h3>\n<p>最后在微服务中还需要一种 <mark>异步通信的消息队列</mark> 组件。为什么呢？</p>\n<p>对于<mark>分布式的服务或者在微服务里面它的业务往往会跨越多个服务</mark>：<font color='red'>一个请求来了先调用请求 A，A 再调 B，B 再调 C 整个业务的链路就很长，那调用时长就会等于每个服务执行时长之和性能会有一定的下降</font>.</p>\n<p><strong>异步请求意思就是，请求来了调用服务 A，服务 A 不是去调用 B 和 C 而是通知你们，通知 B 和 C 你们去干活儿去，而服务 A 直接就结束了。这样业务链路就变短了响应时间也就缩短了那么吞吐能力也就变强了。所以异步通信可以大大提高我们服务的并发</strong>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040933174.png\" alt=\"image-20231004093342606\"></p>\n<h3 id=\"011-异常排除\"><a class=\"markdownIt-Anchor\" href=\"#011-异常排除\">#</a> 0.11、异常排除🌳</h3>\n<p>如果，这样如此<font color='red'>庞大</font>和<font color='red'>复杂</font>的一个服务在运行的过程当中如果出现了什么问题好排查吗？<font color='red'>不好排查！</font>.</p>\n<p>所以在微服务当中我们还会引入两个新的组件来解决这种服务的 <strong>异常定位</strong>.</p>\n<p>1 <strong>分布式日志服务</strong>。</p>\n<p>它可以去<mark>统计整个集群当中成千上百的服务它们的运行日志</mark>，<mark>统一做一个存储统计分析</mark>。将来<mark>出现问题就比较好定位了</mark>.</p>\n<p>2 <strong>系统监控和链路追踪</strong>。</p>\n<p>可以实时<mark>监控整个集群中每一个服务节点的运行状态</mark>，<mark>CPU 负载</mark>，<mark>内存的占用</mark>等等的情况，<mark>一旦出现任何问题直接可以定位到具有的某一个方法展现信息</mark>，那么就<mark>可以很快定位到异常所在位置了</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040939839.png\" alt=\"image-20231004093935355\"></p>\n<h3 id=\"012-自动化部署\"><a class=\"markdownIt-Anchor\" href=\"#012-自动化部署\">#</a> 0.12、自动化部署🌳</h3>\n<p>Jenkns ：对项目进行自动化编译</p>\n<p>Docker ：打包，形成镜像</p>\n<p>kubernetes 和 RANCHER 实现自动化部署</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040942711.png\" alt=\"image-20231004094218305\"></p>\n<p><strong>这一套就可以称之为</strong>：<mark>持续集成</mark>。<font color='red'>结合微服务这些技术，再加上持续集成那么这才是完整的微服务技术栈</font>.</p>\n<h2 id=\"️如何学习\"><a class=\"markdownIt-Anchor\" href=\"#️如何学习\">#</a> ⚡️如何学习？🌟</h2>\n<p>1、<strong>微服务治理</strong>🌳</p>\n<p>2、<strong>缓存技术</strong>🌳</p>\n<p>3、<strong>异步通信 MQ 相关技术</strong>🌳</p>\n<p>4、<strong>分布式搜索技术</strong>🌳</p>\n<p>5、<strong>持续集成 DevOps 相关技术</strong>🌳</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310040951444.png\" alt=\"image-20231004095140699\"></p>\n<h2 id=\"一-认识微服务\"><a class=\"markdownIt-Anchor\" href=\"#一-认识微服务\">#</a> 一、认识微服务🎄</h2>\n<ul>\n<li>服务架构演变</li>\n<li>SpringCloud</li>\n</ul>\n<h3 id=\"11-服务架构演变\"><a class=\"markdownIt-Anchor\" href=\"#11-服务架构演变\">#</a> 1.1、服务架构演变🌳</h3>\n<h4 id=\"111-单体架构\"><a class=\"markdownIt-Anchor\" href=\"#111-单体架构\">#</a> 1.1.1、单体架构🌲</h4>\n<blockquote>\n<p>将业务的所有功能集中在一个项目中开发，打成一个包部署。</p>\n</blockquote>\n<h5 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点：</h5>\n<ul>\n<li>\n<p>架构简单</p>\n</li>\n<li>\n<p>部署成本低</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041045582.png\" alt=\"image-20231004104442050\"></p>\n</li>\n</ul>\n<h5 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\">#</a> 缺点：</h5>\n<ul>\n<li>耦合度高</li>\n<li>不适合做大型项目开发</li>\n</ul>\n<p>比如说有一个商城项目里面的功能肯定很多有很多模块，开发这种项目时。因为是单体架构所以不用去搞非常复杂的架构设计，只需要创建一个项目，然后有功能就往里面加代码。再有功能再加代码，不断的堆积代码就 OK 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041042597.png\" alt=\"image-20231004104206028\"></p>\n<h4 id=\"112-分布式架构\"><a class=\"markdownIt-Anchor\" href=\"#112-分布式架构\">#</a> 1.1.2、分布式架构🌲</h4>\n<blockquote>\n<p>根据业务功能对系统进行拆分，每个业务模块作为独立项目开发，称为一个服务。</p>\n</blockquote>\n<h5 id=\"优点-2\"><a class=\"markdownIt-Anchor\" href=\"#优点-2\">#</a> 优点：</h5>\n<ul>\n<li>降低服务耦合</li>\n<li>有利于服务升级扩展</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041050054.png\" alt=\"image-20231004105033179\"></p>\n<blockquote>\n<p><strong>问题</strong>：</p>\n<p>因为做了服务的<mark>拆分</mark>，<mark>服务拆分的越多将来部署各方面也会越复杂</mark>，而且在拆分的过程中也会有一些问题，拆分好的机器为了保证高可用还要做集群，一旦拆分就会产生一个新的问题原来是单体项目的时候都是在一起用户下单的时候需要商品信息怎么办在商品功能里直接调 service 就完事儿了，因为是在<mark>一个项目里大家可以互相调用。但是现在做了拆分那就不行了</mark>，<mark>两服都是独立的机器不能互相调用了</mark>，<strong>除非从一个服务向另一个服务发送请求直接来调用服务，这种调用就叫</strong> “<mark>远程调用</mark>”</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041059941.png\" alt=\"image-20231004105902381\"></p>\n<h5 id=\"1121-分布式-架构要考虑的问题\"><a class=\"markdownIt-Anchor\" href=\"#1121-分布式-架构要考虑的问题\">#</a> 1.1.2.1、分布式 架构要考虑的问题：</h5>\n<ul>\n<li>服务拆分粒度如何？\n<ul>\n<li>怎么拆，那几个业务单独作为独立模块，哪些业务在一起呢</li>\n</ul>\n</li>\n<li>服务集群地址如何维护？\n<ul>\n<li>地址必须是方便调用的</li>\n</ul>\n</li>\n<li>服务之间如何实现远程调用？\n<ul>\n<li>跨服务调用</li>\n</ul>\n</li>\n<li>服务健康状态如何感知？\n<ul>\n<li>上百个服务调用如果某一个出现问题了就会发生阻塞 称之为 “级联失败”</li>\n</ul>\n</li>\n</ul>\n<p>人们在做分布式架构的时候一直在想办法解决这样的问题，因此也出现了各种各样的技术：WebService，ESB，Hession，Dubbo，SpringCloud 等等。</p>\n<p>但是近几年最火的莫过于 微服务方案了</p>\n<h4 id=\"113-微服务\"><a class=\"markdownIt-Anchor\" href=\"#113-微服务\">#</a> 1.1.3、微服务🌲</h4>\n<p>微服务是一种经过良好架构设计的<mark>分布式</mark>架构方案，微服务架构特征：</p>\n<ul>\n<li>\n<p><strong>单一职责</strong>：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责，避免重复业务开发</p>\n</li>\n<li>\n<p><strong>面向服务</strong>：微服务对外暴漏业务接口</p>\n</li>\n<li>\n<p><strong>自治</strong>：团队独立，技术独立，数据独立，部署独立</p>\n</li>\n<li>\n<p><strong>隔离性强</strong>：服务调用做好隔离，容错，降级，避免出现级联问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041123653.png\" alt=\"image-20231004112312974\"></p>\n</li>\n</ul>\n<h5 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结：</h5>\n<blockquote>\n<p>单体架构特点</p>\n<ul>\n<li>简单方便，高度耦合，扩展性差，适合小型项目。例如：学生管理系统</li>\n</ul>\n<p>分布式架构特点</p>\n<ul>\n<li>松耦合，扩展性好，但架构复杂，难度大。适合大型互联网项目，例如：京东，淘宝</li>\n</ul>\n<p><mark>微服务</mark>：一种良好的分布式架构方案</p>\n<ul>\n<li>优点：拆分粒度更小，服务更独立，耦合度更低</li>\n<li>缺点：架构非常复杂，运维，监控，部署难度提高</li>\n</ul>\n</blockquote>\n<h5 id=\"1131-微服务结构\"><a class=\"markdownIt-Anchor\" href=\"#1131-微服务结构\">#</a> 1.1.3.1、微服务结构🌲</h5>\n<p>微服务这种方案需要技术框架来落地，全球的互联网公司都在积极尝试自己的微服务落地技术。在国内最知名的就是 SpringCloud 和阿里巴巴的 Dubbo</p>\n<p>无论是 SpringCloud 还是 Dubbo 它们实现的功能基本是一致的</p>\n<p>首先它们需要去做<mark>微服务的拆分形成微服务集群</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041132761.png\" alt=\"image-20231004113225360\"></p>\n<p>而集群中每个服务都要遵循单一职责的原则并且要<mark>面向服务对外暴漏接口</mark>，这样<mark>服务之间就可以互相调用了</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041133120.png\" alt=\"image-20231004113330486\"></p>\n<p>只不过不同技术去实现接口可能会有一些差异</p>\n<h5 id=\"1132-微服务技术对比\"><a class=\"markdownIt-Anchor\" href=\"#1132-微服务技术对比\">#</a> 1.1.3.2、微服务技术对比🌲</h5>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Dubbo</th>\n<th>SpringCloud</th>\n<th>SpringCloudAlibaba</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>注册中心</td>\n<td>zookeeper，Redis</td>\n<td>Eureka，Consul</td>\n<td>Nacos，Eureka</td>\n</tr>\n<tr>\n<td>服务远程调用</td>\n<td>Dubbo 协议</td>\n<td>Feign (http 协议)</td>\n<td>Dubbo，Feign</td>\n</tr>\n<tr>\n<td>配置中心</td>\n<td>无</td>\n<td>SpringCloudConfig</td>\n<td>SpringCloudConfig，Nacos</td>\n</tr>\n<tr>\n<td>服务网关</td>\n<td>无</td>\n<td>SpringCloudGateway，Zuul</td>\n<td>SpringCloudGateway，Zuul</td>\n</tr>\n<tr>\n<td>服务监控和保护</td>\n<td>dubbo-admin，功能弱</td>\n<td>Hystrix</td>\n<td>Sentinel</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"1133-企业需求\"><a class=\"markdownIt-Anchor\" href=\"#1133-企业需求\">#</a> 1.1.3.3、企业需求🌲</h5>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041146882.png\" alt=\"image-20231004114622603\"></p>\n<h3 id=\"12-springcloud-img-srchttpsrawgithubusercontentcompigpigletsgoimeagesmaster202310041159005png-altimage-20231004115500484-stylezoom-50\"><a class=\"markdownIt-Anchor\" href=\"#12-springcloud-img-srchttpsrawgithubusercontentcompigpigletsgoimeagesmaster202310041159005png-altimage-20231004115500484-stylezoom-50\">#</a> 1.2、SpringCloud🌳 <img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041159005.png\" alt=\"image-20231004115500484\" style=\"zoom: 50%;\" /></h3>\n<blockquote>\n<p>SpringCloud 是目前国内使用最广泛的微服务框架。官网地址：<a href=\"https://spring.io/projects/spring-cloud\">https://spring.io/projects/spring-cloud</a></p>\n</blockquote>\n<ul>\n<li>SpringCloud 集成了各种微服务功能组件，并基于 SpringBoot 实现了这些组件的自动装配，从而提供了良好的开箱即用体验</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041158804.png\" alt=\"image-20231004115847487\"></p>\n<ul>\n<li>SpringCloud 与 SpringBoot 的版本兼容关系如下：</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310041200407.png\" alt=\"image-20231004120012308\"></p>\n",
            "tags": [
                "计算机学科",
                "介绍",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/SpringBoot%E6%95%B4%E5%90%88docker%E9%83%A8%E7%BD%B2xxl-job-2.3.1/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/SpringBoot%E6%95%B4%E5%90%88docker%E9%83%A8%E7%BD%B2xxl-job-2.3.1/",
            "title": "XXL-JOB介绍和使用",
            "date_published": "2024-04-02T10:00:51.055Z",
            "content_html": "<h1 id=\"一-xxl-job介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-xxl-job介绍\">#</a> 一、 XXL-JOB 介绍</h1>\n<p>XXL-JOB 是一个轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p>\n<p>官网：<a href=\"https://www.xuxueli.com/xxl-job/\">https://www.xuxueli.com/xxl-job/</a></p>\n<p>文档：<a href=\"https://www.xuxueli.com/xxl-job/#%E3%80%8A%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%B9%B3%E5%8F%B0XXL-JOB%E3%80%8B\">https://www.xuxueli.com/xxl-job/#《分布式任务调度平台 XXL-JOB》</a></p>\n<p>XXL-JOB 主要有调度中心、执行器、任务：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021141945.png\" alt=\"image-20231102114124616\"></p>\n<p><strong>调度中心：</strong></p>\n<p>​    负责管理调度信息，按照调度配置发出调度请求，自身不承担业务代码；</p>\n<p>​    主要职责为执行器管理、任务管理、监控运维、日志管理等</p>\n<p><strong>任务执行器：</strong></p>\n<p>​    负责接收调度请求并执行任务逻辑；</p>\n<p>​    只要职责是注册服务、任务执行服务（接收到任务后会放入线程池中的任务队列）、执行结果上报、日志服务等</p>\n<p>** 任务：** 负责执行具体的业务处理。</p>\n<p>调度中心与执行器之间的工作流程如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021142092.png\" alt=\"image-20231102114151941\"></p>\n<p><strong>执行流程：</strong></p>\n<p>​    1. 任务执行器根据配置的调度中心的地址，自动注册到调度中心</p>\n<p>​    2. 达到任务触发条件，调度中心下发任务</p>\n<p>​    3. 执行器基于线程池执行任务，并把执行结果放入内存队列中、把执行日志写入日志文件中</p>\n<p>​    4. 执行器消费内存队列中的执行结果，主动上报给调度中心</p>\n<p>​    5. 当用户在调度中心查看任务日志，调度中心请求任务执行器，任务执行器读取任务日志文件并返回日志详情</p>\n<hr>\n<h1 id=\"二-使用配置\"><a class=\"markdownIt-Anchor\" href=\"#二-使用配置\">#</a> 二、使用配置</h1>\n<p>执行命令拉取 xxl-job-2.3.1</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull xuxueli/xxl-job-admin:2.3.1</pre></td></tr></table></figure><p>拉取成功后，创建挂载配置路径：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-m</span> <span class=\"token number\">777</span> /root/tmp/xxl-job/data/applogs</pre></td></tr></table></figure><p>创建完成后在 /root/tem/xxl-job/ 目录中 创建 配置文件 application.properties</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021026700.png\" alt=\"image-20231102102637272\"></p>\n<p>配置内容如下：</p>\n<p>里面就更改下自己的 ip 地址和数据库账户和密码即可。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">### web</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>server.port=8080</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server.servlet.context<span class=\"token punctuation\">-</span>path=/xxl<span class=\"token punctuation\">-</span>job<span class=\"token punctuation\">-</span>admin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">### actuator</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>management.server.servlet.context<span class=\"token punctuation\">-</span>path=/actuator</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>management.health.mail.enabled=false</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">### resources</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>spring.mvc.servlet.load<span class=\"token punctuation\">-</span>on<span class=\"token punctuation\">-</span>startup=0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>spring.mvc.static<span class=\"token punctuation\">-</span>path<span class=\"token punctuation\">-</span>pattern=/static/<span class=\"token important\">**</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>spring.resources.static<span class=\"token punctuation\">-</span>locations=classpath<span class=\"token punctuation\">:</span>/static/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">### freemarker</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>spring.freemarker.templateLoaderPath=classpath<span class=\"token punctuation\">:</span>/templates/</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>spring.freemarker.suffix=.ftl</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>spring.freemarker.charset=UTF<span class=\"token punctuation\">-</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>spring.freemarker.request<span class=\"token punctuation\">-</span>context<span class=\"token punctuation\">-</span>attribute=request</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>spring.freemarker.settings.number_format=0.<span class=\"token comment\">##########</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">### mybatis</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>mybatis.mapper<span class=\"token punctuation\">-</span>locations=classpath<span class=\"token punctuation\">:</span>/mybatis<span class=\"token punctuation\">-</span>mapper/<span class=\"token important\">*Mapper.xml</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#mybatis.type-aliases-package=com.xxl.job.admin.core.model</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">### xxl-job, datasource</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>spring.datasource.url=jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//192.168.249.128<span class=\"token punctuation\">:</span>3306/xxl_job<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>spring.datasource.username=root</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>spring.datasource.password=dkx.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>spring.datasource.driver<span class=\"token punctuation\">-</span>class<span class=\"token punctuation\">-</span>name=com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">### datasource-pool</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>spring.datasource.type=com.zaxxer.hikari.HikariDataSource</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>spring.datasource.hikari.minimum<span class=\"token punctuation\">-</span>idle=10</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>spring.datasource.hikari.maximum<span class=\"token punctuation\">-</span>pool<span class=\"token punctuation\">-</span>size=30</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>spring.datasource.hikari.auto<span class=\"token punctuation\">-</span>commit=true</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>spring.datasource.hikari.idle<span class=\"token punctuation\">-</span>timeout=30000</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>spring.datasource.hikari.pool<span class=\"token punctuation\">-</span>name=HikariCP</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>spring.datasource.hikari.max<span class=\"token punctuation\">-</span>lifetime=900000</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>spring.datasource.hikari.connection<span class=\"token punctuation\">-</span>timeout=10000</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>spring.datasource.hikari.connection<span class=\"token punctuation\">-</span>test<span class=\"token punctuation\">-</span>query=SELECT 1</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>spring.datasource.hikari.validation<span class=\"token punctuation\">-</span>timeout=1000</pre></td></tr><tr><td data-num=\"42\"></td><td><pre> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">### xxl-job, email</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>spring.mail.host=smtp.qq.com</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>spring.mail.port=25</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>spring.mail.username=xxx@qq.com</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>spring.mail.from=xxx@qq.com</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>spring.mail.password=xxx</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>spring.mail.properties.mail.smtp.auth=true</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>spring.mail.properties.mail.smtp.starttls.enable=true</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>spring.mail.properties.mail.smtp.starttls.required=true</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory</pre></td></tr><tr><td data-num=\"53\"></td><td><pre> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">### xxl-job, access token</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>xxl.job.accessToken=default_token</pre></td></tr><tr><td data-num=\"56\"></td><td><pre> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>xxl.job.i18n=zh_CN</pre></td></tr><tr><td data-num=\"59\"></td><td><pre> </pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">## xxl-job, triggerpool max size</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>xxl.job.triggerpool.fast.max=200</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>xxl.job.triggerpool.slow.max=100</pre></td></tr><tr><td data-num=\"63\"></td><td><pre> </pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">### xxl-job, log retention days</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>xxl.job.logretentiondays=30</pre></td></tr></table></figure><p>到 github 中 拉取一下项目里面有一个 sql 文件：<a href=\"https://github.com/xuxueli/xxl-job\">https://github.com/xuxueli/xxl-job</a></p>\n<p>或者到码云：<a href=\"https://gitee.com/xuxueli0323/xxl-job\">https://gitee.com/xuxueli0323/xxl-job</a> 拉取项目。主要是 sql 文件啊</p>\n<p>我们需要找到这个 sql 文件然后创建一个数据库并导入 sql 文件，再进行下一步！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021034863.png\" alt=\"image-20231102103400507\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021035033.png\" alt=\"image-20231102103536623\"></p>\n<p>配置完成后启动 xxl-job-2.3.1 并创建容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run  <span class=\"token parameter variable\">-p</span> <span class=\"token number\">18080</span>:8080 <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>xxl <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token parameter variable\">-v</span> /root/tmp/xxl-job/application.properties:/application.properties  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">PARAMS</span><span class=\"token operator\">=</span><span class=\"token string\">'--spring.config.location=/application.properties'</span> xuxueli/xxl-job-admin:2.3.1</pre></td></tr></table></figure><p>启动成功后访问 uri：<a href=\"http://192.168.249.128:18080/xxl-job-admin/jobgroup\">http://192.168.249.128:18080/xxl-job-admin/jobgroup</a></p>\n<p>账号：admin ，密码：123456</p>\n<p>访问后页面如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021028455.png\" alt=\"image-20231102102848028\"></p>\n<p>创建一个执行器</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021046055.png\" alt=\"image-20231102104642146\"></p>\n<p>点击新增，填写执行器信息，appname 是前边在 nacos 中配置 xxl 信息时指定的执行器的应用名。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021047493.png\" alt=\"image-20231102104700103\"></p>\n<p>添加成功：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021047508.png\" alt=\"image-20231102104719719\"></p>\n<p>在需要用到的业务模块中导入依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.xuxueli<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>xxl-job-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>配置 application.yml 如下，也可以配置到 nacos 中：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">xxl</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">job</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//192.168.101.65<span class=\"token punctuation\">:</span>8088/xxl<span class=\"token punctuation\">-</span>job<span class=\"token punctuation\">-</span>admin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">executor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">appname</span><span class=\"token punctuation\">:</span> media<span class=\"token punctuation\">-</span>process<span class=\"token punctuation\">-</span>service</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">ip</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9999</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">logpath</span><span class=\"token punctuation\">:</span> /data/applogs/xxl<span class=\"token punctuation\">-</span>job/jobhandler</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">logretentiondays</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">accessToken</span><span class=\"token punctuation\">:</span> default_token</pre></td></tr></table></figure><p><font color='red'>注意</font>配置中的 appname 这是执行器的应用名，port 是执行器启动的端口，如果本地启动多个执行器注意端口不能重复。</p>\n<p>在从 github 或者 gitee 中拉取的 xxl-job-2.3.1 项目中找到</p>\n<p>E:\\ 学成在线项目 — 资料 \\day06 断点续传 xxl-job\\ 资料 \\xxl-job-2.3.1\\xxl-job-executor-samples\\xxl-job-executor-sample-springboot\\src\\main\\java\\com\\xxl\\job\\executor\\core\\config\\XxlJobConfig.java</p>\n<p>配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021057889.png\" alt=\"image-20231102105732814\"></p>\n<p>将该配置文件拷贝到 自己项目的该模块的 config 目录中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021058604.png\" alt=\"image-20231102105838113\"></p>\n<p>启动服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021102864.png\" alt=\"image-20231102110215950\"></p>\n<p>可以看到服务就自动的注册到了执行器中了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021102303.png\" alt=\"image-20231102110243545\"></p>\n<p>点击 查看 (1)</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021104929.png\" alt=\"image-20231102110416038\"></p>\n<p>执行器执行任务</p>\n<p>从 xxl-job-2.3.1 项目中先来拿到一个例子就是如下代码：</p>\n<p>E:\\ 学成在线项目 — 资料 \\day06 断点续传 xxl-job\\ 资料 \\xxl-job-2.3.1\\xxl-job-executor-samples\\xxl-job-executor-sample-springboot\\src\\main\\java\\com\\xxl\\job\\executor\\service\\jobhandler\\SampleXxlJob.java</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021117873.png\" alt=\"image-20231102111700620\"></p>\n<p>然后将这个代码，拷贝到自己项目的模块的 service 业务中。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * XxlJob 开发示例（Bean 模式）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * 开发步骤：</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *      1、任务开发：在 Spring Bean 实例中，开发 Job 方法；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> *      2、注解配置：为 Job 方法添加注解 \"@XxlJob (value=\" 自定义 jobhandler 名称 \", init =\"JobHandler 初始化方法 \", destroy =\"JobHandler 销毁方法 \")\"，注解 value 值对应的是调度中心新建任务的 JobHandler 属性的值。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> *      3、执行日志：需要通过 \"XxlJobHelper.log\" 打印执行日志；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *      4、任务结果：默认任务结果为 \"成功\" 状态，不需要主动设置；如有诉求，比如设置任务结果为失败，可以通过 \"XxlJobHelper.handleFail/handleSuccess\" 自主设置任务结果；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @author xuxueli 2019-12-11 21:52:51</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleXxlJob</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SampleXxlJob</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * 1、简单任务示例（Bean 模式）</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@XxlJob</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demoJobHandler\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">demoJobHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"视频处理...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// default success</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021118433.png\" alt=\"image-20231102111804565\"></p>\n<p>然后就可以在这里面来编写自己的业务逻辑代码了。</p>\n<p>那么这个任务执行器中的任务怎么执行呢，我们需要到控制台中的执行任务中进行配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021127816.png\" alt=\"image-20231102112746770\"></p>\n<p>其中的 bean 指的就是 执行任务 业务逻辑代码中注入的 bean 名称</p>\n<p>也可以选择其它的比如 Java 那么右边的框就不能输入了，下面就是输入要执行的 Java 代码。</p>\n<p>搞完上面的后就重启后端服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021132541.png\" alt=\"image-20231102113214411\"></p>\n<p>启动服务后那 任务怎么执行呢，我们需要 ，在控制台 中 任务管理的 任务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021133078.png\" alt=\"image-20231102113310041\"></p>\n<p>启动后就可以看到每隔 5 秒后端控制台就会打印出一句话</p>\n<pre><code>c.xxl.job.core.executor.XxlJobExecutor   : &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job regist JobThread success, jobId:2, handler:com.xxl.job.core.handler.impl.MethodJobHandler@1dcca426[class com.xuecheng.media.service.jobhandler.SampleXxlJob#demoJobHandler]\n视频处理...\n视频处理...\n视频处理...\n视频处理...\n视频处理...\n视频处理...\n</code></pre>\n<p>在运行报表中可以看到调度情况如下</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202311021136278.png\" alt=\"image-20231102113642675\"></p>\n",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/%E9%AB%98%E7%BA%A7/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-集群部署",
            "date_published": "2024-04-02T10:00:51.052Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3.8-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221138546.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">-v</span> mq-plugins:/plugins <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> rabbitmq:3.8-management</pre></td></tr></table></figure><h1 id=\"2安装delayexchange插件\"><a class=\"markdownIt-Anchor\" href=\"#2安装delayexchange插件\">#</a> 2. 安装 DelayExchange 插件</h1>\n<p>我们要使用的是延迟队列但是名字却是延迟交换机，为什么叫这个名字呢简单说下它的原理：</p>\n<p>我们在使用这个插件的时候它不是基于队列去做的而是交换机。我们发消息到交换机，而交换机会帮你延迟的投递到队列里</p>\n<p>官方的安装指南地址为：<a href=\"https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq\">https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq</a></p>\n<p>上述文档是基于 linux 原生安装 RabbitMQ，然后安装插件。</p>\n<p>因为我们之前是基于 Docker 安装 RabbitMQ，所以下面我们会讲解基于 Docker 来安装 RabbitMQ 插件。</p>\n<h2 id=\"21下载插件\"><a class=\"markdownIt-Anchor\" href=\"#21下载插件\">#</a> 2.1. 下载插件</h2>\n<p>RabbitMQ 有一个官方的插件社区，地址为：<a href=\"https://www.rabbitmq.com/community-plugins.html\">https://www.rabbitmq.com/community-plugins.html</a></p>\n<p>其中包含各种各样的插件，包括我们要使用的 DelayExchange 插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139975.png\" alt=\"image-20210713104511055\"></p>\n<p>大家可以去对应的 GitHub 页面下载 3.8.9 版本的插件，地址为 https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9 这个对应 RabbitMQ 的 3.8.5 以上版本。</p>\n<p>课前资料也提供了下载好的插件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139733.png\" alt=\"image-20210713104808909\"></p>\n<h2 id=\"22上传插件\"><a class=\"markdownIt-Anchor\" href=\"#22上传插件\">#</a> 2.2. 上传插件</h2>\n<p>因为我们是基于 Docker 安装，所以需要先查看 RabbitMQ 的插件目录对应的数据卷。如果不是基于 Docker 的同学，请参考第一章部分，重新创建 Docker 容器。</p>\n<p>我们之前设定的 RabbitMQ 的数据卷名称为 <code>mq-plugins</code> ，所以我们使用下面命令查看数据卷：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume inspect mq-plugins</pre></td></tr></table></figure><p>可以得到下面结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139695.png\" alt=\"image-20210713105135701\"></p>\n<p>接下来，将插件上传到这个目录即可：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139638.png\" alt=\"image-20210713105339785\"></p>\n<h2 id=\"23安装插件\"><a class=\"markdownIt-Anchor\" href=\"#23安装插件\">#</a> 2.3. 安装插件</h2>\n<p>最后就是安装了，需要进入 MQ 容器内部来执行安装。我的容器名为 <code>mq</code> ，所以执行下面命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行时，请将其中的  <code>-it</code>  后面的 <code>mq</code>  替换为你自己的容器名.</p>\n<p>进入容器内部后，执行下面命令开启插件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_delayed_message_exchange</pre></td></tr></table></figure><p>结果如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139444.png\" alt=\"image-20210713105829435\"></p>\n<p>访问 mq 前端声明一个交换机进行测试：</p>\n<p>DelayExchange 插件的原理是对官方原生的 Exchange 做了功能的升级：</p>\n<p>1、将 DelayExchange 接受的消息暂存在内存中 (官方的 Exchange 是无法存储消息的)</p>\n<p>2、在 DelayExchange 中计时，超时后才投递消息到队列中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221553081.png\" alt=\"image-20231022155351657\"></p>\n<p>发送这个消息的时候延迟多久需要在发送消息的时候设置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221557138.png\" alt=\"image-20231022155755822\"></p>\n<h1 id=\"3集群部署\"><a class=\"markdownIt-Anchor\" href=\"#3集群部署\">#</a> 3. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群，我们的计划部署 3 节点的 mq 集群：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>控制台端口</th>\n<th>amqp 通信端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mq1</td>\n<td>8081 —&gt; 15672</td>\n<td>8071 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq2</td>\n<td>8082 —&gt; 15672</td>\n<td>8072 —&gt; 5672</td>\n</tr>\n<tr>\n<td>mq3</td>\n<td>8083 —&gt; 15672</td>\n<td>8073  —&gt; 5672</td>\n</tr>\n</tbody>\n</table>\n<p>集群中的节点标示默认都是： <code>rabbit@[hostname]</code> ，因此以上三个节点的名称分别为：</p>\n<ul>\n<li>rabbit@mq1</li>\n<li>rabbit@mq2</li>\n<li>rabbit@mq3</li>\n</ul>\n<h2 id=\"22获取cookie\"><a class=\"markdownIt-Anchor\" href=\"#22获取cookie\">#</a> 2.2. 获取 cookie</h2>\n<p>RabbitMQ 底层依赖于 Erlang，而 Erlang 虚拟机就是一个面向分布式的语言，默认就支持集群模式。集群模式中的每个 RabbitMQ 节点使用 cookie 来确定它们是否被允许相互通信。</p>\n<p>要使两个节点能够通信，它们必须具有相同的共享秘密，称为<strong> Erlang cookie</strong>。cookie 只是一串最多 255 个字符的字母数字字符。</p>\n<p>每个集群节点必须具有<strong>相同的 cookie</strong>。实例之间也需要它来相互通信。</p>\n<p>我们先在之前启动的 mq 容器中获取一个 cookie 值，作为集群的 cookie。执行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq <span class=\"token function\">cat</span> /var/lib/rabbitmq/.erlang.cookie</pre></td></tr></table></figure><p>可以看到 cookie 值如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DVNQQPDKLNCMEPRBYEHX</pre></td></tr></table></figure><p>接下来，停止并删除当前的 mq 容器，我们重新搭建集群。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> mq</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139218.png\" alt=\"image-20210717212345165\"></p>\n<h2 id=\"23准备集群配置\"><a class=\"markdownIt-Anchor\" href=\"#23准备集群配置\">#</a> 2.3. 准备集群配置</h2>\n<p>在 /tmp 目录新建一个配置文件 rabbitmq.conf：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> rabbitmq.conf</pre></td></tr></table></figure><p>文件内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loopback_users.guest = false</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listeners.tcp.default = 5672</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cluster_formation.classic_config.nodes.1 = rabbit@mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster_formation.classic_config.nodes.2 = rabbit@mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cluster_formation.classic_config.nodes.3 = rabbit@mq3</pre></td></tr></table></figure><p>再创建一个文件，记录 cookie</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建 cookie 文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> .erlang.cookie</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 写入 cookie</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"FXZMCVGLBIXZCDEMMVZQ\"</span> <span class=\"token operator\">></span> .erlang.cookie</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 修改 cookie 文件的权限</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> .erlang.cookie</pre></td></tr></table></figure><p>准备三个目录，mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> mq1 mq2 mq3</pre></td></tr></table></figure><p>然后拷贝 rabbitmq.conf、cookie 文件到 mq1、mq2、mq3：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cp</span> rabbitmq.conf mq3</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">cp</span> .erlang.cookie mq3</pre></td></tr></table></figure><h2 id=\"24启动集群\"><a class=\"markdownIt-Anchor\" href=\"#24启动集群\">#</a> 2.4. 启动集群</h2>\n<p>创建一个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create mq-net</pre></td></tr></table></figure><p>运行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq1/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8071</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq2/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8072</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8082</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/mq3/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq3 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8073</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><h2 id=\"25测试\"><a class=\"markdownIt-Anchor\" href=\"#25测试\">#</a> 2.5. 测试</h2>\n<p>在 mq1 这个节点上添加一个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139410.png\" alt=\"image-20210717222833196\"></p>\n<p>如图，在 mq2 和 mq3 两个控制台也都能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139214.png\" alt=\"image-20210717223057902\"></p>\n<h3 id=\"251数据共享测试\"><a class=\"markdownIt-Anchor\" href=\"#251数据共享测试\">#</a> 2.5.1. 数据共享测试</h3>\n<p>点击这个队列，进入管理页面：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221139412.png\" alt=\"image-20210717223421750\"></p>\n<p>然后利用控制台发送一条消息到这个队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140585.png\" alt=\"image-20210717223320238\"></p>\n<p>结果在 mq2、mq3 上都能看到这条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140067.png\" alt=\"image-20210717223603628\"></p>\n<h3 id=\"252可用性测试\"><a class=\"markdownIt-Anchor\" href=\"#252可用性测试\">#</a> 2.5.2. 可用性测试</h3>\n<p>我们让其中一台节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>然后登录 mq2 或 mq3 的控制台，发现 simple.queue 也不可用了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140781.png\" alt=\"image-20210717223800203\"></p>\n<p>说明数据并没有拷贝到 mq2 和 mq3。</p>\n<h1 id=\"4镜像模式\"><a class=\"markdownIt-Anchor\" href=\"#4镜像模式\">#</a> 4. 镜像模式</h1>\n<p>在刚刚的案例中，一旦创建队列的主机宕机，队列就会不可用。不具备高可用能力。如果要解决这个问题，必须使用官方提供的镜像集群方案。</p>\n<p>官方文档地址：<a href=\"https://www.rabbitmq.com/ha.html\">https://www.rabbitmq.com/ha.html</a></p>\n<h2 id=\"41镜像模式的特征\"><a class=\"markdownIt-Anchor\" href=\"#41镜像模式的特征\">#</a> 4.1. 镜像模式的特征</h2>\n<p>默认情况下，队列只保存在创建该队列的节点上。而镜像模式下，创建队列的节点被称为该队列的<strong>主节点</strong>，队列还会拷贝到集群中的其它节点，也叫做该队列的<strong>镜像</strong>节点。</p>\n<p>但是，不同队列可以在集群中的任意节点上创建，因此不同队列的主节点可以不同。甚至，<strong>一个队列的主节点可能是另一个队列的镜像节点</strong>。</p>\n<p>用户发送给队列的一切请求，例如发送消息、消息回执默认都会在主节点完成，如果是从节点接收到请求，也会路由到主节点去完成。<strong>镜像节点仅仅起到备份数据作用</strong>。</p>\n<p>当主节点接收到消费者的 ACK 时，所有镜像都会删除节点中的数据。</p>\n<p>总结如下：</p>\n<ul>\n<li>镜像队列结构是一主多从（从就是镜像）</li>\n<li>所有操作都是主节点完成，然后同步给镜像节点</li>\n<li>主宕机后，镜像节点会替代成新的主（如果在主从同步完成前，主就已经宕机，可能出现数据丢失）</li>\n<li>不具备负载均衡功能，因为所有操作都会有主节点完成（但是不同队列，其主节点可以不同，可以利用这个提高吞吐量）</li>\n</ul>\n<h2 id=\"42镜像模式的配置\"><a class=\"markdownIt-Anchor\" href=\"#42镜像模式的配置\">#</a> 4.2. 镜像模式的配置</h2>\n<p>镜像模式的配置有 3 种模式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">ha-mode</th>\n<th style=\"text-align:left\">ha-params</th>\n<th style=\"text-align:left\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">准确模式 exactly</td>\n<td style=\"text-align:left\">队列的副本量 count</td>\n<td style=\"text-align:left\">集群中队列副本（主服务器和镜像服务器之和）的数量。count 如果为 1 意味着单个副本：即队列主节点。count 值为 2 表示 2 个副本：1 个队列主和 1 个队列镜像。换句话说：count = 镜像数量 + 1。如果群集中的节点数少于 count，则该队列将镜像到所有节点。如果有集群总数大于 count+1，并且包含镜像的节点出现故障，则将在另一个节点上创建一个新的镜像。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">(none)</td>\n<td style=\"text-align:left\">队列在群集中的所有节点之间进行镜像。队列将镜像到任何新加入的节点。镜像到所有节点将对所有群集节点施加额外的压力，包括网络 I / O，磁盘 I / O 和磁盘空间使用情况。推荐使用 exactly，设置副本数为（N / 2 +1）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nodes</td>\n<td style=\"text-align:left\"><em>node names</em></td>\n<td style=\"text-align:left\">指定队列创建到哪些节点，如果指定的节点全部不存在，则会出现异常。如果指定的节点在集群中存在，但是暂时不可用，会创建节点到当前客户端连接到的节点。</td>\n</tr>\n</tbody>\n</table>\n<p>这里我们以 rabbitmqctl 命令作为案例来讲解配置语法。</p>\n<p>语法示例：</p>\n<h3 id=\"421exactly模式\"><a class=\"markdownIt-Anchor\" href=\"#421exactly模式\">#</a> 4.2.1.exactly 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-two &quot;^two\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-two</code> ：策略名称，自定义</li>\n<li><code>&quot;^two\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>two.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;exactly&quot;,&quot;ha-params&quot;:2,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;exactly&quot;</code> ：策略模式，此处是 exactly 模式，指定副本数量</li>\n<li><code>&quot;ha-params&quot;:2</code> ：策略参数，这里是 2，就是副本数量为 2，1 主 1 镜像</li>\n<li><code>&quot;ha-sync-mode&quot;:&quot;automatic&quot;</code> ：同步策略，默认是 manual，即新加入的镜像节点不会同步旧的消息。如果设置为 automatic，则新加入的镜像节点会把主节点中所有消息都同步，会带来额外的网络开销</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"422all模式\"><a class=\"markdownIt-Anchor\" href=\"#422all模式\">#</a> 4.2.2.all 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-all &quot;^all\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'\n</code></pre>\n<ul>\n<li><code>ha-all</code> ：策略名称，自定义</li>\n<li><code>&quot;^all\\.&quot;</code> ：匹配所有以 <code>all.</code>  开头的队列名</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;'</code> ：策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;all&quot;</code> ：策略模式，此处是 all 模式，即所有节点都会称为镜像节点</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"423nodes模式\"><a class=\"markdownIt-Anchor\" href=\"#423nodes模式\">#</a> 4.2.3.nodes 模式</h3>\n<pre><code>rabbitmqctl set_policy ha-nodes &quot;^nodes\\.&quot; '&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'\n</code></pre>\n<ul>\n<li><code>rabbitmqctl set_policy</code> ：固定写法</li>\n<li><code>ha-nodes</code> ：策略名称，自定义</li>\n<li><code>&quot;^nodes\\.&quot;</code> ：匹配队列的正则表达式，符合命名规则的队列才生效，这里是任何以 <code>nodes.</code>  开头的队列名称</li>\n<li><code>'&#123;&quot;ha-mode&quot;:&quot;nodes&quot;,&quot;ha-params&quot;:[&quot;rabbit@nodeA&quot;, &quot;rabbit@nodeB&quot;]&#125;'</code> : 策略内容\n<ul>\n<li><code>&quot;ha-mode&quot;:&quot;nodes&quot;</code> ：策略模式，此处是 nodes 模式</li>\n<li><code>&quot;ha-params&quot;:[&quot;rabbit@mq1&quot;, &quot;rabbit@mq2&quot;]</code> ：策略参数，这里指定副本所在节点名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"43测试\"><a class=\"markdownIt-Anchor\" href=\"#43测试\">#</a> 4.3. 测试</h2>\n<p>我们使用 exactly 模式的镜像，因为集群节点数量为 3，因此镜像数量就设置为 2.</p>\n<p>运行下面的命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 rabbitmqctl set_policy ha-two <span class=\"token string\">\"^two\\.\"</span> <span class=\"token string\">'&#123;\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"&#125;'</span></pre></td></tr></table></figure><p>下面，我们创建一个新的队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140154.png\" alt=\"image-20210717231751411\"></p>\n<p>在任意一个 mq 控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140517.png\" alt=\"image-20210717231829505\"></p>\n<h3 id=\"431测试数据共享\"><a class=\"markdownIt-Anchor\" href=\"#431测试数据共享\">#</a> 4.3.1. 测试数据共享</h3>\n<p>给 two.queue 发送一条消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140429.png\" alt=\"image-20210717231958996\"></p>\n<p>然后在 mq1、mq2、mq3 的任意控制台查看消息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140006.png\" alt=\"image-20210717232108584\"></p>\n<h3 id=\"432测试高可用\"><a class=\"markdownIt-Anchor\" href=\"#432测试高可用\">#</a> 4.3.2. 测试高可用</h3>\n<p>现在，我们让 two.queue 的主节点 mq1 宕机：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mq1</pre></td></tr></table></figure><p>查看集群状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140157.png\" alt=\"image-20210717232257420\"></p>\n<p>查看队列状态：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140733.png\" alt=\"image-20210717232322646\"></p>\n<p>发现依然是健康的！并且其主节点切换到了 rabbit@mq2 上</p>\n<h1 id=\"5仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#5仲裁队列\">#</a> 5. 仲裁队列</h1>\n<p>从 RabbitMQ 3.8 版本开始，引入了新的仲裁队列，他具备与镜像队里类似的功能，但使用更加方便。</p>\n<h2 id=\"51添加仲裁队列\"><a class=\"markdownIt-Anchor\" href=\"#51添加仲裁队列\">#</a> 5.1. 添加仲裁队列</h2>\n<p>在任意控制台添加一个队列，一定要选择队列类型为 Quorum 类型。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140068.png\" alt=\"image-20210717234329640\"></p>\n<p>在任意控制台查看队列：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140859.png\" alt=\"image-20210717234426209\"></p>\n<p>可以看到，仲裁队列的 + 2 字样。代表这个队列有 2 个镜像节点。</p>\n<p>因为仲裁队列默认的镜像数为 5。如果你的集群有 7 个节点，那么镜像数肯定是 5；而我们集群只有 3 个节点，因此镜像数量就是 3.</p>\n<h2 id=\"52springamqp创建仲载队列\"><a class=\"markdownIt-Anchor\" href=\"#52springamqp创建仲载队列\">#</a> 5.2.SpringAMQP 创建仲载队列</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuorumConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">quorumQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">QueueBuilder</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">durable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"quorum.queue2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 持久化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">quorum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 仲载队列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SpringAMQP 链接集群，只需要在 yml 中配置即可：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8071</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8072</span><span class=\"token punctuation\">,</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8073</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># port: 5672 # 端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> /</pre></td></tr></table></figure><h2 id=\"53测试\"><a class=\"markdownIt-Anchor\" href=\"#53测试\">#</a> 5.3. 测试</h2>\n<p>可以参考对镜像集群的测试，效果是一样的。</p>\n<h2 id=\"53集群扩容\"><a class=\"markdownIt-Anchor\" href=\"#53集群扩容\">#</a> 5.3. 集群扩容</h2>\n<h3 id=\"531加入集群\"><a class=\"markdownIt-Anchor\" href=\"#531加入集群\">#</a> 5.3.1. 加入集群</h3>\n<p>1）启动一个新的 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--net</span> mq-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> <span class=\"token variable\">$&#123;<span class=\"token environment constant\">PWD</span>&#125;</span>/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--name</span> mq4 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">--hostname</span> mq5 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8074</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8084</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rabbitmq:3.8-management</pre></td></tr></table></figure><p>2）进入容器控制台：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq4 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>3）停止 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl stop_app</pre></td></tr></table></figure><p>4）重置 RabbitMQ 中的数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl reset</pre></td></tr></table></figure><p>5）加入 mq1：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl join_cluster rabbit@mq1</pre></td></tr></table></figure><p>6）再次启动 mq 进程</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmqctl start_app</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140463.png\" alt=\"image-20210718001909492\"></p>\n<h3 id=\"532增加仲裁队列副本\"><a class=\"markdownIt-Anchor\" href=\"#532增加仲裁队列副本\">#</a> 5.3.2. 增加仲裁队列副本</h3>\n<p>我们先查看下 quorum.queue 这个队列目前的副本情况，进入 mq1 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mq1 <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140047.png\" alt=\"image-20210718002118357\"></p>\n<p>现在，我们让 mq4 也加入进来：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues add_member <span class=\"token string\">\"quorum.queue\"</span> <span class=\"token string\">\"rabbit@mq4\"</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140584.png\" alt=\"image-20210718002253226\"></p>\n<p>再次查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rabbitmq-queues quorum_status <span class=\"token string\">\"quorum.queue\"</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140083.png\" alt=\"image-20210718002342603\"></p>\n<p>查看控制台，发现 quorum.queue 的镜像数量也从原来的 +2 变成了 +3：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310221140839.png\" alt=\"image-20210718002422365\"></p>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/springcloud-%E5%BC%82%E6%AD%A5%E9%80%9A%E8%AE%AF/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/springcloud-%E5%BC%82%E6%AD%A5%E9%80%9A%E8%AE%AF/",
            "title": "八、RabbitMQ服务异步通讯",
            "date_published": "2024-04-02T10:00:51.046Z",
            "content_html": "<h2 id=\"八-服务异步通讯\"><a class=\"markdownIt-Anchor\" href=\"#八-服务异步通讯\">#</a> 八、服务异步通讯🎄</h2>\n<p>实用篇 - RabbitMQ</p>\n<p><strong>学习内容</strong>：</p>\n<ul>\n<li>初始 MQ</li>\n<li>RabbitMQ 快速入门</li>\n<li>SpringAMQP</li>\n</ul>\n<h3 id=\"81-初始mq\"><a class=\"markdownIt-Anchor\" href=\"#81-初始mq\">#</a> 8.1、初始 MQ🌳</h3>\n<ul>\n<li>同步通讯</li>\n<li>异步通讯</li>\n<li>MQ 常见框架</li>\n</ul>\n<h4 id=\"811-同步调用的问题\"><a class=\"markdownIt-Anchor\" href=\"#811-同步调用的问题\">#</a> 8.1.1、同步调用的问题🌲</h4>\n<p>微服务间基于 Feign 的调用就属于同步方式，存在一些问题。</p>\n<blockquote>\n<p>我们做一个购买商品的业务，用户支付调用支付服务。支付成功后需要调用订单业务，修改订单状态。然后还要去调用仓储服务，因为要给用户发货。</p>\n<p>支付服务调用订单服务也好，调用仓储服务也好它都需要等待对方的响应。所以这种调用是事实的调用也就是同步调用</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101513894.png\" alt=\"image-20231010151319336\"></p>\n<p>它的问题：</p>\n<p>1、耦合问题</p>\n<p>如果需要增加业务而需要改动支付服务的代码</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101516352.png\" alt=\"image-20231010151616770\"></p>\n<p>2、性能下降</p>\n<p>用户来调用支付业务，假如说支付业务耗时 50ms，紧接着支付服务调用其它服务，其它服务都耗时 150ms。支付服务调用再调用其它服务是同步调用所以它必须等待其它服务的执行结果才能执行其它的工作。而这一套流程下来就达到了耗时：500ms。这样的业务也太烂了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101518339.png\" alt=\"image-20231010151851047\"></p>\n<p>3、资源浪费</p>\n<p>支付服务在不能执行下一步操作时一直都是在占用 CPU，占用内存的</p>\n<p>4、级联失败问题</p>\n<p>假如说中间某个服务报错了就会产生阻塞，等待时长较长结果且是失败的。用户体验极差</p>\n<p>综上所述：</p>\n<p>同步调用尽管时效性还不错但是却存在其它问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101527400.png\" alt=\"image-20231010152713676\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>同步调用的优点：</p>\n<ul>\n<li>时效性较强，可以立即得到结果</li>\n</ul>\n<p>同步调用的问题：</p>\n<ul>\n<li>耦合度高</li>\n<li>性能和吞吐能力下降</li>\n<li>有额外的资源消耗</li>\n<li>有级联失败问题</li>\n</ul>\n</blockquote>\n<h4 id=\"812-异步调用方案\"><a class=\"markdownIt-Anchor\" href=\"#812-异步调用方案\">#</a> 8.1.2、异步调用方案🌲</h4>\n<p>异步调用常见实现就是事件驱动模式</p>\n<p>引入了一个新的东西叫：Broker (事件代理者)</p>\n<p>支付服务通知 Broker，Broker 通过其它服务</p>\n<p>在整个过程当中，支付服务完成事件发布后就立即结束了自己的业务，可以去返回给用户了，而不需要去等其它服务完成结果</p>\n<p>这种方式就是异步方式</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101533471.png\" alt=\"image-20231010153325787\"></p>\n<p>优势：</p>\n<p>1、服务解耦</p>\n<p>有新的业务只需要订阅 Broker 就行了跟支付服务没有任何关系</p>\n<p>2、性能提升，吞吐量提高</p>\n<p>3、没有强依赖关系，不担心级联失败问题</p>\n<p>4、流量削峰</p>\n<p>解释 “流量削峰” ：假如说一瞬间来了三个请求，订单服务，仓储服务，短信服务每一时刻只能处理一个，这时 Broker 可以起到缓冲的 作用。然后其它服务就一个一个处理，处理完了就到 Broker 去取，这样这些服务就能一直按照自己平时的处理速度来工作。一切压力由 Broker 扛着，这样一个高度的并发就可以变成低度的并发，这！就是 流量削峰</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101542090.png\" alt=\"image-20231010154228957\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>异步通信的优点：</p>\n<ul>\n<li>耦合度低</li>\n<li>吞吐量提升</li>\n<li>故障隔离</li>\n<li>流量削峰</li>\n</ul>\n<p>异步通信的缺点：</p>\n<ul>\n<li>依赖于 Broker 的可靠性，安全性，吞吐能力</li>\n<li>架构复杂了，业务没有明显的流程线，不好追踪管理</li>\n</ul>\n</blockquote>\n<h4 id=\"813-什么是mq\"><a class=\"markdownIt-Anchor\" href=\"#813-什么是mq\">#</a> 8.1.3、什么是 MQ🌲</h4>\n<p>MQ (MessageQueue) ，中文是消息队列，字面来看就是存放消息的队列。也就是事件驱动架构中的 Broker</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>RabbitMQ</th>\n<th>ActiveMQ</th>\n<th>RocketMQ</th>\n<th>KafKa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>公司 / 社区</td>\n<td>Rabbit</td>\n<td>Apache</td>\n<td>阿里</td>\n<td>Apache</td>\n</tr>\n<tr>\n<td>开发语言</td>\n<td>Erlang</td>\n<td>Java</td>\n<td>Java</td>\n<td>Scala&amp;Java</td>\n</tr>\n<tr>\n<td>协议支持</td>\n<td>AMQP，XMPP，STOMP</td>\n<td>OpenWire，STOMP，REST，XMPP，AMQP</td>\n<td>自定义协议</td>\n<td>自定义协议</td>\n</tr>\n<tr>\n<td>可用性</td>\n<td>高</td>\n<td>一般</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>单机吞吐量</td>\n<td>一般</td>\n<td>差</td>\n<td>高</td>\n<td>非常高</td>\n</tr>\n<tr>\n<td>消息延迟</td>\n<td>微秒级</td>\n<td>毫秒级</td>\n<td>毫秒级</td>\n<td>毫秒以内</td>\n</tr>\n<tr>\n<td>消息可靠性</td>\n<td>高</td>\n<td>一般</td>\n<td>高</td>\n<td>一般</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"814-rabbitmq快速入门\"><a class=\"markdownIt-Anchor\" href=\"#814-rabbitmq快速入门\">#</a> 8.1.4、RabbitMQ 快速入门🌲</h4>\n<ul>\n<li>RabbitMQ 概述和安装</li>\n<li>常见消息模型</li>\n<li>快速入门</li>\n</ul>\n<h5 id=\"8141-rabbitmq概述\"><a class=\"markdownIt-Anchor\" href=\"#8141-rabbitmq概述\">#</a> 8.1.4.1、RabbitMQ 概述🌴</h5>\n<p>RabbitMQ 是基于 Erlang 语言开发的开源消息通信中间件，官网地址：<a href=\"https://www.rabbitmq.com/\">https://www.rabbitmq.com/</a></p>\n<p>安装 RabbitMQ 可以点击查看详细文章：<a href=\"./RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.md\">RabbitMQ 安装部署指南</a>.</p>\n<blockquote>\n<p>RabbitMQ 的结构和概念</p>\n<p>Publisher 是消息发送者，consumer 就是消息消费者，发送者会把消息发送到 exchange 也就是交换机。交换机负责路由把消息投递到 queue 队列，队列负责暂存消息，然后消费者再去从队列中获取消息然后处理消息</p>\n<p>VirtulHost 就是虚拟主机，将来有多个用户它会有自己的一个虚拟主机，各个虚拟主机之间互相隔离避免干扰</p>\n<p>这就是整体 MQ 的架构了</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102044747.png\" alt=\"image-20231010204307956\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>RabbitMQ 中的几个概念：</p>\n<ul>\n<li>channel：操作 MQ 的工具</li>\n<li>exchange：路由消息到队列中</li>\n<li>queue：缓存消息</li>\n<li>virtual host：虚拟主机，是对 queue，exchange 等资源的逻辑分组</li>\n</ul>\n</blockquote>\n<h5 id=\"8142-常见消息模型\"><a class=\"markdownIt-Anchor\" href=\"#8142-常见消息模型\">#</a> 8.1.4.2、常见消息模型🌴</h5>\n<p>MQ 的官方文档中给出了 5 个 MQ 的 demo 示例，对应了几种不同的用法：</p>\n<ul>\n<li>基本消息队列 (BasicQueue)</li>\n<li>工作消息队列 (WorkQueue)</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102052128.png\" alt=\"image-20231010205233688\"></p>\n<ul>\n<li>\n<p>发布订阅 (Publish ，Subscribe)，又根据交换机类型不同分为三种：</p>\n<ul>\n<li>Fanout Exchange：广播</li>\n<li>Direct Exchange：路由</li>\n<li>Topic Exchange：主题</li>\n</ul>\n<p>图中，紫色的就是交换机</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102054075.png\" alt=\"image-20231010205422743\"></p>\n<h5 id=\"8143-helloworld案例\"><a class=\"markdownIt-Anchor\" href=\"#8143-helloworld案例\">#</a> 8.1.4.3、HelloWorld 案例🌴</h5>\n<p>官方的 HelloWorld 是基于最基础的消息队列模型来实现的，只包括三个角色：</p>\n<ul>\n<li>publisher：消息发布者，将消息发送到队列 queue</li>\n<li>queue：消息队列，负责接受并缓存消息</li>\n<li>consumer：订阅队列，处理队列中的消息</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310102056496.png\" alt=\"image-20231010205637991\"></p>\n<p>发布者代码：</p>\n<p>debug 运行代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Channel</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Connection</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConnectionFactory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeoutException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PublisherTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 1. 建立连接</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">*</span>        <span class=\"token class-name\">ConnectionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 1.1. 设置连接参数，分别是：主机名、端口号、vhost、用户名、密码</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123321\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 1.2. 建立连接</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 2. 创建通道 Channel</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 3. 创建队列</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 4. 发送消息</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello, rabbitmq!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> queueName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息成功：【\"</span> <span class=\"token operator\">+</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 5. 关闭通道和连接</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码走到建立连接没有报错的话，查看下 RabbitMQ 的 ui 管理平台中的 Connections</p>\n<p>里面就会出现一个主机的连接信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110748590.png\" alt=\"image-20231011074738545\"></p>\n<p>再往下创建通道</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110749797.png\" alt=\"image-20231011074927559\"></p>\n<p>再往下创建队列</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110750475.png\" alt=\"image-20231011075033895\"></p>\n<p>再往下准备发送消息往队列中发送 queName，将消息转为字节发送 getBytes ()</p>\n<p>下面就可以看到队列中有一条消息：Ready = 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110756263.png\" alt=\"image-20231011075619843\"></p>\n<p>我们可以点击 Name，点击进去然后点击 Get Message 里面可以看到发送的消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110758298.png\" alt=\"image-20231011075826602\"></p>\n<p>消费者代码</p>\n<p>debug 运行</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>rabbitmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeoutException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsumerTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 1. 建立连接</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ConnectionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 1.1. 设置连接参数，分别是：主机名、端口号、vhost、用户名、密码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.249.128\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPort</span><span class=\"token punctuation\">(</span><span class=\"token number\">5672</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setVirtualHost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123321\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 1.2. 建立连接</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">newConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 2. 创建通道 Channel</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 3. 创建队列</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 4. 订阅消息</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultConsumer</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleDelivery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> consumerTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Envelope</span> envelope<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                       <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token comment\">// 5. 处理消息</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收到消息：【\"</span> <span class=\"token operator\">+</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等待接收消息。。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在消费者代码中又进行了创建队列，发布者已经产生时创建了一个队列了，但是消费者为什么又要创建队列呢？</p>\n<p>这是因为，发布者和消费者它们启动的顺序不确定。万一消费者先启动的呢，那找队列找不到怎么办。为了避免这种问题发生它们各自都去声明队列，虽然代码是重复的但是我们可以看下 RabbitMQ-ui 控制台的 Queue 管理页面</p>\n<p>它并没有去创建这个队列，所以发布者与消费者都写只是一个保险措施防止不存在队列</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110844291.png\" alt=\"image-20231011084433956\"></p>\n<p>第四步消费消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110845508.png\" alt=\"image-20231011084522086\"></p>\n<p>消费者最终在 idea 控制台的打印信息</p>\n<pre><code>等待接收消息。。。。\n接收到消息：【hello, rabbitmq!】\n</code></pre>\n<p>先打印了 main 函数的 “等待接收消息。。。。” 这段话，而后打印了 消费的消息。</p>\n<p>因为回调机制消费者处理函数 handleDelivery 与队列进行了绑定 queueName。但是消息还并没有过来然后再继续往下执行打印了 “等待接收消息。。。。” ，等 rabbitMQ 把消息投递回来了再打印 “接收到消息：【hello, rabbitmq!】”，这就说明 RabbitMQ 处理消息是异步的</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>基本消息队列的消息发送流程：</p>\n<ol>\n<li>建立 connection</li>\n<li>创建 channel</li>\n<li>利用 channel 声明队列</li>\n<li>利用 channel 向队列发送消息</li>\n</ol>\n<p>基本消息队列的消息接收流程：</p>\n<ol>\n<li>建立 connection</li>\n<li>创建 channel</li>\n<li>利用 channel 声明队列</li>\n<li>定义 consumer 的消费行为 handleDelivery ()</li>\n<li>利用 channel 将消费者与队列绑定</li>\n</ol>\n</blockquote>\n<h4 id=\"815-springamqp\"><a class=\"markdownIt-Anchor\" href=\"#815-springamqp\">#</a> 8.1.5、SpringAMQP🌲</h4>\n<ul>\n<li>Basic Queue 简单队列模型</li>\n<li>Work Queue 工作队列模型</li>\n<li>发布，订阅模型 - Fanout</li>\n<li>发布，订阅模型 - Direct</li>\n<li>发布，订阅模型 - Topic</li>\n<li>消息转换器</li>\n</ul>\n<h5 id=\"8151-什么是springamqp\"><a class=\"markdownIt-Anchor\" href=\"#8151-什么是springamqp\">#</a> 8.1.5.1、什么是 SpringAMQP🌴</h5>\n<p>SpringAMQP 官方地址：<a href=\"https://spring.io/projects/spring-amqp\">https://spring.io/projects/spring-amqp</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110903769.png\" alt=\"image-20231011090014596\"></p>\n<h5 id=\"8152-案例利用springamqp实现helloworld中的基础消息队列功能\"><a class=\"markdownIt-Anchor\" href=\"#8152-案例利用springamqp实现helloworld中的基础消息队列功能\">#</a> 8.1.5.2、案例，利用 SpringAMQP 实现 HelloWorld 中的基础消息队列功能🌴</h5>\n<p><strong>流程如下</strong>：</p>\n<p>1、在父工程中引入 spring-amqp 的依赖</p>\n<p>因为 publisher 和 consumer 服务都需要 amqp 依赖，因此这里把依赖直接放到父工程 mq-demo 中：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--AMQP 依赖，包含 RabbitMQ--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-amqp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、在 publisher 服务中利用 RabbitTemplate 发送消息到 simple.queue 到这个队列</p>\n<p>在 publisher 中编写测试方法，向 simple.queue 发送消息</p>\n<p>2.1、在 publisher 服务中编写 application.yml，添加 mq 连接信息：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr></table></figure><p>2.2、在 publisher 服务中新建一个测试类，编写测试方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitTemplate</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/119:18</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringAmqpTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello,Spring Amqp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看 rabbitmq 的 ui 管理平台的队列信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110922013.png\" alt=\"image-20231011092250032\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110923115.png\" alt=\"image-20231011092326888\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么是 AMQP</p>\n<ul>\n<li>应用间消息通信的一种协议，与语言和平台无关</li>\n</ul>\n<p>SpringAMQP 如何发送消息？</p>\n<ul>\n<li>引入 amqp 的 starter 依赖</li>\n<li>配置 RabbitMQ 地址</li>\n<li>利用 RabbitTemplate 的 convertAndSend 方法发送消息到指定队列中</li>\n</ul>\n</blockquote>\n<p>3、在 consumer 服务中编写消费逻辑，绑定 simple.queue 这个队列</p>\n<p>在 consumer 中编写消息逻辑，监听 simple.queue</p>\n<p>3.1、在 consumer 服务中编写 application.yml，添加 mq 连接信息：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr></table></figure><p>3.2、在 consumer 服务中新建一个类，编写消费逻辑：</p>\n<p>不能写在 test 中进行测试是因为它需要被 Spring 所管理注册为 Bean</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//---------------------- 打印结果 ----------------------</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">.</span>   ____          _            __ _ _</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token operator\">/</span>\\\\ <span class=\"token operator\">/</span> ___'_ __ _ <span class=\"token function\">_</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>_ __  __ _ \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span>\\___ <span class=\"token operator\">|</span> <span class=\"token char\">'_ | '</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span> '_ \\<span class=\"token operator\">/</span> _` <span class=\"token operator\">|</span> \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> \\\\<span class=\"token operator\">/</span>  ___<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  '  <span class=\"token operator\">|</span>____<span class=\"token operator\">|</span> <span class=\"token punctuation\">.</span>__<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_\\__<span class=\"token punctuation\">,</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>___<span class=\"token operator\">/=</span><span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token operator\">::</span> <span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Boot</span> <span class=\"token operator\">::</span>        <span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RELEASE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token operator\">:</span><span class=\"token number\">584</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">Starting</span> <span class=\"token class-name\">ConsumerApplication</span> on <span class=\"token class-name\">Jfier</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">PID</span> <span class=\"token number\">1164</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span><span class=\"token operator\">:</span>\\微服务\\实用篇\\资料\\day04<span class=\"token operator\">-</span><span class=\"token constant\">MQ</span>\\资料\\mq<span class=\"token operator\">-</span>demo\\consumer\\target\\classes started by <span class=\"token class-name\">Administrator</span> in <span class=\"token class-name\">E</span><span class=\"token operator\">:</span>\\微服务\\实用篇\\资料\\day04<span class=\"token operator\">-</span><span class=\"token constant\">MQ</span>\\资料\\mq<span class=\"token operator\">-</span>demo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token operator\">:</span><span class=\"token number\">594</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">No</span> active profile set<span class=\"token punctuation\">,</span> falling back <span class=\"token keyword\">to</span> <span class=\"token keyword\">default</span> profiles<span class=\"token operator\">:</span> <span class=\"token keyword\">default</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">476</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">o<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span></span>CachingConnectionFactory</span>       <span class=\"token operator\">:</span> <span class=\"token class-name\">Attempting</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">connect</span> <span class=\"token keyword\">to</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">192.168</span><span class=\"token number\">.249</span><span class=\"token number\">.128</span><span class=\"token operator\">:</span><span class=\"token number\">5672</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">531</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">o<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span></span>CachingConnectionFactory</span>       <span class=\"token operator\">:</span> <span class=\"token class-name\">Created</span> <span class=\"token keyword\">new</span> connection<span class=\"token operator\">:</span> rabbitConnectionFactory#<span class=\"token number\">640d</span>c4c6<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token class-name\">SimpleConnection</span><span class=\"token annotation punctuation\">@7a0f244f</span> <span class=\"token punctuation\">[</span>delegate<span class=\"token operator\">=</span>amqp<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>itcast<span class=\"token annotation punctuation\">@192.168.249.128</span><span class=\"token operator\">:</span><span class=\"token number\">5672</span><span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> localPort<span class=\"token operator\">=</span> <span class=\"token number\">3380</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token operator\">:</span><span class=\"token number\">610</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">1164</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>itcast<span class=\"token punctuation\">.</span>mq<span class=\"token punctuation\">.</span></span>ConsumerApplication</span>         <span class=\"token operator\">:</span> <span class=\"token class-name\">Started</span> <span class=\"token class-name\">ConsumerApplication</span> in <span class=\"token number\">2.755</span> seconds <span class=\"token punctuation\">(</span><span class=\"token constant\">JVM</span> running <span class=\"token keyword\">for</span> <span class=\"token number\">4.791</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>消费者接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>SPringAMQP 如何接收消息？</p>\n<ul>\n<li>引入 amqp 的 starter 依赖</li>\n<li>配置 RabbitMQ 地址</li>\n<li>定义类，添加 @Component 注解</li>\n<li>类中声明方法，添加 @RabbitListener 注解，方法参数就是消息</li>\n</ul>\n</blockquote>\n<h4 id=\"816-work-queue工作队列\"><a class=\"markdownIt-Anchor\" href=\"#816-work-queue工作队列\">#</a> 8.1.6、Work Queue 工作队列🌲</h4>\n<p>它也具备消息发布和消费，但是不同的是它后面挂了两个消费者。两个消费者共同处理发布者的消息，</p>\n<p>比如发布者发送 50 消息，consumer1 消费 25，consumer2 消费 25。被消费过的消息就会被删除不可能会再被其它消费者消费已经消费过的消息。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310110943473.png\" alt=\"image-20231011094302230\"></p>\n<h5 id=\"8161-模拟workqueue实现一个队列绑定多个消费者\"><a class=\"markdownIt-Anchor\" href=\"#8161-模拟workqueue实现一个队列绑定多个消费者\">#</a> 8.1.6.1、模拟 WorkQueue，实现一个队列绑定多个消费者🌴</h5>\n<p><strong>基本思路如下</strong>：</p>\n<p>1、在 publisher 服务中定义测试方法，每秒产生 50 条消息，发送到 simple.queue</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">workQueueTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">String</span> queueName <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello,Spring Amqp __ \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>queueName<span class=\"token punctuation\">,</span> message <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、在 consumer 服务中定义两个消息监听者，都监听 simple.queue 队列</p>\n<p>2.1、消费者 1 每秒处理 50 条消息，消费者 2 每秒处理 10 条消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者1接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"simple.queue\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerSimpleQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者2......接收到simple.queue的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">.</span>   ____          _            __ _ _</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token operator\">/</span>\\\\ <span class=\"token operator\">/</span> ___'_ __ _ <span class=\"token function\">_</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>_ __  __ _ \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span>\\___ <span class=\"token operator\">|</span> <span class=\"token char\">'_ | '</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span> '_ \\<span class=\"token operator\">/</span> _` <span class=\"token operator\">|</span> \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> \\\\<span class=\"token operator\">/</span>  ___<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  '  <span class=\"token operator\">|</span>____<span class=\"token operator\">|</span> <span class=\"token punctuation\">.</span>__<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_\\__<span class=\"token punctuation\">,</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span> <span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>___<span class=\"token operator\">/=</span><span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span>_<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token operator\">::</span> <span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Boot</span> <span class=\"token operator\">::</span>        <span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RELEASE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">1</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.564155</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.564155</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">3</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.602944400</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">5</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.634311</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">7</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.663563900</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">9</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.693902600</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">11</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.724277700</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">13</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.754720</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">2</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.784759800</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">15</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.784759800</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">17</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.814876500</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">19</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.845253300</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">21</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.876696200</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">23</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.907389600</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">25</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.938559800</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">27</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.968268500</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">29</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.998623300</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">4</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">47.998623300</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">31</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.028620600</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">33</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.058770700</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">35</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.089572100</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">37</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.119707200</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">39</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.149984400</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">41</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.179999600</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">6</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.210307400</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">43</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.210307400</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">45</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.240964800</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">47</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.270986500</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>消费者<span class=\"token number\">1</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">49</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.301165400</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">8</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.423433300</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">10</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.636403400</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">12</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">48.848982300</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">14</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.060187200</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">16</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.273197100</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">18</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.484165800</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">20</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.696880900</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">22</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">49.908464300</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">24</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.121477600</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">26</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.333586300</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">28</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.548236400</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">30</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.759585700</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">32</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">50.973508400</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">34</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.185203800</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">36</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.399855600</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">38</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.610433700</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">40</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">51.823352100</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">42</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.035381900</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">44</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.248226300</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">46</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.462320400</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>消费者<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>接收到simple<span class=\"token punctuation\">.</span>queue的消息为：hello<span class=\"token punctuation\">,</span><span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Amqp</span> __ <span class=\"token number\">48</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token constant\">T10</span><span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token operator\">:</span><span class=\"token number\">52.677121500</span></pre></td></tr></table></figure><p>消费者 1 很快就结束了，而消费者 2 却花了很长很长的时间。我们认为的快的多消费点，慢的少消费点而事实却是平均分配给了两个消费者，消费者 1 那拿的是所有的奇数，消费者 2 拿到的是所有的偶数。</p>\n<p>这是因为 RabbitMQ 一个机制造成的，就是：消息预取机制</p>\n<p>解释消息预取：</p>\n<p>当有大量的消息到达队列时，队列中会把消息进行投递，consumer1 和 consumer2 会提前把消息拿过来这就是消息预取，不管能不能处理先拿过来再说</p>\n<p>于是两个人就平均分配所有的消息一人分了 25 条，但是呢 consumer1 处理的快很快就搞定了，consumer2 处理的慢需要一段时间</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111024244.png\" alt=\"image-20231011102418214\"></p>\n<h6 id=\"可以对消息预取进行配置限制\"><a class=\"markdownIt-Anchor\" href=\"#可以对消息预取进行配置限制\">#</a> 可以对消息预取进行配置限制🎋</h6>\n<p>修改 application.yml 文件，设置 preFetch 这个值，可以控制预取消息的上限：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">rabbitmq</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 192.168.249.128 <span class=\"token comment\"># RabbitMQ 的 ip 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5672</span> <span class=\"token comment\"># RabbitMQ 的端口号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> itcast <span class=\"token comment\"># 用户名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123321</span> <span class=\"token comment\"># 密码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">virtual-host</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\"># 虚拟主机</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">listener</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">simple</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">prefetch</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 每次只获取一条消息，处理完成才能获取下一个消息</span></pre></td></tr></table></figure><p>设置完成后再进行测试：</p>\n<pre><code>消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 0---2023-10-11T10:30:40.386440300\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 1---2023-10-11T10:30:40.398703100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 2---2023-10-11T10:30:40.413527700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 3---2023-10-11T10:30:40.444268700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 4---2023-10-11T10:30:40.473866400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 5---2023-10-11T10:30:40.504620300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 6---2023-10-11T10:30:40.535400300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 7---2023-10-11T10:30:40.566022200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 8---2023-10-11T10:30:40.595970600\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 9---2023-10-11T10:30:40.611076800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 10---2023-10-11T10:30:40.626201300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 11---2023-10-11T10:30:40.657505500\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 12---2023-10-11T10:30:40.688200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 13---2023-10-11T10:30:40.717912700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 14---2023-10-11T10:30:40.748533200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 15---2023-10-11T10:30:40.778181500\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 16---2023-10-11T10:30:40.808905800\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 17---2023-10-11T10:30:40.823251200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 18---2023-10-11T10:30:40.837450100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 19---2023-10-11T10:30:40.867629400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 20---2023-10-11T10:30:40.897964100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 21---2023-10-11T10:30:40.927968900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 22---2023-10-11T10:30:40.959483800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 23---2023-10-11T10:30:40.988862\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 24---2023-10-11T10:30:41.019388500\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 25---2023-10-11T10:30:41.034540\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 26---2023-10-11T10:30:41.049536900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 27---2023-10-11T10:30:41.079546800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 28---2023-10-11T10:30:41.110340600\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 29---2023-10-11T10:30:41.141704800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 30---2023-10-11T10:30:41.171164300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 31---2023-10-11T10:30:41.201884700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 32---2023-10-11T10:30:41.231497200\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 33---2023-10-11T10:30:41.246620400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 34---2023-10-11T10:30:41.262814300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 35---2023-10-11T10:30:41.293344400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 36---2023-10-11T10:30:41.322739\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 37---2023-10-11T10:30:41.352387700\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 38---2023-10-11T10:30:41.382386800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 39---2023-10-11T10:30:41.412727200\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 40---2023-10-11T10:30:41.443659\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 41---2023-10-11T10:30:41.458969\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 42---2023-10-11T10:30:41.475290100\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 43---2023-10-11T10:30:41.504816800\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 44---2023-10-11T10:30:41.535720400\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 45---2023-10-11T10:30:41.565967900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 46---2023-10-11T10:30:41.596477300\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 47---2023-10-11T10:30:41.625940900\n消费者1接收到simple.queue的消息为：hello,Spring Amqp __ 48---2023-10-11T10:30:41.658033\n消费者2......接收到simple.queue的消息为：hello,Spring Amqp __ 49---2023-10-11T10:30:41.674047\n</code></pre>\n<p>这时消费者打印的消息特快就结束了，快的呢多消费，慢的呢就慢慢来消费。起到能者多劳的功能</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>多个消费者绑定到一个队列，同一条消息只会被一个消费者处理</li>\n<li>通过设置 prefetch 来控制消费者预取的消息数量</li>\n</ul>\n</blockquote>\n<h4 id=\"817-发布publish订阅subscribe\"><a class=\"markdownIt-Anchor\" href=\"#817-发布publish订阅subscribe\">#</a> 8.1.7、发布 (publish)，订阅 (subscribe)🌲</h4>\n<p>发布订阅模式与之前案例的区别就是允许将同一消息发送给多个消费者。实现方式是加入了 exchange (交换机)</p>\n<blockquote>\n<p>上面学习了 RabbitMQ 的两个案例一个是简单队列案例另一个是 WorkQueue 案例，这两个案例有一个共同的特点就是，所发出的消息只可能被一个消费者消费。因为一旦消费完就会从队列中删除而这一特点就无法满足一个需求比如以前说的 支付服务发布的消息要被，订单服务，仓储服务，短信服务。这三个服务各自去完成自己的业务，也就是说发布的这条用户支付成功的消息要被三个服务都接收到。</p>\n<p>这时就需要用到这章的知识了</p>\n</blockquote>\n<center>模型结构</center>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111042266.png\" alt=\"image-20231011104256966\"></p>\n<p><strong>常见 exchange 类型包括</strong>：</p>\n<ul>\n<li>Fanout：广播</li>\n<li>Direct：路由</li>\n<li>Topic：话题</li>\n</ul>\n<p><font color='red'>注意</font>：exchange 负责消息路由，而不是存储，路由失败则消息丢失</p>\n<h5 id=\"8171-发布订阅-fanout-exchange\"><a class=\"markdownIt-Anchor\" href=\"#8171-发布订阅-fanout-exchange\">#</a> 8.1.7.1、发布订阅 - Fanout Exchange🌴</h5>\n<p>Fanout Exchange 会将接收到的消息路由到每一个跟其绑定的 queue</p>\n<blockquote>\n<p>就像混社会的社会人一样，后面两个 consumer 跟着 publisher 混，只要跟着 publisher 混那什么钱啊什么的都不用发愁</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111051241.gif\" alt=\"test\"></p>\n<h5 id=\"8172-利用springamqp演示fanoutexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8172-利用springamqp演示fanoutexchange的使用\">#</a> 8.1.7.2、利用 SpringAMQP 演示 FanoutExchange 的使用🌴</h5>\n<p>实现思路如下：</p>\n<p>1、在 consumer 服务中，利用代码声明队列，交换机，并将两者绑定</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 fanout.queue1 和 fanout.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.fanout 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111110248.png\" alt=\"image-20231011111040177\"></p>\n<p><strong>步骤</strong>：</p>\n<p>1、在 consumer 服务声明 Exchange，Queue，Binding</p>\n<p>SpringAMQP 提供了声明交换机，队列，绑定关系的 API，例如：</p>\n<p>在 consumer 服务创建一个配置类，添加 @Configuration 注解，并声明 FanoutExchange，Queue 和绑定关系对象 Binding，代码如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Binding</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BindingBuilder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FanoutExchange</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/1111:17</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FanoutConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// itcast.fanout</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FanoutExchange</span> <span class=\"token function\">fanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itcast.fanout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// fanout.queue1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">fanoutQueue1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fanout.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 绑定队列 1 到交换机</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">fanoutBinding</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Queue</span> fanoutQueue1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FanoutExchange</span> fanoutExchange<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fanoutQueue1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span>fanoutExchange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// fanout.queue2</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">fanoutQueue2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fanout.queue2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">// 绑定队列 2 到交换机</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">fanoutBinding1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Queue</span> fanoutQueue2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FanoutExchange</span> fanoutExchange<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fanoutQueue2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span>fanoutExchange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、在 consumer 服务声明两个消费者</p>\n<p>在 consumer 服务的 SpringRabbitListener 类中，添加两个方法，分别监听 fanout.queue1 和 fanout.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"fanout.queue1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerFanoutQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到fanout.queue1的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token string\">\"fanout.queue2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenerFanoutQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到fanout.queue2的消息为：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 publisher 服务发送消息到 FanoutExchange</p>\n<p>在 publisher 服务的 SpringAmqpTest 类中添加测试方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFanoutExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 交换机名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.fanout\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 消息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello , every one\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 发送消息，参数分别是：交互机名称，Routingkey (暂时为空)，消息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动消费者的启动类，然后启动发布者的 test 函数进行测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111142286.png\" alt=\"image-20231011114245056\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>交换机的作用是什么？</p>\n<ul>\n<li>接收 publisher 发送的消息</li>\n<li>将消息按照路由规则路由到与之绑定的队列</li>\n<li>不能缓存消息，路由失败，消息丢失</li>\n<li>FanoutExchange 的会将消息路由到每个绑定的队列</li>\n</ul>\n<p>声明队列，交换机，绑定关系的 Bean 是什么？</p>\n<ul>\n<li>Queue</li>\n<li>FanoutExchange</li>\n<li>Binding</li>\n</ul>\n</blockquote>\n<h4 id=\"818-发布订阅-directexchange\"><a class=\"markdownIt-Anchor\" href=\"#818-发布订阅-directexchange\">#</a> 8.1.8、发布订阅 - DirectExchange🌲</h4>\n<p>DirectExchange 会将接收的消息根据<mark>规则路由到指定的 Queue</mark>，因此称为路由模式 (routers)。</p>\n<p><strong>规则</strong>：</p>\n<ul>\n<li>每一个 Queue 都与 Exchange 设置一个 BindingKey，将来利用暗号进行通信，可以有多个 Key</li>\n<li>发布者发送消息时，指定消息的 RoutingKey</li>\n<li>Exchange 将消息路由到 BindingKey 与消息 RoutingKey 一致的队列</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111152624.png\" alt=\"image-20231011115208085\"></p>\n<h5 id=\"8181-利用springamqp演示directexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8181-利用springamqp演示directexchange的使用\">#</a> 8.1.8.1、利用 SpringAMQP 演示 DirectExchange 的使用🌴</h5>\n<p><strong>实现思路如下</strong>：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 direct.queue1 和 direct.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.direct 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111158674.png\" alt=\"image-20231011115803693\"></p>\n<p>步骤：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 direct.queue1 和 direct.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 声明队列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"direct.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 声明交换机</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DIRECT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 绑定 key</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDirectQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到direct.queue1的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 声明队列</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"direct.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token comment\">// 声明交换机</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DIRECT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token comment\">// 绑定 key</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   key <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenDirectQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到direct.queue2的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动服务看下 rabbitmq-ui 管理页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111347685.png\" alt=\"image-20231011134749247\"></p>\n<p>3、在 publisher 中编写测试方法，向 itcast.direct 发送消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDirectExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 交换机名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.direct\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 消息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello , blue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//------------------ 打印结果 ------------------</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将绑定的 key 改为 yellow 呢，记得将发送消息改为 “hello yellow”</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//---------------- 打印结果 ----------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>将绑定的 key 改为 red 呢，记得将发送消息改为 “hello red”</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发送消息，将消息发送给 key 为 blue 的 Queue</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>消费者接收到direct<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">]</span>消费者接收到direct<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>hello <span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>描述下 Direct 交换机与 Fanout 交换机的差异？</p>\n<ul>\n<li>Fanout 交换机将消息路由给每一个与之绑定的队列</li>\n<li>Direct 交换机根据 RoutingKey 判断路由给哪个队列</li>\n<li>如果多个队列具有相同的 RoutingKey，则与 Fanout 功能类似</li>\n</ul>\n<p>基于 @RabbitListener 注解声明队列和交换机有哪些常见注解？</p>\n<ul>\n<li>@Queue</li>\n<li>Exchange</li>\n</ul>\n</blockquote>\n<h4 id=\"819-发布订阅-topicexchange\"><a class=\"markdownIt-Anchor\" href=\"#819-发布订阅-topicexchange\">#</a> 8.1.9、发布订阅 - TopicExchange🌲</h4>\n<p>TopicExchange 与 DirectExchange 类似，区别在于 routingKey 必须是多个单词的列表，并且以 。 分割。</p>\n<p>Queue 与 Exchange 指定 BindingKey 时可以使用通配符：</p>\n<p><code>#</code> ：代指 0 个或多个单词</p>\n<p><code>*</code> ：代指一个单词</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111449230.png\" alt=\"image-20231011144903570\"></p>\n<h5 id=\"8191-利用springamqp演示topicexchange的使用\"><a class=\"markdownIt-Anchor\" href=\"#8191-利用springamqp演示topicexchange的使用\">#</a> 8.1.9.1、利用 SpringAMQP 演示 TopicExchange 的使用🌴</h5>\n<p>实现思路如下：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 topic.queue1 和 topic.queue2</p>\n<p>3、在 publisher 中编写测试方法，向 itcast.topic 发送消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111452582.png\" alt=\"image-20231011145232937\"></p>\n<p>步骤：</p>\n<p>1、利用 @RabbitListener 声明 Exchange，Queue，RoutingKey</p>\n<p>2、在 consumer 服务中，编写两个消费者方法，分别监听 topic.queue1 和 topic.queue2</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExchangeTypes</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Exchange</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QueueBinding</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>rabbit<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RabbitListener</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @2023/10/119:34</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringRabbitListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"topic.queue1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"china.#\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenTopicQueue1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到topic.queue1的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@QueueBinding</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            value <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Queue</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"topic.queue2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            exchange <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Exchange</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">ExchangeTypes</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"#.news\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listenTopicQueue2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到topic.queue2的消息：[\"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 publisher 中编写测试方法，向 itcast.topic 发送消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendTopicExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">String</span> exchangeName <span class=\"token operator\">=</span> <span class=\"token string\">\"itcast.topic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"郭明然上市了不要888不要999只要9.9就能带回家\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"china.news\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//-------------------------- 打印结果 --------------------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>消费者接收到topic<span class=\"token punctuation\">.</span>queue2的消息：<span class=\"token punctuation\">[</span>郭明然上市了不要<span class=\"token number\">888</span>不要<span class=\"token number\">999</span>只要<span class=\"token number\">9.9</span>就能带回家<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>消费者接收到topic<span class=\"token punctuation\">.</span>queue1的消息：<span class=\"token punctuation\">[</span>郭明然上市了不要<span class=\"token number\">888</span>不要<span class=\"token number\">999</span>只要<span class=\"token number\">9.9</span>就能带回家<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>描述下 Direct 交换机与 Topic 交换机的差异？</p>\n<ul>\n<li>Topic 交换机支持通配符，不支持多个 key</li>\n<li>bindingKey：通配符，routingkey：多个单词</li>\n<li>#：0 个或多个</li>\n<li>*：一个</li>\n</ul>\n</blockquote>\n<h4 id=\"8110-测试发送object类型消息\"><a class=\"markdownIt-Anchor\" href=\"#8110-测试发送object类型消息\">#</a> 8.1.10、测试发送 Object 类型消息🌲</h4>\n<p><strong>说明</strong>：在 SpringAMQP 的发送方法中，接收消息的类型是 Object，也就是说我们可以发送任意对象类型的消息，SpringAMQP 会帮我们序列化为字节后发送</p>\n<p>可以看到函数参数都是 Object 类型的，那么就表示可以传递任意类型的 java 对象进去了吗？</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111554481.png\" alt=\"image-20231011155439361\"></p>\n<p>创建一个队列</p>\n<p>我们在 consumer 中利用 @Bean 声明一个队列：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @2023/10/1111:17</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FanoutConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">objectQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object.queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看 rabbitmq 的 ui 管理页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111602511.png\" alt=\"image-20231011160243062\"></p>\n<p>在 publisher 中发送消息以测试：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSendObjectQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘桑\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"object.queue\"</span><span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查看消息发送的详细信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111611580.png\" alt=\"image-20231011161154919\"></p>\n<h5 id=\"81101-消息转换器\"><a class=\"markdownIt-Anchor\" href=\"#81101-消息转换器\">#</a> 8.1.10.1、消息转换器🌴</h5>\n<p>Spring 在对消息对象的处理是由 org.springframework.amqp.support.converter.MessageConverter 来处理的。而默认实现是 SimpleMessageConverter，基于 JDK 的 ObjectOutputStream 完成序列化。</p>\n<p>如果要修改只需要定义一个 MessageConverter 类型的 Bean 即可。推荐用 JSON 方式序列化，步骤如下：</p>\n<p>1、我们在 publisher 服务引入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.fasterxml.jackson.core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jackson-databind<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、我们在 publisher 服务启动类中声明 MessageConverter</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jackson2JsonMessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PublisherApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PublisherApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageConverter</span> <span class=\"token function\">messageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jackson2JsonMessageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>清空之前的队列中的消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111643872.png\" alt=\"image-20231011164323272\"></p>\n<p>再次运行测试函数，然后查看 RabbitMQ 中的消息详细情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111644952.png\" alt=\"image-20231011164413896\"></p>\n<p>消息发送的时候把对象序列化为 JSON，接收时反过来反序列化为对象</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111644991.png\" alt=\"image-20231011164436624\"></p>\n<p>3、消费者接受消息</p>\n<p>我们需要再消费者里面也加上 MessageConverter 进行反序列化。否则取消息就会报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jackson2JsonMessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>amqp<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageConverter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @author Dkx</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @version 1.0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @2023/10/1117:31</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @function</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @comment</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RabbitMQConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageConverter</span> <span class=\"token function\">messageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Jackson2JsonMessageConverter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动消费者启动类，启动生产者的测试函数查看结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111736739.png\" alt=\"image-20231011173617788\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>SpringAMQP 中消息的序列化和反序列化是怎么实现的？</p>\n<ul>\n<li>利用 MessageConverter 实现的，默认是 JDK 的序列化</li>\n<li>注意发送与接收方必须使用相同的 MessageConverter</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "RabbitMQ"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/RabbitMQ/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/",
            "title": "RabbitMQ部署指南-单击部署",
            "date_published": "2024-04-02T10:00:51.043Z",
            "content_html": "<h1 id=\"rabbitmq部署指南\"><a class=\"markdownIt-Anchor\" href=\"#rabbitmq部署指南\">#</a> RabbitMQ 部署指南</h1>\n<h1 id=\"1单机部署\"><a class=\"markdownIt-Anchor\" href=\"#1单机部署\">#</a> 1. 单机部署</h1>\n<p>我们在 Centos7 虚拟机中使用 Docker 来安装。</p>\n<h2 id=\"11下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#11下载镜像\">#</a> 1.1. 下载镜像</h2>\n<p>方式一：在线拉取</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:3-management</pre></td></tr></table></figure><p>方式二：从本地加载</p>\n<p>在课前资料已经提供了镜像包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101608790.png\" alt=\"image-20210423191210349\"></p>\n<p>上传到虚拟机中后，使用命令加载镜像即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> mq.tar</pre></td></tr></table></figure><p>使用命令来查看一下</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REPOSITORY                   TAG       IMAGE ID       CREATED         SIZE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rabbitmq                     latest    24cc95a2cb57   <span class=\"token number\">6</span> days ago      217MB</pre></td></tr></table></figure><h2 id=\"12安装mq\"><a class=\"markdownIt-Anchor\" href=\"#12安装mq\">#</a> 1.2. 安装 MQ</h2>\n<p>执行下面的命令来运行 MQ 容器：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_USER</span><span class=\"token operator\">=</span>itcast <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">RABBITMQ_DEFAULT_PASS</span><span class=\"token operator\">=</span><span class=\"token number\">123321</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">--name</span> mq <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token parameter variable\">--hostname</span> mq1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token comment\"># ui 管理平台的端口号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token comment\"># 消息通信的端口号</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5672</span>:5672 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> rabbitmq:3-management</pre></td></tr></table></figure><p>查看启动状态</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                                                                                                                                 NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>5ca16a608743   rabbitmq:3-management   <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">2</span> minutes   <span class=\"token number\">4369</span>/tcp, <span class=\"token number\">5671</span>/tcp, <span class=\"token number\">0.0</span>.0.0:5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, :::5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, <span class=\"token number\">15671</span>/tcp, <span class=\"token number\">15691</span>-15692/tcp, <span class=\"token number\">25672</span>/tcp, <span class=\"token number\">0.0</span>.0.0:15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp, :::15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp   mq</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>控制台打印了端口为：15671，在启动容器时配置了账号为：itcast，密码为：123321</p>\n<p>访问 uri：<a href=\"http://192.168.249.128:15672\">http://192.168.249.128:15672</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101627722.png\" alt=\"image-20231010162721293\"></p>\n<p><strong>页面功能介绍</strong>：</p>\n<blockquote>\n<p>Overview：总览</p>\n<p>作用：查看节点的一些详细信息</p>\n</blockquote>\n<blockquote>\n<p>Connections：连接</p>\n<p>无论是消息发布者还是消息消费者都应该跟 mq 建立连接</p>\n</blockquote>\n<blockquote>\n<p>Channels：通道</p>\n<p>建立连接后一定要创建一个通道，完后生产者 或者是消费者才能基于 Channel 完成消息的发送和接收</p>\n</blockquote>\n<blockquote>\n<p>Exchanges：交换机</p>\n<p>是消息的路由</p>\n</blockquote>\n<blockquote>\n<p>Queues：队列</p>\n</blockquote>\n<blockquote>\n<p>Admin：用户管理</p>\n<ul>\n<li>Virtual Host：虚拟机可以对每个用户进行一个隔离防止操作冲突</li>\n</ul>\n</blockquote>\n<h1 id=\"2集群部署\"><a class=\"markdownIt-Anchor\" href=\"#2集群部署\">#</a> 2. 集群部署</h1>\n<p>接下来，我们看看如何安装 RabbitMQ 的集群。</p>\n<h2 id=\"21集群分类\"><a class=\"markdownIt-Anchor\" href=\"#21集群分类\">#</a> 2.1. 集群分类</h2>\n<p>在 RabbitMQ 的官方文档中，讲述了两种集群的配置方式：</p>\n<ul>\n<li>普通模式：普通模式集群不进行数据同步，每个 MQ 都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有 2 个 MQ：mq1，和 mq2，如果你的消息在 mq1，而你连接到了 mq2，那么 mq2 会去 mq1 拉取消息，然后返回给你。如果 mq1 宕机，消息就会丢失。</li>\n<li>镜像模式：与普通模式不同，队列会在各个 mq 的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li>\n</ul>\n<p>我们先来看普通模式集群。</p>\n<h2 id=\"22设置网络\"><a class=\"markdownIt-Anchor\" href=\"#22设置网络\">#</a> 2.2. 设置网络</h2>\n<p>首先，我们需要让 3 台 MQ 互相知道对方的存在。</p>\n<p>分别在 3 台机器中，设置 /etc/hosts 文件，添加如下内容：</p>\n<pre><code>192.168.150.101 mq1\n192.168.150.102 mq2\n192.168.150.103 mq3\n</code></pre>\n<p>并在每台机器上测试，是否可以 ping 通对方：</p>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "RabbitMQ",
                "部署"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/%E6%A1%88%E4%BE%8B/%E6%8B%86%E5%88%86%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0nacos%E5%B9%B6%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0%E9%A1%B9%E7%9B%AE/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/%E6%A1%88%E4%BE%8B/%E6%8B%86%E5%88%86%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0nacos%E5%B9%B6%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0%E9%A1%B9%E7%9B%AE/",
            "title": "拆分不同配置到nacos并读取不同配置到项目",
            "date_published": "2024-04-02T10:00:51.037Z",
            "content_html": "<h1 id=\"拆分不同配置到nacos并读取不同配置到项目\"><a class=\"markdownIt-Anchor\" href=\"#拆分不同配置到nacos并读取不同配置到项目\">#</a> 拆分不同配置到 nacos 并读取不同配置到项目</h1>\n<p>先来看我们原先配置的内容：application.yml，服务名：gulimail-coupon</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//192.168.56.10<span class=\"token punctuation\">:</span>3306/gulimall_sms<span class=\"token punctuation\">?</span>characterEncoding=utf<span class=\"token punctuation\">-</span>8<span class=\"token important\">&amp;serverTimezone=UTC&amp;useUnicode=true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.56.10<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gulimail<span class=\"token punctuation\">-</span>coupon</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key atrule\">mybatis-plus</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">global-config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">db-config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token key atrule\">id-type</span><span class=\"token punctuation\">:</span> auto</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">mapper-locations</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>/mapper/<span class=\"token important\">**/*.xml</span></pre></td></tr></table></figure><p>我们可以看到这个配置文件中，配置了数据源信息和 mybatis 还有其它的一些信息我们要将它们进行拆分分别配置到 nacos 中的同一个环境下不同的配置名称里面</p>\n<p>比如，如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240324113845358.png\" alt=\"image-20240324113845358\"></p>\n<p>我们将 数据源相关配置信息配置到如下中：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240324113916733.png\" alt=\"image-20240324113916733\"></p>\n<p>我们将 mybatis 相关配置信息配置到如下中：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240324113916733.png\" alt=\"\"></p>\n<p>我们将其它的配置信息配置到如下中：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240324114009300.png\" alt=\"image-20240324114009300\"></p>\n<p>我们把这些个配置信息都分开配置了，那我们如何在代码中进行获取呢？如下演示：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gulimail<span class=\"token punctuation\">-</span>coupon</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.56.10<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> 2d9e9ebf<span class=\"token punctuation\">-</span>1b0f<span class=\"token punctuation\">-</span>43d0<span class=\"token punctuation\">-</span>9fc8<span class=\"token punctuation\">-</span>d7d50057c193</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">ext-config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> datasource.yaml</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> dev</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> mybatis.yaml</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> dev</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> other.yaml</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> dev</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p>我们可以通过 ext-config (扩展配置) 来进行读取 nacos 中不同的配置内容</p>\n",
            "tags": [
                "计算机学科",
                "项目",
                "案例Demo",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/springcloud-Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/springcloud-Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/",
            "title": "四、Nacos注册中心",
            "date_published": "2024-04-02T10:00:51.032Z",
            "content_html": "<h2 id=\"四-nacos注册中心\"><a class=\"markdownIt-Anchor\" href=\"#四-nacos注册中心\">#</a> 四、Nacos 注册中心🎄</h2>\n<ul>\n<li>认识和安装 Nacos</li>\n<li>Nacos 快速入门</li>\n<li>Nacos 服务分级存储模型</li>\n<li>Nacos 环境隔离</li>\n</ul>\n<h3 id=\"41-认识nacos\"><a class=\"markdownIt-Anchor\" href=\"#41-认识nacos\">#</a> 4.1、认识 Nacos🌳</h3>\n<p><a href=\"http://nacos.io/zh-cn/\">Nacos</a> 是阿里巴巴的产品，现在是<a href=\"https://spring.io/projects/spring-cloud\"> SpringCloud</a> 中的一个组件。相比<a href=\"https://github.com/Netflix/eureka\"> Eureka</a> 功能更加丰富，在国内受欢迎程度较高。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051155062.png\" alt=\"image-20231005115513961\"></p>\n<p><strong>安装和启动教程详细查看</strong>：<a href=\"Nacos/Nacos%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97.md\">点击查看</a>.</p>\n<h3 id=\"42-服务注册到nacos\"><a class=\"markdownIt-Anchor\" href=\"#42-服务注册到nacos\">#</a> 4.2、服务注册到 Nacos🌳</h3>\n<p>1、在 cloud-demo 父工程中添加 spring-cloud-alibaba 的管理依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--nacos 管理依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-alibaba-dependencies<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2.5.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>import<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、注释掉 order-service 和 user-service 中原有的 eureka 依赖。</p>\n<p>3、添加 nacos 的客户端依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- nacos 客户端依赖包 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>4、修改 user-service &amp; order-service 中的 application.yml 文件，注释 eureka 地址，添加 nacos 地址：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 服务地址</span></pre></td></tr></table></figure><p><mark>PS</mark>：在当前启动类中添加注解：@EnableDiscoveryClient (服务发现)</p>\n<p>5、启动并测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051308798.png\" alt=\"image-20231005130842602\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>Nacos 服务搭建\n<ol>\n<li>下载安装包</li>\n<li>解压</li>\n<li>在 bin 目录下运行指令：startup.cmd -m standalone</li>\n</ol>\n</li>\n<li>Nacos 服务注册或发现\n<ol>\n<li>引入 nacos.discovery 依赖</li>\n<li>配置 nacos 地址 spring.cloud.nacos.server-addr</li>\n<li>在当前启动类中添加 @EnableDiscoveryClient 注解，用于服务发现</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"43-nacos服务分级存储模型\"><a class=\"markdownIt-Anchor\" href=\"#43-nacos服务分级存储模型\">#</a> 4.3、Nacos 服务分级存储模型🌳</h3>\n<p><strong>服务</strong>：提供用户查询的 user service ，提供订单查询的 order-service 都叫<mark>服务</mark>.</p>\n<p>user-service 还部署了多个实例：8081，8082，8083</p>\n<p>所以我们之前是分为两层概念的：</p>\n<p>一层是服务，而第二层就是实例，一个服务可以包含多个实例</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051420619.png\" alt=\"image-20231005142022420\"></p>\n<p>不过随着业务规模越来越扩大，那么我们就要考虑更多的问题了。</p>\n<blockquote>\n<p>比如说我们把所有的实例都部署到一个机房，这就像把所有的鸡蛋都放到一个篮子里一样，不小心将篮子打翻了那么里面所有的蛋也就全部都打了，如果是机房哪天天灾人祸出了事儿，那这整个服务不就完了。所以为了解决这个问题我们会将一个服务的多个实例部署到多个机房。</p>\n</blockquote>\n<p>特别像阿里巴巴，京东这样的大公司，给全国各地都整一个。这就像我们把鸡蛋分散开了，一个打了我还有好几篮子呢。</p>\n<p>这样就能做到一种叫 <strong>容灾</strong>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051425151.png\" alt=\"image-20231005142511407\"></p>\n<p>而 Nacos 服务分级存储模型就是引入了这样一个机房的概念或者叫地域的概念。它把同在一个机房的多个实例称为一个集群</p>\n<p>比如说：杭州两个机房的 userService 实例就称之为杭州的 userService 集群</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051430517.png\" alt=\"image-20231005143046790\"></p>\n<p>所以在 Nacos 服务分级存储模型中一级是服务往下是集群再往下就是实例</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051432046.png\" alt=\"image-20231005143242380\"></p>\n<p><strong>为什么 Nacos 要引入这样的一个服务分级的模型呢？我原来直接用服务找实例不好吗？为什么要多加一个地域划分集群的一个概念？</strong></p>\n<h4 id=\"431-服务跨集群调用问题\"><a class=\"markdownIt-Anchor\" href=\"#431-服务跨集群调用问题\">#</a> 4.3.1、服务跨集群调用问题🌲</h4>\n<p>我们设想这样一种情况：</p>\n<p>比方说 我有一个杭州的机房里面有 order-service 集群还有 user-service 的集群。还有还有一个上海的机房里面也是同样的配置</p>\n<p>现在，order-service 需要访问 user-service 那么有两种选择：一种是在自己本地局域网内访问，另一种是去外面机房访问</p>\n<p>局域网内访问速度比较快，延迟比较低</p>\n<blockquote>\n<p>服务调用尽可能选择本地集群的服务，跨集群调用延迟较高</p>\n<p>本地集群不可访问时，再去访问其它集群</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051442382.png\" alt=\"image-20231005144140180\"></p>\n<p>但是现在我们还没有配置集群属性，看下 nacos 控制台</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051506788.png\" alt=\"image-20231005150616402\"></p>\n<p>可以看到集群名称为：Default 默认，没有集群</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051507220.png\" alt=\"image-20231005150745644\"></p>\n<h3 id=\"44-服务集群属性\"><a class=\"markdownIt-Anchor\" href=\"#44-服务集群属性\">#</a> 4.4、服务集群属性🌳</h3>\n<p>1、修改 application.yml，添加如下内容：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 服务端地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">cluster-name</span><span class=\"token punctuation\">:</span> HZ <span class=\"token comment\"># 配置集群名称，也就是机房位置，这里 HZ 代指杭州</span></pre></td></tr></table></figure><p>2、我们创建两个服务来模拟演示集群三个分别代表不同的位置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051510774.png\" alt=\"image-20231005151045217\"></p>\n<p>具体的操作步骤看动图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051518637.gif\" alt=\"test\"></p>\n<p>3、查看 nacos 的情况</p>\n<p>可以看到成功启动了三个集群</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051513016.png\" alt=\"image-20231005151355371\"></p>\n<p>查看详细，别分是不同的位置的集群</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051515250.png\" alt=\"image-20231005151517180\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>Nacos 服务分级存储模型\n<ol>\n<li>一级是服务，例如 userservice</li>\n<li>二级是集群，例如杭州或上海</li>\n<li>三级是实例，例如杭州机房的某台部署了 userservice 的服务器</li>\n</ol>\n</li>\n<li>如何设置实例的集群属性\n<ol>\n<li>修改 application.yml 文件，添加 spring.cloud.nacos.discovery.cluster-name 属性即可</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<p>我们将 user-service 的 8081 服务和 8082 服务还有 8083 服务分别设置到了不同位置的集群但是我们最终想要实现的是 order-service 远程调用 user-service 时，优先选择本地集群。那因此呢我们还需要给 order-service 也配置一个集群属性</p>\n<h4 id=\"441-根据集群负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#441-根据集群负载均衡\">#</a> 4.4.1、根据集群负载均衡🌲</h4>\n<p>1、在 order-service 服务中的 application.yml 中进行配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 服务端地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">cluster-name</span><span class=\"token punctuation\">:</span> HZ <span class=\"token comment\"># 配置集群名称，也就是机房位置，这里 HZ 代指杭州</span></pre></td></tr></table></figure><p>配置完成后启动 order-service 服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051531329.png\" alt=\"image-20231005153152984\"></p>\n<p>查看 nacos 信息 order-service 是否与 user-service 处于 HZ 集群</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051533345.png\" alt=\"image-20231005153349541\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051534369.png\" alt=\"image-20231005153426289\"></p>\n<p>2、然后在 order-service 中设置负载均衡的 IRule 为 NacosRule，这个规则优先会寻找与自己同集群的服务：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 给指定的微服务进行集群负载均衡的配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">userservice</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">ribbon</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">NFLoadBalancerRuleClassName</span><span class=\"token punctuation\">:</span> com.alibaba.cloud.nacos.ribbon.NacosRule <span class=\"token comment\"># 负载均衡规则</span></pre></td></tr></table></figure><p>3、访问 order-service 服务 3 次查看轮询结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051630022.gif\" alt=\"test\"></p>\n<p>访问第一次：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>http://127.0.0.1:8080/order/101</pre></td></tr></table></figure><p>访问第二次：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>http://127.0.0.1:8080/order/102</pre></td></tr></table></figure><p>访问第三次：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>http://127.0.0.1:8080/order/103</pre></td></tr></table></figure><p>8081</p>\n<pre><code>Creating a new SqlSession\nSqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d32e8c] was not registered for synchronization because synchronization is not active\nJDBC Connection [HikariProxyConnection@773117158 wrapping com.mysql.cj.jdbc.ConnectionImpl@1a9c99e4] will not be managed by Spring\n==&gt;  Preparing: select * from tb_user where id = ? \n==&gt; Parameters: 1(Long)\n&lt;==    Columns: id, username, address\n&lt;==        Row: 1, 柳岩, 湖南省衡阳市\n&lt;==      Total: 1\nClosing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d32e8c]\nCreating a new SqlSession\nSqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c31c2cf] was not registered for synchronization because synchronization is not active\nJDBC Connection [HikariProxyConnection@1123427641 wrapping com.mysql.cj.jdbc.ConnectionImpl@1a9c99e4] will not be managed by Spring\n==&gt;  Preparing: select * from tb_user where id = ? \n==&gt; Parameters: 2(Long)\n&lt;==    Columns: id, username, address\n&lt;==        Row: 2, 文二狗, 陕西省西安市\n&lt;==      Total: 1\nClosing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c31c2cf]\nCreating a new SqlSession\nSqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16810291] was not registered for synchronization because synchronization is not active\nJDBC Connection [HikariProxyConnection@407305777 wrapping com.mysql.cj.jdbc.ConnectionImpl@1a9c99e4] will not be managed by Spring\n==&gt;  Preparing: select * from tb_user where id = ? \n==&gt; Parameters: 3(Long)\n&lt;==    Columns: id, username, address\n&lt;==        Row: 3, 华沉鱼, 湖北省十堰市\n&lt;==      Total: 1\nClosing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16810291]\n</code></pre>\n<p>8082</p>\n<pre><code></code></pre>\n<p>8083</p>\n<pre><code></code></pre>\n<p>可以看到优先选择的是本地集群的服务，但是也会有可能选择远程的集群。</p>\n<p>它并不是轮询调用本机集群或者远程集群而是一种没有规律的随机的调用方式</p>\n<p>如果说 user-service:8081 这个服务挂掉了呢？ 将 8081 关闭我们再次访问</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051635074.png\" alt=\"image-20231005163505936\"></p>\n<p>此时 8083 就被请求了打印出了消息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051635696.png\" alt=\"image-20231005163557083\"></p>\n<p>但是在 order-service 中控制台中就会打印一个警告</p>\n<p>警告的意思就是：发生了一次跨集群的访问 order-service 访问 user-service 位置为 HZ 的集群但是却访问了 SH</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051637118.png\" alt=\"image-20231005163756874\"></p>\n<p>通过这次测试我们得出 NacosRule 它其实优先访问的是本地，本地没有它才会进行跨集群访问，而跨集群就会发出一次警告</p>\n<p>3、注意将 user-service 的权重都设置为 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051641100.png\" alt=\"image-20231005164127314\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>NacosRule 负载均衡策略\n<ol>\n<li>优先选择同集群服务实例列表</li>\n<li>本地集群找不到提供者，才去其它集群寻找，并且会报警告</li>\n<li>确定了可用实例列表后，再采用随机负载均衡挑选实例</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"442-根据权重负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#442-根据权重负载均衡\">#</a> 4.4.2、根据权重负载均衡🌲</h4>\n<blockquote>\n<p>上集，我们学习了 Nacos 的负载均衡的一种规则 NacosRule，它可以做到<mark>集群优先的负载均衡</mark>。不过我们部署的时候可能出现这样的情况，由于企业设备会更新迭代有些机器性能比较好，还有一些属于是祖传设备了性能非常差，可以说老弱病残。这时候我们肯定希望这些性能好的机器它承担更多的用户请求，而哪些性能差一点的自然承担少一点的用户请求。但是我们目前看来 NacosRule 做到的是集群优先而后做随机。当用户请求完了以后它可不会管你机器性能好还是差的拉过来就是一顿叫这时性能差的机器肯定就出问题了。</p>\n<p>那么我们要怎么去控制不同服务它请求的量呢？</p>\n<p>Nacos 给我们提供了一种权重的配置</p>\n</blockquote>\n<p><strong>实际部署中会出现这样的场景</strong>：</p>\n<ul>\n<li>服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能好的机器承担更多的用户请求</li>\n</ul>\n<p>Nacos 提供了权重配置来控制访问频率，权重越大则访问频率越高</p>\n<h4 id=\"443-权重配置操作\"><a class=\"markdownIt-Anchor\" href=\"#443-权重配置操作\">#</a> 4.4.3、权重配置操作：🌲</h4>\n<p>1、在 Nacos 控制台可以设置实例的权重值，首先选中实例后面的编辑按钮</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051655722.png\" alt=\"image-20231005165528544\"></p>\n<p>2、将权重设置为 0.1，测试可以发现 8081 被访问到的频率大大降低</p>\n<p>权重值配置范围：0 ~ 1</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051656163.png\" alt=\"image-20231005165622001\"></p>\n<p>查看下目前的集群情况</p>\n<p>order-service</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051659631.png\" alt=\"image-20231005165920414\"></p>\n<p>user-service</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051700588.png\" alt=\"image-20231005170021931\"></p>\n<p>在没有配置权重值都是相同的情况下访问 3 次 order-service 打印的信息如下</p>\n<p>user-service:8081 打印了全部的信息，8082,8083 都没有</p>\n<p>我们将 8081 这个集群的权重值设置为 0 在进行测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051940128.png\" alt=\"image-20231005194035918\"></p>\n<p>访问 order-service 刷新页面 10 次打印的信息如下</p>\n<p>8081 没有信息，8082 有信息，8083 有信息</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>实例的权重控制\n<ol>\n<li>Nacos 控制台可以设置实例的权重值，0 ~ 1 之间</li>\n<li>同集群内的多个实例，权重越高被访问的频率越高</li>\n<li>权重设置为 0 则完全不会被访问</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"45-环境隔离-namespace\"><a class=\"markdownIt-Anchor\" href=\"#45-环境隔离-namespace\">#</a> 4.5、环境隔离 - namespace🌳</h3>\n<p>Nacos 中服务存储和数据存储的最外层都是一个名为 namespace 的东西，用来做最外层隔离</p>\n<blockquote>\n<p>将来可以有多个 namespace 可以理解为多个蛋，相互之间是隔离开的，在 namespace 内部有一个 group 属性。也就是说同一个命名空间的多个东西我们将来还可以分组，组内就是具体的东西了。比如说服务，服务再往下就是集群，再往下就是实例。</p>\n</blockquote>\n<p>这里我们的环境隔离其实就是在对服务做隔离</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052013655.png\" alt=\"image-20231005201313765\"></p>\n<p>为什么需要隔离呢？</p>\n<p>服务划分，实例划分这是基于业务去做的划分或者是地域但事实上我们还会有开发环境，生产环境，测试环境的变化所以我们会基于这种环境变化去做隔离。</p>\n<p>我们可以吧业务相关度比较高的放在一组中</p>\n<p>1、在 Nacos 控制台可以创建 namespace，用来隔离不同环境</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052024412.png\" alt=\"image-20231005202456034\"></p>\n<p>2、然后填写一个新的命名空间信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052025744.png\" alt=\"image-20231005202536537\"></p>\n<p>3、保存后会在控制台看到这个命名空间的 id</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052026832.png\" alt=\"image-20231005202632739\"></p>\n<p>4、修改 order-service 的 application.yml，添加 namespace</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/cloud_user<span class=\"token punctuation\">?</span>useSSL=false<span class=\"token important\">&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 服务端地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">cluster-name</span><span class=\"token punctuation\">:</span> TJ <span class=\"token comment\"># 集群名称，这里 HZ 代指杭州</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ed32fa6f<span class=\"token punctuation\">-</span>e9e3<span class=\"token punctuation\">-</span>4483<span class=\"token punctuation\">-</span>b860<span class=\"token punctuation\">-</span>7bcd9731d0d9 <span class=\"token comment\"># 命名空间，填 ID</span></pre></td></tr></table></figure><p>5、刷新 nacos 页面</p>\n<p>order-service 就不在 public 中了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052032144.png\" alt=\"image-20231005203254198\"></p>\n<p>而是到了 dev 中了，它们两个已经不是同一个位置的服务了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052033504.png\" alt=\"image-20231005203322946\"></p>\n<p>我们访问的话就会报错：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052034062.png\" alt=\"image-20231005203400951\"></p>\n<p><strong>idea 控制台报错提示为</strong>：<font color='red'>找不到可用的实例</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052034175.png\" alt=\"image-20231005203453936\"></p>\n<p>所以要想让服务可以访问必须是同一个环境下</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>Nacos 环境隔离\n<ol>\n<li>namespace 用来做环境隔离</li>\n<li>每个 namespace 都有唯一 id</li>\n<li>不同 namespace 下的服务不可见\n<ul>\n<li>如果想要两个服务可以访问必须把它们放到同一个 namespace 下</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"46-nacos注册中心细节分析\"><a class=\"markdownIt-Anchor\" href=\"#46-nacos注册中心细节分析\">#</a> 4.6、nacos 注册中心细节分析🌳</h3>\n<p>服务提供者在启动时，都会把自己的信息提交给注册中心。而注册中心就会把这些信息保留下来</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052039311.png\" alt=\"image-20231005203942965\"></p>\n<p>当服务消费者要消费时它就可以去找注册中心拉取服务信息了。不过这个拉取的动作不是每一次都要做的它会将拉取到的服务信息缓存到一个列表中</p>\n<p>当然如果缓存一直不更新也是不行的万一服务提供者信息变化了呢，所以这个列表会每隔 30 秒重新拉取一次，进行一个更新</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052042295.png\" alt=\"image-20231005204255542\"></p>\n<p>消费者拿到服务列表以后再去负载均衡挑选一个发起远程调用就可以了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052045232.png\" alt=\"image-20231005204549665\"></p>\n<p>但是 nacos 与 eureka 还是有一些差别，差别就在于服务提供者的健康检测</p>\n<p>nacos 会把<mark>服务提供者划分成</mark><strong>临时实例</strong>和<strong>非临时实例</strong>。</p>\n<p>在 nacos 页面中挑选一个服务查看 详情就可以看到 临时实例还是非临时实例了</p>\n<p>如下图，nacos 中默认就是临时实例，而临时实例与非临时实例在 nacos 中做健康监测是不一样的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052048533.png\" alt=\"image-20231005204834080\"></p>\n<h4 id=\"461-临时实例\"><a class=\"markdownIt-Anchor\" href=\"#461-临时实例\">#</a> 4.6.1、临时实例🌲</h4>\n<p>临时实例，听其名认为它是将来可能人为的把服务停掉的，所以它在 nacos 中做健康监测时采用的是心跳检测</p>\n<p>如果服务提供者心跳不跳了超过时间就会被 nacos 从服务列表中剔除</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052051280.png\" alt=\"image-20231005205144644\"></p>\n<h4 id=\"462-非临时实例\"><a class=\"markdownIt-Anchor\" href=\"#462-非临时实例\">#</a> 4.6.2、非临时实例🌲</h4>\n<blockquote>\n<p>非临时实例中 nacos 不会去做心跳，那么这时健康监测是怎么监测的呢？</p>\n<p>是由 nacos 主动发请求去询问服务提供者：“诶！你还活着吗？”，如果它没回应 nacos 并不会将它从服务列表中剔除而是标记为不健康了，它们等着这个服务恢复健康</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052056840.png\" alt=\"image-20231005205645566\"></p>\n<p>这是一个 nacos 与 eureka 之间的差别，但是还有一个差别在于消费者</p>\n<p>eureka 采用的是定时拉取每隔 30 秒拉取一次，如果有服务提供者在 30 秒内挂掉了那消费者不知道吧，它不知道提供者挂了还直接去消费就会出问题了。</p>\n<p>所以 eureka 做服务定时拉取它服务列表更新的这个效率比较差 (更新不够及时)</p>\n<p>而 nacos 它做了一个叫推送消息。也就是 eureka 采用的是 pull，而 nacos 采用的是 pull+push 两者结合</p>\n<p>假设 nacos 发现服务提供者挂了，它就会立即发送一条消息推送给我们的服务消费者，然后服务消费者就赶紧更新</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052101513.png\" alt=\"image-20231005210145076\"></p>\n<p>这就是 eureka 与 nacos 之间的一些差别了！</p>\n<h4 id=\"463-临时实例和非临时实例\"><a class=\"markdownIt-Anchor\" href=\"#463-临时实例和非临时实例\">#</a> 4.6.3、临时实例和非临时实例🌲</h4>\n<p>服务注册到 nacos 时，可以选择注册为临时实例或非临时实例，通过下面的配置来设置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">ephemeral</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 设置是否为临时实例 设置为非临时实例</span></pre></td></tr></table></figure><p>临时实例宕机时，会从 nacos 的服务列表中剔除，而非临时实例则不会</p>\n<p>​\t在 order-service 中进行配置为非临时实例，再去 nacos 中查看 orderservice 的详情</p>\n<p>可以看到临时实例为 false，表示为非临时实例了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052131922.png\" alt=\"image-20231005213059792\"></p>\n<p>这时我们将 order-service 服务停掉</p>\n<p>由于是非临时实例，就算服务提供者挂掉了 注册中心 也不会将其从服务列表中剔除掉，标红表示这个服务挂掉了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052132484.png\" alt=\"image-20231005213247819\"></p>\n<p>如果改为临时实例</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token key atrule\">ephemeral</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 设置是否为临时实例 设置为非临时实例</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052134138.png\" alt=\"image-20231005213417852\"></p>\n<p>我们再次将 order-service 服务停掉，然后再刷新页面或者返回到这个页面时发现关掉的服务被 注册中心 给剔除掉了不在服务列表中了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310052134361.png\" alt=\"image-20231005213452133\"></p>\n<h5 id=\"4631-cap理论\"><a class=\"markdownIt-Anchor\" href=\"#4631-cap理论\">#</a> 4.6.3.1、CAP 理论🌴</h5>\n<p>C 一致性，A 高可用，P 分区容错性</p>\n<ul>\n<li>\n<p>eureka 只支持 AP</p>\n</li>\n<li>\n<p>nacos 支持 CP 和 AP 两种</p>\n<p>nacos 是根据配置识别 CP 或 AP 模式，如果注册 Nacos 的 client 节点注册时是 ephemeral=true 即为临时节点，那么 Nacos 集群对这个 client 节点效果就是 AP，反之则是 CP，既不是临时节点</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>Nacos 与 eureka 的共同点\n<ol>\n<li>都支持服务注册和服务拉取</li>\n<li>都支持服务提供者心跳方式做健康检测</li>\n</ol>\n</li>\n<li>Nacos 与 Eureka 的区别\n<ol>\n<li>Nacos 支持服务端主动检测提供者状态：\n<ol>\n<li>临时实例采用心跳模式</li>\n<li>非临时实例采用主动检测模式</li>\n</ol>\n</li>\n<li>临时实例心跳不正常会被剔除，非临时实例则不会被剔除 (除非手动删除)</li>\n<li>Nacos 支持服务列表变更的消息推送模式，服务列表更新及时</li>\n<li>Nacos 集群默认采用 AP 方式，当集群中存在非临时实例时，采用 CP 模式；Eureka 采用 AP 方式</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"47-nacos配置管理\"><a class=\"markdownIt-Anchor\" href=\"#47-nacos配置管理\">#</a> 4.7、Nacos 配置管理🌳</h3>\n<ul>\n<li>统一配置管理</li>\n<li>配置热更新</li>\n<li>配置共享</li>\n<li>搭建 Naocs 集群</li>\n</ul>\n<h4 id=\"471-统一配置管理\"><a class=\"markdownIt-Anchor\" href=\"#471-统一配置管理\">#</a> 4.7.1、统一配置管理🌲</h4>\n<p>上面学习我们搭建了两个微服务，每个服务里面的业务都需要完成数据库的查询，并且服务之间还会有一个相互调用。而完成相互调用我们的做法是让服务注册到注册中心，然后消费者就可以从注册中心完成服务的发现，实现服务获取和负载均衡。完成远程调用</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060840065.png\" alt=\"image-20231006084042876\"></p>\n<p>那么随着我们微服务越来越多，我们在生产环境中可能会达到数十上百甚至上千台服务器的情况，这时就有一个问题。</p>\n<p><font color='red'><strong>问题一</strong></font>：如果我们修改一个配置文件而这个配置文件可能跟我数十上百个微服务都有关系，那这个时候我是不是要逐个微服务去调整配置呢？</p>\n<p>这样很麻烦。</p>\n<p><font color='red'><strong>问题二</strong></font>：修改配置后这些关联的服务是不是都需要重启啊</p>\n<p>所以我们的需求就是可以将配置文件进行<mark>统一的管理</mark>.</p>\n<p><strong>统一管理</strong>：我不需要修改数十上百个微服务的配置文件而是只需要修改一个地方的配置文件就可以了。</p>\n<ul>\n<li>\n<p><strong>配置更改热更新</strong>.</p>\n<p>希望配置更改后不需要重启，而可以立马生效这就是 <mark>配置更改热更新</mark>.</p>\n</li>\n</ul>\n<p>而要实现 “配置更改热更新” 我们就需要一个 “配置管理服务”</p>\n<blockquote>\n<p><strong>配置管理服务的作用</strong>：</p>\n<p>会去记录微服务中的一些核心的配置，那么微服务启动的时候就可以去读取 <mark>配置管理服务</mark> 中的配置再和本地的配置结合作为完整配置去使用了。将来如果配置要发生修改我们不需要逐个服务修改，而是找到 <mark>配置管理服务</mark> 在它上面把需要修改的配置修改一下，<mark>配置管理服务</mark> 发现配置修改了以后它会立即<mark>通知微服务</mark>，微服务再去读取 <mark>配置管理服务</mark> 中修改后的配置文件并且不用重启进行热更新生效</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060900914.png\" alt=\"image-20231006090015625\"></p>\n<p>我们使用的是 nacos 的配置管理，而我们知道 nacos 已经有注册中心功能了。所以我们配置中心也好，注册中心也好，同时都是由 nacos 去实现的。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060902958.png\" alt=\"image-20231006090222743\"></p>\n<p>1、在 Nacos 中添加配置信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060916710.png\" alt=\"image-20231006091626481\"></p>\n<p>2、在弹出表单中填写配置信息：</p>\n<p><font color='red'>注意项</font>：</p>\n<ol>\n<li>DataId：需要具备唯一性</li>\n<li>配置内容：只需要配置有热更新需求的内容而不是将服务中配置文件的内容全拷贝进去</li>\n</ol>\n<p>填写完毕后，点击发布</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061049488.png\" alt=\"image-20231006104947319\"></p>\n<p>3、发布完成后返回查看</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060915386.png\" alt=\"image-20231006091517632\"></p>\n<p>先看如下图 没有 Nacos 时服务如何获取配置，配置获取的步骤如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060921217.png\" alt=\"image-20231006092110607\"></p>\n<p>上面流程中读取的是本地的配置文件，但现在我们多了一个东西就是 nacos 中的配置文件。</p>\n<p>将来我们的项目会把 nacos 的配置与本地配置做一个合并而后再去完成后续的容器创建 bean 的创建动作。</p>\n<p>所以 nacos 读取要加入到上面流程当中那么就会变成如下的步骤：</p>\n<p>项目启动先读取 nacos 配置文件再去读取本地配置文件两者合并最后创建 bean</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060925392.png\" alt=\"image-20231006092504157\"></p>\n<p><font color='red'>问题</font>：</p>\n<ul>\n<li><strong>第一</strong>：去哪读取</li>\n<li><strong>第二</strong>：读取谁</li>\n</ul>\n<p>我们读取 nacos 配置文件时需要提前知道 nacos 的地址，那么需要一个启动优先级高于 application.yml 的东西来存储 nacos 地址。</p>\n<p>此时，可以使用 “bootstrap.yml” 配置文件，这是 SpringBoot 中提供的。这个文件的优先级高于 application.yml</p>\n<p>当项目启动优先读取 “bootstrap.yml” 配置文件，我们只要把 nacos 地址，文件相关信息都配置进去那么它就可以完成 nacos 配置的读取了。而后再跟本地结合完成后续动作</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310060930844.png\" alt=\"image-20231006093027358\"></p>\n<p><strong>那么就需要注意了</strong>：</p>\n<ul>\n<li><mark>与 nacos 地址和配置文件有关的所有信息都应该放到 “bootstrap.yml” 当中</mark>。</li>\n</ul>\n<h4 id=\"472-操作步骤\"><a class=\"markdownIt-Anchor\" href=\"#472-操作步骤\">#</a> 4.7.2、操作步骤：🌲</h4>\n<p>1、引入 Nacos 的配置管理客户端依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--nacos 配置管理依赖 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-nacos-config<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、在 userservice 中的 resource 目录添加一个<font color='red'>bootstrap.yml</font>文件，这个文件是引导文件，优先级高于 application.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 配置文件后缀名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 三要素：服务名称，环境，后缀名 而这三个决定了 DateId</span></pre></td></tr></table></figure><p>多环境配置和共享配置 不在本案例范围中，只是演示可以这样做</p>\n<p>多环境配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">-</span>service</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 命名空间</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> xuecheng<span class=\"token punctuation\">-</span>plus<span class=\"token punctuation\">-</span>project <span class=\"token comment\"># 组名称</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 文件后缀</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">refresh-enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否开启自动刷新值</span></pre></td></tr></table></figure><p>共享配置 / 扩展配置</p>\n<p>多个扩展配置的案例如下：</p>\n<p><a href=\"https://pigpigletsgo.github.io/computer-science/java/spring/springcloud/Nacos/%E6%A1%88%E4%BE%8B/%E6%8B%86%E5%88%86%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0nacos%E5%B9%B6%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%90%8C%E9%85%8D%E7%BD%AE%E5%88%B0%E9%A1%B9%E7%9B%AE/\">案例文章</a></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">-</span>api <span class=\"token comment\"># 服务名</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> xuecheng<span class=\"token punctuation\">-</span>plus<span class=\"token punctuation\">-</span>project</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 配置文件相关信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> xuecheng<span class=\"token punctuation\">-</span>plus<span class=\"token punctuation\">-</span>project</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">refresh-enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># 共享配置 / 扩展配置</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token key atrule\">extension-configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">-</span>service<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">&#123;</span>spring.profiles.active<span class=\"token punctuation\">&#125;</span>.yaml</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> xuecheng<span class=\"token punctuation\">-</span>plus<span class=\"token punctuation\">-</span>project</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\">#环境名</span></pre></td></tr></table></figure><p>3、我们在 user-service 中将 pattern.dateformat 这个属性注入到 UserController 中做测试：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 注入 nacos 中的配置属性</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;pattern.dateformat&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> dateformat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 编写 controller，通过日期格式化器来格式化现在时间并返回</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dateFormat = \"</span><span class=\"token operator\">+</span>dateformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPattern</span><span class=\"token punctuation\">(</span>dateformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、请求接口查看结果</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061054265.png\" alt=\"image-20231006105444087\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061056279.png\" alt=\"image-20231006105458931\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>将配置交给 nacos 管理的步骤</p>\n<ol>\n<li>在 nacos 中添加配置文件</li>\n<li>在微服务中引入 nacos 的 config 依赖</li>\n<li>在微服务中添加 bootstrap.yml，配置 nacos 地址，当前环境，服务名称，文件后缀名。这些决定了程序启动时去 nacos 读取哪个文件，写错一个就会报错！</li>\n</ol>\n</blockquote>\n<h4 id=\"473-配置自动刷新\"><a class=\"markdownIt-Anchor\" href=\"#473-配置自动刷新\">#</a> 4.7.3、配置自动刷新🌲</h4>\n<p>我们改一下 nacos 中配置文件的信息，点击编辑进行修改指定的 nacos 配置文件信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061058197.png\" alt=\"image-20231006105819948\"></p>\n<p>原来的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061057556.png\" alt=\"image-20231006105744125\"></p>\n<p>修改后的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061059763.png\" alt=\"image-20231006105913419\"></p>\n<p>修改完点击发布，然后再去请求获取日期格式化的接口</p>\n<p>可以看到没有变化</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061100940.png\" alt=\"image-20231006110004691\"></p>\n<p>要想实现配置的自动更新我们需要如下操作：</p>\n<p>Nacos 中的配置文件变更后，微服务无需重启就可以感知。不过需要通过下面两种配置实现：</p>\n<h5 id=\"474-refreshscope\"><a class=\"markdownIt-Anchor\" href=\"#474-refreshscope\">#</a> 4.7.4、@RefreshScope🌴</h5>\n<ul>\n<li>方式一：在 @Value 注入的变量所在类上添加注解 @RefreshScope</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061103130.png\" alt=\"image-20231006110317505\"></p>\n<p>加上注解后重启服务，因为上次的更改没有生效这里又将 nacos 配置文件的信息改为原来的了。再次进行修改测试</p>\n<p>修改前</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061106769.png\" alt=\"image-20231006110621029\"></p>\n<p>修改后</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061107482.png\" alt=\"image-20231006110720366\"></p>\n<p>在没有重启服务的情况下刷新两下从 nacos 配置文件中获取的格式化日期就发生了改变，说明热更新生效了。</p>\n<h5 id=\"475-configurationproperties\"><a class=\"markdownIt-Anchor\" href=\"#475-configurationproperties\">#</a> 4.7.5、@ConfigurationProperties🌴</h5>\n<ul>\n<li>方式二：使用 @ConfigurationProperties 注解</li>\n</ul>\n<p>通过 @ConfigurationProperties 注解读取一个前缀为 pattern 的配置信息 (约定大于配置)</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061113170.png\" alt=\"image-20231006111308948\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061120271.png\" alt=\"image-20231006112043132\"></p>\n<p>重启服务，测试结果</p>\n<p>修改前</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061122192.png\" alt=\"image-20231006112226998\"></p>\n<p>修改后</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061123665.png\" alt=\"image-20231006112303423\"></p>\n<p>刷新页面</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061123281.png\" alt=\"image-20231006112317230\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Nacos 配置更改后，微服务可以实现热更新，方式：</p>\n<ol>\n<li>通过 @Value 注解注入，结合 @RefreshScope 来刷新</li>\n<li>通过 @ConfigurationProperties 注入，自动刷新 (建议使用，因为方便)</li>\n</ol>\n<p><font color='red'><strong>注意事项</strong></font>：</p>\n<ul>\n<li>不是所有的配置都适合放到配置中心，维护起来比较麻烦</li>\n<li>建议将一些关键参数，需要运行时调整的参数放到 nacos 配置中心，一般都是自定义配置</li>\n</ul>\n</blockquote>\n<h4 id=\"474-多环境配置共享\"><a class=\"markdownIt-Anchor\" href=\"#474-多环境配置共享\">#</a> 4.7.4、多环境配置共享🌲</h4>\n<blockquote>\n<p>场景：</p>\n<p>有一个配置属性，它在开发，生产和测试等环境下的值都是一样的，那像这样的配置我在每个配置文件里都写一份。是不是有点浪费呀，而且将来如果要改动我还得在每个配置文件都去改这样很麻烦。我们想找一个地方我配置一次以后不管环境怎么变这个配置都能够被加载。那这就是多环境共享的需求了！</p>\n</blockquote>\n<p>微服务启动时会从 nacos 读取多个配置文件：</p>\n<p>第一个：它的构成有三部分</p>\n<ol>\n<li>服务名称</li>\n<li>环境</li>\n<li>后缀名</li>\n</ol>\n<ul>\n<li>[<a href=\"http://spring.application.name\">spring.application.name</a>]-[spring.profiles.active].yaml，例如：userservice-dev.yaml</li>\n</ul>\n<p>第二个：它的构成有二部分，跟环境没有关系</p>\n<ol>\n<li>服务名称</li>\n<li>后缀名</li>\n</ol>\n<ul>\n<li>[<a href=\"http://spring.application.name\">spring.application.name</a>].yaml，例如：userservice.yaml</li>\n</ul>\n<p>无论 profile 如何变化，[<a href=\"http://spring.application.name\">spring.application.name</a>].yaml 这个文件一定会加载，因此多环境共享配置可以写入这个文件</p>\n<blockquote>\n<p>比如说如下图，有 dev.yaml 和 userservice.yaml 将来有测试环境在定义一个 userservice-test.yaml。但是不管是 dev 还是 userservice-test，userservice.yaml 一定会被共享</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061141107.png\" alt=\"image-20231006114137708\"></p>\n<p>编写获取 envSharedValue 的代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"pattern\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PatternProperties</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> dateformat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> envSharedValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Slf4j</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PatternProperties</span> patternProperties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PatternProperties</span> <span class=\"token function\">patternProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> patternProperties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>启动 user-service 服务！</p>\n<p>但是需要注意当前服务的环境：</p>\n<p>当前处于 dev 开发环境下，所以既可以访问到 userservice 环境也可以访问到 dev 环境</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 配置文件后缀名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 三要素：服务名称，环境，后缀名 而这三个决定了 DateId</span></pre></td></tr></table></figure><p>然后再启动一个 test 环境的服务这次不修改配置文件中的代码，而是在 idea 启动参数中设置 环境</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061210818.png\" alt=\"image-20231006121029595\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061211188.png\" alt=\"image-20231006121106691\"></p>\n<p>两个服务启动完成后，进行请求 user-service 服务：</p>\n<p>访问：<a href=\"http://127.0.0.1:8081/user/prop\">http://127.0.0.1:8081/user/prop</a> 这是 dev 环境，可以看到显示了 格式化日期和 envSharedValue 信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061234508.png\" alt=\"image-20231006123404747\"></p>\n<p>访问：<a href=\"http://127.0.0.1:8082/user/prop\">http://127.0.0.1:8082/user/prop</a> 这是 test 环境，可以看到依然可以获取到 userservice 环境的值，而 dev 环境的格式化日期的值获取不到了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061234043.png\" alt=\"image-20231006123455577\"></p>\n<p>同上测试可以证明，8081：dev 环境，8082：test 环境。都均可以得到 userserivce 环境的值</p>\n<p>证明了 userservice.yaml 文件是被不同环境所共享的。</p>\n<h5 id=\"4741-测试配置文件优先级\"><a class=\"markdownIt-Anchor\" href=\"#4741-测试配置文件优先级\">#</a> 4.7.4.1、测试配置文件优先级🌴</h5>\n<p>假如说 userservice 与 dev 配置文件中有相同的属性那它会以谁的为准呢？</p>\n<p>测试一、在本地和远端都配置相同的属性看看以谁的为准</p>\n<p>在本地配置文件中配置一个值</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">pattern</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 本地环境local</pre></td></tr></table></figure><p>在 PatternProperties 类中也加上这个属性</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"pattern\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PatternProperties</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> dateformat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> envSharedValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再到 nacos 控制台中给 userservice 环境加上这个属性</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061245246.png\" alt=\"image-20231006124535158\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061245100.png\" alt=\"image-20231006124517976\"></p>\n<p>重启 user-service 服务。请求 user-service 的 url：<a href=\"http://127.0.0.1:8081/user/prop\">http://127.0.0.1:8081/user/prop</a></p>\n<p>结果是 userservice 环境中的属性值。这就证明了 本地与远端，远端的优先级高！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061247510.png\" alt=\"image-20231006124719747\"></p>\n<p>我们再将 nacos 控制台中的 dev 环境也加上这个属性</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061249639.png\" alt=\"image-20231006124900533\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061249996.png\" alt=\"image-20231006124929760\"></p>\n<p>再去请求 user-service 的 url：<a href=\"http://127.0.0.1:8081/user/prop\">http://127.0.0.1:8081/user/prop</a></p>\n<p>这次结果是自己的环境配置的属性值了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061251197.png\" alt=\"image-20231006125141160\"></p>\n<h5 id=\"4742-多种配置的优先级\"><a class=\"markdownIt-Anchor\" href=\"#4742-多种配置的优先级\">#</a> 4.7.4.2、多种配置的优先级：🌴</h5>\n<ul>\n<li>服务名 - profile.yaml &gt; 服务名称.yaml &gt; 本地配置</li>\n</ul>\n<center>优先级关系图</center>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061254076.png\" alt=\"image-20231006125407644\"></p>\n<p>如果想让本地配置优先则配置如下内容：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 配置本地优先</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token key atrule\">override-none</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>微服务会从 nacos 读取的配置文件：</p>\n<ol>\n<li>[服务名]-[spring.profile.active].yaml，环境配置</li>\n<li>[服务名].yaml，默认配置，多环境共享</li>\n</ol>\n<p>优先级：</p>\n<ul>\n<li>[服务名]-[环境].yaml &gt; [服务名].yaml &gt; 本地配置</li>\n</ul>\n</blockquote>\n<h4 id=\"475-nacos集群搭建\"><a class=\"markdownIt-Anchor\" href=\"#475-nacos集群搭建\">#</a> 4.7.5、Nacos 集群搭建🌲</h4>\n<p>Nacos 生产环境下一定要部署为集群状态，部署方式参考课前资料中的文档：</p>\n<blockquote>\n<p>在前面的学习中我们学习到了 Nacos 的基本用法，不过之前我们一直使用的都是单点的 nacos。这种方式我们自己测试的时候玩玩可还行，如果是在企业生产环境下也这么搞。那可就要出大问题了。</p>\n<p>因为在企业当中我们更强调的是高可用所以 nacos 一定要做成一个集群，下面我们学习如何搭建 nacos 集群</p>\n</blockquote>\n<p>查看 nacos 配合 nginx 基本集群搭建：<a href=\"./Nacos/nacos%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.md\">nacos 集群搭建文章</a>.</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>集群搭建步骤：</p>\n<ol>\n<li>搭建 MySQL 集群并初始化数据库表</li>\n<li>下载解压 nacos</li>\n<li>修改集群配置 (节点信息)，数据库配置</li>\n<li>分别启动多个 nacos 节点</li>\n<li>nginx 反向代理</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/nacos%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/nacos%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/",
            "title": "Nacos集群搭建",
            "date_published": "2024-04-02T10:00:51.029Z",
            "content_html": "<h1 id=\"nacos集群搭建\"><a class=\"markdownIt-Anchor\" href=\"#nacos集群搭建\">#</a> Nacos 集群搭建</h1>\n<p>1. 集群结构图</p>\n<p>官方给出的 Nacos 集群图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439329.png\" alt=\"image-20210409210621117\"></p>\n<p>其中包含 3 个 nacos 节点，然后一个负载均衡器代理 3 个 Nacos。这里负载均衡器可以使用 nginx。</p>\n<p>我们计划的集群结构：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439932.png\" alt=\"image-20210409211355037\"></p>\n<p>三个 nacos 节点的地址：</p>\n<table>\n<thead>\n<tr>\n<th>节点</th>\n<th>ip</th>\n<th>port</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nacos1</td>\n<td>192.168.150.1</td>\n<td>8845</td>\n</tr>\n<tr>\n<td>nacos2</td>\n<td>192.168.150.1</td>\n<td>8846</td>\n</tr>\n<tr>\n<td>nacos3</td>\n<td>192.168.150.1</td>\n<td>8847</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"2搭建集群\"><a class=\"markdownIt-Anchor\" href=\"#2搭建集群\">#</a> 2. 搭建集群</h1>\n<p>搭建集群的基本步骤：</p>\n<ul>\n<li>搭建数据库，初始化数据库表结构</li>\n<li>下载 nacos 安装包</li>\n<li>配置 nacos</li>\n<li>启动 nacos 集群</li>\n<li>nginx 反向代理</li>\n</ul>\n<h2 id=\"21初始化数据库\"><a class=\"markdownIt-Anchor\" href=\"#21初始化数据库\">#</a> 2.1. 初始化数据库</h2>\n<p>Nacos 默认数据存储在内嵌数据库 Derby 中，不属于生产可用的数据库。</p>\n<p>官方推荐的最佳实践是使用带有主从的高可用数据库集群，主从模式的高可用数据库可以参考<strong>传智教育</strong>的后续高手课程。</p>\n<p>这里我们以单点的数据库为例来讲解。</p>\n<p>首先新建一个数据库，命名为 nacos，而后导入下面的 SQL：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_desc<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_use<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>effect<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c_schema<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfo_datagrouptenant<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_aggr   */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_aggr<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>datum_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'datum_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'内容'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfoaggr_datagrouptenantdatum<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>datum_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'增加租户字段'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_beta   */</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_beta<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>beta_ips<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'betaIps'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfobeta_datagrouptenant<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info_beta'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_info_tag   */</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_info_tag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'md5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source user'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'source ip'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configinfotag_datagrouptenanttag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_info_tag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">/*   表名称 = config_tags_relation   */</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>config_tags_relation<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tag_type'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'data_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'group_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_configtagrelation_configidtag<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tag_type<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'config_tag_relation'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">/*   表名称 = group_capacity   */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_capacity<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'Group ID，空字符表示整个集群'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>quota<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'配额，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>usage<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'使用量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'聚合子配置最大个数，，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_history_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'最大变更历史数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_group_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'集群、各Group容量信息表'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">/*   表名称 = his_config_info   */</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>his_config_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>group_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>app_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'app_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">longtext</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>md5<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>src_ip<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>op_type<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'租户字段'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>nid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_did<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>data_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'多租户改造'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\">/*   数据库全名 = nacos_config   */</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token comment\">/*   表名称 = tenant_capacity   */</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token comment\">/******************************************/</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_capacity<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'Tenant ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>quota<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'配额，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>usage<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'使用量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'聚合子配置最大个数'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_aggr_size<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>max_history_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'最大变更历史数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'租户容量信息表'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_info<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>kp<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'kp'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">''</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_desc<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'tenant_desc'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_source<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'create_source'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_create<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gmt_modified<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'修改时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>  <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_tenant_info_kptenantid<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>kp<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_tenant_id<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>tenant_id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_bin <span class=\"token keyword\">COMMENT</span><span class=\"token operator\">=</span><span class=\"token string\">'tenant_info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>users<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>password<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>enabled<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">boolean</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>roles<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>idx_user_role<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>permissions<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>resource<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>action<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uk_role_permission<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>resource<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>action<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> users <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> enabled<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'nacos'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> roles <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'nacos'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ROLE_ADMIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"22下载nacos\"><a class=\"markdownIt-Anchor\" href=\"#22下载nacos\">#</a> 2.2. 下载 nacos</h2>\n<p>nacos 在 GitHub 上有下载地址：<a href=\"https://github.com/alibaba/nacos/tags%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD%E3%80%82\">https://github.com/alibaba/nacos/tags，可以选择任意版本下载。</a></p>\n<p>本例中才用 1.4.1 版本：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439539.png\" alt=\"image-20210409212119411\"></p>\n<h2 id=\"23配置nacos\"><a class=\"markdownIt-Anchor\" href=\"#23配置nacos\">#</a> 2.3. 配置 Nacos</h2>\n<p>将这个包解压到任意非中文目录下，如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439220.png\" alt=\"image-20210402161843337\"></p>\n<p>目录说明：</p>\n<ul>\n<li>bin：启动脚本</li>\n<li>conf：配置文件</li>\n</ul>\n<p>进入 nacos 的 conf 目录，修改配置文件 cluster.conf.example，重命名为 cluster.conf：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440003.png\" alt=\"image-20210409212459292\"></p>\n<p>然后添加内容：</p>\n<p>集群中每一个节点的信息</p>\n<p>如果是在生产环境下那下面三个都应该是真实机器的 ip 地址和端口号</p>\n<pre><code>127.0.0.1:8845\n127.0.0.1.8846\n127.0.0.1.8847\n</code></pre>\n<p>然后修改 application.properties 文件，添加数据库配置</p>\n<p>将配置文件中如下的配置的注释全部去掉也就是打开</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.platform</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mysql</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">db.num</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">db.url.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">db.user.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">db.password.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061439107.png\" alt=\"image-20231006143926134\"></p>\n<h2 id=\"24启动\"><a class=\"markdownIt-Anchor\" href=\"#24启动\">#</a> 2.4. 启动</h2>\n<p>将 nacos 文件夹复制三份，分别命名为：nacos1、nacos2、nacos3</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440201.png\" alt=\"image-20210409213335538\"></p>\n<p>然后分别修改三个文件夹中的 application.properties，</p>\n<p>nacos1:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8845</span></pre></td></tr></table></figure><p>nacos2:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8846</span></pre></td></tr></table></figure><p>nacos3:</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8847</span></pre></td></tr></table></figure><p>然后分别启动三个 nacos 节点：</p>\n<p><font color='red'>注意</font>：此时启动不需要加参数了，直接启动即可。因为现在是集群启动 (默认)</p>\n<pre><code>startup.cmd\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061454156.png\" alt=\"image-20231006145123931\"></p>\n<p>然后依次访问一下 url 看看是否正常启动了</p>\n<p>正常启动了！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061453370.png\" alt=\"image-20231006145253400\"></p>\n<h2 id=\"25nginx反向代理\"><a class=\"markdownIt-Anchor\" href=\"#25nginx反向代理\">#</a> 2.5.nginx 反向代理</h2>\n<p>找到课前资料提供的 nginx 安装包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440828.png\" alt=\"image-20210410103253355\"></p>\n<p>解压到任意非中文目录下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061440364.png\" alt=\"image-20210410103322874\"></p>\n<p>修改 conf/nginx.conf 文件，配置如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token directive\"><span class=\"token keyword\">upstream</span> nacos-cluster</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8845</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8846</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:8847</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \t<span class=\"token directive\"><span class=\"token keyword\">location</span> /nacos</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://nacos-cluster</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>完整的配置文件信息：</p>\n<pre><code>\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '\n    #                  '$status $body_bytes_sent &quot;$http_referer&quot; '\n    #                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server &#123;\n        listen       88;\n        server_name  localhost;\n\n        location / &#123;\n            root   html;\n            index  index.html index.htm;\n        &#125;\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n\tupstream nacos-cluster &#123;\n    \t\tserver 127.0.0.1:8845;\n\t\tserver 127.0.0.1:8846;\n\t\tserver 127.0.0.1:8847;\n\t&#125;\n\n\tserver &#123;\n    \t\tlisten       80;\n    \t\tserver_name  localhost;\n\n    \t\tlocation /nacos &#123;\n        \t\tproxy_pass http://nacos-cluster;\n    \t\t&#125;\n\t&#125;\n&#125;\n</code></pre>\n<p>配置完成后启动 nginx，执行命令：start nginx.exe</p>\n<p>访问：<a href=\"http://localhost:88/%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE\">http://localhost:88 / 查看是否能正常访问</a></p>\n<p>nginx 启动成功！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061521543.png\" alt=\"image-20231006152139209\"></p>\n<p>而后在浏览器访问：<a href=\"http://localhost/nacos%E5%8D%B3%E5%8F%AF%E3%80%82\">http://localhost/nacos 即可。</a></p>\n<p>到这儿！集群搭建就成功了。看着像是访问的一个 nacos，事实上它会在三个 nacos 之间做一个负载均衡</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061522455.png\" alt=\"image-20231006152205310\"></p>\n<p>问题来了，java 代码该如何配呢，在 java 的 yml 配置文件中将 nacos 的服务地址改为对应的端口也就是 80 端口</p>\n<p>代码中 bootstrap.yml 文件配置如下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> localhost<span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token comment\"># nacos 地址，这里找的是 nginx 反向代理的地址它会根据负载均衡来启动 nacos</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 配置文件后缀名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 三要素：服务名称，环境，后缀名 而这三个决定了 DateId</span></pre></td></tr></table></figure><p>启动 user-service 服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061528874.png\" alt=\"image-20231006152811433\"></p>\n<p>我们查看 nacos 控制台中的服务列表。</p>\n<p>可以看到成功的注册进来了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061528168.png\" alt=\"image-20231006152847028\"></p>\n<p>我们创建一个配置文件，点击发布</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061544827.png\" alt=\"image-20231006154304156\"></p>\n<p>发布后查看数据库中的 config_info 表里面的信息，就可以看到多了一条信息就是创建的环境配置文件的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310061545446.png\" alt=\"image-20231006154339296\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>集群搭建步骤：</p>\n<ol>\n<li>搭建 MySQL 集群并初始化数据库表</li>\n<li>下载解压 nacos</li>\n<li>修改集群配置 (节点信息)，数据库配置</li>\n<li>分别启动多个 nacos 节点</li>\n<li>nginx 反向代理</li>\n</ol>\n</blockquote>\n<h2 id=\"26优化\"><a class=\"markdownIt-Anchor\" href=\"#26优化\">#</a> 2.6. 优化</h2>\n<ul>\n<li>\n<p>实际部署时，需要给做反向代理的 nginx 服务器设置一个域名，这样后续如果有服务器迁移 nacos 的客户端也无需更改配置.</p>\n</li>\n<li>\n<p>Nacos 的各个节点应该部署到多个不同服务器，做好容灾和隔离</p>\n</li>\n</ul>\n",
            "tags": [
                "计算机学科",
                "集群",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/Nacos%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Nacos/Nacos%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/",
            "title": "Nacos安装指南",
            "date_published": "2024-04-02T10:00:51.028Z",
            "content_html": "<h1 id=\"nacos安装指南\"><a class=\"markdownIt-Anchor\" href=\"#nacos安装指南\">#</a> Nacos 安装指南</h1>\n<h1 id=\"1windows安装\"><a class=\"markdownIt-Anchor\" href=\"#1windows安装\">#</a> 1.Windows 安装</h1>\n<p>开发阶段采用单机安装即可。</p>\n<h2 id=\"11下载安装包\"><a class=\"markdownIt-Anchor\" href=\"#11下载安装包\">#</a> 1.1. 下载安装包</h2>\n<p>在 Nacos 的 GitHub 页面，提供有下载链接，可以下载编译好的 Nacos 服务端或者源代码：</p>\n<p>GitHub 主页：<a href=\"https://github.com/alibaba/nacos\">https://github.com/alibaba/nacos</a></p>\n<p>GitHub 的 Release 下载页：<a href=\"https://github.com/alibaba/nacos/releases\">https://github.com/alibaba/nacos/releases</a></p>\n<p>如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218392.png\" alt=\"image-20210402161102887\"></p>\n<p>本课程采用 1.4.1. 版本的 Nacos，课前资料已经准备了安装包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218840.png\" alt=\"image-20210402161130261\"></p>\n<p>windows 版本使用 <code>nacos-server-1.4.1.zip</code>  包即可。</p>\n<h2 id=\"12解压\"><a class=\"markdownIt-Anchor\" href=\"#12解压\">#</a> 1.2. 解压</h2>\n<p>将这个包解压到任意非中文目录下，如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218669.png\" alt=\"image-20210402161843337\"></p>\n<p>目录说明：</p>\n<ul>\n<li>bin：启动脚本</li>\n<li>conf：配置文件</li>\n</ul>\n<h2 id=\"13端口配置\"><a class=\"markdownIt-Anchor\" href=\"#13端口配置\">#</a> 1.3. 端口配置</h2>\n<p>Nacos 的默认端口是 8848，如果你电脑上的其它进程占用了 8848 端口，请先尝试关闭该进程。</p>\n<p><strong>如果无法关闭占用 8848 端口的进程</strong>，也可以进入 nacos 的 conf 目录，修改配置文件中的端口：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218946.png\" alt=\"image-20210402162008280\"></p>\n<p>修改其中的内容：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218758.png\" alt=\"image-20210402162251093\"></p>\n<h2 id=\"14启动\"><a class=\"markdownIt-Anchor\" href=\"#14启动\">#</a> 1.4. 启动</h2>\n<p>启动非常简单，进入 bin 目录，结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218561.png\" alt=\"image-20210402162350977\"></p>\n<p>然后执行命令即可：</p>\n<ul>\n<li>\n<p>windows 命令：</p>\n<pre><code>startup.cmd -m standalone\n</code></pre>\n</li>\n</ul>\n<p>执行后的效果如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218179.png\" alt=\"image-20210402162526774\"></p>\n<h2 id=\"15访问\"><a class=\"markdownIt-Anchor\" href=\"#15访问\">#</a> 1.5. 访问</h2>\n<p>在浏览器输入地址：<a href=\"http://127.0.0.1:8848/nacos%E5%8D%B3%E5%8F%AF%EF%BC%9A\">http://127.0.0.1:8848/nacos 即可：</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218689.png\" alt=\"image-20210402162630427\"></p>\n<p>默认的账号和密码都是 nacos，进入后：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218382.png\" alt=\"image-20210402162709515\"></p>\n<h1 id=\"2linux安装\"><a class=\"markdownIt-Anchor\" href=\"#2linux安装\">#</a> 2.Linux 安装</h1>\n<p>Linux 或者 Mac 安装方式与 Windows 类似。</p>\n<h2 id=\"21安装jdk\"><a class=\"markdownIt-Anchor\" href=\"#21安装jdk\">#</a> 2.1. 安装 JDK</h2>\n<p>Nacos 依赖于 JDK 运行，所以 Linux 上也需要安装 JDK 才行。</p>\n<p>上传 jdk 安装包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218243.png\" alt=\"image-20210402172334810\"></p>\n<p>上传到某个目录，例如： <code>/usr/local/</code></p>\n<p>然后解压缩：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xvf</span> jdk-8u144-linux-x64.tar.gz</pre></td></tr></table></figure><p>然后重命名为 java</p>\n<p>配置环境变量：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/java</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin</pre></td></tr></table></figure><p>刷新环境变量：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/profile</pre></td></tr></table></figure><h2 id=\"22上传安装包\"><a class=\"markdownIt-Anchor\" href=\"#22上传安装包\">#</a> 2.2. 上传安装包</h2>\n<p>如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218879.png\" alt=\"image-20210402161102887\"></p>\n<p>也可以直接使用课前资料中的 tar.gz：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218287.png\" alt=\"image-20210402161130261\"></p>\n<p>上传到 Linux 服务器的某个目录，例如 <code>/usr/local/src</code>  目录下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218025.png\" alt=\"image-20210402163715580\"></p>\n<h2 id=\"23解压\"><a class=\"markdownIt-Anchor\" href=\"#23解压\">#</a> 2.3. 解压</h2>\n<p>命令解压缩安装包：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xvf</span> nacos-server-1.4.1.tar.gz</pre></td></tr></table></figure><p>然后删除安装包：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> nacos-server-1.4.1.tar.gz</pre></td></tr></table></figure><p>目录中最终样式：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218677.png\" alt=\"image-20210402163858429\"></p>\n<p>目录内部：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310051218771.png\" alt=\"image-20210402164414827\"></p>\n<h2 id=\"24端口配置\"><a class=\"markdownIt-Anchor\" href=\"#24端口配置\">#</a> 2.4. 端口配置</h2>\n<p>与 windows 中类似</p>\n<h2 id=\"25启动\"><a class=\"markdownIt-Anchor\" href=\"#25启动\">#</a> 2.5. 启动</h2>\n<p>在 nacos/bin 目录中，输入命令启动 Nacos：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sh</span> startup.sh <span class=\"token parameter variable\">-m</span> standalone</pre></td></tr></table></figure><h1 id=\"3nacos的依赖\"><a class=\"markdownIt-Anchor\" href=\"#3nacos的依赖\">#</a> 3.Nacos 的依赖</h1>\n<p>父工程：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-alibaba-dependencies<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2.5.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>import<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>客户端：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- nacos 客户端依赖包 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"4-docker安装nacos\"><a class=\"markdownIt-Anchor\" href=\"#4-docker安装nacos\">#</a> 4. Docker 安装 nacos</h1>\n<p>通过指定 Nacos 镜像的标签（tag）来选择特定版本。对于 Nacos 1.4.1 版本，你可以使用  <code>**1.4.1**</code>  标签。以下是在 Linux 的 Docker 中创建一个 Nacos 1.4.1 容器的步骤：</p>\n<ol>\n<li>\n<p><strong>拉取 Nacos 1.4.1 镜像</strong>:</p>\n<p>打开终端，执行以下命令拉取 Nacos 1.4.1 镜像：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull nacos/nacos-server:1.4.1</pre></td></tr></table></figure><p>这将从 Docker Hub 上下载 Nacos 1.4.1 版本的官方镜像</p>\n</li>\n<li>\n<p>创建数据库我们到数据库中先创建一个数据库名为 nacos 或者随意都行</p>\n<p>sql 表 到官网的 github 中 copy 就行了然后创建即可：<a href=\"https://github.com/alibaba/nacos/blob/master/config/src/main/resources/META-INF/nacos-db.sql\">https://github.com/alibaba/nacos/blob/master/config/src/main/resources/META-INF/nacos-db.sql</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240322085318286.png\" alt=\"image-20240322085318286\"></p>\n<p>2.1 创建挂在目录和配置文件如下</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /mydata/nacos/logs/                      <span class=\"token comment\">#新建 logs 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /mydata/nacos/init.d/          </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">vim</span> /mydata/nacos/init.d/custom.properties        <span class=\"token comment\">#修改配置文件</span></pre></td></tr></table></figure><p>修改 custom.properties 配置文件：</p>\n<p>把下面的数据库连接配置修改为自己的</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">server.contextPath</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/nacos</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">server.servlet.contextPath</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/nacos</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">server.port</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">8848</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.platform</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mysql</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">db.num</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">db.url.0</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://xx.xx.xx.x:3306/nacos_config? characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true #这里需要修改端口</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">db.user</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">user #用户名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">db.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">pass #密码</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">nacos.cmdb.dumpTaskInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">3600</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">nacos.cmdb.eventTaskInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">10</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">nacos.cmdb.labelTaskInterval</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">300</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">nacos.cmdb.loadDataAtStart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">management.metrics.export.elastic.enabled</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key attr-name\">management.metrics.export.influx.enabled</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">false</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">server.tomcat.accesslog.enabled</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">server.tomcat.accesslog.pattern</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">%h %l %u %t \"%r\" %s %b %D %&#123;User-Agent&#125;i</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key attr-name\">nacos.security.ignore.urls</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-fe/public/**,/v1/auth/login,/v1/console/health/**,/v1/cs/**,/v1/ns/**,/v1/cmdb/**,/actuator/**,/v1/console/server/**</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.distro.taskDispatchThreadCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.distro.taskDispatchPeriod</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">200</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.distro.batchSyncKeyCount</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1000</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.distro.initDataRatio</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">0.9</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.distro.syncRetryDelay</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">5000</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.data.warmup</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key attr-name\">nacos.naming.expireInstance</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">true</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>创建并运行 Nacos 容器</strong>:</p>\n<p>执行以下命令创建并运行 Nacos 容器：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span>  run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--name</span> nacos <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8848</span>:8848 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">--privileged</span><span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">JVM_XMS</span><span class=\"token operator\">=</span>256m <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">JVM_XMX</span><span class=\"token operator\">=</span>256m <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MODE</span><span class=\"token operator\">=</span>standalone <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">PREFER_HOST_MODE</span><span class=\"token operator\">=</span>hostname <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token parameter variable\">-v</span> /mydata/nacos/logs:/home/nacos/logs <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token parameter variable\">-v</span> /mydata/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>nacos/nacos-server</pre></td></tr></table></figure><p>可用设置：docker update --restart=always  nacos</p>\n<p>这将在后台运行一个名为  <code>**nacos-server**</code>  的容器，并将容器的 8848 端口映射到主机的 8848 端口。</p>\n<p>参数说明：</p>\n<ul>\n<li>-e MODE=standalone 单机启动</li>\n<li>–restart=always 启动 docker 时自动启动 nacos</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud",
                "Nacos"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/%E6%A1%88%E4%BE%8Bsql/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/%E6%A1%88%E4%BE%8Bsql/",
            "title": "es案例",
            "date_published": "2024-04-02T10:00:51.022Z",
            "content_html": "<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> Navicat Premium Data Transfer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> Source Server         : local</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> Source Server Type    : MySQL</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> Source Server Version : 50622</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> Source Host           : localhost:3306</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> Source Schema         : heima</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> Target Server Type    : MySQL</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> Target Server Version : 50622</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> File Encoding         : 65001</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> Date: 06/05/2021 18:31:05</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">SET</span> NAMES utf8mb4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">-- ----------------------------</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">-- Table structure for tb_hotel</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">-- ----------------------------</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span>  <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店名称'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>price<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店价格'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>score<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店评分'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>brand<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店品牌'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>city<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'所在城市'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>star_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店星级，1星到5星，1钻到5钻'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>business<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商圈'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>latitude<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'纬度'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>longitude<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'经度'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pic<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'酒店图片'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> <span class=\"token operator\">=</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> <span class=\"token operator\">=</span> utf8mb4_general_ci ROW_FORMAT <span class=\"token operator\">=</span> Compact<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">-- ----------------------------</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">-- Records of tb_hotel</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">-- ----------------------------</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">36934</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海宝山路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'静安交通路40号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">336</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四川北路商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.251433'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.47522'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3E/40/Cii9EVkyLrKIXo1vAAHgrxo_pUcAALcKQLD688AAeDH564_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">38609</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店(上海赤峰路店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广灵二路126号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四川北路商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.282444'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.479385'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/DF/96/Cii-TFkx0ImIQZeiAAITil0LM7cAALCYwKXHQ4AAhOi377_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">38665</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店上海中山北路兰田路店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'兰田路38号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">226</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'长风公园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.244288'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.422419'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/EF/86/Cii-Tlk2mV2IMZ-_AAEucgG3dx4AALaawEjiycAAS6K083_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">38812</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海漕溪路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'徐汇龙华西路315弄58号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">298</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'八万人体育场地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.174377'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.442875'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/E0/0E/Cii-TlkyIr2IEWNoAAHQYv7i5CkAALD-QP2iJwAAdB6245_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">39106</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（上海莘庄地铁站店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'闵行莘庄镇七莘路299号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">348</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'莘庄工业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.113812'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.375869'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/11/Cii-T1ku2zGIGR7uAAF1NYY9clwAAKxZAHO8HgAAXVN368_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">39141</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海五角场复旦同济大学店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'杨浦国权路315号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">349</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江湾、五角场商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.290057'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.508804'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/C7/E3/Cii-T1knFXCIJzNYAAFB8-uFNAEAAKYkQPcw1IAAUIL012_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">45845</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海西藏大厦万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥路100号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'徐家汇地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.192714'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.434717'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/48GNb9GZpJDCejVAcQHYWwYyU8T_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">45870</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海临港豪生大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新元南路555号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">896</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'滴水湖临港地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.871729'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.81959'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2F5HoQvBgypoDUE46752ppnQaTqs_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">46829</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦西万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'恒丰路338号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">726</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海火车站地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.242977'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.455864'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/x87VCoyaR8cTuYFZmKHe8VC6Wk1_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">47066</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦东东站华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'施新路958号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东机场核心区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.147989'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.759199'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2pNujAVaQbXACzkHp8bQMm6zqwhp_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">47478</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店(上海松江中心店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松江荣乐东路677号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">428</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'佘山、松江大学城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.016712'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.261606'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/filebroker/cdn/res/07/36/073662e1718fccefb7130a9da44ddf5c_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56201</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海齐鲁万怡大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东方路838号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东陆家嘴金融贸易区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.226031'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.525801'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-TF3eXKeIJeN7AASiKHbTtx4AAGRegDSBzMABKJA111_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56214</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦东华美达大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新金桥路18号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">830</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东金桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.244916'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.590752'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3jtXiuMKZEXJAuKuAkc47yLCjUBt_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56227</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海圣淘沙万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南桥镇南桥路1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'奉贤开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.910917'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.456525'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B9/Cii-U13eXSiIdJjXAARSA6FywFYAAGRnwHvy1AABFIb158_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56392</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海银星皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'番禺路400号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">809</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'徐家汇地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.202768'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.429524'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/37ucQ38K3UFdcRqntJ8M5dt884HR_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56852</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海财大豪生大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'武东路188号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">592</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江湾/五角场商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.304182'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.492936'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2jGHezLZvPZqC9cBGesbP5vAhCXi_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56912</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海华凯华美达广场酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'月华路9号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'奉贤开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.814382'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.464521'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/45iaCNCuZavJTxwTLskhVKzwynLD_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56977</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海五角场华美达大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'黄兴路1888号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江湾/五角场商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.292932'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.519759'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/26VREqAQdaGFvJdAJALVtjxcNMpL_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60214</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海金茂君悦大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'世纪大道88号（54楼办理入住）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">699</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'君悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东陆家嘴金融贸易区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.235152'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.506082'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/7Azm3jvGUHuXe3eS1DrixAWVTXY_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60223</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'静安华山路250号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2688</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'静安寺地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.219306'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.445427'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/filebroker/cdn/res/92/10/9210e74442aceceaf6e196d61fc3b6b1_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60359</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海外高桥皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'杨高北路1000号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3299</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东外高桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.338944'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.590611'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/VcKUM9zUSiVgDhFioc6mWQoX9ES_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60363</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海新世界丽笙大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南京西路88号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1341</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丽笙'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人民广场地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.23462'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.47327'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2j31b7X3YzGkf4Li3phS6TG1mtwm_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60398</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海复旦皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'邯郸路199号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">924</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江湾/五角场商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.295382'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.502537'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2H1Gk8LHaBWZfYvR6NYYcGTvACmL_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60487</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海外滩茂悦大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'黄浦路199号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">689</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'君悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'外滩地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.245409'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.492969'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2Swp2h1fdj9zCUKsk63BQvVgKLTo_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60522</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海嘉豪淮海国际豪生酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汾阳路1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">425</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'淮海路/新天地地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.215497'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.456297'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/38UBi4QYuaF8jN94CxQ7tb7tjtmZ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60916</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海绿地万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'沪宜公路3101号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">328</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'嘉定新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.368523'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.258567'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3VLwG9tTQQnp3M3MTeMTdx9nas9B_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60922</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海虹桥祥源希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'红松东路1116号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.18746'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.395312'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/tQRqDTFkHnHzMZiDKjcGV81ekvc_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">60935</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海虹口三至喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四平路59号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四川北路商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.2579'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.487954'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3C3gxLxLjVwnkxJwJm8rd3f38kcd_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">61075</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海雅居乐万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西藏中路555号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人民广场地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.236681'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.473529'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3FoT16PkXavKsssvktVvVq5Si6Cr_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">61083</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海滴水湖皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'自由贸易试验区临港新片区南岛1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">971</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'滴水湖临港地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.890867'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.937241'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/312e971Rnj9qFyR3pPv4bTtpj1hX_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">309208</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京王府井希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王府井东街8号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1679</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'天安门/王府井地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.914539'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.413392'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/10/Cii-TF3ePt2IX9UEAALb6VYBSmoAAGKMgGsuW8AAtwB147_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">394559</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京东方君悦大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'长安街1号东方广场'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">686</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'君悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'天安门/王府井地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.909635'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.414621'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3mFqcNSh7eEo9yc3Rw2P5HDNTdDe_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">394617</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京宝辰饭店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'建国门内大街甲18号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">418</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京站/建国门地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.905768'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.428153'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/NEYa6EfDHuhhb19Ct85WBbkKHZU_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">394796</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京新云南皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东北三环西坝河太阳宫桥东北角云南大厦'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">485</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'国展中心地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.972409'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.434698'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/dfP8K782eTsohQWSRdkd7St9LA2_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">395434</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东三环北路东方路1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'燕莎/朝阳公园商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.952703'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.462387'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3fwNbKGhk6XCrkdVyxwhC5uGpLVy_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">395702</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京首都机场希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'首都机场3号航站楼三经路1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">222</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'首都机场/新国展地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.048969'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.619566'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/10/Cii-U13ePtuIMRSjAAFZ58NGQrMAAGKMgADZ1QAAVn_167_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">395787</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京海航大厦万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'霄云路甲26号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1302</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'燕莎/朝阳公园商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.959861'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.467363'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3zFiWi2C9SmbcQwCZgJFQC9ahvs5_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">395799</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京国际艺苑皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王府井大街48号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">636</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'天安门/王府井地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.918994'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.411277'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/10/Cii-U13ePvyIahjPAAMykV278aEAAGKOQO9e4UAAzKp283_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">395815</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京明豪华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'天竺镇府前一街13号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">558</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'首都机场/新国展地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.062832'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.580678'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/13/Cii-U13eP2mIKCwvAAODTZXT-fAAAGKVAA9taIAA4Nl245_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">396189</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京朝阳悠唐皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三丰北里3号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">944</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三里屯/工体/东直门地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.92129'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.43847'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/tT6ipLain1ZovR5gnQ7tJ4KKym5_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">396471</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店（北京花园路店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海淀北太平庄花园路甲17号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马甸、安贞地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.970837'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.365244'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/filebroker/cdn/res/17/00/1700926908bae6ba3e5ef96de7b7d4cc_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">396506</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京金隅喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北三环东路36号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">357</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马甸/安贞地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.967163'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.4099'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/29FW2WtGzzUtPhWR1LKxcFZAVa9P_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">413460</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京天坛店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东城天坛东里甲48号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'前门、崇文门商贸区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.875786'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.421987'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/C7/D8/Cii-T1knCK6IWTtxAAI0plLButMAAKYTAJu-woAAjS-422_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">413476</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京南站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丰台马家堡西路22号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">478</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'永定门、南站、大红门、南苑地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.845363'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.372327'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/26/B7/Cii-U1knCtaISM4VAAHkEQd-mrAAAKw0ALVCwEAAeQp741_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">414168</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京西直门店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西城平安里西大街翠花街育幼胡同甲20-22号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西单、金融街地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.931338'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.364982'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/bc/66/bc666859edf4fc072a8006c66758058d_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">414481</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京团结湖地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳团结湖北里9号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'燕莎、三里屯商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.928457'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.466132'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/38/2D/Cii9EFkv2-uIPTaBAALX6P-rbdUAALPpwHv4ykAAtgA277_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">414698</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（北京798艺术区店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳北京市朝阳区酒仙桥北路（798艺术区北门）彩虹路6号-电通创意广场大院内'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">553</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'望京、酒仙桥、798地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.990671'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.498452'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/11/Cii-T1ku2zqIN7SiAAEdvT6RrjUAAKxZQKFooYAAR3V090_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">415600</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京朝阳北路传媒大学褡裢坡地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三间房乡褡裢坡村青年沟西侧558号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">259</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'传媒大学/管庄地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.923212'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.560023'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3NezpxNZWQMdNXibwbMkQuAZjDyJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">415659</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（北京紫竹桥店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海淀北洼路甲3号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">781</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西直门及北京展览馆地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.936138'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.302405'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3C/22/Cii9EVkxPMqIZJz-AAIh0esETAIAALXbgNQkH8AAiHp053_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">416121</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京西客站北广场店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'莲花池东路120-2号6层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京西站/丽泽商务区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.896449'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.317382'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/42DTRnKbiYoiGFVzrV9ZJUxNbvRo_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">416260</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京通州八里桥店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'永顺镇西马庄小区'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'果园环岛、通州区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.915443'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.631871'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/DF/5A/Cii-TlkxkeGIKM0oAAGOb64RvToAALBAAH9Fg8AAY6H201_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">416268</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京传媒大学财满街店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳路高井176号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">524</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'国贸地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.918277'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.53015'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/13/Cii-TF3eP5GIJIOLAAUwsIVCxdAAAGKXgK5a0IABTDI239_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">416307</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店(北京新国展首都机场后沙峪店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'后沙峪镇裕民大街32号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'首都机场/新国展地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.099019'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.543655'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/3E/Cii-TF3eRgGIHCkKAAP_ATvriiQAAGL0AIoLtUAA_8Z513_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">432335</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海北外滩国际客运中心地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'唐山路145号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北外滩地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.252585'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.498753'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/c1/ba/c1baf64418437c56617f89840c6411ef_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">433576</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海南京路步行街店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南京东路480号保安坊内'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">379</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人民广场地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.236454'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.480948'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/BA/Cii-U13eXVaIQmdaAAWxgzdXXxEAAGRrgNIOkoABbGb143_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">434082</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(上海外滩城隍庙小南门地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'复兴东路260号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豫园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.220706'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.498769'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-U13eXLGIdHFzAAIG-5cEwDEAAGRfQNNIV0AAgcT627_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">441836</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京国展三元桥店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西坝河东里36号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'国展中心地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.966238'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.450142'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/39/Cii-TF3eRTGITp1UAAYIilRD7skAAGLngIuAnQABgii479_w200_h200_c1_t0.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">485775</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海闵行华东师范大学吴泾店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'吴泾镇宝秀路977号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'交大/闵行经济开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.047135'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.46224'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/V8pz15CkiMX5xYJRmbbp5zkKWJ8_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">489756</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京平谷店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'文化北街4-16号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">544</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'平谷城区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.14308'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'117.111554'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/2e/b4/2eb4edb22ddb981307d8570beb1d746d_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">517915</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳草埔地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'布吉路1036号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'田贝/水贝珠宝城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.583191'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.118499'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/228vhBCQmFRFWQBYX1cgoFQb6x58_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">527938</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳好日子皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'福华一路28号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">590</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'会展中心/CBD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.537153'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.053529'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/b6Ztz5jn4MngK3Hzfxuu9JGsjrm_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">541619</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海莘庄地铁站龙之梦商业广场店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'莘庄镇莘浜路172号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'莘庄工业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.105797'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.37755'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3mKs3jETvJDj3dDdkRB9UyLLvPna_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">542068</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海茂业华美达广场酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'沪南路938号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">646</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东新国际博览中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.182761'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.554106'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2139uDFUZ2VKxrathwSeeE4DwyFU_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">546869</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳彭年万丽酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'嘉宾路2002号（毗邻金光华购物广场）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">701</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万丽'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖口岸/火车站'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.540989'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.122665'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/gwAbqEXFUpjUBmnxUfK89p3zBBT_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">581859</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店（北京丰益桥店）（原申晨酒店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丰台丰管路8号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">648</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京西站、丽泽商务区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.857707'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.312482'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/97/43/97438481b9e79abad429e5c30d7f303f_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">584697</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（深圳华强赛格广场店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华强南路3024号赛格苑1栋'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华强北商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.539831'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.087899'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/11/Cii-T1ku2zmIcP4sAAEw8iuLXFgAAKxZQH7HVYAATEK972_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">593228</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（北京颐和园店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海淀厢红旗路功德寺桥北侧'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">730</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'香山、八大处风景区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.003959'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.256718'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/55/84/55841f502c5a711e66dd5454b64f559b_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">598591</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海丽昂豪生大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'金新路99号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">529</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东金桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.252496'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.600085'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2KfPPyPx9rWyVXif2CUuxv61Nryc_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">607915</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳皇岗店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'滨河大道6033号海滨广场国皇大厦3楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">313</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇岗口岸/福田口岸'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.528101'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.064221'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/qMyCJVYuW21nsCeEBt8CMfmEhra_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">608374</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海浦东机场龙东大道合庆店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东川公路5863号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东机场核心区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.237662'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.718556'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/LUYxGGV4pzjKeN5a69K4deU8JD8_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">609023</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(上海外高桥保税区北地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'花山路1209号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">266</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东外高桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.351148'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.585606'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3cJ6KTfms9cfEnME8WRkQQBXBkYm_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">609372</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪派特华美达广场酒店(深圳北站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'民治街道梅龙路与民旺路交汇处'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳北站地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.620501'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.033874'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3G5TnUCPbjGYHAVWfvuixw8bs69t_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">624417</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳君悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安南路1881号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">442</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'君悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万象城/京基100'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.537247'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.111182'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EA/Cii-TF3ZpVmIVDJ9AAXvJftz_AgAAFrrQKbI4oABe89086_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">628327</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳罗湖口岸国贸地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人民南路2011号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖口岸/火车站'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.536734'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.118336'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2rKHmQWHYiY8GZA3xBHpFKCLZwZo_w200_h200_c1_t0.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">629023</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京十里河欢乐谷店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'十八里店乡周家庄288号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">390</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'劲松/潘家园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.853354'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.483437'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/28hnDdqn5uzuzCKYkw2x4pYmunXM_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">629729</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海张江高科园区店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东新区蔡伦路103号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">267</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东张江地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.196154'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.62071'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/d9/61/d961508a10865b9b29c033064f31b913_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">635963</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳龙岗珠江皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗中心城龙翔大道9009号珠江广场'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">737</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗中心区/大运新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.722941'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.250002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EA/Cii-U13ZpWGIasKjAAY1SNE36KMAAFrrwMNoAwABjVg973_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">636080</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳大中华喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'福华路一号大中华国际交易广场'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1556</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'会展中心/CBD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.535567'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.062005'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3hQRTmAUW9PegTjxMiEfYwh2HnKp_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">644417</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海外高桥喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'自由贸易试验区基隆路28号（二号门内）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东外高桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.350989'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.588751'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/1Rrtg9n7PdMEivVDhsehbJBrEre_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">648219</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海金桥红枫万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新金桥路15号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">891</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东金桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.244061'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.591153'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-TF3eXKuIR_a0AAUx-Xd2JLQAAGRfACSpvUABTIR560_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">657192</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳宝安中天美景华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新桥街道万丰社区中心路7-1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.716473'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.826391'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EA/Cii-U13ZpVeIRbhTAAOzGZSDtlcAAFrrQEWM-AAA7Mx626_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">659496</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店(深圳国王店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙华新区龙华龙观西路95号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">714</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳北站地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.65892'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.006817'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/b4/76/b476cacc575a7ff237128ba2fd63923a_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">670673</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京龙城华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'昌平路319号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'回龙观/天通苑地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.084219'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.304313'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/T3WruZV3S4MfcxdD1HFVhZjaBLW_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">672207</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐至尊酒店(北京望京798店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'酒仙桥北路9号荧屏里4号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">579</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'望京/酒仙桥/798地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.98835'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.491217'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2y56zwK8kd2tBuRUyF7XeJ2ucvWM_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">684720</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(深圳罗湖口岸火车地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'沿河南路1064号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖口岸/火车站'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.533753'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.122491'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2LFgB2iFawKKoGADwzhW6jpCSaJT_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">696948</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海新园华美达广场酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'漕宝路509号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'光大会展中心/漕河泾地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.163802'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.405618'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-TF3eXHuIE57sAAZx8iP6rMIAAGRbgAH09gABnIK621_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">706343</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京西客站北广场店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丰台莲花池东路126号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京西站、丽泽商务区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.896623'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.315586'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/E3/46/Cii-TlkzMXWIL0sAAAGG8a3YwiwAALJlgG-r5YAAYcJ067_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">707357</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店（上海南站光大店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'徐汇桂林路46号（钦州南路路口往南100米）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3288</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'光大会展中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.156297'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.419948'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/f7/13/f713f8f98d777d8d53aafefb37a79ef6_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">711837</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京立水桥店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳安立路3号1幢3层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">268</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'亚运村、奥体中心地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.043717'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.410962'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/b3/87/b3876eaf16af62521cf6fb474504b8ca_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">727679</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳步行街老街地铁站二店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖区东门中路2216号华佳广场12-14楼（东门天桥东头）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">742</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东门商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.54585'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.122227'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/39/99/Cii9EFkwVMKIP_mCAAI3fOHlS1wAALSDAMeO2MAAjeU309_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">728180</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(深圳宝安西乡地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西乡大道298-7号（富通城二期公交站旁）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">184</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安体育中心商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.569693'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.860186'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/FHdugqgUgYLPMoC4u4rdTbAPrVF_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">728415</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳东门步行街晒布地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'晒布路67号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东门商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.550183'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.120771'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/57/Cii-U13PFNWISSnQAAEpTtoilsQAAEVWgEvur8AASlm647_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">728461</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳会展中心店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新洲路世纪工艺品广场307栋'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">258</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇岗口岸/福田口岸'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.518026'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.046061'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/56/Cii-TF3PFKOIPl0JAANm4ge6DdMAAEVTQK2SP8AA2b6365_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">728604</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳南山地铁站南山市场店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南新路顺富街18号化州大厦'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.525561'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.920058'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/57/Cii-TF3PFLmIDGWiAAPHkaNTuOIAAEVVQBGazAAA8ep611_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">730454</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳万象城店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖区嘉宾路4025号城市天地广场内'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">552</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖口岸/火车站'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.537078'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.113733'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/C8/4C/Cii-Tlknhz2IFnYNAAInF2jEK14AAKbcQNB5M8AAicv660_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">730569</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳梅林卓越城店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'孖岭地铁口C出口左手边，青年学院对面'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'莲花山/梅林'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.568701'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.068464'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/0B/Cii-Tlku2dOISeGXAAAUw3MvPrIAAKxYALB2VAAABTb555_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">730968</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳宝安地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安区宝安25区创业二路步行街金麒麟服装广场4栋'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">314</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安中心区/前海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.568162'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.900968'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/0B/Cii-T1ku2cqIWTOOAAAS_bvRI5UAAKxXwILCFYAABMV285_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">751035</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海自贸区北门地铁站店)(原外高桥地铁北站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'花山路706号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">328</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东外高桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.348029'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.576896'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3A/21/Cii-U1kwxUCINXaHAAGmh7z6qRAAALUdwMKGREAAaaf928_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">844350</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳世界之窗店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南山区白石洲沙河街2号金三角大厦'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">769</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华侨城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.540501'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.968858'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/D8/11/Cii-TFku2zmIOdjCAAAQJpLFhEEAAKxZQIEvQ0AABA-920_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2316304</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(深圳双龙地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗街道龙岗墟社区龙平东路62号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗中心区/大运新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.730828'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.278337'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4AzEoQ44awd1D2g95a6XDtJf3dkw_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2329005</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店(深圳华之沙店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'福强路新洲九街28号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">651</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇岗口岸/福田口岸'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.524835'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.048214'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/88/f0/88f05cd11990ef39ae187886c76f40a5_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2351601</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳蛇口希尔顿南海酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'望海路1177号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">509</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳湾口岸/蛇口'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.479373'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.916013'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EA/Cii-TF3ZpXOIfa6fAAJjiUOiuYgAAFrtgDtgpQAAmOh799_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2359697</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京上地安宁庄东路店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'清河小营安宁庄东路18号20号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">420</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上地产业园/西三旗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.041322'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.333316'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2wj2f8mo9WZQCmzm51cwkZ9zvyp8_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5865979</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京丽都皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'将台路6号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'望京/酒仙桥/798地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.978133'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.478642'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/Yo4xL3RUsYUnDDc5QcQWj7sCrUX_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5870456</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海宝华万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广中西路333号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">922</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大宁国际商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.279371'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.446327'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/BA/Cii-U13eXVqIZXDFAAUC_xbrQDAAAGRrwPRyOcABQMX057_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5871652</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海圣诺亚皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'金沙江路1699号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">770</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'长风公园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.232346'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.377709'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/J4sP7qRSHa9rFYnKTW75ZPB393M_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5872067</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'崇明金茂凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'陈家镇揽海路799弄'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'崇明岛/长兴岛/横沙岛'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.466563'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.799671'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/fsKrbnNsmSsYnNLmhh3ZvVjZ5cA_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5873072</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（上海火车站北广场店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'闸北芷江西路796号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海火车站地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.255579'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.452903'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m2.tuniucdn.com/filebroker/cdn/res/96/6d/966d6596e6cb7b48c9cc1d7da79b57c8_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7094829</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳华强南店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松岭路9号（南园小学对面）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华强北商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.536842'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.094316'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3WDhaZZ9yALHw8yNiU6HJyrdC3u5_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">189429168</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(北京大兴黄村清源路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'清源西路55号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大兴农业生态观光区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.743751'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.321676'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/4F/25/Cii9EFk3LmOIFtnDAAHm5kdIiM8AAL1FQM8kG0AAeb-418_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197487869</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京第二外国语大学南门双桥地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三间房乡新房村1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'传媒大学/管庄地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.90635'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.565528'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/ZkgDAs8tTMvgFHdVPpikNqENEn1_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197488318</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京立水桥地铁南站店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳北苑路18号院3号楼4层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">344</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'亚运村、奥体中心地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.043689'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.414138'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/36/4D/Cii9EVkvP72IYYjgAAF7yZeWV-wAALMQACOARMAAXvh983_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197492277</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京平谷兴谷环岛店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'平谷平谷大街31号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">614</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'平谷城区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.159255'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'117.12401'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/38/D5/Cii9EFkwFCiII79zAAHKsXy_LAoAALQuQEmEZ4AAcrJ339_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197492479</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京顺义中心地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'光明南大街14号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">306</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'顺义温泉休闲区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.124783'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.65751'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2hNBSjmMTk6JQ2o8ixr5s3ioevhB_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197496182</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京团结湖地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'团结湖路9号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">341</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'燕莎/朝阳公园商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.930731'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.466602'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2gK41VpMb4AwyNkwQEkfFo83uTUU_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197496980</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店(北京温都水城王府店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'昌平北七家镇平西府村（温都水城东200米）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">585</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'小汤山温泉度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.10144'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.380641'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/C7/CB/Cii-T1km_5eICnpJAAHOWN1GylMAAKYJwF0Hp8AAc5w000_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197516492</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京南苑东高地店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丰台南大红门路东营房15号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">651</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'永定门、南站、大红门、南苑地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.78996'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.42081'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3B/D8/Cii-U1kxKGWIQlaxAAIdkjkSALkAALXDQMFbTsAAh2q158_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197835483</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳大学桃园店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南山区桃园西路160号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">431</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.532576'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.916362'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/38/40/Cii9EFkv4XKIQN85AAFUcDrkXe0AALPvwPRn08AAVSI037_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">197837109</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳龙岗大道布吉地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'布吉镇深惠路龙珠商城'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'布吉/深圳东站'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.602482'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.123284'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/58/Cii-TF3PFZOIA7jwAAKInGFN4xgAAEVbAGeP4AAAoi0485_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">198323591</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳北站龙华汽车站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙华新区建辉路2号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">209</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳北站地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.671313'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.02784'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2dkB2HzbaBUJ7adZZfZaeS9JCvjP_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200208940</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦东喜来登由由公寓'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦建路38号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东新国际博览中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.208553'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.518552'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/m3Nrm37Yx6YV4NwqRvSYnFRNSGk_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200210163</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海徐家汇宜山路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'徐汇钦州北路78号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'光大会展中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.180615'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.422916'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/DF/96/Cii-Tlkx0TOIGtOzAAEe_xcDxeIAALCZQJyxf4AAR8X941_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200214437</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦东机场华美达广场酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东机场启航路1100号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东机场核心区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.160969'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.799086'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2D2gbXDgrMx76uWfwzmoWpmSCCXx_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200214538</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海绿地万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江滨路99号（打浦路底）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">720</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'打浦桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.192103'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.47298'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/268jVMuWdYok5ehGFhQ2QNhBhUhs_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200214715</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海浦东喜来登由由大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦建路38号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2489</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东新国际博览中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.208739'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.518305'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/36t2KUGs4h5YgYSaLSkr5pMXLM54_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200214824</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海陆家嘴八佰伴店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'崂山路689号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东陆家嘴金融贸易区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.220656'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.525127'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3D/95/Cii9EVkx0JCIRDFfAAIMnl8npiYAALaawHMG2kAAgy2536_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200215226</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海颖奕皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'博园路6555号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">907</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'嘉定新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.272533'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.19179'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3Uyfi2aBRETE1K5PChiLVZCwtDLF_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200215286</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海万豪虹桥大酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥路2270号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">910</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.191529'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.375577'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-TF3eXK6IBQoRAAbgs1dyxJwAAGRfAPXbPQABuDL314_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200215365</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海虹桥漕河泾古北店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹梅路2971号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.180968'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.392415'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2WPfVp6auQkYoHzAdSbxwHAtQFfa_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200215548</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（上海虹桥枢纽九亭中心路店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松江九亭镇中心路128号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'七宝古镇'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.119363'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.322768'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/42/40/Cii-U1kziVOIGTw-AAGRMfcIwJwAALi6ACRnUsAAZFJ536_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200216665</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店（上海奉贤南桥中心店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'奉贤沪杭公路1758-8号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1289</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'奉贤开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.934646'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.451449'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/DC/A8/Cii-T1kw5leIQAA3AAFzNYtL4loAAK9OQOyk4sAAXNN152_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">219484323</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳观澜章阁店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安区章阁村桂月路章阁市场汇龙峰景一期A栋2-4层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">725</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'观澜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.746493'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.023'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3C/8C/Cii-U1kxXqaIeqeuAAHwF4GDmOcAALYFQI9zMMAAfAv100_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">223318960</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(深圳深南大道华强路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深南中路2081号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">637</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华强北商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.540313'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.088611'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2M7am7D8rPTeTQAhxqBeMSANaqGr_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">233036941</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(上海东林寺店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朱泾镇文商路79号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">218</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'金山枫泾古镇地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.895912'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.160238'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G4/M00/35/13/Cii_J1zr5PyIY3acAAFCnHJPxLUAAGX-ABvcIMAAUK0087_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">234719711</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(北京朝阳北路十里堡地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'朝阳北路八里庄南里26号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">378</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'国贸地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.922472'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.501118'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2rHdXNCmycnUxw99AniFC25ZDSfJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">234719728</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店（北京房山城关店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'房山城关镇城隍庙街10号(原房山老公安局)'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.705216'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'115.981904'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/3F/66/Cii9EFkyeImIB3ZVAAHcTtTFt4oAALdsgICDO0AAdxm378_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">235196477</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京总部基地店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丰葆路106号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">379</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'总部基地/丰台体育中心/南宫地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.815383'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.291012'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3J7Hcvwt5xZJL3NkS4wPJ6csmFb9_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">339777429</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海嘉定喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'菊园新区嘉唐公路66号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1286</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'嘉定新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.394595'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.245773'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2v2fKuo5bzhunSBC1n1E42cLTkZV_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">339952837</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京良乡西路店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'良乡西路7号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'房山风景区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.73167'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.132482'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3Dpgf5RTTzrxpeN5y3RLnRVtxMEA_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">343341695</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京中关村软件园店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东北旺西路8号中关村软件园一期9号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上地产业园/西三旗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.044663'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.29607'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3hSkPeWRQ3VK1heRQpHzJNMTanQz_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">365011120</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐酒店(北京石景山万达广场店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'鲁谷东街甲26号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">505</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'公主坟/五棵松/石景山游乐园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.895479'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.240386'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3iwohdQzyZP9azUkYAwTFj7WzBwd_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">368343863</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海金桥博兴路地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'博兴路1119号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">218</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东金桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.266272'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.593829'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/w5ERtGJEmdgdgy5qtLPatR1xfm4_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">368701368</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳大中华希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'福田深南大道1003号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1666</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'会展中心/CBD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.539313'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.069763'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4EnHseZ73LXdFJY7DSdJ8xqAcjXe_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1393017952</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳宝安松岗地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松岗镇河滨北路12号盛华大厦'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松岗商业中心区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.768912'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.83325'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4NehRjdHyZDKxTjAxTYv27FHq8LJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1400304687</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(深圳横岗地铁站新马商贸城店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗大道横岗段4004号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'龙岗中心区/大运新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.642629'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.202799'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/5A/Cii-TF3PFkiIb27dAAEqdDcKl3YAAEViQGVWY0AASqM960_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1406627919</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳中洲万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海德一道88号中洲控股中心A座'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海岸城/后海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.517293'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.933785'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3wsinQAcuWtCdmv1yxauVG2PSYpC_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1418471719</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海宝龙丽笙酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'金海路2449弄2号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">860</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丽笙'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦东金桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.26571'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.650132'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3myGUurFCriEVMGPy9yYMPFdb9Zh_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1455383931</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(深圳宝安客运中心站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西乡河西金雅新苑34栋'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.590272'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.881933'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2w9cbbpzjjsyd2wRhFrnUpBMT8b4_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1457521002</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店(深圳西丽茶光地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'珠光北路280号天下湘军1楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">517</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大学城/西丽动物园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.576187'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.956166'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/E3/E0/Cii-Tlkzdl6IfQYfAAHCgNVDe1sAALK6gPBDhQAAcKY242_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1463484295</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海和平豪生酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'沪南公路2653-2号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'豪生'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周浦康桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.146478'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.568218'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/ZxM9gWHqj657ndRsHw4j4p3CQ5k_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1514269829</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海东川路碧江商业广场店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东川路2645号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">218</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'交大/闵行经济开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.008875'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.402813'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/R92UunuCRXiG826G9Ptu7orqs7b_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1557882030</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳酒店（深圳东门老街店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖区东门新园路37号益德楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">336</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'维也纳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'东门商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.549413'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.118866'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/45/83/Cii9EFk0opCIPl9CAAKHl3Egm6oAALoKwLNWlwAAoev470_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1557997004</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海五角场凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'国定东路88号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'江湾/五角场商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.300645'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.51918'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3a3Zz9cDgbJEEJ1GcXzKhTh21YqK_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1565094427</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海国际旅游度假区万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'秀浦路3999弄17号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'迪士尼度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.132913'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.63464'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/KPBUPunPDETYWg8WaJDSmiZC65z_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1584362548</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(上海浦东国际旅游度假区御桥地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'御青路315-317号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">339</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周浦康桥地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.15719'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.572392'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2ybd3wqdoBtBeKcPxmyso9y1hNXa_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1630005459</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天连锁酒店（深圳地王大厦红桂路店）（原红桂路店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'罗湖区宝安南路2078号深港豪苑（与红桂路交汇处）'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7天酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.550341'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.10965'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G2/M00/EA/18/Cii-T1k1KaGIIkQVAAD4fD_T3FcAALTtABiCJ8AAPiU164_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1637944903</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店北京后海店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西城北京市西城区德胜门内大街兴华胡同五福里2号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'后海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.934452'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.38184'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/48/0C/Cii9EVk1JNuILdBWAAHv5O89TjMAALrFgJ8bwcAAe_8197_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1649956165</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海南青华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华夏东路811号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">299</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'迪士尼度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.195206'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.664791'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2RHmQgTpte3UVSDJ5KbqobbZGRnE_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1714520967</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8酒店(北京安华桥黄寺大街店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'黄寺大街12号院16号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'速8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马甸、安贞地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.962742'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.388431'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G1/M00/4A/21/Cii-U1k1o-uIdcUZAAIbmIKVlKAAALtvQGBb6kAAhuw170_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1725781423</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海三迪华美达酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广富林路600弄7号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">690</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'华美达'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'佘山/松江大学城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.058023'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.246536'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/NoHym6tuKwVazxy33wRNTNuQWd2_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1734220581</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳大鹏佳兆业店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大鹏街道新园街12号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">378</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'较场尾/大鹏所城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.592661'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.475167'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3nWzyWt63gtwPzRf5xbHvwKM27vU_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1754929048</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海环球港凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宁夏路718号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1336</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'中山公园商业区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.232041'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.412492'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/B6/Cii-U13ZY-CIF-8MAAXkwQoY7FIAAFpQgEE1bgABeTZ750_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1762661667</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳佳兆业万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'棕榈大道33号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'较场尾/大鹏所城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.569193'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.459325'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EC/Cii-TF3ZqE-IYM0NAAY6GIHLZNsAAFr2QDhR8EABjow444_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1765008760</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京西直门北京北站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西直门北大街49号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">356</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西直门/北京展览馆地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.945106'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.353827'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4CLwbCE9346jYn7nFsJTQXuBExTJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1880614409</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海崇明由由喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'揽海路2888号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2198</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'崇明岛/长兴岛/横沙岛'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.462167'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.823103'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/21gDCGgRT3xFqCd3FxBh633j6Qsu_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1889333146</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店(北京西客站丽泽桥店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'西三环南路44号-218'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">459</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京西站/丽泽商务区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.869638'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.313075'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/kG5corYUDC7U1qE8RAY6xCVnGxq_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1908594080</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海建工浦江皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'陈行公路3701号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">843</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'浦江镇地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.090063'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.489728'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/B7/Cii-U13ZZDWIePrGAAPyImW93N0AAFpRgMmj4MAA_I6005_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1913922369</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海中建万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'蟠文路333号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">889</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥机场/国家会展中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.185504'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.287709'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/39Afm5Bxgd784eMeFB5DrcsPnhT_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1916002015</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海苏宁环球万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丹巴路99号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">689</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'长风公园地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.22292'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.379912'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/svpYHdmVDck91NqAhjtngcXth2G_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1928731731</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海康桥万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'康新公路4499号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">811</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'迪士尼度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.119187'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.618966'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3inpPxTnvRjMCEB39K9FuHaXohYw_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1931442052</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳机场凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安国际机场地面交通中心（GTC）18号出口'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">291</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'宝安机场商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.622498'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.812341'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EC/Cii-TF3ZqVeIJcTPAAUq_Ou_CrcAAFr4gKufPUABSsU446_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1931602865</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳联投东方万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松岗东方大道46号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">688</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'松岗商业中心区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.760746'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.856961'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/EC/Cii-U13ZqVyIOjdpAARI9aeBh-IAAFr4gOQh7oABEkN297_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1937347815</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京望京凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广顺南大街8号院2号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">617</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'望京/酒仙桥/798地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.991546'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.476288'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2gLT4ZgJ8ZuS7sSmXzYoCXnV248p_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1942938880</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京乐多港万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'城南街道南口路29号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'昌平城区/十三陵度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.23264'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.188888'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3mBWaZeaqq54E7kX2n7g9b2CZX6q_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1942992995</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海嘉定凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'裕民南路1366号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">758</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'嘉定新城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.352298'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.263314'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/53/2D/Cii-U13edkqIfZhLAAJEW25WIF4AAGVxQIg38sAAkRz517_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1951709780</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳同泰万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'福海街道宝安大道 6259号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">617</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.678611'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.805695'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3oUfktphxMAWq9hUxD9uqdjRdZGB_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1973839294</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳湾万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技南路16号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">508</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.531101'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.950615'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/8C9QscRsvTWCx92wt17GAegEMFn_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1975922994</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家酒店·neo(深圳南山海岸城南油地铁站店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南商路84-6号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'如家'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海岸城/后海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.513566'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.9291'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/25/5E/Cii-TF3PGD-IQ0FcAAFIZC82AnkAAEVvAKdj4YAAUh8638_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1989806195</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳博林天瑞喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'留仙大道4088号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1369</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大学城/西丽动物园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.582918'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.97219'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4Rx55fZoneUeKbE3TCRSPB6WQ6bw_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1996823660</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海紫竹万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'紫星路588号3幢'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">642</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'交大/闵行经济开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.02118'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.465186'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/53/2F/Cii-TF3edraIPzK9AAH_p8vdHKoAAGV3AJgSVEAAf-_019_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1997830708</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐至尚酒店(北京上地软件园店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'清河小营西路48号汇苑仁和大厦一层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上地产业园/西三旗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.034623'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.323925'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2sKjxS1hFYyBFVKVBqo2x2hSFvGj_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2003479905</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海榕港万怡酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新松江路1277号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">798</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万怡'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'佘山/松江大学城'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.038198'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.210178'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2GM761BYH8k15qkNrJrja3cwfr2D_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2009548883</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐至尚酒店(北京首都机场新国展店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'府前二街6号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">611</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'首都机场/新国展地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.063953'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.576829'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/43zCTomkMSkUfZByZxn77YH2XidJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2011785622</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京世园凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'阜康南路1号院1号楼A'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">558</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五星级'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'延庆休闲度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.440732'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'115.963259'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/uhGcQze3zZQxe4avSU8BysgYVvx_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2022598930</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海宝华喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南奉公路3111弄228号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'奉贤开发区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30.921659'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.575572'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb2/t1/G6/M00/45/BD/Cii-TF3ZaBmIStrbAASnoOyg7FoAAFpYwEoz9oABKe4992_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2022881967</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳盐田凯悦酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海景二路1025号1-6层、30-50层'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'凯悦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'盐田区政府/沙头角'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.551323'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.23781'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2RFMLSujkczEn1HoybD6dUpN9pzr_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2031683181</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐至尚酒店(北京雍和宫和平里店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'小黄庄1区15号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">299</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'和颐'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'四钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马甸/安贞地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.962361'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.412931'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4Xqm5BN9pZTamwmYS3eLxL417YYt_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2045052822</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'展云路6号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">675</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.686581'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.777655'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4DGZygQpE4iSpcBDCoXJvjNr4oiR_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2048042240</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京大兴希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'高米店南里18号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1283</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大兴北京新机场地区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.76875'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.339199'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3B32F8zSU2CJCWzs1hoH2o4WcquR_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2048047291</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京新青海喜来登酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'丽泽金融商务区凤凰嘴北路与金中都西路交叉口西营街8号院1号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">723</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喜来登'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京西站/丽泽商务区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.864026'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.322505'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/4DPQMu5sMM7XR1mvcjoqtWngc7TF_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2048050570</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店（深圳坪山火车站店）'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新和路127-2号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">436</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'坪山高铁站商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.700753'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.339089'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2nXN2bWjfoqoTkPwHvLJQPYz17qD_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2048671293</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳观澜五和大道店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'观湖街道五和大道327号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'观澜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.684459'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.07708'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2JrQi83S9qgDEkXqWpe5iyi44Uh2_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2051661320</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳罗湖口岸万象城二店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'桂园街道宝安南路1050号嘉宾花园C栋'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">667</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'三钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万象城/京基100'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.540352'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'114.112668'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/34FRP7HLPhvKZP1a6tXu4XrJeiaw_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2056105938</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京通州北投希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新华东街289号2号楼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1068</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'果园环岛/通州区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'39.908805'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'116.659748'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/NGKdpec3tZJNUUNWJ5pd67Cp5AY_w200_h200_c1_t0.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2056126831</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海虹桥金臣皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'申长路630弄1-3 号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'虹桥机场/国家会展中心'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.19036'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.31535'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/PvFh4Vzc84xXhm5N41F6AqdAqyJ_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2056132395</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳深铁皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深南大道9819号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">340</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.538923'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.944794'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/eBLtrED2uJs7yURWfjnWge9dT1P_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2056298828</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海中优城市万豪酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'沪南公路7688弄1号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万豪'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南汇/野生动物园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'31.030053'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'121.662943'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2gBATEyysyQWmw3wZL863HGdqjaq_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2058250574</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳湾万丽酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'粤海街道高新区社区科技南路18号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">351</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'万丽'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科技园'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.531674'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.951882'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2YWUpZsvPVkRiKgdPg95LJxaFmB6_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2060510277</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京金隅八达岭皇冠假日酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'妫水北街1号1-14幢'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1026</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皇冠假日'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'延庆休闲度假区'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'40.476483'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'115.97481'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/3Dzq2KxgiQbmb1sbc5iK6xqpVuFr_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2060618247</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭酒店(深圳海岸城店)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'粤海街道后海社区后海第二统建楼商业裙楼第二层B'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">562</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'汉庭'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'二钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'海岸城/后海'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.507276'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.931251'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/TBoXdgEx5Yjc2HobeC3fPWWnSJi_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_hotel<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2062643512</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心希尔顿酒店'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'展丰路80号'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">285</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'希尔顿'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'五钻'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳国际会展中心商圈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'22.705335'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'113.77794'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://m.tuniucdn.com/fb3/s1/2n9c/2SHUVXNrN5NsXsTUwcd1yaHKbrGq_w200_h200_c1_t0.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "案例Demo",
                "springcloud",
                "Elasticsearch"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/%E5%AE%89%E8%A3%85elasticsearch/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/%E5%AE%89%E8%A3%85elasticsearch/",
            "title": "安装elasticsearch",
            "date_published": "2024-04-02T10:00:51.019Z",
            "content_html": "<h1 id=\"安装elasticsearch\"><a class=\"markdownIt-Anchor\" href=\"#安装elasticsearch\">#</a> 安装 elasticsearch</h1>\n<h1 id=\"1部署单点es\"><a class=\"markdownIt-Anchor\" href=\"#1部署单点es\">#</a> 1. 部署单点 es</h1>\n<h2 id=\"11创建网络\"><a class=\"markdownIt-Anchor\" href=\"#11创建网络\">#</a> 1.1. 创建网络</h2>\n<p>因为我们还需要部署 kibana 容器，因此需要让 es 和 kibana 容器互联。这里先创建一个网络：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create es-net</pre></td></tr></table></figure><h2 id=\"12加载镜像\"><a class=\"markdownIt-Anchor\" href=\"#12加载镜像\">#</a> 1.2. 加载镜像</h2>\n<p>这里我们采用 elasticsearch 的 7.12.1 版本的镜像，这个镜像体积非常大，接近 1G。不建议大家自己 pull。</p>\n<p>课前资料提供了镜像的 tar 包：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020462.png\" alt=\"image-20210510165308064\"></p>\n<p>大家将其上传到虚拟机中，然后运行命令加载即可：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> load <span class=\"token parameter variable\">-i</span> es.tar</pre></td></tr></table></figure><p>同理还有 <code>kibana</code>  的 tar 包也需要这样做。</p>\n<h2 id=\"13运行\"><a class=\"markdownIt-Anchor\" href=\"#13运行\">#</a> 1.3. 运行</h2>\n<p>运行 docker 命令，部署单点 es：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token parameter variable\">--name</span> es <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"discovery.type=single-node\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token parameter variable\">-v</span> es-data:/usr/share/elasticsearch/data <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token parameter variable\">-v</span> es-plugins:/usr/share/elasticsearch/plugins <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token parameter variable\">--privileged</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token parameter variable\">--network</span> es-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9200</span>:9200 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9300</span>:9300 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>elasticsearch:7.12.1</pre></td></tr></table></figure><p>命令解释：</p>\n<ul>\n<li><code>-e &quot;cluster.name=es-docker-cluster&quot;</code> ：设置集群名称</li>\n<li><code>-e &quot;http.host=0.0.0.0&quot;</code> ：监听的地址，可以外网访问</li>\n<li><code>-e &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</code> ：内存大小</li>\n<li><code>-e &quot;discovery.type=single-node&quot;</code> ：非集群模式</li>\n<li><code>-v es-data:/usr/share/elasticsearch/data</code> ：挂载逻辑卷，绑定 es 的数据目录</li>\n<li><code>-v es-logs:/usr/share/elasticsearch/logs</code> ：挂载逻辑卷，绑定 es 的日志目录</li>\n<li><code>-v es-plugins:/usr/share/elasticsearch/plugins</code> ：挂载逻辑卷，绑定 es 的插件目录</li>\n<li><code>--privileged</code> ：授予逻辑卷访问权</li>\n<li><code>--network es-net</code>  ：加入一个名为 es-net 的网络中</li>\n<li><code>-p 9200:9200</code> ：端口映射配置</li>\n</ul>\n<p>在浏览器中输入：<a href=\"http://192.168.150.101:9200\">http://192.168.150.101:9200</a> 即可看到 elasticsearch 的响应结果：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020815.png\" alt=\"image-20210506101053676\"></p>\n<h1 id=\"2部署kibana\"><a class=\"markdownIt-Anchor\" href=\"#2部署kibana\">#</a> 2. 部署 kibana</h1>\n<p>kibana 可以给我们提供一个 elasticsearch 的可视化界面，便于我们学习。</p>\n<h2 id=\"21部署\"><a class=\"markdownIt-Anchor\" href=\"#21部署\">#</a> 2.1. 部署</h2>\n<p>运行 docker 命令，部署 kibana</p>\n<p>kibana 需要和 elaticsearch 处于同一个网络中</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--name</span> kibana <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 因为它们两个为同一个网络，所以可以使用容器名互联</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">ELASTICSEARCH_HOSTS</span><span class=\"token operator\">=</span>http://es:9200 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">--network</span><span class=\"token operator\">=</span>es-net <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">5601</span>:5601  <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>kibana:7.12.1</pre></td></tr></table></figure><ul>\n<li><code>--network es-net</code>  ：加入一个名为 es-net 的网络中，与 elasticsearch 在同一个网络中</li>\n<li><code>-e ELASTICSEARCH_HOSTS=http://es:9200&quot;</code> ：设置 elasticsearch 的地址，因为 kibana 已经与 elasticsearch 在一个网络，因此可以用容器名直接访问 elasticsearch</li>\n<li><code>-p 5601:5601</code> ：端口映射配置</li>\n</ul>\n<p>kibana 启动一般比较慢，需要多等待一会，可以通过命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> kibana</pre></td></tr></table></figure><p>查看运行日志，当查看到下面的日志，说明成功：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020301.png\" alt=\"image-20210109105135812\"></p>\n<p>此时，在浏览器输入地址访问：<a href=\"http://192.168.150.101:5601\">http://192.168.150.101:5601</a>，即可看到结果</p>\n<h2 id=\"22devtools\"><a class=\"markdownIt-Anchor\" href=\"#22devtools\">#</a> 2.2.DevTools</h2>\n<p>kibana 中提供了一个 DevTools 界面：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020356.png\" alt=\"image-20210506102630393\"></p>\n<p>这个界面中可以编写 DSL 来操作 elasticsearch。并且对 DSL 语句有自动补全功能。</p>\n<h1 id=\"3安装ik分词器\"><a class=\"markdownIt-Anchor\" href=\"#3安装ik分词器\">#</a> 3. 安装 IK 分词器</h1>\n<h2 id=\"31在线安装ik插件较慢\"><a class=\"markdownIt-Anchor\" href=\"#31在线安装ik插件较慢\">#</a> 3.1. 在线安装 ik 插件（较慢）</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入容器内部</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> elasticsearch /bin/bash</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 在线下载并安装</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./bin/elasticsearch-plugin  <span class=\"token function\">install</span> https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.12.1/elasticsearch-analysis-ik-7.12.1.zip</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#退出</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#重启容器</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">docker</span> restart elasticsearch</pre></td></tr></table></figure><h2 id=\"32离线安装ik插件推荐\"><a class=\"markdownIt-Anchor\" href=\"#32离线安装ik插件推荐\">#</a> 3.2. 离线安装 ik 插件（推荐）</h2>\n<h3 id=\"1查看数据卷目录\"><a class=\"markdownIt-Anchor\" href=\"#1查看数据卷目录\">#</a> 1）查看数据卷目录</h3>\n<p>安装插件需要知道 elasticsearch 的 plugins 目录位置，而我们用了数据卷挂载，因此需要查看 elasticsearch 的数据卷目录，通过下面命令查看:</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume inspect es-plugins</pre></td></tr></table></figure><p>显示结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">\"CreatedAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-05-06T10:06:34+08:00\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"Driver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"local\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"Labels\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"Mountpoint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/var/lib/docker/volumes/es-plugins/_data\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es-plugins\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"Options\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"Scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"local\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>说明 plugins 目录被挂载到了： <code>/var/lib/docker/volumes/es-plugins/_data </code> 这个目录中。</p>\n<h3 id=\"2解压缩分词器安装包\"><a class=\"markdownIt-Anchor\" href=\"#2解压缩分词器安装包\">#</a> 2）解压缩分词器安装包</h3>\n<p>下面我们需要把课前资料中的 ik 分词器解压缩，重命名为 ik</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020922.png\" alt=\"image-20210506110249144\"></p>\n<h3 id=\"3上传到es容器的插件数据卷中\"><a class=\"markdownIt-Anchor\" href=\"#3上传到es容器的插件数据卷中\">#</a> 3）上传到 es 容器的插件数据卷中</h3>\n<p>也就是 <code>/var/lib/docker/volumes/es-plugins/_data </code> ：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020853.png\" alt=\"image-20210506110704293\"></p>\n<h3 id=\"4重启容器\"><a class=\"markdownIt-Anchor\" href=\"#4重启容器\">#</a> 4）重启容器</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 4、重启容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> restart es</pre></td></tr></table></figure><figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看 es 日志</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> es</pre></td></tr></table></figure><p>看到这条信息说明安装成功了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112200825.png\" alt=\"image-20231011220033681\"></p>\n<h3 id=\"5测试\"><a class=\"markdownIt-Anchor\" href=\"#5测试\">#</a> 5）测试：</h3>\n<p>IK 分词器包含两种模式：</p>\n<ul>\n<li>\n<p><code>ik_smart</code> ：最少切分</p>\n<ul>\n<li>可以搜索到的词的范围比较小</li>\n</ul>\n</li>\n<li>\n<p><code>ik_max_word</code> ：最细切分</p>\n<ul>\n<li>可以搜索到的词的范围比较大</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /_analyze</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"黑马程序员学习java太棒了\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<p>ik_smart</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"tokens\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"黑马\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"程序员\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"学习\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"ENGLISH\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"太棒了\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ik_max_word</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"tokens\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"黑马\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"程序员\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"程序\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"员\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_CHAR\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"学习\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"ENGLISH\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"太棒了\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"太棒\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"了\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_CHAR\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"33-扩展词词典\"><a class=\"markdownIt-Anchor\" href=\"#33-扩展词词典\">#</a> 3.3 扩展词词典</h2>\n<p>随着互联网的发展，“造词运动” 也越发的频繁。出现了很多新的词语，在原有的词汇列表中并不存在。比如：“奥力给”，“传智播客” 等。</p>\n<p>所以我们的词汇也需要不断的更新，IK 分词器提供了扩展词汇的功能。</p>\n<p>1）打开 IK 分词器 config 目录：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020613.png\" alt=\"image-20210506112225508\"></p>\n<p>2）在 IKAnalyzer.cfg.xml 配置文件内容添加：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">properties</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"http://java.sun.com/dtd/properties.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>comment</span><span class=\"token punctuation\">></span></span>IK Analyzer 扩展配置<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>comment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 用户可以在这里配置自己的扩展字典 *** 添加扩展词典 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ext_dict<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>ext.dic<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>3）新建一个 ext.dic，可以参考 config 目录下复制一个配置文件进行修改</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>传智教育</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>奥力给</pre></td></tr></table></figure><p>4）重启 elasticsearch</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> restart es</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 查看 日志</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> elasticsearch</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112020980.png\" alt=\"image-20201115230900504\"></p>\n<p>日志中已经成功加载 ext.dic 配置文件</p>\n<p>5）测试效果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /_analyze</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"传智播客Java就业超过90%,奥力给！\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>注意当前文件的编码必须是 UTF-8 格式，严禁使用 Windows 记事本编辑</p>\n</blockquote>\n<h2 id=\"34-停用词词典\"><a class=\"markdownIt-Anchor\" href=\"#34-停用词词典\">#</a> 3.4 停用词词典</h2>\n<p>在互联网项目中，在网络间传输的速度很快，所以很多语言是不允许在网络上传递的，如：关于宗教、政治等敏感词语，那么我们在搜索时也应该忽略当前词汇。</p>\n<p>IK 分词器也提供了强大的停用词功能，让我们在索引时就直接忽略当前的停用词汇表中的内容。</p>\n<p>1）IKAnalyzer.cfg.xml 配置文件内容添加：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">properties</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"http://java.sun.com/dtd/properties.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>comment</span><span class=\"token punctuation\">></span></span>IK Analyzer 扩展配置<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>comment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 用户可以在这里配置自己的扩展字典 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ext_dict<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>ext.dic<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token comment\">&lt;!-- 用户可以在这里配置自己的扩展停止词字典  *** 添加停用词词典 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ext_stopwords<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>stopword.dic<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>3）在 stopword.dic 添加停用词</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>牛逼</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>的</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>小</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>黑</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>子</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>IKUN</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>坤</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>鸡</pre></td></tr></table></figure><p>需要注意：<mark>牛逼</mark>这个词，进行分词时会出现牛，逼 。因为如下解释：</p>\n<p>IK 查询停用词召回的时候会先将查询词根据分词词库配置进行分词，比如 &quot;牛逼&quot; 这个词会被分为 &quot;牛&quot;，“逼”，之后会根据停用词库去看是否 &quot;牛&quot;，&quot;逼&quot; 两个词再库内，如在库内就不会召回。</p>\n<p>说起来 可能抽象看如下的情况吧：</p>\n<p>当我们查询 “牛逼的时候” 结果如下：</p>\n<p>这里你肯定回想，我不是停用了吗怎么还有显示呢，那你就错了因为它被分词为 一个 “牛” 一个 “逼” 它并不是 “牛逼” 了 ，我们再往下看</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310120847300.png\" alt=\"image-20231012084748860\"></p>\n<p>我查询 “小” 的时候结果什么也没有 因为一个字被分词还是一个词而这一个词还是被停用的一次就能匹配到所以就停用看不到了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310120849089.png\" alt=\"image-20231012084916676\"></p>\n<p>4）重启 elasticsearch</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 重启服务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> restart elasticsearch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> restart kibana</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 查看 日志</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> elasticsearch</pre></td></tr></table></figure><p>日志中已经成功加载 stopword.dic 配置文件</p>\n<p>5）测试效果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /_analyze</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"传智播客Java就业率超过95%,习大大都点赞,奥力给！\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>注意当前文件的编码必须是 UTF-8 格式，严禁使用 Windows 记事本编辑</p>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>分词器的作用是什么？</p>\n<ul>\n<li>创建倒排索引时对文档分词</li>\n<li>用户搜索时，对输入的内容分词</li>\n</ul>\n<p>IK 分词器有几种模式？</p>\n<ul>\n<li>ik_smart：智能切分，粗粒度</li>\n<li>ik_max_word：最细切分，细粒度</li>\n</ul>\n<p>IK 分词器如何扩展词条？如何停用词条？</p>\n<ul>\n<li>利用 config 目录的 IkAnalyzer.cfg.xml 文件添加扩展词典和停用词典</li>\n<li>在词典中添加扩展词条或者停用词条</li>\n</ul>\n</blockquote>\n<h1 id=\"4部署es集群\"><a class=\"markdownIt-Anchor\" href=\"#4部署es集群\">#</a> 4. 部署 es 集群</h1>\n<p>部署 es 集群可以直接使用 docker-compose 来完成，不过要求你的 Linux 虚拟机至少有<strong> 4G</strong> 的内存空间</p>\n<p>首先编写一个 docker-compose 文件，内容如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>version: <span class=\"token string\">'2.2'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>services:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  es01:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    container_name: es01</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      - <span class=\"token assign-left variable\">node.name</span><span class=\"token operator\">=</span>es01</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.name</span><span class=\"token operator\">=</span>es-docker-cluster</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      - <span class=\"token assign-left variable\">discovery.seed_hosts</span><span class=\"token operator\">=</span>es02,es03</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.initial_master_nodes</span><span class=\"token operator\">=</span>es01,es02,es03</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      - <span class=\"token assign-left variable\">bootstrap.memory_lock</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      - <span class=\"token string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ulimits:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      memlock:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        soft: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        hard: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    volumes:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      - data01:/usr/share/elasticsearch/data</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      - <span class=\"token number\">9200</span>:9200</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    networks:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      - elastic</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  es02:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    container_name: es02</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      - <span class=\"token assign-left variable\">node.name</span><span class=\"token operator\">=</span>es02</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.name</span><span class=\"token operator\">=</span>es-docker-cluster</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      - <span class=\"token assign-left variable\">discovery.seed_hosts</span><span class=\"token operator\">=</span>es01,es03</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.initial_master_nodes</span><span class=\"token operator\">=</span>es01,es02,es03</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      - <span class=\"token assign-left variable\">bootstrap.memory_lock</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      - <span class=\"token string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    ulimits:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      memlock:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        soft: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        hard: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    volumes:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      - data02:/usr/share/elasticsearch/data</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    networks:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      - elastic</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  es03:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    container_name: es03</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      - <span class=\"token assign-left variable\">node.name</span><span class=\"token operator\">=</span>es03</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.name</span><span class=\"token operator\">=</span>es-docker-cluster</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      - <span class=\"token assign-left variable\">discovery.seed_hosts</span><span class=\"token operator\">=</span>es01,es02</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      - <span class=\"token assign-left variable\">cluster.initial_master_nodes</span><span class=\"token operator\">=</span>es01,es02,es03</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      - <span class=\"token assign-left variable\">bootstrap.memory_lock</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      - <span class=\"token string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    ulimits:</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      memlock:</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        soft: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        hard: <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    volumes:</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      - data03:/usr/share/elasticsearch/data</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    networks:</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      - elastic</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>volumes:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  data01:</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    driver: <span class=\"token builtin class-name\">local</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  data02:</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    driver: <span class=\"token builtin class-name\">local</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  data03:</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    driver: <span class=\"token builtin class-name\">local</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>networks:</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  elastic:</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    driver: bridge</pre></td></tr></table></figure><p>将该配置文件上传到 Linux 中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161059412.png\" alt=\"image-20231016105943788\"></p>\n<p>es 运行需要修改一些 Linux 系统权限，修改  <code>/etc/sysctl.conf</code>  文件：</p>\n<pre><code class=\"language-sh·\">vi /etc/sysctl.conf\n</code></pre>\n<p>添加下面内容：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">vm.max_map_count</span><span class=\"token operator\">=</span><span class=\"token number\">262144</span></pre></td></tr></table></figure><p>然后执行命令，让配置生效：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sysctl -p</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vm.max_map_count <span class=\"token operator\">=</span> <span class=\"token number\">262144</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>Run  <code>docker-compose</code>  to bring up the cluster:</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose up -d</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting es03 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Starting es01 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Starting es02 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps -a</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS                            PORTS                                                                                                                                                 NAMES</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c3c4b0e1ffdc   elasticsearch:7.12.1    <span class=\"token string\">\"/bin/tini -- /usr/l…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">13</span> seconds                     <span class=\"token number\">0.0</span>.0.0:9200-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp, :::9200-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp, <span class=\"token number\">9300</span>/tcp                                                                                                   es01</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>073f8e46e296   elasticsearch:7.12.1    <span class=\"token string\">\"/bin/tini -- /usr/l…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">13</span> seconds                     <span class=\"token number\">9300</span>/tcp, <span class=\"token number\">0.0</span>.0.0:9201-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp, :::9201-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp                                                                                                   es02</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>aca2f691e3e2   elasticsearch:7.12.1    <span class=\"token string\">\"/bin/tini -- /usr/l…\"</span>   <span class=\"token number\">2</span> minutes ago   Up <span class=\"token number\">13</span> seconds                     <span class=\"token number\">9300</span>/tcp, <span class=\"token number\">0.0</span>.0.0:9202-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp, :::9202-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp                                                                                                   es03</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>61161df3ec6a   kibana:7.12.1           <span class=\"token string\">\"/bin/tini -- /usr/l…\"</span>   <span class=\"token number\">4</span> days ago      Up <span class=\"token number\">18</span> minutes                     <span class=\"token number\">0.0</span>.0.0:5601-<span class=\"token operator\">></span><span class=\"token number\">5601</span>/tcp, :::5601-<span class=\"token operator\">></span><span class=\"token number\">5601</span>/tcp                                                                                                             kibana</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>318bc511f26c   elasticsearch:7.12.1    <span class=\"token string\">\"/bin/tini -- /usr/l…\"</span>   <span class=\"token number\">4</span> days ago      Exited <span class=\"token punctuation\">(</span><span class=\"token number\">137</span><span class=\"token punctuation\">)</span> About a minute ago                                                                                                                                                         es</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>46756ed1a2ee   rabbitmq:3-management   <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">4</span> days ago      Up <span class=\"token number\">18</span> minutes                     <span class=\"token number\">4369</span>/tcp, <span class=\"token number\">5671</span>/tcp, <span class=\"token number\">0.0</span>.0.0:5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, :::5672-<span class=\"token operator\">></span><span class=\"token number\">5672</span>/tcp, <span class=\"token number\">15671</span>/tcp, <span class=\"token number\">15691</span>-15692/tcp, <span class=\"token number\">25672</span>/tcp, <span class=\"token number\">0.0</span>.0.0:15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp, :::15672-<span class=\"token operator\">></span><span class=\"token number\">15672</span>/tcp   mq</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h2 id=\"41-集群状态监控\"><a class=\"markdownIt-Anchor\" href=\"#41-集群状态监控\">#</a> 4.1、集群状态监控</h2>\n<p>kibana 可以监控 es 集群，不过新版本需要依赖 es 的 x-pack 功能，配置比较复杂。</p>\n<p>这里推荐使用 cerebro 来监控 es 集群状态，官方网址：<a href=\"https://github.com/lmenezes/cerebro\">https://github.com/lmenezes/cerebro</a></p>\n<p>下载后进行解压</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161113552.png\" alt=\"image-20231016111307167\"></p>\n<p>解压后进入 bin 目录中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161113838.png\" alt=\"image-20231016111341471\"></p>\n<p>双击运行 cerebro.bat 即可运行</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161115237.png\" alt=\"image-20231016111523818\"></p>\n<p>启动完成后访问：localhost:9000 地址，证明正常启动成功了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161115161.png\" alt=\"image-20231016111547168\"></p>\n<p>这时就可以访问虚拟机中 es 的哪个共同端口号的地址了：<a href=\"http://192.168.249.128:9200\">http://192.168.249.128:9200</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161154359.png\" alt=\"image-20231016115434836\"></p>\n<h2 id=\"42-创建索引库\"><a class=\"markdownIt-Anchor\" href=\"#42-创建索引库\">#</a> 4.2、创建索引库</h2>\n<h3 id=\"421-利用kibana的devtools创建索引库\"><a class=\"markdownIt-Anchor\" href=\"#421-利用kibana的devtools创建索引库\">#</a> 4.2.1、利用 kibana 的 DevTools 创建索引库</h3>\n<p>在 DevTools 中输入指令：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /indexName</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"number_of_shards\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 分片数量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"number_of_replicas\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 副本数量</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token comment\">//mapping 映射定义 ...</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161201547.png\" alt=\"image-20231016120105950\"></p>\n<p>填写完成后点击 create 创建索引库</p>\n<p>回到首页</p>\n<p>可以看到数据被成功的分成了三片，名称为 itcast</p>\n<p>但是还加了一个副本，每一片都加一个副本就是 3 * 2 = 6 片</p>\n<p>其中实线就是住分片，虚线就是副本分片（就是拷贝了一份）</p>\n<p>每一个分片它的备份都在不同的机器上，这样就确保了任意一台机器宕机，那的备份依然还保留着避免出现数据故障</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161202468.png\" alt=\"image-20231016120225681\"></p>\n",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud",
                "Elasticsearch"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/springcloud-elasticsearch/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Elasticsearch/springcloud-elasticsearch/",
            "title": "九、分布式搜索",
            "date_published": "2024-04-02T10:00:51.016Z",
            "content_html": "<h2 id=\"九-分布式搜索\"><a class=\"markdownIt-Anchor\" href=\"#九-分布式搜索\">#</a> 九、分布式搜索🎄</h2>\n<p>elasticsearch 基础</p>\n<ul>\n<li>初始 elasticsearch</li>\n<li>索引库操作</li>\n<li>文档操作</li>\n<li>RestAPI</li>\n</ul>\n<h3 id=\"91-初始elasticsearch\"><a class=\"markdownIt-Anchor\" href=\"#91-初始elasticsearch\">#</a> 9.1、初始 elasticsearch🌳</h3>\n<ul>\n<li>了解 ES</li>\n<li>倒排索引</li>\n<li>es 的一些概念</li>\n<li>安装 es，kibana</li>\n</ul>\n<h4 id=\"911-什么是elasticsearch\"><a class=\"markdownIt-Anchor\" href=\"#911-什么是elasticsearch\">#</a> 9.1.1、什么是 elasticsearch🌲</h4>\n<p>elasticsearch 是一款非常强大的开源<mark>搜索引擎</mark>，可以帮助我们从<mark>海量数据中快速找到需要的内容</mark>。</p>\n<p>elasticsearch 结合 kibana，Logstash，Beats，也就是 elastic stack (ELK)。被广泛应用在日志数据分析，实时监控等领域。</p>\n<p>elasticsearch 是 elastic stack 的核心，负责存储，搜索，分析数据。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111754105.png\" alt=\"image-20231011175401979\"></p>\n<p>Elasticsearch 的底层实现就是<mark> Lucene</mark> 的技术</p>\n<p>Lucene 是一个 Java 语言的<mark>搜索引擎类库</mark>，是 Apache 公司的顶级项目，由 Doug Cutting 于 1999 年研发。</p>\n<p>官网地址：<a href=\"https://lucene.apache.org/\">https://lucene.apache.org/</a></p>\n<p>Lucene 的优势：</p>\n<ul>\n<li>易扩展</li>\n<li>高性能 (基于倒排索引)</li>\n</ul>\n<p>2004 年 Shay Banon 基于 Lucene 开发了 Compass</p>\n<p>2010 年 Shay Banon 重写了 Compass，取名为 Elasticsearch</p>\n<p>官网地址：<a href=\"https://www.elastic.co/cn/\">https://www.elastic.co/cn/</a></p>\n<p>目前最新的版本是：7.12.1</p>\n<p>相比与 lucene，elasticsearch 具备下列优势：</p>\n<ul>\n<li>支持分布式，可水平扩展</li>\n<li>提供 Restful 接口，可被任何语言调用</li>\n</ul>\n<p><strong>为什么学习 elasticsearch?</strong>。</p>\n<p>搜索引擎技术排名：</p>\n<p>1、Elasticsearch：开源的分布式搜索引擎</p>\n<p>2、Splunk：商业项目</p>\n<p>3、Solr：Apache 的开源搜索引擎</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111923929.png\" alt=\"image-20231011192322393\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么是 elasticsearch?</p>\n<ul>\n<li>一个开源的<mark>分布式搜索引擎</mark>，可以用来实现搜索，日志统计，分析，系统监控等功能</li>\n</ul>\n<p>什么是 elastic stack (LEK)？</p>\n<ul>\n<li>是以 elasticsearch 为核心的技术栈，包括 beats，Logstash，kibana，elasticsearch</li>\n</ul>\n<p>什么是 Lucene?</p>\n<ul>\n<li>是 Apache 的开源搜索引擎类库，提供了搜索引擎的核心 API</li>\n</ul>\n</blockquote>\n<h3 id=\"92-正向索引和倒排索引\"><a class=\"markdownIt-Anchor\" href=\"#92-正向索引和倒排索引\">#</a> 9.2、正向索引和倒排索引🌳</h3>\n<p>传统数据库 (如 MySQL) 采用正向索引，例如给下表 (tb_goods) 中的 id 创建索引：</p>\n<p>正向索引：做局部内部检索的时候性能比较差</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111933421.png\" alt=\"image-20231011193327307\"></p>\n<p>elasticsearch 采用倒排索引：</p>\n<ul>\n<li>文档 (document)：每条数据就是一个文档\n<ul>\n<li>代表的就是数据，每一条数据就是一个文档</li>\n</ul>\n</li>\n<li>词条 (term)：文档按照语义分成的词语\n<ul>\n<li>如果是中文就按照中文的语义进行分词</li>\n</ul>\n</li>\n</ul>\n<p>倒排索引，会形成一个<mark>新的表</mark>。这张<mark>表里面有两个字段</mark>，一个字段是<mark>词条</mark>另一个是<mark>文档 id</mark>。</p>\n<p>倒排索引，它在存储时会先把文档中的<mark>内容分成词条去存储</mark>。比方说我拿到了第一条数据那我要对标题创建倒排索引，那么我就来吧标题内容做个分词得到两个词语小米和手机，然后把每个这两个词语存到词条里，然后后面记录它的文档 id。<mark>重复的词语不会存入词条而是在已存在的词条后面追加上这个重复的词语的 id</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111945438.gif\" alt=\"test\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310111953084.png\" alt=\"image-20231011195333829\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>什么是文档和词条？</p>\n<ul>\n<li>每一条数据就是一个文档</li>\n<li>对文档中的内容分词，得到的词语就是词条</li>\n</ul>\n<p>什么是正向索引？</p>\n<ul>\n<li>基于文档 id 创建索引。查询词条时必须先找到文档，而后判断是否包含词条</li>\n</ul>\n<p>什么是倒排索引？</p>\n<ul>\n<li>对文档内容分词，对词条创建索引，并记录词条所在文档的信息。查询时先根据词条查询到文档 id，而后获取到文档</li>\n</ul>\n</blockquote>\n<h3 id=\"93-文档\"><a class=\"markdownIt-Anchor\" href=\"#93-文档\">#</a> 9.3、文档🌳</h3>\n<p>elasticsearch 是面向文档存储的，可以是数据库中的一条商品数据，一个订单信息。</p>\n<p>文档数据会被序列化为 json 格式后存储在 elasticsearch 中。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112001435.png\" alt=\"image-20231011200117293\"></p>\n<h3 id=\"94-索引-index\"><a class=\"markdownIt-Anchor\" href=\"#94-索引-index\">#</a> 9.4、索引 (index)🌳</h3>\n<ul>\n<li>索引 (index)：相同类型的文档的集合</li>\n<li>映射 (mapping)：索引中文档的字段约束信息，类似表的结构约束</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112003417.png\" alt=\"image-20231011200324370\"></p>\n<h3 id=\"95-概念对比\"><a class=\"markdownIt-Anchor\" href=\"#95-概念对比\">#</a> 9.5、概念对比🌳</h3>\n<table>\n<thead>\n<tr>\n<th>MySQL</th>\n<th>Elasticsearch</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Table</td>\n<td>Index</td>\n<td>索引 (index)，就是文档的集合，类似数据库的表 (table)</td>\n</tr>\n<tr>\n<td>Row</td>\n<td>Document</td>\n<td>文档 (document)，就是一条条的数据，类似数据库中的行 (Row)，文档都是 JSON 格式</td>\n</tr>\n<tr>\n<td>Column</td>\n<td>Field</td>\n<td>字段 (Field)，就是 JSON 文档中的字段，类似数据库中的列 (Column)</td>\n</tr>\n<tr>\n<td>Schema</td>\n<td>Mapping</td>\n<td>Mapping (映射) 是索引中文档的约束，例如字段类型约束。类似数据库的表结构 (Schema)</td>\n</tr>\n<tr>\n<td>SQL</td>\n<td>DSL</td>\n<td>DSL 是 elasticsearch 提供的 JSON 风格的请求语句，用来操作 elasticsearch，实现 CRUD</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"95-架构\"><a class=\"markdownIt-Anchor\" href=\"#95-架构\">#</a> 9.5、架构🌳</h3>\n<p>MySQL：擅长事务类型操作，可以确保数据的安全和一致性</p>\n<p>Elasticsearch：擅长海量数据的搜索，分析，计算</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112013859.png\" alt=\"image-20231011201341793\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>文档：一条数据就是一个文档，es 中是 json 格式</p>\n<p>字段：json 文档中的字段</p>\n<p>索引：同类型文档的集合</p>\n<p>映射：索引中文档的约束，比如字段名称，类型</p>\n<p>elasticsearch 与数据库的关系：</p>\n<ul>\n<li>数据库负责事务类型操作</li>\n<li>elasticsearch 负责海量数据的搜索，分析，计算</li>\n</ul>\n</blockquote>\n<h3 id=\"96-安装和部署\"><a class=\"markdownIt-Anchor\" href=\"#96-安装和部署\">#</a> 9.6、安装和部署🌳</h3>\n<p><a href=\"./Elasearch/%E5%AE%89%E8%A3%85elasticsearch.md\">查看 elaticsearch 安装和部署</a>。</p>\n<h3 id=\"97-分词器\"><a class=\"markdownIt-Anchor\" href=\"#97-分词器\">#</a> 9.7、分词器🌳</h3>\n<p>es 在创建倒排索引时需要对文档进行分词；在搜索时，需要对用户输入内容分词。但默认的分词规则对中文处理并不友好。我们在 kibana 的 DevTools 中测试：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310112105308.png\" alt=\"image-20231011210532721\"></p>\n<p>语法说明：</p>\n<ul>\n<li>POST：请求方式</li>\n<li>/_analyze：请求路径，这里省略了 http://192.168.150.101:9200，有 kibana 帮我们补充</li>\n<li>请求参数，json 风格：\n<ul>\n<li>analyzer：分词器类型，这里是默认的 standard 分词器</li>\n<li>text：要分词的内容</li>\n</ul>\n</li>\n</ul>\n<p>kibana 中测试结果如下：</p>\n<pre><code>&#123;\n  &quot;tokens&quot; : [\n    &#123;\n      &quot;token&quot; : &quot;黑&quot;,\n      &quot;start_offset&quot; : 0,\n      &quot;end_offset&quot; : 1,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 0\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;马&quot;,\n      &quot;start_offset&quot; : 1,\n      &quot;end_offset&quot; : 2,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 1\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;程&quot;,\n      &quot;start_offset&quot; : 2,\n      &quot;end_offset&quot; : 3,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 2\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;序&quot;,\n      &quot;start_offset&quot; : 3,\n      &quot;end_offset&quot; : 4,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 3\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;员&quot;,\n      &quot;start_offset&quot; : 4,\n      &quot;end_offset&quot; : 5,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 4\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;学&quot;,\n      &quot;start_offset&quot; : 5,\n      &quot;end_offset&quot; : 6,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 5\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;习&quot;,\n      &quot;start_offset&quot; : 6,\n      &quot;end_offset&quot; : 7,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 6\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;java&quot;,\n      &quot;start_offset&quot; : 7,\n      &quot;end_offset&quot; : 11,\n      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,\n      &quot;position&quot; : 7\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;太&quot;,\n      &quot;start_offset&quot; : 11,\n      &quot;end_offset&quot; : 12,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 8\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;棒&quot;,\n      &quot;start_offset&quot; : 12,\n      &quot;end_offset&quot; : 13,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 9\n    &#125;,\n    &#123;\n      &quot;token&quot; : &quot;了&quot;,\n      &quot;start_offset&quot; : 13,\n      &quot;end_offset&quot; : 14,\n      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,\n      &quot;position&quot; : 10\n    &#125;\n  ]\n&#125;\n</code></pre>\n<p>可以看到它对英文的分词挺好的但是对中文的分词却不好</p>\n<p>解决办法：</p>\n<p>处理中文分词，一般会使用 IK 分词器：<a href=\"https://github.com/medcl/elasticsearch-analysis-ik\">https://github.com/medcl/elasticsearch-analysis-ik</a></p>\n<p>安装和使用 IK 分词器，参考文章：<a href=\"./Elasearch/%E5%AE%89%E8%A3%85elasticsearch.md\">查看 IK 安装</a>.</p>\n<h3 id=\"98-索引库操作\"><a class=\"markdownIt-Anchor\" href=\"#98-索引库操作\">#</a> 9.8、索引库操作🌳</h3>\n<ul>\n<li>mapping 映射属性</li>\n<li>索引库的 CRUD</li>\n</ul>\n<h4 id=\"981-mapping属性\"><a class=\"markdownIt-Anchor\" href=\"#981-mapping属性\">#</a> 9.8.1、mapping 属性🌲</h4>\n<p>mapping 是对索引库中文档的<mark>约束</mark>，常见的 mapping 属性包括：</p>\n<ul>\n<li>type：字段数据类型，常见的简单类型有\n<ul>\n<li>字符串：text (可分词的文本)，keyword (精确值，例如：品牌，国家，ip 地址)</li>\n<li>数值：long，integer，short，byte，double，float</li>\n<li>布尔：boolean</li>\n<li>日期：date</li>\n<li>对象：object</li>\n</ul>\n</li>\n<li>在 elasticsearch 中是没有数组这种类型的，但是它允许某一个字段有多个值</li>\n<li>index：是否创建倒排索引，默认为 true (全创建倒排索引)</li>\n<li>analyzer：使用哪种分词器 (结合 text 使用除了 text 以外其它都不需要用)\n<ul>\n<li>值：分词器名称：ik_smart 或者 ik_max_word</li>\n</ul>\n</li>\n<li>properties：该字段的子字段\n<ul>\n<li>name 有两个子字段可以使用 properties 来指定子字段了</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310120907321.png\" alt=\"image-20231012090710123\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>mapping 常见属性有哪些？</p>\n<ul>\n<li>type：数据类型</li>\n<li>index：是否索引</li>\n<li>analyzer：分词器</li>\n<li>properties：子字段</li>\n</ul>\n<p>type 常见的有哪些？</p>\n<ul>\n<li>字符串：text，keyword</li>\n<li>数字：long，integer，short，byte，double，float</li>\n<li>布尔：boolean</li>\n<li>日期：date</li>\n<li>对象 object</li>\n</ul>\n</blockquote>\n<h4 id=\"982-创建索引库\"><a class=\"markdownIt-Anchor\" href=\"#982-创建索引库\">#</a> 9.8.2、创建索引库🌲</h4>\n<p>ES 中通过 Restful 请求操作索引库，文档。请求内容用 DSL 语句来表示。创建索引库和 mapping 的 DSL 语法如下：</p>\n<p>PUT 添加索引</p>\n<p>info 用户信息内容很长所以是可分词的 text，分词器是 ik_smart。email 邮箱 没有分词的必要，因为它作为一个整体才有意义所以使用 keyword 不进行分词，因此不进行分词也就不需要 analyzer 了，使用 index=false 表示这个字段不参与创建倒排索引。name 名称，带有嵌套，它有指定的 properties，里面还有一个 firstName。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310120918101.png\" alt=\"image-20231012091855829\"></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /dkx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"info\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_smart\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token property\">\"firstName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token property\">\"lastName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"acknowledged\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"shards_acknowledged\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建成功！</p>\n<h4 id=\"983-查看删除索引库\"><a class=\"markdownIt-Anchor\" href=\"#983-查看删除索引库\">#</a> 9.8.3、查看，删除索引库🌲</h4>\n<p>查看索引库语法：</p>\n<pre><code>GET /索引库名\n</code></pre>\n<p>示例：</p>\n<pre><code>GET /dkx\n</code></pre>\n<p>删除索引库的语法：</p>\n<pre><code>DELETE /索引库名\n</code></pre>\n<p>示例：</p>\n<pre><code>DELETE /dkx\n</code></pre>\n<h4 id=\"984-修改索引库\"><a class=\"markdownIt-Anchor\" href=\"#984-修改索引库\">#</a> 9.8.4、修改索引库🌲</h4>\n<p>事实上在 ES 中索引库是不允许修改的</p>\n<p>因为索引库创建完了以后它的数据结构也就是 mapping 映射都已经定义好了。ES 会基于这些 mapping 去创建倒排索引，如果去修改某一个字段就会导致整体倒排索引彻底失效，这样带来的影响是非常大的。</p>\n<p>所以在 ES 中是禁止修改索引库的！</p>\n<p>索引库和 mapping 一旦创建无法修改，但是可以添加新的字段，语法如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /索引库名/_mapping</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">// 这里必须是新的字段名不能和存在的重复否则它以为你要修改就报错</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"新字段名\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>示例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /dkx/_mapping</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         type<span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>案例演示图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121021571.gif\" alt=\"test\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>索引库操作有哪些？</p>\n<ul>\n<li>创建索引库：PUT / 索引库名</li>\n<li>查询索引库：GET / 索引库名</li>\n<li>删除索引库： DELETE / 索引库名</li>\n<li>添加字段：PUT / 索引库名 /_mapping</li>\n</ul>\n</blockquote>\n<h4 id=\"985-文档操作\"><a class=\"markdownIt-Anchor\" href=\"#985-文档操作\">#</a> 9.8.5、文档操作🌲</h4>\n<ul>\n<li>新增文档</li>\n<li>查询文档</li>\n<li>删除文档</li>\n<li>修改文档</li>\n</ul>\n<h5 id=\"9851-添加文档\"><a class=\"markdownIt-Anchor\" href=\"#9851-添加文档\">#</a> 9.8.5.1、添加文档🌴</h5>\n<p>新增文档的 DSL 语法如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>POST /索引库名/_doc/文档id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"字段1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"字段2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token property\">\"字段3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"子属性1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值3\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"子属性2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值4\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121028570.png\" alt=\"image-20231012102808294\"></p>\n<h5 id=\"9852-查看删除文档\"><a class=\"markdownIt-Anchor\" href=\"#9852-查看删除文档\">#</a> 9.8.5.2、查看，删除文档🌴</h5>\n<p>查看文档语法：</p>\n<pre><code>GET /索引库名/_doc/文档id\n</code></pre>\n<p>示例：</p>\n<pre><code>GET /dkx/_doc/1\n</code></pre>\n<p>删除文档的语法：</p>\n<pre><code>DELETE /索引库名/_doc/文档id\n</code></pre>\n<p>示例：</p>\n<pre><code>DELETE /dkx/_doc/1\n</code></pre>\n<h5 id=\"9853-修改文档\"><a class=\"markdownIt-Anchor\" href=\"#9853-修改文档\">#</a> 9.8.5.3、修改文档🌴</h5>\n<p>方式一：全量修改，会删除旧文档，添加新文档，如果没有旧文档就是新增</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /索引库名/_doc/文档id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"字段1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"字段2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"值2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">//... 略</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121039009.png\" alt=\"image-20231012103906432\"></p>\n<p>方式二：增量修改，修改指定字段值</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>POST /索引库名/_update/文档id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"doc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"字段名\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"新的值\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121042126.png\" alt=\"image-20231012104219010\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>文档操作有哪些？</p>\n<ul>\n<li json文档=\"\">创建文档：POST / 索引库名 /_cod/ 文档 id</li>\n<li>查询文档：GET / 索引库名 /_doc/ 文档 id</li>\n<li>删除文档：DELETE / 索引库名 /_doc/ 文档 id</li>\n<li>修改文档：\n<ul>\n<li json文档=\"\">全量修改：PUT / 索引库名 /_doc/ 文档 id</li>\n<li>增量修改：POST / 索引库名 /_update/ 文档 id {“doc”: {字段}}</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"986-restclient操作索引库\"><a class=\"markdownIt-Anchor\" href=\"#986-restclient操作索引库\">#</a> 9.8.6、RestClient 操作索引库🌲</h4>\n<ul>\n<li>创建索引库</li>\n<li>删除索引库</li>\n<li>判断索引库是否存在</li>\n</ul>\n<h5 id=\"9861-什么是restclient\"><a class=\"markdownIt-Anchor\" href=\"#9861-什么是restclient\">#</a> 9.8.6.1、什么是 RestClient🌴</h5>\n<p>ES 官方提供了各种不同语言的客户端，用来操作 ES。这些客户端的本质就是组装 DSL 语句，通过 http 请求发送给 ES。官方文档地址：<a href=\"https://www.elastic.co/guide/en/elasticsearch/client/index.html\">https://www.elastic.co/guide/en/elasticsearch/client/index.html</a></p>\n<h5 id=\"9862-案例利用javarestclient实现创建删除索引库判断索引库是否存在\"><a class=\"markdownIt-Anchor\" href=\"#9862-案例利用javarestclient实现创建删除索引库判断索引库是否存在\">#</a> 9.8.6.2、案例，利用 JavaRestClient 实现创建，删除索引库，判断索引库是否存在🌴</h5>\n<p>根据 sql 文件数据创建索引库<a href=\"./Elasearch/%E6%A1%88%E4%BE%8Bsql.md\"> sql 文件</a>。索引库名为 hotel，mapping 属性根据数据库结构定义。</p>\n<p>基本步骤如下：</p>\n<p>1、idea 中导入 hotel-demo 项目，项目地址：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121121088.png\" alt=\"image-20231012112156928\"></p>\n<p>2、分析数据结构，定义 mapping 属性</p>\n<p>mapping 要考虑的问题：</p>\n<p>字段名，数据类型，是否参与搜索，是否分词，如果分词，分词器是什么？</p>\n<p>其中，字段名和数据类型可以基于表结构一目了然，是否参与搜索与是否分词就比较特殊了，它们与业务强相关的。比如说我们当前的酒店业务，酒店名称就一定是要参与搜索功能的它也要分词因为内容比较长，而分词器我们肯定会使用 ik_max_word 尽可能多的分词搜索范围大一些。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121124067.png\" alt=\"image-20231012112427548\"></p>\n<p>根据上述分析去创建对应的索引库</p>\n<blockquote>\n<p>小提示：</p>\n<p>ES 中支持两种地理坐标数据类型：</p>\n<ul>\n<li>\n<p>geo_point：由纬度 (latitude) 和径度 (longitude) 确定的一个点。例如：</p>\n<p>“32.82342343，120.3153263”</p>\n</li>\n<li>\n<p>geo_shape：有多个 geo_point 组成的复杂几何图形。例如一条直线，</p>\n<p>“LINESTRING(-77.12312312，-77.1235343 38.2323234)”</p>\n</li>\n</ul>\n</blockquote>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /dkx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">\"city\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token property\">\"starName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">\"business\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>       # 酒店在地图上用一个点来表示所以使用geo_point，而上图的sql中酒店是两个字段一个经度一个纬度，而在ES中一个geo_point代表了经纬度，所以使用一个字段来包裹geo_point</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"geo_point\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token property\">\"pic\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>虽然定义完了酒店的所有字段了但是有一个小的问题。那我们的 name，brand，businne 等字段这些都要参与搜索，那这些将来都要参与搜索也就意味着将来用户输入关键字我可能要根据多个字段搜索，也就是查询条件不是一个值而是多个值。那根据一个字段搜效率高，还是根据多个字段搜效率高呢？显然是一个字段搜。但是需求是希望用户输入名称能搜到，输入品牌也能搜到，输入商圈也能搜到，多个搜索条件而我又想性能好该怎么办？</p>\n<p>ES 提供了一个功能可以解决这个问题，如下小提示</p>\n<blockquote>\n<p><strong>小提示</strong>：</p>\n<p>字段拷贝可以使用 copy_to 属性将当前字段拷贝到指定字段。示例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<p>完整的索引库如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PUT /dkx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"city\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">\"starName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token property\">\"business\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"geo_point\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">\"pic\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、初始化 JavaRestClient</p>\n<p>3.1、引入 es 的 RestHighLevelClient 依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.elasticsearch.client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>elasticsearch-rest-high-level-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">&lt;!-- 在 properties 中声明了版本在这里可以不加版本 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>3.2、因为 SpringBoot 默认的 ES 版本是 7.6.2、所以我们需要覆盖默认的 ES 版本：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>java.version</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>java.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">&lt;!-- 使用 elasticsearch 必须在 properties 中强制声明版本号 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">&lt;!-- 统一控制 elasticsearch 版本号，是因为依赖内部的版本不统一 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>elasticsearch.version</span><span class=\"token punctuation\">></span></span>7.12.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>elasticsearch.version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>3.3、初始化 RestHighLevelClient：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@BeforeEach</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestHighLevelClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RestClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">HttpHost</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http:/192.168.249.128:9200\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    微服务集群可以写多个</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    HttpHost.create (\"http:/192.168.249.128:9200\"),</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    HttpHost.create (\"http:/192.168.249.128:9200\"),</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    HttpHost.create (\"http:/192.168.249.128:9200\")</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、利用 JavaRestClient 创建索引库</p>\n<p>需要注意：dkx 这个索引库已经创建过了再创建就会报错如下：</p>\n<p>需要先将其删除后再进行测试</p>\n<pre><code>[dkx/CGJFBdUgTFCV46PbgurYiA] ElasticsearchStatusException[Elasticsearch exception [type=resource_already_exists_exception, reason=index [dkx/CGJFBdUgTFCV46PbgurYiA] already exists]\n]\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121425282.png\" alt=\"image-20231012142539675\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">createHotelIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 创建 Request 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">CreateIndexRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateIndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备请求的参数：DSL 语句</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">// 通过类路径来获取 hote.json 配置文件的绝对路径</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token class-name\">String</span> path <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContextClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hote.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">// 如果获取绝对路径中含有中文可能会乱码所以需要进行编码处理</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      path <span class=\"token operator\">=</span> <span class=\"token class-name\">URLDecoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\">// 通过字符输入流来读取指定位置的 json 文件内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token class-name\">FileReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      msg <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         <span class=\"token comment\">// 将读取到的内容拼接到一个字符串中</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>         msg <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\">//msg 是读取的 json 文件里面是创建索引库的 DSL 语句</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">XContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">indices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>hote.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">\"city\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">\"starName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"business\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token property\">\"copy_to\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"geo_point\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token property\">\"pic\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"keyword\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 kibana 中执行 GET 请求，请求 /dkx 索引库查看是否存在</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121533685.png\" alt=\"image-20231012153324541\"></p>\n<p>5、利用 JavaRestClient 删除索引库</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteHoteIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 创建 Request 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">DeleteIndexRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeleteIndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 2. 发送请求</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">indices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>6、利用 JavaRestClient 判断索引库是否存在</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">exitHoteIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 创建 Request 请求</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">GetIndexRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetIndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 2. 发送请求</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">boolean</span> exists <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">indices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>exists <span class=\"token operator\">?</span> <span class=\"token string\">\"存在\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>:</p>\n<p>索引库操作的基本步骤：</p>\n<ul>\n<li>初始化 RestHighLevelClient</li>\n<li>创建 XxxIndexRequest。Xxx 是 CREATE，Get，Delete</li>\n<li>准备 DSL (CREATE 时需要)</li>\n<li>发送请求。调用 RestHighLevelClient#indices ().xxx () 方法，xxx 是 create，exists，delete</li>\n</ul>\n</blockquote>\n<h4 id=\"987-restclient操作文档\"><a class=\"markdownIt-Anchor\" href=\"#987-restclient操作文档\">#</a> 9.8.7、RestClient 操作文档🌲</h4>\n<ul>\n<li>新增文档</li>\n<li>查询文档</li>\n<li>删除文档</li>\n<li>修改文档</li>\n<li>批量导入文档</li>\n</ul>\n<h5 id=\"9871-案例利用javarestclient实现文档的crud\"><a class=\"markdownIt-Anchor\" href=\"#9871-案例利用javarestclient实现文档的crud\">#</a> 9.8.7.1、案例，利用 JavaRestClient 实现文档的 CRUD🌴</h5>\n<p>去数据库查询酒店数据，导入到 dkx 索引库，实现酒店数据的 CRUD</p>\n<p><strong>基本步骤如下</strong>：</p>\n<p>1、初始化 JavaRestClient</p>\n<p>新建一个测试类，实现文档相关操作，并且完成 JavaRestClient 的初始化</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HoteIndexTest1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RestHighLevelClient</span> client<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> \t <span class=\"token annotation punctuation\">@BeforeEach</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestHighLevelClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RestClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token class-name\">HttpHost</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://192.168.249.128:9200\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterEach</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、利用 JavaRestClient 新增酒店数据</p>\n<p>先通过 mysql 查询酒店数据，然后给这条数据创建倒排索引，即可完成添加：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">IHotelService</span> iHotelService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAddDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 根据 id 查询酒店数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">Hotel</span> byId <span class=\"token operator\">=</span> iHotelService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token number\">36934L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 转换为文档类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>byId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request 对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token class-name\">IndexRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>hotelDoc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 JSON 文档</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121557188.png\" alt=\"image-20231012155720876\"></p>\n<p>到 kibana 中通过命令：GET /dkx/_doc/36934 查看是否成功添加了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121638859.png\" alt=\"image-20231012163857506\"></p>\n<p>3、利用 JavaRestClient 根据 id 查询酒店数据</p>\n<p>根据 id 查询到的文档数据是 json，需要反序列化为 java 对象：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testGetDocumentById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">GetRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"36934\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 发送请求，得到响应</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">GetResponse</span> documentFields<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      documentFields <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 3. 解析响应结果</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> documentFields<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 通过 JSON.parseObject 将 json 数据解析为指定的对象</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//--------------------- 打印结果 ---------------------</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">36934</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token number\">7</span>天连锁酒店<span class=\"token punctuation\">(</span>上海宝山路地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>静安交通路<span class=\"token number\">40</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">336</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span><span class=\"token number\">7</span>天酒店<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>四川北路商业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.251433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.47522</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G1</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token number\">3</span>E<span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token class-name\">Cii9EVkyLrKIXo1vAAHgrxo_pUcAALcKQLD688AAeDH564_w200_h200_c1_t0</span><span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121629666.png\" alt=\"image-20231012162936320\"></p>\n<p>4、利用 JavaRestClient 删除酒店数据</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDeleteDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">DeleteRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeleteRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"36934\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 发送请求</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121659241.png\" alt=\"image-20231012165946036\"></p>\n<p>如果删除后再去通过 java 代码去查询返回结果就是 null</p>\n<p>5、利用 JavaRestClient 修改酒店数据</p>\n<p>修改文档数据有两种方式：</p>\n<p>方式一：全量更新。再次写入 id 一样的文档，就会删除旧文档，添加新文档，它的 java 代码和添加没有区别</p>\n<p>方式二：局部更新。只更新部分字段，我们演示方式二</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdateDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">UpdateRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"36934\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备请求参数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">doc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 使用 逗号隔开 两个一对</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"952\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token string\">\"starName\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"五钻\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121643267.png\" alt=\"image-20231012164318114\"></p>\n<p>修改前通过 id 获取数据</p>\n<pre><code>HotelDoc(id=36934, name=7天连锁酒店(上海宝山路地铁站店), address=静安交通路40号, price=336, score=37, brand=7天酒店, city=上海, starName=二钻, business=四川北路商业区, location=31.251433, 121.47522, pic=https://m.tuniucdn.com/fb2/t1/G1/M00/3E/40/Cii9EVkyLrKIXo1vAAHgrxo_pUcAALcKQLD688AAeDH564_w200_h200_c1_t0.jpg)\n</code></pre>\n<p>修改后通过 id 获取数据</p>\n<pre><code>HotelDoc(id=36934, name=7天连锁酒店(上海宝山路地铁站店), address=静安交通路40号, price=952, score=37, brand=7天酒店, city=上海, starName=五钻, business=四川北路商业区, location=31.251433, 121.47522, pic=https://m.tuniucdn.com/fb2/t1/G1/M00/3E/40/Cii9EVkyLrKIXo1vAAHgrxo_pUcAALcKQLD688AAeDH564_w200_h200_c1_t0.jpg)\n</code></pre>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>文档操作的基本步骤：</p>\n<ul>\n<li>初始化 RestHighLevelClient</li>\n<li>创建 XxxRequest。XXX 是 Index，Get，Update，Delete</li>\n<li>准备参数 (Index 和 Update 时需要)</li>\n<li>发送请求。调用 RestHighLevelClient#.xxx () 方法，xxx 是 Index，Get，Update，Delete</li>\n<li>解析结果 (Get 时需要)</li>\n</ul>\n</blockquote>\n<h4 id=\"988-案例利用javarestclient批量导入酒店数据到es\"><a class=\"markdownIt-Anchor\" href=\"#988-案例利用javarestclient批量导入酒店数据到es\">#</a> 9.8.8、案例，利用 JavaRestClient 批量导入酒店数据到 ES🌲</h4>\n<p>需求：批量查询酒店数据，然后批量导入索引库中</p>\n<p>思路：</p>\n<p>1、利用 mybatis-plus 查询酒店数据</p>\n<p>2、将查询到的酒店数据 (Hotel) 转换为 文档类型数据 (HotelDoc)</p>\n<p>3、利用 JavaRestClient 中的 Bulk 批处理，实现批量新增文档，示例代码如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HoteIndexTest1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RestHighLevelClient</span> client<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IHotelService</span> iHotelService<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testBulkRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 批量查询酒店数据</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hotel</span><span class=\"token punctuation\">></span></span> hotels <span class=\"token operator\">=</span> iHotelService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 1. 创建 Request</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">BulkRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BulkRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 2. 准备参数，添加多个新增的 Request</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 2.1 对查询出的酒店数据进行遍历</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hotel</span> hotel<span class=\"token operator\">:</span> hotels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 转换为文档类型 HotelDoc</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 创建新增文档的 Request 对象</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            request<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">bulk</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token annotation punctuation\">@BeforeEach</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestHighLevelClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RestClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token class-name\">HttpHost</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://192.168.249.128:9200\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterEach</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>到 kibana 页面通过命令：GET /dkx/_search 查看结果</p>\n<p>可以看到查询出了 201 条数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121723744.png\" alt=\"image-20231012172343307\"></p>\n<h3 id=\"99-dsl查询文档\"><a class=\"markdownIt-Anchor\" href=\"#99-dsl查询文档\">#</a> 9.9、DSL 查询文档🌳</h3>\n<ul>\n<li>DSL 查询分类</li>\n<li>全文检索查询</li>\n<li>精准查询</li>\n<li>地理坐标查询</li>\n<li>组合查询</li>\n</ul>\n<h4 id=\"991-dsl-query的分类\"><a class=\"markdownIt-Anchor\" href=\"#991-dsl-query的分类\">#</a> 9.9.1、DSL Query 的分类🌲</h4>\n<p>Elasticsearch 提供了基于 JSON 的 DSL (Domain Specific Language) 来定义查询。常见的查询类型包括：</p>\n<ul>\n<li>查询所有：查询出所有数据，一般测试用。例如：match_all</li>\n<li>全文检索 (full text) 查询：利用分词器对用户输入内容分词，然后去倒排索引库中匹配。例如：\n<ul>\n<li>match_query</li>\n<li>multi_match_query</li>\n</ul>\n</li>\n<li>精确查询：根据精确词条值查找数据，一般是查找 keyword，数值，日期，boolean 等类型字段。例如：\n<ul>\n<li>ids</li>\n<li>range</li>\n<li>term</li>\n</ul>\n</li>\n<li>地理 (geo) 查询：根据经纬度查询。例如：\n<ul>\n<li>geo_distance</li>\n<li>geo_bounding_box</li>\n</ul>\n</li>\n<li>复合 (compound) 查询：复合查询可以将上述各种查询条件组合起来，合并查询条件。例如：\n<ul>\n<li>bool</li>\n<li>function_score</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"9911-dsl-query基本语法\"><a class=\"markdownIt-Anchor\" href=\"#9911-dsl-query基本语法\">#</a> 9.9.1.1、DSL Query 基本语法🌴</h5>\n<p>查询的基本语法如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"查询类型\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token property\">\"查询条件\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"条件值\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121738538.png\" alt=\"image-20231012173803886\"></p>\n<blockquote>\n<p>总结：</p>\n<p>查询 DSL 的基本语法是什么？</p>\n<ul>\n<li>GET / 索引库名 /_search</li>\n<li>{“query”: {“查询类型”:{“FIELD”:”TEXT”}}}</li>\n</ul>\n</blockquote>\n<h4 id=\"992-全文检索查询\"><a class=\"markdownIt-Anchor\" href=\"#992-全文检索查询\">#</a> 9.9.2、全文检索查询🌲</h4>\n<p>match 查询：全文检索查询的一种，会对用户输入内容分词，然后去倒排索引检索，语法：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TEXT\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121802836.png\" alt=\"image-20231012180230588\"></p>\n<p>multi_match：与 match 查询类似，只不过允许同时查询多个字段，语法：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"multi_match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TEXT\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"FIELD1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FIELD12\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121933446.png\" alt=\"image-20231012193303357\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>match 和 muliti_match 的区别是什么？</p>\n<ul>\n<li>match：根据一个字段查询</li>\n<li>multi_match：根据多个字段查询，参与查询字段越多，查询性能越差</li>\n</ul>\n</blockquote>\n<h4 id=\"993-精确查询\"><a class=\"markdownIt-Anchor\" href=\"#993-精确查询\">#</a> 9.9.3、精确查询🌲</h4>\n<p>精确查询一般是查找 keyword，数值，日期，boolean 等类型字段。所以<mark>不会</mark>对搜索条件分词。常见的有：</p>\n<ul>\n<li>term：根据词条精确值查询</li>\n<li>range：根据值的范围查询</li>\n</ul>\n<h5 id=\"9931-精确查询-语法\"><a class=\"markdownIt-Anchor\" href=\"#9931-精确查询-语法\">#</a> 9.9.3.1、精确查询 - 语法🌴</h5>\n<p>精确查询一般是根据 id，数值，keyword 类型，或布尔字段来查询。语法如下：</p>\n<p>term 查询：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//term 查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"term\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VLAUE\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310121959434.png\" alt=\"image-20231012195904980\"></p>\n<p>range 查询：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//range 查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token property\">\"gte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token property\">\"lte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310122000353.png\" alt=\"image-20231012200031386\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>精确查询常见的有哪些？</p>\n<ul>\n<li>term 查询：根据词条精确匹配，一般搜索 keyword 类型，数值类型，布尔类型，日期类型字段</li>\n<li>range 查询：根据数值范围查询，可以是数值，日期的范围</li>\n</ul>\n</blockquote>\n<h4 id=\"994-地理查询\"><a class=\"markdownIt-Anchor\" href=\"#994-地理查询\">#</a> 9.9.4、地理查询🌲</h4>\n<p>根据经纬度查询。常见的使用场景包括：</p>\n<ul>\n<li>携程：搜索我附近的酒店</li>\n<li>滴滴：搜索我附近的出租车</li>\n<li>微信：搜索我附近的人</li>\n</ul>\n<p>根据经纬度查询，例如：</p>\n<ul>\n<li>geo_bounding_box：查询 geo_point 值落在某个矩形范围的所有文档</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//geo_bounding_box 查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"geo_bounding_box\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"top_left\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>               <span class=\"token property\">\"lat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">31.1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           \t\t<span class=\"token property\">\"lon\"</span><span class=\"token operator\">:</span> <span class=\"token number\">121.5</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"bottom_right\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>               <span class=\"token property\">\"lat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">30.9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>               <span class=\"token property\">\"lon\"</span><span class=\"token operator\">:</span> <span class=\"token number\">121.7</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在搜索的时候根据 “top_left” 和 “bottom_right” 两个点分别画一个横线和竖线 的 经纬度进行相交形成的一个矩形范围</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310122020535.png\" alt=\"image-20231012202007403\"></p>\n<p>根据经纬度查询，例如：</p>\n<ul>\n<li>geo_distance：查询到指定中心点小于某个距离值的所有文档</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//geo_distance 查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"geo_distance\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"distance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"15km\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"31.21,121.5\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131024931.png\" alt=\"image-20231013102411621\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310122027316.png\" alt=\"image-20231012202733050\"></p>\n<h4 id=\"995-复合查询\"><a class=\"markdownIt-Anchor\" href=\"#995-复合查询\">#</a> 9.9.5、复合查询🌲</h4>\n<p>复合 (compound) 查询：复合查询可以将其它简单查询组合起来，实现更复杂的搜索逻辑，例如：</p>\n<ul>\n<li>fuction score：算分函数查询，可以控制文档相关性算分，控制文档排名。例如百度竞价</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130800939.png\" alt=\"image-20231013080014517\"></p>\n<p>例如，我们搜索 “虹桥如家” ，结果如下：</p>\n<p>这个词在第一条文档中出现了一次，而这个文档中词条的总数是：5</p>\n<p>所以词条频率就是 1 / 5 = 0.2 分。词条出现的频率越多得分越高</p>\n<p>证明你跟这个词相关性也越高</p>\n<p>但是有个问题：</p>\n<p>如家这个词在这几篇文档中都有出现，那再去吧这个 “如家” 进行累加还有意义吗？。没有意义</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130801156.png\" alt=\"image-20231013080054602\"></p>\n<p>所以我们就引入一个新的算法：TFIDF 算法</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130807792.png\" alt=\"image-20231013080723131\"></p>\n<p>我们以如家为例，那么包含如家的文档有三个，而文档总数也是三那 3 /3 = 1 那 Log/1 = 0 。那代表如家这个权重就是 0 。那相反虹桥这个词支出现在一个文档中，所以分母就是 1 ，而文档总数是 3 所以结果就是 3</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130812773.png\" alt=\"image-20231013081248428\"></p>\n<p>这个算法也是去做累加只不过它在做 tf 和 idf 的时候算法上面会更加复杂一点，为什么要演变一种新的算法呢？</p>\n<p>是因为这种算法它不会受词频影响较大</p>\n<p>在传统的 tf 算法中词频越高，将来得分会无限增加。会越来越高，但是 BM25 算法呢，最终的分会趋于一个水平，也就是它不会无限增长。所以相对来讲这种算法会更好一点得分会更平和一点。因此在 ES 高版本中都会采用默认都会采用 BM25 算法</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130817842.png\" alt=\"image-20231013081755494\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>elasticsearch 中的相关性打分算法是什么？</p>\n<ul>\n<li>TF-IDF：在 elasticsearch5.0 之前，会随着词频增加而越来越大</li>\n<li>BM25：在 elasticsearch5.0 之后，会随着词频增加而增大，但增长曲线会趋于水平</li>\n</ul>\n</blockquote>\n<h5 id=\"9961-function-score-query\"><a class=\"markdownIt-Anchor\" href=\"#9961-function-score-query\">#</a> 9.9.6.1、Function Score Query🌴</h5>\n<p>使用 fucntion score query ，可以修改文档的相关性算分 (query score) ，根据新得到的算分排序。</p>\n<blockquote>\n<p>我们知道 ES 在搜索文档的时候会对文档做相关性的一个打分，文档与搜索关键字的相关度越高那么打分就自然就越高。排名也会越靠前。不过有些时候我们希望人为的去控制文档的排名，比如说有部分文档人家掏钱了我就让它排名靠前一点，算分高一点那么这个时候就要用到 Function Score Query 了。这个查询可以在原始的相关性算法的基础上加以修改得到一个想要的算分从而去影响文档的排名</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310130933092.png\" alt=\"image-20231013093343922\"></p>\n<h6 id=\"99611-案例给-如家-这个品牌的酒店排名靠前一些\"><a class=\"markdownIt-Anchor\" href=\"#99611-案例给-如家-这个品牌的酒店排名靠前一些\">#</a> 9.9.6.1.1、案例，给 “如家” 这个品牌的酒店排名靠前一些🎋</h6>\n<p>把这个问题翻译一下，function score 需要的三要素：</p>\n<p>1、哪些文档需要算分加权？</p>\n<ul>\n<li>品牌为如家的酒店</li>\n</ul>\n<p>2、算分函数是什么？</p>\n<ul>\n<li>weight 就可以</li>\n</ul>\n<p>3、加权模式是什么？</p>\n<ul>\n<li>求和</li>\n</ul>\n<p>先正常的进行查询查看结果</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"function_score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"外滩\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"took\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">61</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"timed_out\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"_shards\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"successful\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"skipped\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"failed\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"value\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"relation\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"eq\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">\"max_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6.024319</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"60487\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6.024319</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"黄浦路199号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"君悦\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"外滩地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">60487</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.245409\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.492969\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海外滩茂悦大酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb3/s1/2n9c/2Swp2h1fdj9zCUKsk63BQvVgKLTo_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">689</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"五星级\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"432335\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4.849986</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"唐山路145号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"北外滩地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">432335</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.252585\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.498753\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天连锁酒店(上海北外滩国际客运中心地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m2.tuniucdn.com/filebroker/cdn/res/c1/ba/c1baf64418437c56617f89840c6411ef_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"434082\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3.8909411</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"复兴东路260号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"豫园地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">434082</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.220706\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.498769\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店·neo(上海外滩城隍庙小南门地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-U13eXLGIdHFzAAIG-5cEwDEAAGRfQNNIV0AAgcT627_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到 “如家酒店” 排在最后一个我们通过下面的代码让其排名为第一</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"function_score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"外滩\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">\"functions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 算分函数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 满足的条件，品牌必须是如家</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"term\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"weight\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\">// 算分权重为 10</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"boost_mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sum\"</span> <span class=\"token comment\">// 算分模式使用 fucntion_score 与 query_score 相除的方式算分</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"took\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"timed_out\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"_shards\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"successful\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"skipped\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"failed\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"value\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"relation\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"eq\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">\"max_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">13.890942</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"434082\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">13.890942</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"复兴东路260号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"豫园地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">434082</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.220706\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.498769\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店·neo(上海外滩城隍庙小南门地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-U13eXLGIdHFzAAIG-5cEwDEAAGRfQNNIV0AAgcT627_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"60487\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7.024319</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"黄浦路199号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"君悦\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"外滩地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">60487</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.245409\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.492969\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海外滩茂悦大酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb3/s1/2n9c/2Swp2h1fdj9zCUKsk63BQvVgKLTo_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">689</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"五星级\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"432335\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5.849986</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"唐山路145号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"北外滩地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">432335</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>          <span class=\"token property\">\"latitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.252585\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>          <span class=\"token property\">\"longitude\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"121.498753\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天连锁酒店(上海北外滩国际客运中心地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m2.tuniucdn.com/filebroker/cdn/res/c1/ba/c1baf64418437c56617f89840c6411ef_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>:</p>\n<p>function score query 定义的三要素是什么？</p>\n<ul>\n<li>过滤条件：哪些文档要加分</li>\n<li>算分函数：如何计算 function score</li>\n<li>加权方式：function score 与 query score 如何运算</li>\n</ul>\n</blockquote>\n<h5 id=\"9962-boolean-query\"><a class=\"markdownIt-Anchor\" href=\"#9962-boolean-query\">#</a> 9.9.6.2、Boolean Query🌴</h5>\n<p>布尔查询是一个或多个查询子句的组合。子查询的组合方式有：</p>\n<ul>\n<li>must：必须匹配每个子查询，类似 “与”</li>\n<li>should：选择性匹配子查询，类似 “或”</li>\n<li>must_not：必须不匹配，不参与算分，类似 “非”</li>\n<li>filter：必须匹配，不参与算分</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_seach</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"bool\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token comment\">//must 里面是一个数组也就是说可以定义多个查询条件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"must\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 要求查询的城市必须 是 \"上海\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"term\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"city\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token property\">\"should\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 两个品牌中的任意一个都可以因为是 \"或\" 的关系 一个有表示为 true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"term\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"皇冠假日\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"term\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"华美达\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token property\">\"must_not\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 取反，lte 是小于等于，由于取反操作 所以是查询价格 大于等于 500 的</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"lte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 过滤，查询用户评价分大于 45 分的</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"score\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"gte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">45</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"99621-利用bool查询实现功能\"><a class=\"markdownIt-Anchor\" href=\"#99621-利用bool查询实现功能\">#</a> 9.9.6.2.1、利用 bool 查询实现功能🎋</h6>\n<p><strong>需求</strong>：搜索名字包含 “如家” ， 价格不高于 400，在坐标 31.21，121.5 周围 10km 范围内的酒店。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search <span class=\"token comment\">// GET 请求 / 索引库名 / 查询全部文档</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"bool\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"must\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"must_not\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>              <span class=\"token property\">\"gt\"</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token property\">\"geo_distance\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token property\">\"distance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10km\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>              <span class=\"token property\">\"lat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">31.21</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>              <span class=\"token property\">\"lon\"</span><span class=\"token operator\">:</span> <span class=\"token number\">121.5</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"took\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">173</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"timed_out\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"_shards\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"successful\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"skipped\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"failed\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"value\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"relation\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"eq\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">\"max_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.716119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"433576\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.716119</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"南京东路480号保安坊内\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"人民广场地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">433576</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"location\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.236454, 121.480948\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店(上海南京路步行街店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb2/t1/G6/M00/52/BA/Cii-U13eXVaIQmdaAAWxgzdXXxEAAGRrgNIOkoABbGb143_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">379</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"434082\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.5234909</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"复兴东路260号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"豫园地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">434082</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          <span class=\"token property\">\"location\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.220706, 121.498769\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店·neo(上海外滩城隍庙小南门地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb2/t1/G6/M00/52/B6/Cii-U13eXLGIdHFzAAIG-5cEwDEAAGRfQNNIV0AAgcT627_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">392</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1584362548\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.4174237</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"御青路315-317号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"周浦康桥地区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1584362548</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>          <span class=\"token property\">\"location\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"31.15719, 121.572392\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店(上海浦东国际旅游度假区御桥地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb3/s1/2n9c/2ybd3wqdoBtBeKcPxmyso9y1hNXa_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">339</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>bool 查询有几种逻辑关系？</p>\n<ul>\n<li>must：必须匹配的条件，可以理解为 “与”</li>\n<li>should：选择性匹配的条件，可以理解为 “或”</li>\n<li>must_not：必须不匹配的条件，不参与打分</li>\n<li>filter：必须匹配的条件，不参与打分</li>\n</ul>\n</blockquote>\n<h4 id=\"996-搜索结果处理\"><a class=\"markdownIt-Anchor\" href=\"#996-搜索结果处理\">#</a> 9.9.6、搜索结果处理🌲</h4>\n<ul>\n<li>排序</li>\n<li>分页</li>\n<li>高亮</li>\n</ul>\n<h5 id=\"9961-排序\"><a class=\"markdownIt-Anchor\" href=\"#9961-排序\">#</a> 9.9.6.1、排序🌴</h5>\n<p>elasticsearch 支持对搜索结果排序，默认是根据相关度算分 (_score) 来排序。可以排序字段类型有：keyword 类型，数值类型，地理坐标类型，日期类型等。</p>\n<p><strong><font color='red'>注意</font>.</strong>：一旦进行排序 score 就会放弃打分，因为打分就没有意义了</p>\n<p>字段</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"desc\"</span> <span class=\"token comment\">// 排序字段和排序方式 ASC , DESC</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>地理坐标</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token property\">\"_geo_distance\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"纬度，经度\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"unit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"km\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"99611-案例对酒店数据按照用户评价降序排序评价相同的按照价格升序排序\"><a class=\"markdownIt-Anchor\" href=\"#99611-案例对酒店数据按照用户评价降序排序评价相同的按照价格升序排序\">#</a> 9.9.6.1.1、案例，对酒店数据按照用户评价降序排序，评价相同的按照价格升序排序🎋</h6>\n<p>评价是 score 字段，价格是 price 字段，按照顺序添加两个排序规则即可。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"score\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"desc\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"99612-案例实现对酒店数据按照到你的位置坐标距离升序排序\"><a class=\"markdownIt-Anchor\" href=\"#99612-案例实现对酒店数据按照到你的位置坐标距离升序排序\">#</a> 9.9.6.1.2、案例，实现对酒店数据按照到你的位置坐标距离升序排序🎋</h6>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 找到 <span class=\"token number\">31.034661</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.612282</span> 周围的酒店，距离升序排序</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">\"_geo_distance\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        # location的两种写法都可以</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        # <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"31.034661, 121.612282\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token property\">\"lat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">31.034661</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token property\">\"lon\"</span><span class=\"token operator\">:</span> <span class=\"token number\">121.612282</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"desc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token property\">\"unit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"km\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"9962-分页\"><a class=\"markdownIt-Anchor\" href=\"#9962-分页\">#</a> 9.9.6.2、分页🌴</h5>\n<p>elasticsearch 默认情况下只返回 top 10 的数据。而如果要查询更多数据就需要修改分页参数了。</p>\n<p>elasticsearch 中通过修改 from，size 参数来控制要返回的分页结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token property\">\"from\"</span><span class=\"token operator\">:</span> <span class=\"token number\">990</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 分页开始的位置，默认为 0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 期望获取的文档总数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dsc\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>计算公式</mark>：from - 1 * size = 当前页数</p>\n<p>虽然 ES 的分页查询与 mysql 很像但是其底层原理有很大差别。ES 底层采用的是倒排索引，它的结构其实是不利于做分页的，所以 ES 采用的是逻辑上的一种分页，比方说要查 <code>990~1000</code>  这是条数据。对于 ES 来说它只能查出从 <code>0~1000</code>  个所有的数据，然后去截取 <code>990~1000</code>  的一部分数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131132651.png\" alt=\"image-20231013113208351\"></p>\n<p>这种情况在单点查询的时候没什么问题，但是如果是集群 ES 就会把数据进行拆分，放到不同的机器上。拆分的每一份称为分片，也就是每一片上的数据都不一样</p>\n<h6 id=\"99621-深度分页问题\"><a class=\"markdownIt-Anchor\" href=\"#99621-深度分页问题\">#</a> 9.9.6.2.1、深度分页问题🎋</h6>\n<p>ES 是分布式的，所以会面临深度分页问题。例如按 price 排序后，获取 from=990，size=10 的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131135634.png\" alt=\"image-20231013113540176\"></p>\n<p>1、首先在每个数据分片上都排序并查询到 1000 条文档</p>\n<p>2、然后将所有节点的结果聚合，在内存中重新排序选出前 1000 条文档</p>\n<p>3、最后从这 1000 条中，选取从 990 开始的 10 条文档</p>\n<p>如果搜索页数过深，或者结果集 (from + size) 越大，对内存和 CPU 的消耗也越高。因此 ES 设定结果集查询的上限是 10000</p>\n<p>如下演示超出 10000 条会怎么样</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"from\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9990</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//----------------------- 查询结果 -----------------------</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">\"took\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token property\">\"timed_out\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token property\">\"_shards\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">\"successful\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">\"skipped\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">\"failed\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token property\">\"total\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">\"value\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"relation\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"eq\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token property\">\"max_score\"</span> <span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>9990 - 1 * 10 也就是刚好 10000 条数据，但是如果加 1</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"from\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9991</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131143199.png\" alt=\"image-20231013114259949\"></p>\n<p>查询报错了</p>\n<h6 id=\"99622-深度分页解决方案\"><a class=\"markdownIt-Anchor\" href=\"#99622-深度分页解决方案\">#</a> 9.9.6.2.2、深度分页解决方案🎋</h6>\n<p>针对深度分页，ES 提供了两种解决方案</p>\n<ul>\n<li>search after：分页时需要排序，原理是从上一次的排序值开始，查询下一页数据。官方推荐使用的方式。</li>\n<li>scroll：原理将排序数据形成快照，保存在内存。官方已经不推荐使用。</li>\n</ul>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>from + size</p>\n<ul>\n<li>优点：支持随机翻页</li>\n<li>缺点：深度分页问题，默认查询上限 (from + size) 是 10000</li>\n<li>场景：百度，京东，谷歌，淘宝这样的随机翻页搜索</li>\n</ul>\n<p>after search：</p>\n<ul>\n<li>优点：没有查询上限 (单次查询的 size 不超过 10000)</li>\n<li>缺点：只能向后逐页查询，不支持随机翻页</li>\n<li>场景：没有随机翻页需求的搜索，例如手机向下滚动翻页</li>\n</ul>\n<p>scroll：</p>\n<ul>\n<li>优点：没有查询上限 (单次查询的 size 不超过 10000)</li>\n<li>缺点：会有额外内存消耗，并且搜索结果是非实时的</li>\n<li>场景：海量数据的获取和迁移。从 ES7.1 开始不推荐，建议使用 after search 方案。</li>\n</ul>\n</blockquote>\n<h5 id=\"9963-高亮\"><a class=\"markdownIt-Anchor\" href=\"#9963-高亮\">#</a> 9.9.6.3、高亮🌴</h5>\n<p><strong>高亮</strong>：就是在搜索结果中把搜索关键字突出显示。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131156938.png\" alt=\"image-20231013115559310\"></p>\n<p>原理是这样的：</p>\n<ul>\n<li>将搜索结果中的关键字用标签标记出来</li>\n<li>在页面中给标签添加 css 样式</li>\n</ul>\n<p>语法：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TEXT\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token property\">\"highlight\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 指定要高亮的字段</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token property\">\"FIELD\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"pre_tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;em>\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 用来标记高亮字段的前置标签</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"post_tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;/em>\"</span> <span class=\"token comment\">// 用来标记高亮字段的后置标签</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 高亮查询，默认情况下，ES搜索字段必须与高亮字段一致，否则不会高亮</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"highlight\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//------------------- 结果 -------------------</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"339952837\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2.7569861</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"良乡西路7号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"brand\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"business\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"房山风景区\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"city\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">339952837</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"location\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"39.73167, 116.132482\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家酒店(北京良乡西路店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"pic\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"https://m.tuniucdn.com/fb3/s1/2n9c/3Dpgf5RTTzrxpeN5y3RLnRVtxMEA_w200_h200_c1_t0.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token property\">\"score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token property\">\"starName\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"二钻\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><font color='red'>注意</font>：高亮查询，默认情况下，ES 搜索字段必须与高亮字段一致，否则不会高亮</p>\n<p>演示代码：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 高亮查询，默认情况下，ES搜索字段必须与高亮字段一致，否则不会高亮</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"highlight\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//----------------------------- 结果 -----------------------------</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token string\">\"&lt;em>如家&lt;/em>酒店(北京良乡西路店)\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>可以看到 name 字段加上了高亮标签了，但是 。我不希望在查询中指定 name 字段因为 all 搜索到的更多</p>\n<p>解决办法如下：</p>\n<p>“require_field_match”: “true” ：是否需要字段高亮匹配，默认是 true 需要高亮字段与查询字段匹配</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 高亮查询，默认情况下，ES搜索字段必须与高亮字段一致，否则不会高亮</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"highlight\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token comment\">// 修改为 false 让其不与查询字段匹配就可以高亮了\t</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"require_field_match\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>搜索结果处理整体语法：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token property\">\"from\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 分页开始的位置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 期望获取的文档总数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span> <span class=\"token comment\">// 普通排序</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token property\">\"_geo_distance\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 距离排序</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"31.040699,121.618075\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"unit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"km\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token property\">\"highlight\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 高亮字段</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token property\">\"pre_tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;em>\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 用来标记高亮字段的前置标签</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token property\">\"post_tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;/em>\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 用来标记高亮字段的后置标签</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">\"require_field_match\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<h4 id=\"997-restclient查询文档\"><a class=\"markdownIt-Anchor\" href=\"#997-restclient查询文档\">#</a> 9.9.7、RestClient 查询文档🌲</h4>\n<ul>\n<li>快速入门</li>\n<li>match 查询</li>\n<li>精确查询</li>\n<li>复合查询</li>\n<li>排序，分页，高亮</li>\n</ul>\n<h5 id=\"9971-快速入门\"><a class=\"markdownIt-Anchor\" href=\"#9971-快速入门\">#</a> 9.9.7.1、快速入门🌴</h5>\n<p>我们通过 match_all 来演示下基本的 API，先看请求 DSL 的组织：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131223853.png\" alt=\"image-20231013122353640\"></p>\n<p>核心的 API：</p>\n<p>request.source()：</p>\n<p>里面封装了：排序，分页，高亮等所有功能。</p>\n<p>QueryBuilders：</p>\n<p>里面有各种各样的查询 matchQuery，matchAllQuery，boolQuery 等等。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131947096.png\" alt=\"image-20231013194730970\"></p>\n<p>代码演示：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMatchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchAllQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token comment\">// 4.1. 获取总数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token comment\">// 4.2. 文档数组</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 4.3. 遍历文档数组</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token comment\">// 4.4. 获取文档 source</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\">// 4.5. 反序列化为 HotelDoc 对象</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//----------------------- 打印结果 -----------------------</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>共搜索到<span class=\"token number\">201</span>条数据</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token class-name\">HotelDoc</span><span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">36934</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token number\">7</span>天连锁酒店<span class=\"token punctuation\">(</span>上海宝山路地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>静安交通路<span class=\"token number\">40</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">336</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span><span class=\"token number\">7</span>天酒店<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>四川北路商业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.251433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.47522</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>RestAPI 中其中构建 DSL 是通过 HighLevelRestClient 中的 resource () 来实现的，其中包含了查询，排序，分页，高亮等所有功能：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131954682.png\" alt=\"image-20231013194937001\"></p>\n<p>RestAPI 中其中构建查询条件的核心部分是由一名为 QueryBuilders 的工具类提供的，其中包含了各种查询方法：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310131954893.png\" alt=\"image-20231013195054455\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>查询的基本步骤是：</p>\n<ol>\n<li>创建 SearchRequest 对象</li>\n<li>准备 Request.source ()，也就是 DSL。\n<ol>\n<li>QueryBuilders 来构建查询条件</li>\n<li>传入 Request.source () 的 query () 方法</li>\n</ol>\n</li>\n<li>发送请求，得到结果</li>\n<li>解析结果 (参考 JSON 结果，从外到内，逐层解析)</li>\n</ol>\n</blockquote>\n<h5 id=\"9972-全文检索查询\"><a class=\"markdownIt-Anchor\" href=\"#9972-全文检索查询\">#</a> 9.9.7.2、全文检索查询🌴</h5>\n<p>全文检索的 match 和 multi_match 查询与 match_all 的 API 基本一致。差别是查询条件，也就是 query 的部分。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310132252478.png\" alt=\"image-20231013225059138\"></p>\n<p>同样是利用 QueryBuilders 提供的方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>共搜索到<span class=\"token number\">30</span>条数据</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">339952837</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>北京良乡西路店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>良乡西路<span class=\"token number\">7</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">159</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>北京<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>房山风景区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">39.73167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116.132482</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>方法的抽取</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMatchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchAllQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 4. 调用解析响应函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 request</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token comment\">// 4. 调用解析响应函数</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"9973-精确查询\"><a class=\"markdownIt-Anchor\" href=\"#9973-精确查询\">#</a> 9.9.7.3、精确查询🌴</h5>\n<p>精确查询常见的有 term 查询和 range 查询，同样利用 QueryBuilder 实现：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310132252500.png\" alt=\"image-20231013210337545\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testJingque</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2.1 词条查询</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">termQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 2.2 范围查询</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">rangeQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gte</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lte</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//----------------- 打印结果 -----------------</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>共搜索到<span class=\"token number\">5</span>条数据</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">541619</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>上海莘庄地铁站龙之梦商业广场店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>莘庄镇莘浜路<span class=\"token number\">172</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">149</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>莘庄工业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.105797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.37755</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h5 id=\"9974-复合查询-boolean-query\"><a class=\"markdownIt-Anchor\" href=\"#9974-复合查询-boolean-query\">#</a> 9.9.7.4、复合查询 - boolean query🌴</h5>\n<p>精确查询常见的有 term 查询和 range 查询，同样利用 QueryBuilders 实现：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141059562.png\" alt=\"image-20231014105919882\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testBooleanQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 2.1. 准备 BoolQuery</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">BoolQueryBuilder</span> boolQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">boolQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2.2. 添加 term</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   boolQuery<span class=\"token punctuation\">.</span><span class=\"token function\">must</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">termQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">// 2.3. 添加 range</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   boolQuery<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">rangeQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lte</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 2.4. 将条件添加到 发送请求中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>boolQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>共搜索到<span class=\"token number\">18</span>条数据</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">517915</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店·<span class=\"token function\">neo</span><span class=\"token punctuation\">(</span>深圳草埔地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>布吉路<span class=\"token number\">1036</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">159</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>田贝<span class=\"token operator\">/</span>水贝珠宝城<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.583191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114.118499</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>要构建查询条件，只要记住一个类：QueryBuilders</p>\n</blockquote>\n<h5 id=\"9975-搜索结果处理\"><a class=\"markdownIt-Anchor\" href=\"#9975-搜索结果处理\">#</a> 9.9.7.5、搜索结果处理🌴</h5>\n<h6 id=\"99751-排序和分页\"><a class=\"markdownIt-Anchor\" href=\"#99751-排序和分页\">#</a> 9.9.7.5.1、排序和分页🎋</h6>\n<p>搜索结果的排序和分页是与 query 同级的参数，对应的 API 如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141103708.png\" alt=\"image-20231014110315292\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testPageAndSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 页码，每页大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">int</span> page <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>size <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchAllQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token comment\">// 2.1. 排序 sort</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SortOrder</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ASC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token comment\">// 2.2. 分页 from size</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//----------------------- 打印结果 -----------------------</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>共搜索到<span class=\"token number\">201</span>条数据</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">197837109</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店·<span class=\"token function\">neo</span><span class=\"token punctuation\">(</span>深圳龙岗大道布吉地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>布吉镇深惠路龙珠商城<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>布吉<span class=\"token operator\">/</span>深圳东站<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.602482</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114.123284</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G6</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token number\">25</span><span class=\"token operator\">/</span><span class=\"token number\">58</span><span class=\"token operator\">/</span><span class=\"token class-name\">Cii</span><span class=\"token operator\">-</span><span class=\"token class-name\">TF3PFZOIA7jwAAKInGFN4xgAAEVbAGeP4AAAoi0485_w200_h200_c1_t0</span><span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">2316304</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>深圳双龙地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>龙岗街道龙岗墟社区龙平东路<span class=\"token number\">62</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>龙岗中心区<span class=\"token operator\">/</span>大运新城<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.730828</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114.278337</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb3<span class=\"token operator\">/</span>s1<span class=\"token operator\">/</span><span class=\"token number\">2</span>n9c<span class=\"token operator\">/</span><span class=\"token number\">4</span>AzEoQ44awd1D2g95a6XDtJf3dkw_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">1630005459</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token number\">7</span>天连锁酒店（深圳地王大厦红桂路店）（原红桂路店）<span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>罗湖区宝安南路<span class=\"token number\">2078</span>号深港豪苑（与红桂路交汇处）<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">143</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span><span class=\"token number\">7</span>天酒店<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span><span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.550341</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114.10965</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G2</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token constant\">EA</span><span class=\"token operator\">/</span><span class=\"token number\">18</span><span class=\"token operator\">/</span><span class=\"token class-name\">Cii</span><span class=\"token operator\">-</span><span class=\"token class-name\">T1k1KaGIIkQVAAD4fD_T3FcAALTtABiCJ8AAPiU164_w200_h200_c1_t0</span><span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">541619</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>上海莘庄地铁站龙之梦商业广场店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>莘庄镇莘浜路<span class=\"token number\">172</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">149</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>莘庄工业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.105797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.37755</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb3<span class=\"token operator\">/</span>s1<span class=\"token operator\">/</span><span class=\"token number\">2</span>n9c<span class=\"token operator\">/</span><span class=\"token number\">3</span>mKs3jETvJDj3dDdkRB9UyLLvPna_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">1400304687</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>深圳横岗地铁站新马商贸城店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>龙岗大道横岗段<span class=\"token number\">4004</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">149</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>龙岗中心区<span class=\"token operator\">/</span>大运新城<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.642629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114.202799</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G6</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token number\">25</span><span class=\"token operator\">/</span><span class=\"token number\">5</span>A<span class=\"token operator\">/</span><span class=\"token class-name\">Cii</span><span class=\"token operator\">-</span><span class=\"token class-name\">TF3PFkiIb27dAAEqdDcKl3YAAEViQGVWY0AASqM960_w200_h200_c1_t0</span><span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"99752-高亮\"><a class=\"markdownIt-Anchor\" href=\"#99752-高亮\">#</a> 9.9.7.5.2、高亮🎋</h6>\n<p>高亮 API 包括请求 DSL 构建和结果解析两部分。我们先看请求的 DSL 构建：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141251993.png\" alt=\"image-20231014125137358\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 2.1.query 查询</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2.2. 高亮</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlighter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HighlightBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">requireFieldMatch</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//--------------------- 打印结果 ---------------------</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>共搜索到<span class=\"token number\">30</span>条数据</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">339952837</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>北京良乡西路店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>良乡西路<span class=\"token number\">7</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">159</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>北京<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>房山风景区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">39.73167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116.132482</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb3<span class=\"token operator\">/</span>s1<span class=\"token operator\">/</span><span class=\"token number\">2</span>n9c<span class=\"token operator\">/</span><span class=\"token number\">3D</span>pgf5RTTzrxpeN5y3RLnRVtxMEA_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">1455383931</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店<span class=\"token punctuation\">(</span>深圳宝安客运中心站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>西乡河西金雅新苑<span class=\"token number\">34</span>栋<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">169</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>深圳<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>宝安商业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">22.590272</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113.881933</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>从上面的打印结果中可以看到并没有找到高亮的部分啊。这是因为打印的是 source 的部分</p>\n<p>高亮的部分在另一个部分中如下图所示：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141305411.png\" alt=\"image-20231014130537007\"></p>\n<h6 id=\"997521-高亮结果解析\"><a class=\"markdownIt-Anchor\" href=\"#997521-高亮结果解析\">#</a> 9.9.7.5.2.1、高亮结果解析：</h6>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testHighlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 2.1.query 查询</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2.2. 高亮</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlighter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HighlightBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">requireFieldMatch</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token comment\">// 获取高亮结果</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HighlightField</span><span class=\"token punctuation\">></span></span> highlightFields <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getHighlightFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">// CollectionUtils：Spring 提供的工具类 isEmpty 判断 Map 集合是否为空</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>highlightFields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         <span class=\"token comment\">// 根据字段名获取高亮结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token class-name\">HighlightField</span> name <span class=\"token operator\">=</span> highlightFields<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>         <span class=\"token comment\">// 判断根据字段获取的内容是否为 null</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// 获取高亮值</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">getFragments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">// 覆盖非高亮结果</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            hotelDoc<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//----------------- 打印结果 -----------------</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>共搜索到<span class=\"token number\">30</span>条数据</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">339952837</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>em<span class=\"token punctuation\">></span></span>如家<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>酒店<span class=\"token punctuation\">(</span>北京良乡西路店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>良乡西路<span class=\"token number\">7</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">159</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>北京<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>房山风景区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">39.73167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116.132482</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<ul>\n<li>\n<p>所有搜索 DSL 的构建，记住一个 API：</p>\n<p>SearchRequest 的 source () 方法</p>\n</li>\n<li>\n<p>高亮结果解析是参考 JSON 结果，逐层解析</p>\n</li>\n</ul>\n</blockquote>\n<h6 id=\"99753-距离排序\"><a class=\"markdownIt-Anchor\" href=\"#99753-距离排序\">#</a> 9.9.7.5.3、距离排序🎋</h6>\n<p>距离排序与普通字段排序有所差异，API 如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141655675.png\" alt=\"image-20231014165529717\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testJvliSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2.3. 排序</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token class-name\">String</span> location <span class=\"token operator\">=</span> <span class=\"token string\">\"31.251433, 121.47522\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>location <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">// 2.4. 根据距离进行排序</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SortBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">geoDistanceSort</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"location\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                                         <span class=\"token keyword\">new</span> <span class=\"token class-name\">GeoPoint</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                                        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SortOrder</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ASC</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">unit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DistanceUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">KILOMETERS</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                           <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应结果</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token comment\">// 获取高亮结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HighlightField</span><span class=\"token punctuation\">></span></span> highlightFields <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getHighlightFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token comment\">// CollectionUtils：Spring 提供的工具类 isEmpty 判断 Map 集合是否为空</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>highlightFields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         <span class=\"token comment\">// 根据字段名获取高亮结果</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>         <span class=\"token class-name\">HighlightField</span> name <span class=\"token operator\">=</span> highlightFields<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>         <span class=\"token comment\">// 判断根据字段获取的内容是否为 null</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// 获取高亮值</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">getFragments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 覆盖非高亮结果</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            hotelDoc<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>共搜索到<span class=\"token number\">201</span>条数据</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">36934</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token number\">7</span>天连锁酒店<span class=\"token punctuation\">(</span>上海宝山路地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>静安交通路<span class=\"token number\">40</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">336</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span><span class=\"token number\">7</span>天酒店<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>四川北路商业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.251433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.47522</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G1</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token number\">3</span>E<span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token class-name\">Cii9EVkyLrKIXo1vAAHgrxo_pUcAALcKQLD688AAeDH564_w200_h200_c1_t0</span><span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">,</span> distance<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> isAD<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">60935</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>上海虹口三至喜来登酒店<span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>四平路<span class=\"token number\">59</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">1899</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>喜来登<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>五星级<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>四川北路商业区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.2579</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.487954</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h6 id=\"99754-组合查询-function-score\"><a class=\"markdownIt-Anchor\" href=\"#99754-组合查询-function-score\">#</a> 9.9.7.5.4、组合查询 - function score🎋</h6>\n<p>Function Score 查询可以控制文档的相关性算分，使用方式如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310141739473.png\" alt=\"image-20231014173905116\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFunctionScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 算分控制</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token class-name\">FunctionScoreQueryBuilder</span> functionScoreQueryBuilder <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">functionScoreQuery</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">// 查询 name = 外滩</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"外滩\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">new</span> <span class=\"token class-name\">FunctionScoreQueryBuilder<span class=\"token punctuation\">.</span>FilterFunctionBuilder</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token keyword\">new</span> <span class=\"token class-name\">FunctionScoreQueryBuilder<span class=\"token punctuation\">.</span>FilterFunctionBuilder</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 过滤字段</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">QueryBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">termQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 加权</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">ScoreFunctionBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">weightFactorFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>functionScoreQueryBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token comment\">// 4. 解析响应</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token class-name\">SearchHits</span> hits <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共搜索到\"</span> <span class=\"token operator\">+</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"条数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token class-name\">SearchHit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hits1 <span class=\"token operator\">=</span> hits<span class=\"token punctuation\">.</span><span class=\"token function\">getHits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchHit</span> hit <span class=\"token operator\">:</span> hits1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token comment\">// 获取高亮结果</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HighlightField</span><span class=\"token punctuation\">></span></span> highlightFields <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span><span class=\"token function\">getHighlightFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token comment\">// CollectionUtils：Spring 提供的工具类 isEmpty 判断 Map 集合是否为空</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>highlightFields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>         <span class=\"token comment\">// 根据字段名获取高亮结果</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token class-name\">HighlightField</span> name <span class=\"token operator\">=</span> highlightFields<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token comment\">// 判断根据字段获取的内容是否为 null</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 获取高亮值</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">getFragments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token comment\">// 覆盖非高亮结果</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            hotelDoc<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotelDoc: \"</span> <span class=\"token operator\">+</span> hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">//--------------------- 打印结果 ---------------------</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>共搜索到<span class=\"token number\">3</span>条数据</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">434082</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>如家酒店·<span class=\"token function\">neo</span><span class=\"token punctuation\">(</span>上海外滩城隍庙小南门地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>复兴东路<span class=\"token number\">260</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">392</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>如家<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>豫园地区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.220706</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.498769</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb2<span class=\"token operator\">/</span>t1<span class=\"token operator\">/</span><span class=\"token constant\">G6</span><span class=\"token operator\">/</span><span class=\"token constant\">M00</span><span class=\"token operator\">/</span><span class=\"token number\">52</span><span class=\"token operator\">/</span><span class=\"token constant\">B6</span><span class=\"token operator\">/</span><span class=\"token class-name\">Cii</span><span class=\"token operator\">-</span><span class=\"token class-name\">U13eXLGIdHFzAAIG</span><span class=\"token operator\">-</span><span class=\"token number\">5</span>cEwDEAAGRfQNNIV0AAgcT627_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">,</span> distance<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> isAD<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">60487</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>上海外滩茂悦大酒店<span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>黄浦路<span class=\"token number\">199</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">689</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span>君悦<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>五星级<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>外滩地区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.245409</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.492969</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>fb3<span class=\"token operator\">/</span>s1<span class=\"token operator\">/</span><span class=\"token number\">2</span>n9c<span class=\"token operator\">/</span><span class=\"token number\">2</span>Swp2h1fdj9zCUKsk63BQvVgKLTo_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">,</span> distance<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> isAD<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>hotelDoc<span class=\"token operator\">:</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">432335</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token number\">7</span>天连锁酒店<span class=\"token punctuation\">(</span>上海北外滩国际客运中心地铁站店<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span>唐山路<span class=\"token number\">145</span>号<span class=\"token punctuation\">,</span> price<span class=\"token operator\">=</span><span class=\"token number\">249</span><span class=\"token punctuation\">,</span> score<span class=\"token operator\">=</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> brand<span class=\"token operator\">=</span><span class=\"token number\">7</span>天酒店<span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span>上海<span class=\"token punctuation\">,</span> starName<span class=\"token operator\">=</span>二钻<span class=\"token punctuation\">,</span> business<span class=\"token operator\">=</span>北外滩地区<span class=\"token punctuation\">,</span> location<span class=\"token operator\">=</span><span class=\"token number\">31.252585</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121.498753</span><span class=\"token punctuation\">,</span> pic<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>m2<span class=\"token punctuation\">.</span>tuniucdn<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>filebroker<span class=\"token operator\">/</span>cdn<span class=\"token operator\">/</span>res<span class=\"token operator\">/</span>c1<span class=\"token operator\">/</span>ba<span class=\"token operator\">/</span>c1baf64418437c56617f89840c6411ef_w200_h200_c1_t0<span class=\"token punctuation\">.</span>jpg<span class=\"token punctuation\">,</span> distance<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> isAD<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"es-restclient黑马旅游案例项目地址httpsgiteecomdoukaixintyporagit\"><a class=\"markdownIt-Anchor\" href=\"#es-restclient黑马旅游案例项目地址httpsgiteecomdoukaixintyporagit\">#</a> ES-RestClient 黑马旅游案例，项目地址：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a></h6>\n<h3 id=\"910-深入elasticsearch\"><a class=\"markdownIt-Anchor\" href=\"#910-深入elasticsearch\">#</a> 9.10、深入 elasticsearch🌳</h3>\n<ul>\n<li>数据聚合</li>\n<li>自动补全</li>\n<li>数据同步</li>\n<li>集群</li>\n</ul>\n<h4 id=\"9101-数据聚合\"><a class=\"markdownIt-Anchor\" href=\"#9101-数据聚合\">#</a> 9.10.1、数据聚合🌲</h4>\n<ul>\n<li>聚合的种类</li>\n<li>DSL 实现聚合</li>\n<li>RestAPI 实现聚合</li>\n</ul>\n<h5 id=\"91011-聚合的分类\"><a class=\"markdownIt-Anchor\" href=\"#91011-聚合的分类\">#</a> 9.10.1.1、聚合的分类🌴</h5>\n<p>聚合 (aggregations) 可以实现对文档数据的统计，分析，运算。聚合常见的有三类：</p>\n<p><font color='red'>注意</font>：聚合的字段一定是不分词的。可以是 keyword，日期，数值，布尔，但绝对不可以是 text 类型的</p>\n<ul>\n<li>桶 (Bucket) 聚合：用来对文档做分组\n<ul>\n<li>TermAggregation：按照文档字段值分组</li>\n<li>Date Histogram：按照日期阶梯分组，例如 一周为一组，或者 一月为一组</li>\n</ul>\n</li>\n<li>度量 (Metric) 聚合：用以计算一些值，比如：最大值，最小值，平均值等\n<ul>\n<li>Avg：求平均值</li>\n<li>Max：求最大值</li>\n<li>Min：求最小值</li>\n<li>Stats：同时求 max，min，avg，sum 等</li>\n</ul>\n</li>\n<li>管道 (pipeline) 聚合：对其它聚合的结果为基础做聚合</li>\n</ul>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>什么是聚合？</p>\n<ul>\n<li>聚合是对文档数据的统计，分析，计算</li>\n</ul>\n<p>聚合的常见种类有哪些？</p>\n<ul>\n<li>Bucket：对文档数据分组，并统计每组数量</li>\n<li>Metric：对文档数据做计算，例如 avg</li>\n<li>Pipeline：基于其它聚合结果再做聚合</li>\n</ul>\n<p>参与聚合的字段类型必须是：</p>\n<ul>\n<li>keyword</li>\n<li>数值</li>\n<li>日期</li>\n<li>布尔</li>\n</ul>\n</blockquote>\n<h6 id=\"910111-dsl实现bucket聚合\"><a class=\"markdownIt-Anchor\" href=\"#910111-dsl实现bucket聚合\">#</a> 9.10.1.1.1、DSL 实现 Bucket 聚合🎋</h6>\n<p>现在，我们要统计所有数据中的酒店品牌有几种，此时可以根据酒店品牌的名称做聚合。</p>\n<p>类型为 term 类型，DSL 示例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 设置 size 为 0, 结果中不包含文档，只包含聚合结果</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 定义聚合</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 给聚合起个名字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 聚合的类型，按照品牌值聚合，所以选择 term</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 参与聚合的字段</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token comment\">// 希望获取的聚合结果数量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 聚合功能</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//----------------- 查询结果 -----------------</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">\"buckets\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"皇冠假日\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">17</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"速8\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   ...</pre></td></tr></table></figure><p>默认是倒序排序值越大的越靠前，排序的规则是可以进行修改的</p>\n<h6 id=\"910112-bucket聚合-聚合结果排序\"><a class=\"markdownIt-Anchor\" href=\"#910112-bucket聚合-聚合结果排序\">#</a> 9.10.1.1.2、Bucket 聚合 - 聚合结果排序🎋</h6>\n<p>默认情况下，Bucket 聚合会统计 Bucket 内的文档数量，记为 <code>_count</code> ，并按照 <code>_count</code>  降序排序。</p>\n<p>我们可以修改结果排序方式：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>               <span class=\"token property\">\"_count\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span> <span class=\"token comment\">// 按照_count 升序排列</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 聚合功能</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token property\">\"_count\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//-------------- 打印结果 --------------</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token property\">\"brandAgg\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"doc_count_error_upper_bound\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"sum_other_doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">\"buckets\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"万丽\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"丽笙\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"君悦\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>         ...</pre></td></tr></table></figure><h6 id=\"910113-bucket聚合-限定聚合范围\"><a class=\"markdownIt-Anchor\" href=\"#910113-bucket聚合-限定聚合范围\">#</a> 9.10.1.1.3、Bucket 聚合 - 限定聚合范围🎋</h6>\n<p>默认情况下，Bucket 聚合是对索引库的所有文档做聚合，我们可以限定要聚合的文档范围，只要添加 query 条件即可。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">\"lte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token comment\">// 只对 200 元以下的文档聚合</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 聚合功能，限定聚合范围</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"range\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"lte\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"_count\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asc\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//---------------- 打印结果 ----------------</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token property\">\"buckets\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"汉庭\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"速8\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">13</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>aggs 代表聚合，与 query 同级，此时 query 的作用是？</p>\n<ul>\n<li>限定聚合的文档范围</li>\n</ul>\n<p>聚合必须得三要素：</p>\n<ul>\n<li>聚合名称</li>\n<li>聚合类型</li>\n<li>聚合字段</li>\n</ul>\n<p>聚合可配置属性有：</p>\n<ul>\n<li>size：指定聚合结果数量</li>\n<li>order：指定聚合结果排序方式</li>\n<li>field：指定聚合字段</li>\n</ul>\n</blockquote>\n<h6 id=\"910114-dsl实现metrics聚合\"><a class=\"markdownIt-Anchor\" href=\"#910114-dsl实现metrics聚合\">#</a> 9.10.1.1.4、DSL 实现 Metrics 聚合🎋</h6>\n<p>例如，我们要求获取每个品牌的用户评分的 min，max，avg 等值。</p>\n<p>我们可以利用 stats 聚合：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /indexName/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 是 brands 聚合的子聚合，也就是分组后每组分别计算</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"score_stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 聚合名称</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>               <span class=\"token property\">\"stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 聚合类型，这里 stats 可以计算 min，max，avg 等</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                  <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"score\"</span> <span class=\"token comment\">// 聚合字段，这里是 score</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 嵌套聚合metrics</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">\"score_stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token property\">\"stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"score\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//------------------------- 打印结果 -------------------------</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token property\">\"buckets\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token property\">\"score_stats\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">\"count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token property\">\"min\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">35.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token property\">\"max\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">43.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token property\">\"avg\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">37.86666666666667</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token property\">\"sum\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1136.0</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token property\">\"score_stats\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token property\">\"count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token property\">\"min\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">43.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token property\">\"max\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">47.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token property\">\"avg\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">44.833333333333336</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token property\">\"sum\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1345.0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   ...</pre></td></tr></table></figure><p>对 score_stats 中的 avg 做一个排序</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 嵌套聚合metrics</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /dkx/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"brandAgg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"order\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token property\">\"score_stats.avg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"desc\"</span> <span class=\"token comment\">// 对 score_stats 中的 avg 进行降序排序</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"score_stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token property\">\"stats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"score\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//---------------------- 打印结果 ----------------------</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token property\">\"buckets\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"万丽\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token property\">\"score_stats\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token property\">\"count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token property\">\"min\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">46.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token property\">\"max\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">47.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token property\">\"avg\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">46.5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token property\">\"sum\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">93.0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token property\">\"key\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"凯悦\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          <span class=\"token property\">\"doc_count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token property\">\"score_stats\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token property\">\"count\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token property\">\"min\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">45.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token property\">\"max\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">47.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token property\">\"avg\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">46.25</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token property\">\"sum\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">370.0</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   ...</pre></td></tr></table></figure><h5 id=\"91012-restapi实现聚合\"><a class=\"markdownIt-Anchor\" href=\"#91012-restapi实现聚合\">#</a> 9.10.1.2、RestAPI 实现聚合🌴</h5>\n<p>我们以品牌聚合为例，演示下 Java 的 RestClient 使用，先看请求组装：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310142115151.png\" alt=\"image-20231014211458877\"></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public void testAggreation()</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   SearchRequest request = new SearchRequest(<span class=\"token string\">\"dkx\"</span>);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 2.1. 设置 size 去掉文档数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>request.source().size(<span class=\"token number\">0</span>);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 2.2. 聚合</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>request.source().aggregation(AggregationBuilders</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                             .terms(<span class=\"token string\">\"brandAgg\"</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                             .field(<span class=\"token string\">\"brand\"</span>)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                             .size(<span class=\"token number\">10</span>)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                            );</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>SearchResponse search;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   search = client.search(request<span class=\"token punctuation\">,</span> RequestOptions.DEFAULT);</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span> catch (IOException e) <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   throw new RuntimeException(e);</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>System.out.println(search);</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"took\"</span><span class=\"token operator\">:</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"timed_out\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_shards\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"successful\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"skipped\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"failed\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span><span class=\"token number\">201</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"relation\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"eq\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"max_score\"</span><span class=\"token operator\">:</span><span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"aggregations\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"sterms#brandAgg\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"doc_count_error_upper_bound\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"sum_other_doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"buckets\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"7天酒店\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"皇冠假日\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">17</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"速8\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"万怡\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">13</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"华美达\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">13</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"和颐\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"万豪\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"喜来登\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"希尔顿\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"doc_count\"</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"910121-聚合结果解析\"><a class=\"markdownIt-Anchor\" href=\"#910121-聚合结果解析\">#</a> 9.10.1.2.1、聚合结果解析🌴</h6>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310142127780.png\" alt=\"image-20231014212710555\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAggreation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 2.1. 设置 size 去掉文档数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 2.2. 聚合</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">aggregation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AggregationBuilders</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">terms</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brandAgg\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brand\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                <span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 4. 调用函数解析响应结果</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token function\">handleAgg</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleAgg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token class-name\">Aggregations</span> aggregations <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getAggregations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token comment\">// 4.1. 根据聚合名称获取聚合结果</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token class-name\">Terms</span> brandTerms <span class=\"token operator\">=</span> aggregations<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brandAgg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token comment\">// 4.2. 获取 Buckets</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terms<span class=\"token punctuation\">.</span>Bucket</span><span class=\"token punctuation\">></span></span> buckets <span class=\"token operator\">=</span> brandTerms<span class=\"token punctuation\">.</span><span class=\"token function\">getBuckets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token comment\">// 4.3. 遍历桶</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Terms<span class=\"token punctuation\">.</span>Bucket</span> bucket <span class=\"token operator\">:</span> buckets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\">// 4.4. 获取 key</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token class-name\">String</span> keyAsString <span class=\"token operator\">=</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>keyAsString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//------------------- 打印结果 -------------------</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token number\">7</span>天酒店</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>如家</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>皇冠假日</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>速<span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>万怡</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>华美达</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>和颐</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>万豪</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>喜来登</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>希尔顿</pre></td></tr></table></figure><h4 id=\"9102-自动补全\"><a class=\"markdownIt-Anchor\" href=\"#9102-自动补全\">#</a> 9.10.2、自动补全🌲</h4>\n<ul>\n<li>拼音分词器</li>\n<li>自定义分词器</li>\n<li>自动补全查询</li>\n<li>实现酒店搜索框自动补全</li>\n</ul>\n<h5 id=\"91021-自动补全需求说明\"><a class=\"markdownIt-Anchor\" href=\"#91021-自动补全需求说明\">#</a> 9.10.2.1、自动补全需求说明🌴</h5>\n<p>当用户在搜索框输入字符时，我们应该提示出与该字符有关的搜索项，如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310142231178.png\" alt=\"image-20231014223100805\"></p>\n<h5 id=\"91022-使用拼音分词\"><a class=\"markdownIt-Anchor\" href=\"#91022-使用拼音分词\">#</a> 9.10.2.2、使用拼音分词🌴</h5>\n<p>要实现根据字母做不全，就必须对文档按照拼音分词。在 GitHub 上恰好有 elasticsearch 的拼音分词插件。地址：<a href=\"https://github.com/medcl/elasticsearch-analysis-pinyin/releases\">https://github.com/medcl/elasticsearch-analysis-pinyin/releases</a></p>\n<p>安装方式与 IK 分词器一样，分三步：</p>\n<p>1、解压</p>\n<p>2、上传到虚拟机中，elasticsearch 的 plugin 目录</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310142242869.png\" alt=\"image-20231014224223983\"></p>\n<p>3、重启 elasticsearch</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@192 _data<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker restart es</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>es</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@192 _data<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、测试</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310142248099.png\" alt=\"image-20231014224855664\"></p>\n<h5 id=\"91023-自定义分词器\"><a class=\"markdownIt-Anchor\" href=\"#91023-自定义分词器\">#</a> 9.10.2.3、自定义分词器🌴</h5>\n<p>elasticsearch 中分词器 (analyzer) 的组成包含三部分：</p>\n<ul>\n<li>character filters：在 tokenizer 之前对本文进行处理。例如删除字符，替换字符</li>\n<li>tokenizer：将文本按照一定的规则切割成词条 (term)。例如 keyword，就是不分词；还有 ik_smart</li>\n<li>tokenizer filter：将 tokenizer 输出的词条做进一步处理。例如大小写转换，同义词处理，拼音处理等</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151109094.png\" alt=\"image-20231015110900632\"></p>\n<p>我们可以在创建索引库时，通过 settings 来配置自定义的 analyzer (分词器)：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151115651.png\" alt=\"image-20231015111515104\"></p>\n<p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 自定义分词器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PUT /test</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"analysis\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"my_analzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token property\">\"tokenizer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"py\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"py\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pinyin\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token property\">\"keep_full_pinyin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token property\">\"keep_joined_full_pinyin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"keep_original\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"limit_first_letter_length\"</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token property\">\"remove_duplicated_term\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token property\">\"none_chinese_pinyin_tokenize\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my_analzer\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>POST /test/_analyze <span class=\"token comment\">// 使用 my_analzer 自定义分词器需要带上 test 索引库名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"如家酒店还不错嘛\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my_analzer\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//------------------ 查询结果 ------------------</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">\"tokens\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"如家\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"rujia\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"rj\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"酒店\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"jiudian\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token property\">\"token\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"jd\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token property\">\"start_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token property\">\"end_offset\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token property\">\"type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CN_WORD\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token property\">\"position\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   ...</pre></td></tr></table></figure><p>添加两个 name 字段然后再通过拼音测试是否能查询到</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>POST /test/_doc/<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"狮子\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>POST /test/_doc/<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"柿子\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查询测试：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /test/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shizi\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//---------------------- 查询结果 ----------------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.25069216</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"狮子\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.25069216</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"柿子\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>但是有个问题，如果查询的是中文的 “狮子” 也就查询出同音的结果测试如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /test/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"掉入狮子笼\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//-------------------- 查询结果 --------------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.33425623</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"狮子\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.3085442</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"柿子\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>拼音分词器合适在创建倒排索引的时候使用，但不能在搜索的时候使用。</p>\n<p>创建倒排索引时：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151144762.png\" alt=\"image-20231015114300456\"></p>\n<p>我们要分开，创建时和搜索时使用不同的分词器</p>\n<p>因此字段在创建倒排索引时应该用  <code>my_analyer</code>  分词器，字段在搜索时应该使用  <code>ik_smart</code>  分词器；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 自定义分词器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PUT /test</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"analysis\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"my_analzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token property\">\"tokenizer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"py\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"py\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          ...</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my_analzer\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建索引时使用的分词器</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         <span class=\"token property\">\"search_analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_smart\"</span> <span class=\"token comment\">// 搜索时使用的分词器</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 自定义分词器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PUT /test</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"analysis\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"my_analzer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token property\">\"tokenizer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_max_word\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"py\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"py\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pinyin\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token property\">\"keep_full_pinyin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token property\">\"keep_joined_full_pinyin\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"keep_original\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"limit_first_letter_length\"</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token property\">\"remove_duplicated_term\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token property\">\"none_chinese_pinyin_tokenize\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token property\">\"analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my_analzer\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token property\">\"search_analyzer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ik_smart\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>POST /test/_doc/<span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"狮子\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>POST /test/_doc/<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"柿子\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试查询结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GET /test/_search</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"match\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"掉入狮子笼\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//--------------------- 查询结果 ---------------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token property\">\"hits\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.9530773</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"狮子\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>总结：</p>\n<p>如何使用拼音分词器？</p>\n<ol>\n<li>下载 pinyin 分词器</li>\n<li>解压并放到 elasticsearch 的 plugin 目录</li>\n<li>重启即可</li>\n</ol>\n<p>如何自定义分词器？</p>\n<ol>\n<li>创建索引库时，在 settings 中配置，可以包含三部分</li>\n<li>character filter</li>\n<li>tokenizer</li>\n<li>filter</li>\n</ol>\n<p>拼音分词器注意事项？</p>\n<ul>\n<li>为了避免搜索到同音字，搜索时不要使用拼音分词器</li>\n</ul>\n</blockquote>\n<h5 id=\"91024-completion-suggester查询\"><a class=\"markdownIt-Anchor\" href=\"#91024-completion-suggester查询\">#</a> 9.10.2.4、completion suggester 查询🌴</h5>\n<p>elasticsearch 提供了 Completion Suggester 查询来实现自动补全功能。这个查询会匹配以用户输入内容开头的词条并返回。为了提高补全查询的效率，对于文档中字段的类型有一些约束</p>\n<ul>\n<li>参与补全查询的字段必须是 completion 类型。</li>\n<li>字段的内容一般是用来补全的多个词条形成的数组。</li>\n</ul>\n<p>文档中 title：[“Sony”, “WH-1000XM3”] 。字段值是一个数组，“品牌”, “产品”。它是形成了两个词条而不是一个词条为什么要分开呢？</p>\n<p>原因：自动补全是根据词条做自动补全的，如果将两个信息何为一个字符串将来做自动补全时就只能通过 S 来补全了，而输入 W 时是不会补全产品名称的，分成数组就是两个词。用户输入 S 时能补全 “Sony”，用户输入 W 时能补全 “WH-1000XM3”，我们尽量吧词语分成一个一个词条放到数组中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151210270.png\" alt=\"image-20231015121026947\"></p>\n<p>查询语法如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 自动补全查询</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /test/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token property\">\"suggest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"title_suggest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 关键字</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         <span class=\"token property\">\"completion\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 补全查询的字段</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"skip_duplicates\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 跳过重复的</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\">// 获取前 10 条结果</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 自动补全的索引库</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PUT /test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"mappings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"completion\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre># 添加示例数据</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>POST /test1/_doc</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WH-1000XM3\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>POST /test1/_doc</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"SK-II\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PITERA\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>POST /test1/_doc</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Nintendo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"switch\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试查询补全结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 自动补全查询</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GET /test1/_search</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"suggest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"titleSuggest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"so\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"completion\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token property\">\"skip_duplicates\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//------------------- 查询结果 -------------------</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token property\">\"options\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"text\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">\"_index\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">\"_type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token property\">\"_id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"reCRMYsBNslGvgguxrYc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token property\">\"_score\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token property\">\"_source\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              <span class=\"token property\">\"title\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token string\">\"WH-1000XM3\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>              <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>自动补全对字段的要求：</p>\n<ul>\n<li>类型是 completion 类型</li>\n<li>字段值是多次词条的数组</li>\n</ul>\n</blockquote>\n<h5 id=\"91025-restapi实现自动补全\"><a class=\"markdownIt-Anchor\" href=\"#91025-restapi实现自动补全\">#</a> 9.10.2.5、RestAPI 实现自动补全🌴</h5>\n<p>先看请求参数构造的 API：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151435297.png\" alt=\"image-20231015143537333\"></p>\n<p>代码演示：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public void testSuggest()</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    SearchRequest request = new SearchRequest(<span class=\"token string\">\"dkx\"</span>);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    request.source().suggest(new SuggestBuilder()</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            .addSuggestion(</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token string\">\"mySuggestion\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    SuggestBuilders</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                            .completionSuggestion(<span class=\"token string\">\"suggestion\"</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            .prefix(<span class=\"token string\">\"so\"</span>)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            .size(<span class=\"token number\">10</span>)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            ));</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    SearchResponse search;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         search = client.search(request<span class=\"token punctuation\">,</span> RequestOptions.DEFAULT);</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> catch (IOException e) <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>         throw new RuntimeException(e);</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     System.out.println(search);</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//---------------------- 打印结果 ----------------------</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token property\">\"suggest\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"mySuggestion\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"so\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"offset\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"length\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"松岗商业中心区\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1393017952\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"松岗镇河滨北路12号盛华大厦\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"brand\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"汉庭\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"business\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"松岗商业中心区\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"city\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1393017952</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"22.768912, 113.83325\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"汉庭酒店(深圳宝安松岗地铁站店)\"</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h6 id=\"910251-结果解析\"><a class=\"markdownIt-Anchor\" href=\"#910251-结果解析\">#</a> 9.10.2.5.1、结果解析🎋</h6>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151448335.png\" alt=\"image-20231015144817860\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSuggest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">SearchRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SearchRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">suggest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SuggestBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">addSuggestion</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                               <span class=\"token string\">\"suggestions\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                               <span class=\"token class-name\">SuggestBuilders</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                               <span class=\"token punctuation\">.</span><span class=\"token function\">completionSuggestion</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suggestion\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                               <span class=\"token punctuation\">.</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"so\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                               <span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      search <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token comment\">// 4. 解析结果</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token function\">handleSuggestion</span><span class=\"token punctuation\">(</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleSuggestion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchResponse</span> search<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token class-name\">Suggest</span> suggest <span class=\"token operator\">=</span> search<span class=\"token punctuation\">.</span><span class=\"token function\">getSuggest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token comment\">// 4.1. 根据补全查询名称，获取补全结果</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token class-name\">CompletionSuggestion</span> suggestion <span class=\"token operator\">=</span> suggest<span class=\"token punctuation\">.</span><span class=\"token function\">getSuggestion</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suggestions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token comment\">// 4.2. 获取 options</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CompletionSuggestion<span class=\"token punctuation\">.</span>Entry<span class=\"token punctuation\">.</span>Option</span><span class=\"token punctuation\">></span></span> options <span class=\"token operator\">=</span> suggestion<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token comment\">// 4.3. 遍历结果</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CompletionSuggestion<span class=\"token punctuation\">.</span>Entry<span class=\"token punctuation\">.</span>Option</span> option <span class=\"token operator\">:</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token comment\">// 4.4. 获取 text 的值</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> option<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">//-------------------- 打印结果 --------------------</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>松岗商业中心区</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>松岗商业中心区</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>松江大学城</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>松江大学城</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>松江大学城</pre></td></tr></table></figure><h4 id=\"9103-数据同步\"><a class=\"markdownIt-Anchor\" href=\"#9103-数据同步\">#</a> 9.10.3、数据同步🌲</h4>\n<ul>\n<li>数据同步思路分析</li>\n<li>实现 elasticsearch 与数据库数据同步</li>\n</ul>\n<h5 id=\"91031-数据同步问题分析\"><a class=\"markdownIt-Anchor\" href=\"#91031-数据同步问题分析\">#</a> 9.10.3.1、数据同步问题分析🌴</h5>\n<p>elasticsearch 中的酒店数据来自于 mysql 数据库，因此 mysql 数据发生改变时，elasticsearch 也必须跟着改变，这个就是 elasticsearch 与 mysql 之间的<mark>数据同步</mark>。</p>\n<h6 id=\"910311-方案一同步调用\"><a class=\"markdownIt-Anchor\" href=\"#910311-方案一同步调用\">#</a> 9.10.3.1.1、方案一：同步调用🎋</h6>\n<p>缺点：业务耦合</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151525267.png\" alt=\"image-20231015152527620\"></p>\n<h6 id=\"910312-方案二异步通知\"><a class=\"markdownIt-Anchor\" href=\"#910312-方案二异步通知\">#</a> 9.10.3.1.2、方案二：异步通知🎋</h6>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151528971.png\" alt=\"image-20231015152813104\"></p>\n<h6 id=\"910313-方案三监听binlog\"><a class=\"markdownIt-Anchor\" href=\"#910313-方案三监听binlog\">#</a> 9.10.3.1.3、方案三：监听 binlog🎋</h6>\n<p>在 mysql 中 binlog 默认是关闭的，但是开启了 binlog 在 mysql 里做 CRUD 时都会将相应的操作记录在 binlog 中。也就是说 mysql 变化了 binlog 就会变化，而我们可以利用 Canal 这样的中间件去监听 binlog。一旦 binlog 发生变化就去通知微服务更新 es 数据</p>\n<p>缺点：增加了 mysql 的压力</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151529543.png\" alt=\"image-20231015152942969\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>方式一：同步调用</p>\n<ul>\n<li>优点：实现简单，粗暴</li>\n<li>缺点：业务耦合度太高</li>\n</ul>\n<p>方式二：异步通知</p>\n<ul>\n<li>优点：低耦合，实现难度一般</li>\n<li>缺点：依赖 mq 的可靠性</li>\n</ul>\n<p>方式三：监听 binlog</p>\n<ul>\n<li>优点：完全解除服务间耦合</li>\n<li>缺点：开启 binlog 增加数据库负担，实现复杂度高</li>\n</ul>\n</blockquote>\n<h5 id=\"91032-利用mq实现mysql与elasticsearch数据同步\"><a class=\"markdownIt-Anchor\" href=\"#91032-利用mq实现mysql与elasticsearch数据同步\">#</a> 9.10.3.2、利用 MQ 实现 mysql 与 elasticsearch 数据同步🌴</h5>\n<p>利用课前资料提供的 hotel-admin 项目作为酒店管理的微服务。当数据库发生 CRUD 时，要求对 elasticsearch 中数据也要完成相同操作。</p>\n<p>步骤：</p>\n<ul>\n<li>导入 hotel-admin 项目 (项目地址：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a>)，启动并测试酒店数据的 CRUD</li>\n<li>声明 exchange，queue，Routingkey</li>\n<li>在 hotel-admin 中的增，删，改业务中完成消息发送</li>\n<li>在 hotel-demo (项目地址：<a href=\"https://gitee.com/doukaixin/typora.git\">https://gitee.com/doukaixin/typora.git</a>) 中完成消息监听，并更新 elasticsearch 中数据</li>\n<li>启动并测试数据同步功能</li>\n</ul>\n<p>1、导入 hotel-admin 项目，启动并测试酒店数据的 CRUD</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151942076.png\" alt=\"image-20231015194242526\"></p>\n<p>2、声明 exchange，queue，Routingkey</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310151945245.png\" alt=\"image-20231015194554807\"></p>\n<p>2.1、创建 MqConstans 类记录队列名称和 Routingkey</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MqConstans</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 交换机</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_EXCHANGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.topic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 监听新增和修改的队里</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_INSERT_QUEUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.insert.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 监听删除的队列</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_DELETE_QUEUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.delete.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 新增或修改的 RoutingKey</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_INSERT_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.insert\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 删除的 RoutingKey</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_DELETE_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.delete\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2.2、创建 MqConfig 配置类，配置队列与交换机的关系绑定</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MqConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 定义交换机 Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TopicExchange</span> <span class=\"token function\">topicExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//name：交换机名称 ，durable：是否持久化，autoDelete：是否自动解除绑定关系</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TopicExchange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_EXCHANGE</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 定义队列</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">insertQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">//name：队列名称，durable：是否持久化</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_INSERT_QUEUE</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 定义队列</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Queue</span> <span class=\"token function\">deleteQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">//name：队列名称，durable：是否持久化</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_DELETE_QUEUE</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 绑定关系</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">insertQueueBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 将 insertQueue 队列绑定到交换机上，并绑定 Routingkey</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token function\">insertQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">topicExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_INSERT_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Binding</span> <span class=\"token function\">deleteQueueBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">// 将 insertQueue 队列绑定到交换机上，并绑定 Routingkey</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">BindingBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token function\">insertQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token keyword\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">topicExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_DELETE_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、在 hotel-admin 中的增，删，改业务中完成消息发送</p>\n<p>3.1、在 hotel-admin 项目中也添加 constans/MqConstans 类方便调用</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MqConstans</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 交换机</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_EXCHANGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.topic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 监听新增和修改的队里</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_INSERT_QUEUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.insert.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 监听删除的队列</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_DELETE_QUEUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.delete.queue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 新增或修改的 RoutingKey</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_INSERT_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.insert\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 删除的 RoutingKey</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">HOTEL_DELETE_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hotel.delete\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3.2、配置 RabbitMQ 的 yml 并导入依赖</p>\n<p>3.3、在 Controller 中编写发生消息的代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hotel\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HotelController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IHotelService</span> hotelService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Hotel</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> hotelService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PageResult</span> <span class=\"token function\">hotelList</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"page\"</span><span class=\"token punctuation\">,</span> defaultValue <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span> page<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> defaultValue <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span> size</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hotel</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> hotelService<span class=\"token punctuation\">.</span><span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageResult</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">saveHotel</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Hotel</span> hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        hotelService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_EXCHANGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_INSERT_KEY</span><span class=\"token punctuation\">,</span> hotel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@PutMapping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Hotel</span> hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidParameterException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id不能为空\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        hotelService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_EXCHANGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_INSERT_KEY</span><span class=\"token punctuation\">,</span> hotel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        hotelService<span class=\"token punctuation\">.</span><span class=\"token function\">removeById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_EXCHANGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MqConstans</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOTEL_DELETE_KEY</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、在 hotel-demo 中完成消息监听，并更新 elasticsearch 中数据</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertOrupdateByid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Hotel</span> hotel <span class=\"token operator\">=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">HotelDoc</span> hotelDoc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HotelDoc</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">IndexRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>hotel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   request<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>hotelDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 3. 发送请求</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token comment\">// 1. 准备 Request</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token class-name\">DeleteRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeleteRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dkx\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token comment\">// 2. 准备 DSL</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      client<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestOptions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>5、启动并测试数据同步功能</p>\n<p><font color='red'>注意</font>：要启动 RabbitMQ 否则链接就会报错</p>\n<p>启动两个项目后查看 队列 情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310152133072.png\" alt=\"image-20231015213307513\"></p>\n<p>再看一下交换机</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310152133845.png\" alt=\"image-20231015213344108\"></p>\n<p>证明 队列和交换机创建成功了。</p>\n<p>查看它们的绑定关系</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310152134821.png\" alt=\"image-20231015213451830\"></p>\n<p>两个 BindingKey 分别绑定了 Routingkey</p>\n<p>接下来进行修改测试，比如说先修改这个广告位的价格看下，找到它的 id</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160743271.png\" alt=\"image-20231016074258159\"></p>\n<p>然后在酒店管理中找到这个对应的 id 信息，对其进行修改</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160744989.png\" alt=\"image-20231016074402893\"></p>\n<p>现在的价格是 589，修改为 1058</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160745904.png\" alt=\"image-20231016074503675\"></p>\n<p>然后去查看网页的价格是否更新了</p>\n<p>可以看到价格被改变了，说明数据同步成功了。</p>\n<p>但是这里有个问题就是 每次修改后广告就没了，自然权重也就下降看不到它是第一个了，这里需要做持久化否则每次更新 isAD 的状态就消息了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160812307.png\" alt=\"image-20231016081236685\"></p>\n<p>测试删除，删除如下选中的酒店信息</p>\n<p>找到对应的 id，然后去管理页面进行删除操作</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160925485.png\" alt=\"image-20231016092546878\"></p>\n<p>在酒店管理页面找到对应信息进行删除操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160926330.png\" alt=\"image-20231016092628220\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160926213.png\" alt=\"image-20231016092649279\"></p>\n<p>删除后查看酒店信息网页，可以看到少了一条信息也就证明了那条信息被删除了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310160930574.png\" alt=\"image-20231016092713820\"></p>\n<h4 id=\"9104-elasticsearch集群\"><a class=\"markdownIt-Anchor\" href=\"#9104-elasticsearch集群\">#</a> 9.10.4、elasticsearch 集群🌲</h4>\n<ul>\n<li>搭建 ES 集群</li>\n<li>集群脑裂问题</li>\n<li>集群故障转移</li>\n<li>集群分布式存储</li>\n<li>集群分布式查询</li>\n</ul>\n<h5 id=\"91041-es集群结构\"><a class=\"markdownIt-Anchor\" href=\"#91041-es集群结构\">#</a> 9.10.4.1、ES 集群结构🌴</h5>\n<p>单击的 elasticsearch 做数据存储，必然面临两个问题：海量数据存储问题，单点故障问题。</p>\n<ul>\n<li>海量数据存储问题：将索引库从逻辑上拆分为 N 个分片 (shard) ，存储到多个节点</li>\n<li>单点故障问题：将分片数据在不同节点备份 (replica)</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161025488.png\" alt=\"image-20231016102545479\"></p>\n<h5 id=\"91042-搭建es集群\"><a class=\"markdownIt-Anchor\" href=\"#91042-搭建es集群\">#</a> 9.10.4.2、搭建 ES 集群🌴</h5>\n<p>我们计划利用 3 个 docker 容器模拟 3 个 es 的节点。具体步骤参考 elasticsearch 文章：<a href=\"./Elasearch/%E5%AE%89%E8%A3%85elasticsearch.md\">查看</a>.</p>\n<h5 id=\"91043-es集群的节点角色\"><a class=\"markdownIt-Anchor\" href=\"#91043-es集群的节点角色\">#</a> 9.10.4.3、ES 集群的节点角色🌴</h5>\n<p>elasticsearch 中集群节点有不同的职责划分：</p>\n<table>\n<thead>\n<tr>\n<th>节点类型</th>\n<th>配置参数</th>\n<th>默认值</th>\n<th>节点职责</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>master  eligible</td>\n<td>node.master</td>\n<td>true</td>\n<td>备选主节点：主节点可以管理和记录集群状态，决定<br />分片在哪个节点，处理创建和删除索引库的请求</td>\n</tr>\n<tr>\n<td>data</td>\n<td>node.data</td>\n<td>true</td>\n<td>数据节点：存储数据，搜索，聚合，CRUD</td>\n</tr>\n<tr>\n<td>ingest</td>\n<td>node.ingest</td>\n<td>true</td>\n<td>数据存储之前的预处理</td>\n</tr>\n<tr>\n<td>coordinating</td>\n<td>上面 3 个参数都为 false<br />则为 coordinating 节点</td>\n<td>无</td>\n<td>路由请求到其它节点<br />合并其它节点处理的结果，返回给用户</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"91044-es集群的分布式查询\"><a class=\"markdownIt-Anchor\" href=\"#91044-es集群的分布式查询\">#</a> 9.10.4.4、ES 集群的分布式查询🌴</h5>\n<p>elasticsearch 中的每个节点角色都有自己不用的职责，因此建议集群部署时，每个节点都有独立的角色。</p>\n<p>下图中，有三个 coordinating 节点 (协调节点) 还有 n 个数据节点 和 三个候选主节点。将来有一个节点挂了就可以从三个候选主节点中选取一个出来。LB 为负载均衡器，对协调节点做负载均衡</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161339823.png\" alt=\"image-20231016133909366\"></p>\n<p>缺点：</p>\n<p>候选主节点结构会有一个脑裂问题</p>\n<h5 id=\"91045-es集群的脑裂\"><a class=\"markdownIt-Anchor\" href=\"#91045-es集群的脑裂\">#</a> 9.10.4.5、ES 集群的脑裂🌴</h5>\n<p>默认情况下，每个节点都是 mster gligible 节点，因此一旦 master 节点宕机，其它候选节点会选举一个成为主节点。当主节点与其它节点网络故障时，可能发生脑裂问题。</p>\n<p>什么是脑裂呢？</p>\n<p>比方说，有三个候选主节点，第一个节点现在当选为主节点。剩下两个是候选节点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161346747.png\" alt=\"image-20231016134608313\"></p>\n<p>现在假设说发生了网络故障</p>\n<p>不是宕机了，是因为网络的原因导致，node2 和 node3 跟 node1 连接不上了，但是 node1 跟其它部分数据节点还是可以连同的。node2 和 node3 和一些数据节点也是可以连同的。这个时候就等于集群被分开了。</p>\n<p>当 node2 和 node3 连不上 node1 的时候它会认为 node1 挂了，就会在 node2 和 node3 中又选举出一个老大</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161347107.png\" alt=\"image-20231016134716821\"></p>\n<p>比方说选举的老大为 node3</p>\n<p>这是集群里面就等于出现了两个老大</p>\n<p>现在就出问题了，因为有两个老大，一部分数据节点跟 node1 结合将来做 CRUD 的时候由 node1 来控制</p>\n<p>还有另一部分由 node3 来控制，它们各自去处理各自的集群。一旦网络恢复，当用户来访问时就会出现两边数据不一致的情况。这可就出大事儿了，这就是脑裂问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161350808.png\" alt=\"image-20231016135040891\"></p>\n<p>为了避免脑裂，需要要求选票超过 (eligible 节点数量 + 1) / 2 才能当选为主，因此 eligible 节点数量最好是奇数。对应配置项是 discovery.zen.minimun_master_nodes，在 es7.0 以后，已经成为默认配置，因此一般不会发生脑裂问题。</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>master eligible 节点的作用是什么？</p>\n<ul>\n<li>参与集群选主</li>\n<li>主节点可以管理集群状态，管理分片信息，处理创建和删除索引库的请求</li>\n</ul>\n<p>data 节点的作用是什么？</p>\n<ul>\n<li>数据的 CRUD</li>\n</ul>\n<p>coordinator 节点的作用是什么？</p>\n<ul>\n<li>路由请求到其它节点</li>\n<li>合并查询到的结果，返回给用户</li>\n</ul>\n</blockquote>\n<h5 id=\"91046-测试引出问题\"><a class=\"markdownIt-Anchor\" href=\"#91046-测试引出问题\">#</a> 9.10.4.6、测试引出问题🌴</h5>\n<p>当新增文档时，应该保存到不同分片，保证数据均衡，那么 coordinating node 如何确定数据该存储到哪个分片呢？</p>\n<p>这里由于虚拟机中没有启动 kibana 所以使用 postman，api 接口测试工具来进行添加文档数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161409037.png\" alt=\"image-20231016140915224\"></p>\n<p>进行查询文档的数据情况</p>\n<p>三条数据就查询出来了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161413380.png\" alt=\"image-20231016141318310\"></p>\n<p>查询端口为 9201 为 es02 的数据情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161414897.png\" alt=\"image-20231016141452636\"></p>\n<p>查询端口为 9202 为 es03 的数据情况</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161415226.png\" alt=\"image-20231016141537985\"></p>\n<p>可以看到都是同样的结果，我是在 9200 插入的文档数据结果在每一个节点都可以查到。那问题来了这些数据到底是存到哪个分片上了呢？</p>\n<p>我们可以通过 “explain” 命令，这个命令可以让我们看到查询的结果到底在哪里</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"explain\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查询的结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token property\">\"_shard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[itcast][0]\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token property\">\"_node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tzSKl2laTTKoDwMz4AfkAQ\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token property\">\"_explanation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*:*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token property\">\"_shard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[itcast][1]\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token property\">\"_node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tzSKl2laTTKoDwMz4AfkAQ\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token property\">\"_explanation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*:*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token property\">\"_shard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[itcast][2]\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token property\">\"_node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nrhAcc9RQX2XXJoxYWFYPg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token property\">\"_explanation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*:*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>可以看到 id 为 5 的在 0 号分片，id 为 3 的在 1 号分片，id 为 1 的在 2 号分片</p>\n<p>刚好这三条数据在每个分片上都有一个，那么问题来了，我明明是在 9200 插入的数据怎么会出现在三台机器上呢，这说明 协调节点 确实是工作了。那问题是它是怎么工作的呢？</p>\n<p>elasticsearch 会通过 hash 算法来计算文档应该存储到哪个分片：</p>\n<pre><code>shard = hash(_routing) % number_of_shards\n</code></pre>\n<p>用 hash 计算的结果去对 number_of_shards 进行取余，只要_routing 值变化那么计算出的结果也会随着变化</p>\n<p>说明：</p>\n<ul>\n<li>_routing 默认是文档 id</li>\n<li>算法与分片数量有关，因此索引库一旦创建，分片数量不能修改 (如果改了数据就找不到了)！</li>\n</ul>\n<h5 id=\"91047-通过案例进行分析\"><a class=\"markdownIt-Anchor\" href=\"#91047-通过案例进行分析\">#</a> 9.10.4.7、通过案例进行分析🌴</h5>\n<p>比方说现在来做新增</p>\n<p>新增文档流程：</p>\n<p>如下有集群三个节点，分别是 node1，node2，node3。在这个集群的每个节点上都会有一些分片。其中深蓝色叫 primarisha 主分片，p-0，p-1，p-2 分别就是 0 号主分片，1 号主分片，2 号主分片。每个分片都要有副本，浅蓝色就是副本 r-0 就是 0 号分片的副本分片</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161431150.png\" alt=\"image-20231016143113264\"></p>\n<p>如果说我现在要插入一条文档，文档的 id 为 1 。请求到达了 node1。这是 node1 就充当了协调节点的角色</p>\n<p>协调角色要用上述的哈希运算了，假设说文档 id 为 1 哈希运算结果为 2，那就意味着它要存储到 2 号分片</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161435085.png\" alt=\"image-20231016143543105\"></p>\n<p>于是就把请求路由到 node3 节点了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161437775.png\" alt=\"image-20231016143719016\"></p>\n<p>然后就把数据写入到 2 号分片了，写入后发现自己是老大还是主分片，所以它就要把主分片数据同步给从分片。从分片的副本分片在 1 号分片中 于是请求就同步过去了</p>\n<p>这样主分片和副本分片就都保存了这个数据了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161440114.png\" alt=\"image-20231016144022919\"></p>\n<p>最终把相应结果返回给协调节点，然后再返回给用户</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161442717.png\" alt=\"image-20231016144216794\"></p>\n<p>如果是 id 去查询也是相同的道理，删除，修改都是如此。所以凡是根据 id 操作都是这个流程</p>\n<p>但是上面代码中进行查询的时候我们使用的是如下代码：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"explain\"</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当发送请求时，并不知道要查询的数据在哪个分片上，没有 id 啊，那这种情况下协调节点又是怎么工作的呢？</p>\n<p>那这就是分布式查询的过程了：</p>\n<p>elasticsearch 的查询分成两个阶段：</p>\n<ul>\n<li>\n<p>scatter phase：分散阶段，coordinating node 会把请求发到每一个分片</p>\n<p>每个分片都查询了后进入聚集阶段</p>\n</li>\n<li>\n<p>gather phase：聚集阶段，coordinating node 汇总 data node 的搜索结果，并处理为最终结果集返回给用户</p>\n</li>\n</ul>\n<p>协调节点为虚线，表示这里的协调节点可以是三个节点中任意一个，因为默认情况下每个节点都是协调节点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161447068.png\" alt=\"image-20231016144743512\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>分布式新增如何确定分片？</p>\n<ul>\n<li>coordinating node 根据 id 做 hash 运算，得到结果 shard 数量取余，余数就是对应的分片</li>\n</ul>\n<p>分布式查询：</p>\n<ul>\n<li>分散阶段：coordinating node 将查询请求分发给不同分配</li>\n<li>收集阶段：将查询结果汇总到 coordinating node，整理并返回给用户</li>\n</ul>\n</blockquote>\n<h5 id=\"91048-es集群的故障转移\"><a class=\"markdownIt-Anchor\" href=\"#91048-es集群的故障转移\">#</a> 9.10.4.8、ES 集群的故障转移🌲</h5>\n<p>集群的 master 节点会监控集群中的节点状态，如果发现有节点宕机，会立即将宕机节点的分片数据迁移到其它节点，确保数据安全，这个叫做故障转移。</p>\n<p>比方说，有集群三个节点 node1，node2，node3 每个节点上都有分片目前主节点是 node1。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161457402.png\" alt=\"image-20231016145745390\"></p>\n<p>现在假设说其中一个节点出现了故障，比如说 node1 主节点挂了。此时两个候选节点就会选出一个主节点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161500046.png\" alt=\"image-20231016150004147\"></p>\n<p>比方说选中了 node2，这时集群就有主了，主节点就要发挥自己的工作了。它要查看下集群的健康状态了，分片状态。</p>\n<p>它一看这不行啊，因为 p-1 有主分片，但是没有副本分片。p-2 有主分片有副本分片。p-0 只有副本分片，没有主分片。</p>\n<p>那也就是说 1 号  分片 和 0 号分片的数据是不安全的，因为只有一份一旦挂了就完了。</p>\n<p>这时集群的状态就不是健康的了，而是处于危险的边缘</p>\n<p>这时主节点就会做个措施。它会检查挂掉的节点它上面有什么分片，然后把它迁移到健康的节点上。确保任何一个分片都至少有两份，也就是一个主分片，一个副本分片。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161507621.png\" alt=\"image-20231016150711670\"></p>\n<p>我们看下控制台</p>\n<p>现在 es01 是主节点，集群状态是健康的，我们把 es01 给它停掉</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161510371.png\" alt=\"image-20231016151046860\"></p>\n<p>通过命令： <code>docker-compose stop es01</code>  这样主节点就被停掉了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose stop es01</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Stopping es01 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>我们再去看控制台，发现主变成了 es02，并且把数据进行了迁移</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161514231.png\" alt=\"image-20231016151445895\"></p>\n<p>那么数据有没有丢失呢，我们搜索查看一下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">\"match_all\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>查询结果：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"took\"</span><span class=\"token operator\">:</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"timed_out\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"_shards\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"successful\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"skipped\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"failed\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"relation\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eq\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">\"max_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token property\">\"_index\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token property\">\"_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_doc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token property\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token property\">\"_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token property\">\"_source\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"试着插入一条 id = 1\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>数据没有丢失</p>\n<p>如果我再重启 es01 节点，执行命令： <code>docker-compose start es01</code></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose start es01</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting es01 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>再切回到控制台看下情况</p>\n<p>我们发现 es01 又回来了，但是不是主了。但是现在的主节点又把数据给迁移回去了</p>\n<p>确保 每一个分片上都会有数据，确保数据是均衡的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310161519914.png\" alt=\"image-20231016151901158\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<p>故障转移：</p>\n<ul>\n<li>master 宕机后，EligibleMaster 选举为新的主节点。</li>\n<li>master 节点监控分片，节点状态，将故障节点上的分片转移到正常节点，确保数据安全</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "Elasticsearch"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8docker%E7%9A%84%E6%9F%90%E4%BA%9B%E5%AE%B9%E5%99%A8/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8docker%E7%9A%84%E6%9F%90%E4%BA%9B%E5%AE%B9%E5%99%A8/",
            "title": "自动启动docker里面的某些容器",
            "date_published": "2024-04-02T10:00:51.011Z",
            "content_html": "<p>使用如下指令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> update mysql <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "知识点",
                "springcloud",
                "Docker"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/springcloud-docker/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/springcloud-docker/",
            "title": "七、Docker",
            "date_published": "2024-04-02T10:00:51.008Z",
            "content_html": "<h2 id=\"七-docker\"><a class=\"markdownIt-Anchor\" href=\"#七-docker\">#</a> 七、Docker🎄</h2>\n<p>查看 docker 安装：<a href=\"./Docker/Centos7%E5%AE%89%E8%A3%85Docker.md\">Docker 安装</a>.</p>\n<ul>\n<li>初始 Docker</li>\n<li>Docker 的基本操作</li>\n<li>Dockerfile 自定义镜像</li>\n<li>Docker-Compose</li>\n<li>Docker 镜像服务</li>\n</ul>\n<h3 id=\"71-初始docker\"><a class=\"markdownIt-Anchor\" href=\"#71-初始docker\">#</a> 7.1、初始 Docker🌳</h3>\n<ul>\n<li>什么是 Docker</li>\n<li>Docker 和虚拟机的区别</li>\n<li>Docker 架构</li>\n<li>安装 Docker</li>\n</ul>\n<blockquote>\n<p>项目部署的问题</p>\n<ul>\n<li>依赖关系复杂，容易出现兼容性问题</li>\n<li>开发，测试，生产环境有差异</li>\n</ul>\n<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>\n<p>所有的应该都会部署到服务器上，而大多数服务都会采用 Linux 操作系统，在安装到 Linux 操作系统之前要做一些准备工作。因为这些应用都会有自己所需要的依赖和函数库。这时如此复杂的依赖关系很容易出现，兼容性问题，废了半天劲把这些问题都解决了你会发现这只是开始搞定了开发环境，还有测试环境，生产环境，预发环境等等。最可怕的是这些环境它们的 Linux 操作系统有可能不同</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310080937247.png\" alt=\"image-20231008093734523\"></p>\n<h4 id=\"711-docker如何解决依赖的兼容问题\"><a class=\"markdownIt-Anchor\" href=\"#711-docker如何解决依赖的兼容问题\">#</a> 7.1.1、Docker 如何解决依赖的兼容问题？🌲</h4>\n<ul>\n<li>将应用的 Libs (函数库)，Deps (依赖)，配置与应用一起打包</li>\n<li>将每个应该放到一个隔离<strong>容器</strong>去运行，避免互相干扰</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310080942590.png\" alt=\"image-20231008094222259\"></p>\n<p>现在不用考虑依赖的问题了，但是这只是解决了混乱依赖的问题。有了 Docker 不用去管了应用程序随时可以运行但是仅限于同一个操作系统。因为在打包这个应用时肯定会基于某种操作系统打包吧，比如这个应该是 ubuntu 版本的那么它的函数库和依赖肯定也是 ubuntu 版本的。把这个打包好的程序放到 CentOs 上肯定不能运行，那么 Docker 是怎么解决这个问题的呢？</p>\n<p>要想知道 Docker 如何跨系统运行，我们得先知道操作系统的结构</p>\n<h4 id=\"712-基本了解操作系统结构\"><a class=\"markdownIt-Anchor\" href=\"#712-基本了解操作系统结构\">#</a> 7.1.2、基本了解操作系统结构🌲</h4>\n<p>以 ubuntu 为例讲讲操作系统结构</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310080947687.png\" alt=\"image-20231008094755054\"></p>\n<p>所有的 Linux 操作系统都可以分为两层：</p>\n<p>一层是大家共享的内核 (Linux 内核)</p>\n<p>而区别在于不同操作系统之间它们的上层系统应用不同</p>\n<blockquote>\n<p>那内核做什么的呢？</p>\n<p>内核与硬件交互，提供操作硬件的指令</p>\n</blockquote>\n<blockquote>\n<p>系统应用做什么的呢？</p>\n<p>将内核的指令进行一个组装，再封装形成函数，区域多的函数变成函数库，程序员可以基于这些函数库进行开发。程序调用函数库，函数库调用内核指令，指令调用计算机硬件从而实现应用的执行</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310080957223.png\" alt=\"image-20231008095659859\"></p>\n<p>这就是 Linux 系统的基本结构以及应用的执行原理了</p>\n<p>那么问题来了：为什么 Ubuntu 系统上的应用为什么不能在 CentOs 上运行呢？</p>\n<p>Ubuntu 和 CentOS 都是基于 Linux 内核，只是系统应用不同，提供的函数库有差异</p>\n<p>这时把 Ubuntu 上的应用比如说 mysql 给它迁移到 CentOS 上尝试去执行当它去调用一个函数库时，因为代码是写死的而发现这个函数库在 centos 上根本不存在或者名字不一样那么程序就会报错。这就是为什么 应用不能跨系统运行的原因</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310080958994.png\" alt=\"image-20231008095848662\"></p>\n<p>那针对上面的问题 Docker 干了什么事儿呢？</p>\n<ul>\n<li>Docker 将用户程序与所需要调用的系统 (比如 Ubuntu) 函数库一起打包</li>\n<li>Docker 运行到不同操作系统时，直接基于打包的库函数，借助于操作系统的 Linux 内核来运行。</li>\n</ul>\n<p>将当前系统的函数库与应用一起打包那么随便放到任何的 Linux 操作系统上只要是 Linux 内核，应用在执行的时候调用打包好的函数库，而这个函数库直接调用操作系统的内核而内核直接访问硬件这个调用就完成了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081059529.png\" alt=\"image-20231008105934407\"></p>\n<p>至此，Docker 就解决了跨系统的问题了，可以理解为 Docker 打包好的应用可以运行在任何的 Linux 内核的操作系统上</p>\n<blockquote>\n<p><strong>Docker</strong>：</p>\n<p>Docker 如何解决大型项目以来关系复杂，不同组件依赖的兼容性问题？</p>\n<ul>\n<li>Docker 允许开发中将应用，依赖，函数库，配置一起<font color='red'>打包</font>，形成可移植镜像</li>\n<li>Docker 应用运行在容器中，使用沙箱机制，相互<font color='red'>隔离</font>.</li>\n</ul>\n<p>Docker 如何解决开发，测试，生产环境有差异的问题</p>\n<ul>\n<li>Docker 镜像中包含完整运行环境，包括系统函数库，仅依赖系统的 Linux 内核，因此可以在任意 Linux 操作系统上运行</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>总结：</p>\n<p>Docker 是一个快速交付应用，运行应用的技术：</p>\n<ol>\n<li>可以将程序及其依赖，运行环境一起打包为一个镜像，可以迁移到任意 Linux 操作系统</li>\n<li>运行时利用沙箱机制形成隔离容器，各个应用互不干扰</li>\n<li>启动，移除都可以通过一行命令完成，方便快捷</li>\n</ol>\n</blockquote>\n<h3 id=\"72-docker与虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#72-docker与虚拟机\">#</a> 7.2、Docker 与虚拟机🌳</h3>\n<p>我们知道 Docker 可以实现一个应用可以在不同的 Linux 操作系统上运行和部署。而虚拟机也可以达到类似的效果，那它们两个的实现又有什么样的差别呢</p>\n<p>首先回顾下 Docker 的实现原理，Docker 会把应用及其所需要的依赖，函数库，甚至于操作系统函数库也一起打包，这样 当应用运行时可以直接调用本地函数库而后与操作系统的内核进行交互。这样就不用关心操作系统是什么系统了，于是就能实现跨系统运行了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081112122.png\" alt=\"image-20231008111240399\"></p>\n<p>那虚拟机呢？</p>\n<p>它怎么实现在一个系统里装了另一个系统呢。它是用了一个名为：Hyperisor 的技术，可以模拟出一个计算机的各种各样的硬件比如 CPU，内存等等，然后在这个模拟出的计算机上就可以去安装任意你想要的操作系统了，而操作系统又可以安装任意适合的依赖，函数库以及应用，那这样它不就实现跨系统的部署了吗</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081116627.png\" alt=\"image-20231008111617105\"></p>\n<p>虚拟机是在一个系统里装了另外一个系统，所以当应用执行时，它会以为自己在一台真实的电脑上。因此它会先调用虚拟机内置的操作系统而它在与 Hypervisor 进行交互，然后再把信息传递给外部的操作系统，外部操作系统再去调用计算机硬件，于是应用执行就完成了。</p>\n<p>可以看到虚拟机启动应用经过了层层传递所以性能是比较差的</p>\n<center>两者之间的差异</center>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Docker</th>\n<th>虚拟机</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>性能</td>\n<td>接近原生</td>\n<td>性能较差</td>\n</tr>\n<tr>\n<td>硬盘占用</td>\n<td>一般为 MB</td>\n<td>一般为 GB</td>\n</tr>\n<tr>\n<td>启动</td>\n<td>秒级</td>\n<td>分钟级</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Docker 和虚拟机的差异：</p>\n<ul>\n<li>Docker 是一个系统进程；虚拟机是在操作系统中的操作系统</li>\n<li>Docker 体积小，启动速度快，性能好；虚拟机体积大，启动速度慢，性能一般</li>\n</ul>\n</blockquote>\n<h3 id=\"72-镜像和容器\"><a class=\"markdownIt-Anchor\" href=\"#72-镜像和容器\">#</a> 7.2、镜像和容器🌳</h3>\n<p><strong>镜像 (Image)</strong>：Docker 将应用程序及其所需的依赖，函数库，环境，配置等文件打包在一起，称为镜像。</p>\n<p>简单可以理解为，镜像就是一个文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081127213.png\" alt=\"image-20231008112658929\"></p>\n<p><strong>容器 (Container)</strong>：镜像中的应用程序运行后形成的进程就是<font color='red'>容器</font>，只是 Docker 会给容器做隔离，对外不可见。</p>\n<p>简单可以理解为，把这个 mysql 应用运行起来形成的这个进程就是容器，只不过在 Docker 里面容器还要做隔离</p>\n<p>也就是说我们可以将容器看做是一个小盒子，这个盒子里面将来会利用 Linux 手段给它形成隔离空间。里面会有自己独立的 CPU 资源，内存资源，甚至于还有独立的文件系统。那么因此在这个容器内运行的这个进程，它就会以为自己是在这台计算机上的唯一进程了从而起到一种隔离的效果，将来 mysql 镜像不管是启动一个容器还是多个容器，它们之间都是相互隔离的，当容器运行的过程中必然会做数据读写的操作。比方说 mysql 要去存数据，存储到 data 目录中。但是不能将数据写到镜像的 data 目录中去。镜像都是只读的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081248648.png\" alt=\"image-20231008124821994\"></p>\n<h3 id=\"73-共享镜像\"><a class=\"markdownIt-Anchor\" href=\"#73-共享镜像\">#</a> 7.3、共享镜像🌳</h3>\n<h4 id=\"731-docker和dockerhub\"><a class=\"markdownIt-Anchor\" href=\"#731-docker和dockerhub\">#</a> 7.3.1、Docker 和 DockerHub🌲</h4>\n<ul>\n<li>DockerHub：是一个 Docker 镜像的托管平台。这样的平台称为 Docker Registry。</li>\n</ul>\n<p>程序员可以利用 Docker 提供的一些命令去完成镜像的构建，构建出 mysql，redis 等等各种各样的镜像</p>\n<p>然后把这些镜像上传到 DockerHub 服务器上</p>\n<ul>\n<li>国内也有类似于 DockerHub 的公开服务，比如 网易云镜像服务，阿里云镜像库等。</li>\n<li>可以搭建私有的云服务</li>\n</ul>\n<p>这些都叫 Docker Registry</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081254620.png\" alt=\"image-20231008125404165\"></p>\n<p>我们要怎么利用 Docker 完成镜像构建或者是从远端拉取镜像呢又该怎么去运行容器呢？</p>\n<p>这就需要了解 Docker 的架构了</p>\n<h3 id=\"74-docker架构\"><a class=\"markdownIt-Anchor\" href=\"#74-docker架构\">#</a> 7.4、Docker 架构🌳</h3>\n<p>Docker 是一个 CS 架构的程序，由两部分组成：</p>\n<ul>\n<li>\n<p>服务端 (server)：Docker 守护进程，负责处理 Docker 指令，管理镜像，容器等</p>\n<p>负责接收用户指令完成镜像和容器的各种各样的操作，不管是构建镜像还是从远端拉取镜像还是运行容器都是由 server 端来完成的 ，那谁给 server 端下指令呢？自然就是 client 端了</p>\n</li>\n<li>\n<p>客户端 (client)：通过命令或 RestAPI 向 Docker 服务端发送指令。可以在本地或远程向服务端发送指令。</p>\n<p>这个要看在哪发送指令，如果是在 Docker 所在的机器上就直接用命令就可以了。如果是远程操作 Docker 就用 RestAPI 发</p>\n</li>\n</ul>\n<p>比方说就是本地发通过命令：dokcer build 可以构建镜像，这个命令到达 docker server 后会被 docker 的守护进程 docker daemon 接收和处理。它会利用你提供的数据构建成一个镜像。除了这种方式获取镜像以外我们还可以去 docker registry 中拉取镜像，使用命令：docker pull 这个命令发送到 docker server 端后 docker daemon 就会去 docker registry 中拉取我们指定的镜像了。下面就是运行镜像创建容器了，使用命令：docker run 这个命令发送到 docker server 端后 docker daemon 就会去帮助我们完成容器的创建，然后部署就完成了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081307167.png\" alt=\"image-20231008130700555\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>镜像：</p>\n<ul>\n<li>将应用程序及其依赖，环境，配置打包在一起</li>\n</ul>\n<p>容器：</p>\n<ul>\n<li>镜像运行起来就是容器，一个镜像可以运行多个容器</li>\n</ul>\n<p>Docker 结构：</p>\n<ul>\n<li>服务端：接收命令或远程请求，操作镜像或容器</li>\n<li>客户端：发送命令或者请求到 Docker 服务端</li>\n</ul>\n<p>DockerHub：</p>\n<ul>\n<li>一个镜像托管的服务器，类似的还有阿里云镜像服务，统称为 DockerRegistry</li>\n</ul>\n</blockquote>\n<h3 id=\"75-docker基本操作\"><a class=\"markdownIt-Anchor\" href=\"#75-docker基本操作\">#</a> 7.5、Docker 基本操作🌳</h3>\n<ul>\n<li>镜像操作</li>\n<li>容器操作</li>\n<li>数据卷 (容器数据管理)</li>\n</ul>\n<h4 id=\"751-镜像相关命令\"><a class=\"markdownIt-Anchor\" href=\"#751-镜像相关命令\">#</a> 7.5.1、镜像相关命令🌲</h4>\n<ul>\n<li>\n<p>镜像名称一般分两部分组成：[repository]:[tag]</p>\n<p>tag 一般指 版本</p>\n</li>\n<li>\n<p>在没有指定 tag 时，默认是 latest，代表最新版本的镜像</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081604324.png\" alt=\"image-20231008160421226\"></p>\n<h5 id=\"7511-镜像操作命令\"><a class=\"markdownIt-Anchor\" href=\"#7511-镜像操作命令\">#</a> 7.5.1.1、镜像操作命令🌴</h5>\n<p>Docker 镜像的操作无非就是 CRUD，比如 local (本地) 就是本地的 Docker，我要在这个上面完成镜像的操作。比方说获取镜像，一般有两种获取方法。第一种为：本地获取，第二种为：远端获取。</p>\n<p>本地获取：</p>\n<p>需要一个名为 Dockerfile 文件，利用 docker build 命令把它构建成一个镜像，使用命令：docker pull 从 docker registry 的服务里拉取镜像，获取到镜像想查看下可以使用命令：docker images，删除镜像使用命令：docker rmi</p>\n<p>分享镜像有两种方式：</p>\n<p>方式一：</p>\n<p>使用命令 docker push 将镜像推送到镜像服务器</p>\n<p>方式二：</p>\n<p>使用 docker save 将镜像打包为 zip 然后使用 u 盘拷贝给别人。使用 docker load 将 zip 加载为镜像</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081612068.png\" alt=\"image-20231008161250665\"></p>\n<h4 id=\"752-案例从dockerhub中拉取一个nginx镜像并查看\"><a class=\"markdownIt-Anchor\" href=\"#752-案例从dockerhub中拉取一个nginx镜像并查看\">#</a> 7.5.2、案例，从 DockerHub 中拉取一个 nginx 镜像并查看🌲</h4>\n<p><strong>需求</strong>：从 DockerHub 中拉取一个 nginx 镜像并查看</p>\n<p>1、首先去镜像仓库搜索 nginx 镜像，比如<a href=\"https://hub.docker.com/\"> DockerHub</a>:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081618473.png\" alt=\"image-20231008161836139\"></p>\n<p>nginx 后面的勋章表示这个是官网的正版镜像</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081621315.png\" alt=\"image-20231008162135908\"></p>\n<p>点开后可复制命令，默认拉取的是最新版本的 nginx</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081624383.png\" alt=\"image-20231008162412714\"></p>\n<p>2、根据查看到的镜像名称，拉取自己需要的镜像，通过命令：docker pull nginx</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081626723.png\" alt=\"image-20231008162646280\"></p>\n<p>3、通过命令：docker images 查看拉取到的镜像</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081627490.png\" alt=\"image-20231008162714111\"></p>\n<h4 id=\"753-案例利用docker-save将nginx镜像导出磁盘然后再通过load加载回来\"><a class=\"markdownIt-Anchor\" href=\"#753-案例利用docker-save将nginx镜像导出磁盘然后再通过load加载回来\">#</a> 7.5.3、案例，利用 docker save 将 nginx 镜像导出磁盘，然后再通过 load 加载回来🌲</h4>\n<p><strong>步骤</strong>：</p>\n<p>1、利用 <code>docker xx --help</code>  命令查看 docker save 和 docker load 的语法</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker save --help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 命令示例：docker save [选项] 镜像名称</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Usage:  <span class=\"token function\">docker</span> save <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span> IMAGE <span class=\"token punctuation\">[</span>IMAGE<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 保存一个或多个镜像到一个 tar 文件中 (tar 压缩文件)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Save one or <span class=\"token function\">more</span> images to a <span class=\"token function\">tar</span> archive <span class=\"token punctuation\">(</span>streamed to STDOUT by default<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Aliases:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">docker</span> image save, <span class=\"token function\">docker</span> save</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 选项说明</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Options:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># -o 输出的意思，输出到一个指定的文件当中</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  -o, <span class=\"token parameter variable\">--output</span> string   Write to a file, instead of STDOUT</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>docker save 导出镜像为压缩文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker save -o nginx.tar nginx:latest</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -ahl</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>total 183M</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>dr-xr-x---.  <span class=\"token number\">4</span> root root  <span class=\"token number\">191</span> Oct  <span class=\"token number\">8</span> 04:47 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dr-xr-xr-x. <span class=\"token number\">17</span> root root  <span class=\"token number\">224</span> Jul <span class=\"token number\">15</span> 05:11 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-------.  <span class=\"token number\">1</span> root root <span class=\"token number\">1</span>.4K Jul <span class=\"token number\">15</span> 05:12 anaconda-ks.cfg</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-------.  <span class=\"token number\">1</span> root root   <span class=\"token number\">78</span> Jul <span class=\"token number\">15</span> 05:20 .bash_history</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-rw-r--r--.  <span class=\"token number\">1</span> root root   <span class=\"token number\">18</span> Dec <span class=\"token number\">28</span>  <span class=\"token number\">2013</span> .bash_logout</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>-rw-r--r--.  <span class=\"token number\">1</span> root root  <span class=\"token number\">176</span> Dec <span class=\"token number\">28</span>  <span class=\"token number\">2013</span> .bash_profile</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-rw-r--r--.  <span class=\"token number\">1</span> root root  <span class=\"token number\">176</span> Dec <span class=\"token number\">28</span>  <span class=\"token number\">2013</span> .bashrc</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-rw-r--r--.  <span class=\"token number\">1</span> root root  <span class=\"token number\">100</span> Dec <span class=\"token number\">28</span>  <span class=\"token number\">2013</span> .cshrc</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>drwxr-xr-x.  <span class=\"token number\">3</span> root root   <span class=\"token number\">20</span> Oct  <span class=\"token number\">8</span> 03:52 etc</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>-rw-------.  <span class=\"token number\">1</span> root root 183M Oct  <span class=\"token number\">8</span> 04:47 nginx.tar</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr-----.  <span class=\"token number\">3</span> root root   <span class=\"token number\">19</span> Jul <span class=\"token number\">15</span> 05:30 .pki</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-rw-r--r--.  <span class=\"token number\">1</span> root root  <span class=\"token number\">129</span> Dec <span class=\"token number\">28</span>  <span class=\"token number\">2013</span> .tcshrc</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-rw-------.  <span class=\"token number\">1</span> root root  <span class=\"token number\">841</span> Oct  <span class=\"token number\">8</span> 03:56 .viminfo</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>docker load 导入 压缩文件</p>\n<p>先将 docker 中的镜像删除</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker rmi nginx:latest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Untagged: nginx:latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Untagged: nginx@sha256:32da30332506740a2f7c34d5dc70467b7f14ec67d912703568daff790ab3f755</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Deleted: sha256:61395b4c586da2b9b3b7ca903ea6a448e6783dfdd7f768ff2c1a0f3360aaba99</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Deleted: sha256:1c69f36a0d9b59b762eaba410fa9fd01b85140670a8d49199a7b37702cc956c0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Deleted: sha256:bac209bfab6997cccf20779ae98d5f77a66867734499ecf604a50a5826f6b8a4</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Deleted: sha256:859676f4cd3004af025a02dade096ad6f9391d94d1b1a983fc6098debe435055</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Deleted: sha256:cbbd97cee0d824e5e82f9a4b2e93c5eb3c66fd72a2624d5c1521dc3395bfd1e2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Deleted: sha256:0b41545d8c3de3b78778d591a8da3d9dfa5fa8807baef5edf21e5eb94ded792d</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Deleted: sha256:7e87866b23143eb30086086a669b2e902368a5836446a885b2411d3feef18bef</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Deleted: sha256:d310e774110ab038b30c6a5f7b7f7dd527dbe527854496bd30194b9ee6ea496e</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>使用 <code>docker load --help</code>  来查看命令的说明</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker load --help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 命令示例：docker load [选项]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Usage:  <span class=\"token function\">docker</span> load <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 从 tar 存档或 STDIN 加载图像</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Load an image from a <span class=\"token function\">tar</span> archive or STDIN</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Aliases:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">docker</span> image load, <span class=\"token function\">docker</span> load</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># -i ：输入，指定读取哪一个文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># -q ：不会打印日志</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Options:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  -i, <span class=\"token parameter variable\">--input</span> string   Read from <span class=\"token function\">tar</span> archive file, instead of STDIN</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  -q, <span class=\"token parameter variable\">--quiet</span>          Suppress the load output</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>使用 docker load 命令加载镜像</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker load -i nginx.tar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d310e774110a: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">77</span>.81MB/77.81MB</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>eb7e3384f0ab: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>    113MB/113MB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>1dc45c680d0f: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">3</span>.584kB/3.584kB</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ea43d4f82a03: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">4</span>.608kB/4.608kB</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>9c6261b5d198: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>   <span class=\"token number\">2</span>.56kB/2.56kB</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a7e2a768c198: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>   <span class=\"token number\">5</span>.12kB/5.12kB</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>d26d4f0eb474: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">7</span>.168kB/7.168kB</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Loaded image: nginx:latest</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<p>镜像操作有哪些？</p>\n<ul>\n<li>docker images</li>\n<li>docker rmi</li>\n<li>docker pull</li>\n<li>docker push</li>\n<li>docker save</li>\n<li>docker load</li>\n</ul>\n</blockquote>\n<h4 id=\"754-自己练习去dockerhub搜索并拉取一个redis镜像\"><a class=\"markdownIt-Anchor\" href=\"#754-自己练习去dockerhub搜索并拉取一个redis镜像\">#</a> 7.5.4、(自己练习) 去 DockerHub 搜索并拉取一个 Redis 镜像🌲</h4>\n<p>1、去 DockerHub 搜索 Redis 镜像</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081702255.png\" alt=\"image-20231008170209077\"></p>\n<p>2、查看 Redis 镜像的名称和版本</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081702756.png\" alt=\"image-20231008170243226\"></p>\n<p>3、利用 docker pull 命令拉取镜像，并使用 docker images 查看拉取的情况</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker pull redis</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Using default tag: latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>latest: Pulling from library/redis</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a803e7c4b030: Already exists</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>57e05a1ddec3: Pull complete</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>4635c857038a: Pull complete</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>10001c6989b4: Pull complete</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>f93feb85ceb4: Pull complete</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>4f4fb700ef54: Pull complete</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>320349bd761d: Pull complete</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Digest: sha256:b68c6efe2c5f2d7d7d14a2749f66d6d81645ec0cacb92572b2fb7d5c42c82031</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Status: Downloaded newer image <span class=\"token keyword\">for</span> redis:latest</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>docker.io/library/redis:latest</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>redis        latest    7c4b517da47d   <span class=\"token number\">4</span> weeks ago   153MB</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、利用 docker save 命令将 redis:latest 打包为一个 redis.tar 包</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker save -o redis.tar redis:latest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>anaconda-ks.cfg  etc  redis.tar</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>5、利用 docker rmi 删除本地的 redis:latest</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker rmi redis:latest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Untagged: redis:latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Untagged: redis@sha256:b68c6efe2c5f2d7d7d14a2749f66d6d81645ec0cacb92572b2fb7d5c42c82031</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Deleted: sha256:7c4b517da47d331a47827390b9e8eb1be7ee68133af9c332660001b4d447828d</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Deleted: sha256:06dafc2b2808183db1be226fd99e9dd9d374db9ef86480ccdec56bcb644c821a</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Deleted: sha256:d31af4bfba5cce8499ed4df2f666ef1cf911d0936156af46da79d4b510c7687a</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Deleted: sha256:f14f2bfc00d1db007798b7b81d043df4130673ae33591960d0917c484eded7f0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Deleted: sha256:7778474585964f4869bd7b40e56a375312fc91284c26f7b84967efd383219a20</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Deleted: sha256:8fbe6eb1ebe310862ce5ebf21c01744994203df7d3f53fecabf53db86c3f4578</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Deleted: sha256:57489dc8f39be6c5bfe929829682b1dcd6c7497e2f5878f450557a381afacb52</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>6、利用 docker load 重新加载 redis.tar 文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker load -i redis.tar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ae2dc73bba26: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">10</span>.75kB/10.75kB</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>7c13dd56eefc: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">4</span>.141MB/4.141MB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>33409257a91d: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">75</span>.28MB/75.28MB</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c0a7ac48293c: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">1</span>.536kB/1.536kB</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>5f70bf18a086: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">1</span>.024kB/1.024kB</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e6642d3d7b17: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">4</span>.096kB/4.096kB</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Loaded image: redis:latest</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>redis        latest    7c4b517da47d   <span class=\"token number\">4</span> weeks ago   153MB</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h4 id=\"755-容器相关命令\"><a class=\"markdownIt-Anchor\" href=\"#755-容器相关命令\">#</a> 7.5.5、容器相关命令🌲</h4>\n<p>创建比较常见的一个命令就是 docker run 了，这个命令不仅仅可以帮我们创建一个容器而且还可以让这个容器处于运行状态。容器除了运行状态还有，暂停，停止两个状态。只需要简单的命令就可以实现两个状态之间的切换了</p>\n<p>docker puse 可以让容器从运行状态进入到暂停状态</p>\n<p>docker unpuse 让容器从暂停状态恢复到运行状态</p>\n<p>docker stop 可以让容器从运行状态进入停止状态</p>\n<p>docker start 让容器从停止状态恢复到运行状态</p>\n<p>docker stop $(docker ps -q) 停止全部运行中的容器</p>\n<p>docker rm $(docker ps -aq) 删除全部容器 运行中的需要强制删除 -f</p>\n<p><code>docker stop $(docker ps -q) &amp; docker rm $(docker ps -aq)</code>  先停止全部容器再删除全部容器</p>\n<blockquote>\n<p>那为什么暂停可以用 puse 和 unpause 而停止却是 stop 和 start 呢？为什么不是 unstop。</p>\n<p><strong>原因</strong>：</p>\n<p>它们在操作系统的处理方式不同，如果容器进入暂停状态，操作系统会将容器内的进程挂起，容器关联的内存暂存起来。CPU 不再执行这个进程，如果将它恢复那么内存空间恢复程序接着运行，那么容器就又进入运行状态了。</p>\n<p>但是停止不同，停止直接把这个进程杀死，容器所占的内存回收。把保留下来的就仅剩容器的文件系统了也就是那些静态的东西，因此停止是没有办法进行恢复的因为进程已经被杀死了。</p>\n<p>这就是暂停和停止的区别了。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081724327.png\" alt=\"image-20231008172423860\"></p>\n<h5 id=\"7551-查看容器的状态\"><a class=\"markdownIt-Anchor\" href=\"#7551-查看容器的状态\">#</a> 7.5.5.1、查看容器的状态🌴</h5>\n<p>Docker 提供了一个命令叫：docker ps 可以查看所有运行的容器以及状态，还有一个命令为：docker logs 查看容器运行的日志</p>\n<p>如果想深入内部了解一下，Docker 还提供了一个命令：docker exec 可以进入容器的内部进行操作</p>\n<p>docker rm 删除容器</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081728094.png\" alt=\"image-20231008172804953\"></p>\n<h5 id=\"7552-创建运行一个nginx容器\"><a class=\"markdownIt-Anchor\" href=\"#7552-创建运行一个nginx容器\">#</a> 7.5.5.2、创建运行一个 Nginx 容器🌴</h5>\n<p>1、去 docker hub 查看 Nginx 的容器运行命令</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081744053.png\" alt=\"image-20231008174414666\"></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> some-nginx <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 some-content-nginx</pre></td></tr></table></figure><p><strong>命令解读</strong>：</p>\n<ul>\n<li>docker run：创建并运行一个容器</li>\n<li><code>--name</code> ：给容器起一个名字，比如叫做 mn</li>\n<li>-p：将宿主机端口与容器端口映射，冒号左侧是宿主机端口，右则是容器端口</li>\n<li>-d：后台运行容器</li>\n<li>nginx：镜像名称，例如 nginx</li>\n</ul>\n<blockquote>\n<p>将宿主机端口与容器端口映射是什么意思呢？</p>\n<p>比方说有一台 centos 的服务器 ip 地址为：192.168.150.101 现在我们在这台服务器上部署了一台 Nginx 容器它的端口是 80，如果用户想要来访问 Nginx 容器不能直接访问，因为容器是对外隔离的。不能访问怎么办呢，所以我们要做一个端口映射</p>\n<p><strong>端口映射的解释</strong>：</p>\n<p>比如说宿主机有自己很多端口，其中一个端口为：80，让宿主机的 80 跟容器的 80 产生一个关联映射，那这样一来任何进入宿主机 80 的这个请求就都会被转发到容器的 80 端口去执行了。这样就等于是 nginx 处理了这个请求</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081758073.png\" alt=\"image-20231008175824602\"></p>\n<p>所以端口映射的作用是把一个本来完全隔离的容器对外暴漏让用户可以访问</p>\n<p>2、执行命令创建容器并运行</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run --name mn -p 80:80 -d nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>9672ddfc088cdf53966332bf06da44b6daf7093427c12ed636818bcaae20e312</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>9672ddfc088cdf53966332bf06da44b6daf7093427c12ed636818bcaae20e312：容器的唯一 id</p>\n<p>3、查看容器的状态</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>9672ddfc088c   nginx     <span class=\"token string\">\"/docker-entrypoint.…\"</span>   <span class=\"token number\">14</span> minutes ago   Up <span class=\"token number\">14</span> minutes   <span class=\"token number\">0.0</span>.0.0:80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp, :::80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp   mn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、访问服务</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081821712.png\" alt=\"image-20231008182123920\"></p>\n<p>可以访问说明容器部署成功。</p>\n<p>5、查看访问 nginx 后的日志信息</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker logs mn</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/docker-entrypoint.sh: Looking <span class=\"token keyword\">for</span> shell scripts <span class=\"token keyword\">in</span> /docker-entrypoint.d/</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">10</span>-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">10</span>-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 <span class=\"token keyword\">in</span> /etc/nginx/conf.d/default.conf</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>/docker-entrypoint.sh: Configuration complete<span class=\"token punctuation\">;</span> ready <span class=\"token keyword\">for</span> start up</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: using the \"epoll\" event method</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: nginx/1.25.2</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: built by gcc 12.2.0 (Debian 12.2.0-14)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: OS: Linux 3.10.0-1160.el7.x86_64</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: start worker processes</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: start worker process 29</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: start worker process 30</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: start worker process 31</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">2023</span>/10/08 <span class=\"token number\">10</span>:04:30 <span class=\"token punctuation\">[</span>notice<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token comment\">#1: start worker process 32</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">192.168</span>.249.1 - - <span class=\"token punctuation\">[</span>08/Oct/2023:10:21:11 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">615</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36\"</span> <span class=\"token string\">\"-\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h6 id=\"75521-持续输出日志\"><a class=\"markdownIt-Anchor\" href=\"#75521-持续输出日志\">#</a> 7.5.5.2.1、持续输出日志🎋</h6>\n<p>每次请求都要执行指令才能查看日志很麻烦通过 <code>docker logs --help</code>  来查看有没有需要的帮助</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker logs --help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Usage:  <span class=\"token function\">docker</span> logs <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span> CONTAINER</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Fetch the logs of a container</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Aliases:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">docker</span> container logs, <span class=\"token function\">docker</span> logs</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Options:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token parameter variable\">--details</span>        Show extra details provided to logs</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\"># 持续输出日志    </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  -f, <span class=\"token parameter variable\">--follow</span>         Follow log output</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token parameter variable\">--since</span> string   Show logs since timestamp <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">\"2013-01-02T13:23:37Z\"</span><span class=\"token punctuation\">)</span> or relative <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">\"42m\"</span> <span class=\"token keyword\">for</span> <span class=\"token number\">42</span> minutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  -n, <span class=\"token parameter variable\">--tail</span> string    Number of lines to show from the end of the logs <span class=\"token punctuation\">(</span>default <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  -t, <span class=\"token parameter variable\">--timestamps</span>     Show timestamps</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token parameter variable\">--until</span> string   Show logs before a timestamp <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">\"2013-01-02T13:23:37Z\"</span><span class=\"token punctuation\">)</span> or relative <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">\"42m\"</span> <span class=\"token keyword\">for</span> <span class=\"token number\">42</span> minutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>我们可以看到选项中有一个持续输出日志的选项</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>docker run 命令的常见参数有哪些？</p>\n<ul>\n<li><code>--name</code> ：指定容器名称</li>\n<li><code>-p</code> ：指定端口映射</li>\n<li><code>-d</code> ：让容器后台运行</li>\n</ul>\n<p>查看容器日志的命令：</p>\n<ul>\n<li>docker logs</li>\n<li>添加 - f 参数可以持续查看日志</li>\n</ul>\n<p>查看容器状态：</p>\n<ul>\n<li>docker ps</li>\n</ul>\n</blockquote>\n<h5 id=\"7553-进入nginx容器修改html文件内容添加-传智教育欢迎您\"><a class=\"markdownIt-Anchor\" href=\"#7553-进入nginx容器修改html文件内容添加-传智教育欢迎您\">#</a> 7.5.5.3、进入 Nginx 容器，修改 HTML 文件内容，添加 “传智教育欢迎您”🌴</h5>\n<p>1、进入容器。进入我们刚刚创建的 nginx 容器的命令为：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mn <span class=\"token function\">bash</span></pre></td></tr></table></figure><p><strong>命令解读</strong>：</p>\n<ul>\n<li>docker exec：进入容器内部，执行一个命令</li>\n<li>-it：给当前进入的容器创建一个标准输入，输出终端，允许我们与容器交互</li>\n<li>mn：要进入的容器的名称</li>\n<li>bash：进入容器后执行的命令，bash 是一个 linux 终端交互命令</li>\n</ul>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker exec -it mn bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@9672ddfc088c:/<span class=\"token comment\">#</span></pre></td></tr></table></figure><p>通过 ls 命令查看内部都有什么：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>root@9672ddfc088c:/<span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bin   dev                  docker-entrypoint.sh  home  lib32  libx32  mnt  proc  run   srv  tmp  var</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>boot  docker-entrypoint.d  etc                   lib   lib64  media   opt  root  sbin  sys  usr</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root@9672ddfc088c:/<span class=\"token comment\">#</span></pre></td></tr></table></figure><p>这些我们常见的是 linux 根目录结构，但是这是阉割版的。容器的内部会有自己的一套文件系统，看起来和 linux 的系统目录一样，但是这里只有 nginx 运行它自己需要的文件</p>\n<p>要想看 nginx 存放到哪里了我们需要去 Docker Hub 的 nginx 发布页面查看：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081844719.png\" alt=\"image-20231008184405334\"></p>\n<p>2、进入 nginx 的 HTML 所在目录 /user/share/nginx/html</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /user/share/nginx/html</pre></td></tr></table></figure><p>3、修改 index.html 的内容</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s#Welcome to nginx#传智教育欢迎您#g'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s#&lt;head>#&lt;head>&lt;meta charset=\"utf-8\">#g'</span> index.html</pre></td></tr></table></figure><p>再去访问 nginx 首页</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081913648.png\" alt=\"image-20231008191300720\"></p>\n<h4 id=\"756-查看停止的容器\"><a class=\"markdownIt-Anchor\" href=\"#756-查看停止的容器\">#</a> 7.5.6、查看停止的容器🌲</h4>\n<p>先查看 docker 容器的运行状态</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                               NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>9672ddfc088c   nginx     <span class=\"token string\">\"/docker-entrypoint.…\"</span>   About an hour ago   Up About an hour   <span class=\"token number\">0.0</span>.0.0:80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp, :::80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp   mn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>停止该容器</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker stop mn</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>可以看到停止后通过 docker ps 查看状态就看不到 nginx 容器了，我们可以使用 docker ps -a 来进行查看被杀死的容器</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps -a</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS                          PORTS     NAMES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>9672ddfc088c   nginx     <span class=\"token string\">\"/docker-entrypoint.…\"</span>   About an hour ago   Exited <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> About a minute ago             mn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><blockquote>\n<p>总结：</p>\n<p>查看容器状态</p>\n<ul>\n<li>docker ps</li>\n<li>添加 - a 参数查看所有状态的容器</li>\n</ul>\n<p>删除容器</p>\n<ul>\n<li>docker rm</li>\n<li>不能删除运行中的容器，除非添加 - f 参数</li>\n</ul>\n<p>进入容器：</p>\n<ul>\n<li>命令是 <code>docker exec -it [容器名][要执行的命令]</code></li>\n<li>exec 命令可以进入容器修改文件，但是在容器内修改文件时不推荐的</li>\n</ul>\n</blockquote>\n<h4 id=\"757-数据卷\"><a class=\"markdownIt-Anchor\" href=\"#757-数据卷\">#</a> 7.5.7、数据卷🌲</h4>\n<p>容器与数据耦合的问题</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082044250.png\" alt=\"image-20231008204446853\"></p>\n<p>上面的问题怎么解决呢，这就要学习 <mark>数据卷</mark> 来解决了</p>\n<p>数据卷 (volume) 是一个虚拟目录，指向宿主机文件系统中的某个目录。</p>\n<blockquote>\n<p>比如说有一个 Docker 主机，那么在这个主机上就会由 Docker 去管理很多很多的数据卷。而所有的数据卷一定都会指向宿主机文件系统上的一个目录这个目录就是：var/lib/docker/volumes。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082048323.png\" alt=\"image-20231008204850370\"></p>\n<blockquote>\n<p>比方说我们现在利用 Docker 创建了一个新的数据卷，这个数据卷的名字叫 html，那么 Docker 一定会在 /var/lib/docker/volumes 指定的宿主机文件系统下创建出一个 html 的目录</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082050696.png\" alt=\"image-20231008205044637\"></p>\n<blockquote>\n<p>比方说我又创建了一个新的数据卷 conf，它同样会在 docker 指定的 volumes 目录下再创建一个 conf 真是目录</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082051742.png\" alt=\"image-20231008205151242\"></p>\n<blockquote>\n<p>每一个数据卷都跟一个真是目录进行映射。所以可以认为数据卷是一个虚拟的并不真实存在的。只是一个概念，而真正指向的是 (宿主机) 硬盘上的真实文件夹</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082053614.png\" alt=\"image-20231008205305336\"></p>\n<blockquote>\n<p>容器创建后就可以使用这个数据卷，nginx 的内部目录与数据卷进行关联，当容器中 nginx 与数据卷进行关联时，它的本质其实是和宿主机文件系统上的 html 和 conf 目录进行关联的。这时 docker 就会去管理这个容器了，比方说在容器的 html 目录里写了点什么东西，这些东西会立即写入到宿主机文件系统里。而反过来如果在宿主机里对 html 目录里某一个文件进行了修改那么也会立即反应到容器内的 html 目录中</p>\n<p>可以理解为 容器 与 宿主机 之间 的数据同步是通过数据卷这个中间桥梁完成的</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082056426.png\" alt=\"image-20231008205636159\"></p>\n<blockquote>\n<p>这时就再也不用进入容器内去做修改了直接在宿主机通过高级编辑工具进行修改</p>\n</blockquote>\n<h5 id=\"7571-数据共享\"><a class=\"markdownIt-Anchor\" href=\"#7571-数据共享\">#</a> 7.5.7.1、数据共享🌴</h5>\n<p>将另一个容器挂载到数据卷的目录上也能访问操作里面的数据和配置的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310082103306.png\" alt=\"image-20231008210328135\"></p>\n<h5 id=\"7572-数据安全删除问题\"><a class=\"markdownIt-Anchor\" href=\"#7572-数据安全删除问题\">#</a> 7.5.7.2、数据安全删除问题🌴</h5>\n<p>将容器删除，数据卷不会被删除，还可以将新的容器重新挂载到数据卷上里面的配置和数据都回来了</p>\n<h5 id=\"7573-操作数据卷\"><a class=\"markdownIt-Anchor\" href=\"#7573-操作数据卷\">#</a> 7.5.7.3、操作数据卷🌴</h5>\n<p>数据卷操作的基本语法如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume<span class=\"token punctuation\">[</span>COMMAND<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>docker volume 命令是数据卷操作，根据命令后跟随的 command 来确定下一步的操作：</p>\n<ul>\n<li>create 创建一个 volume</li>\n<li>inspect 显示一个或多个 volume 的信息</li>\n<li>ls 列出所有的 volume</li>\n<li>prune 删除未使用的 volume</li>\n<li>rm 删除一个或多个指定的 volume</li>\n</ul>\n<h6 id=\"75731-案例创建一个数据卷并查看数据卷在宿主机的目录位置\"><a class=\"markdownIt-Anchor\" href=\"#75731-案例创建一个数据卷并查看数据卷在宿主机的目录位置\">#</a> 7.5.7.3.1、案例，创建一个数据卷，并查看数据卷在宿主机的目录位置🎋</h6>\n<p>1、创建一个名为 html 的数据卷</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume create html</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>html</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、查看创建好的数据卷 使用命令列出所有的数据卷</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DRIVER    VOLUME NAME</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">local</span>     2c26106500b13248f06d9d3d89e3f9cc4395f02bc013e4ad20ef405b504b1ca0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">local</span>     96f2fa7ba9c8131ae29e9e046d86d33c48ba9a14ad145b42837e281c0f8a0c00</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">local</span>     356ef50e5c9ff24e07f8bcc1f9d581f41df05ce8688025f2294d2333fd86842b</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">local</span>     d3c6bed2dc6b02bd7755c7e20a02a6679d5bc1bdc08e302adb0615f6d68b3b3a</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">local</span>     html</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>3、查看 html 数据卷的所在目录</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker inspect html</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"CreatedAt\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2023-10-08T20:59:39-04:00\"</span>,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">\"Driver\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"local\"</span>,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">\"Labels\"</span><span class=\"token builtin class-name\">:</span> null,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 存储目录，也就是挂载点</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"Mountpoint\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/var/lib/docker/volumes/html/_data\"</span>,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"html\"</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">\"Options\"</span><span class=\"token builtin class-name\">:</span> null,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">\"Scope\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"local\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、使用 prune 移除本地未使用的数据卷</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume prune</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WARNING<span class=\"token operator\">!</span> This will remove anonymous <span class=\"token builtin class-name\">local</span> volumes not used by at least one container.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Are you sure you want to continue? <span class=\"token punctuation\">[</span>y/N<span class=\"token punctuation\">]</span> y</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Deleted Volumes:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>2c26106500b13248f06d9d3d89e3f9cc4395f02bc013e4ad20ef405b504b1ca0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>96f2fa7ba9c8131ae29e9e046d86d33c48ba9a14ad145b42837e281c0f8a0c00</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d3c6bed2dc6b02bd7755c7e20a02a6679d5bc1bdc08e302adb0615f6d68b3b3a</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Total reclaimed space: 0B</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>5、使用 docker volume ls 列出所有的数据卷</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DRIVER    VOLUME NAME</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">local</span>     356ef50e5c9ff24e07f8bcc1f9d581f41df05ce8688025f2294d2333fd86842b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">local</span>     html</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>少了一些数据卷那些被移除了</p>\n<p>6、使用 rm 删除一个指定的数据卷，如果无法删除可以加上参数 -f 强制删除</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume rm html</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>html</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume ls</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>DRIVER    VOLUME NAME</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">local</span>     356ef50e5c9ff24e07f8bcc1f9d581f41df05ce8688025f2294d2333fd86842b</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><blockquote>\n<p>数据卷的作用：</p>\n<ul>\n<li>j 将容器与数据分离，解耦合，方便操作容器内数据，保证数据安全</li>\n</ul>\n<p>数据卷操作：</p>\n<ul>\n<li><code>docker volume create [名称]</code>  创建一个数据卷</li>\n<li><code>docker volume ls</code>  列出所有存在的数据卷</li>\n<li><code>docker volume inspect [名称]</code>  查看指定数据卷的详细信息或所在目录</li>\n<li><code>docker volume rm [名称]</code>  删除指定的数据卷，可以删除一个或多个，可以强制删除</li>\n<li><code>docker volume prune</code>  移除未使用的数据卷</li>\n</ul>\n</blockquote>\n<h5 id=\"7574-挂载数据卷\"><a class=\"markdownIt-Anchor\" href=\"#7574-挂载数据卷\">#</a> 7.5.7.4、挂载数据卷🌴</h5>\n<p>我们在创建容器时，可以通过  <code>-v</code>  参数来挂载一个数据卷到某个容器目录</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310090914664.png\" alt=\"image-20231009091445924\"></p>\n<p>这里面唯一没见过的就是  <code>-v</code>  参数了，解释如下：</p>\n<p>前半部分的 html 为数据卷：后半部分为容器内的目录。</p>\n<p>这行命令的意思就是将名为 html 的数据卷挂载到容器内的 /root/html 目录下</p>\n<h6 id=\"75741-案例创建一个nginx容器修改容器内的html目录内的indexhtml内容\"><a class=\"markdownIt-Anchor\" href=\"#75741-案例创建一个nginx容器修改容器内的html目录内的indexhtml内容\">#</a> 7.5.7.4.1、案例，创建一个 Nginx 容器，修改容器内的 html 目录内的 index.html 内容🎋</h6>\n<blockquote>\n<p><strong>需求说明</strong>：</p>\n<p>上个案例中，我们进入 nginx 容器内部，已经知道 nginx 的 html 目录所在位置 /user/share/nginx/html ，我们需要把这个目录挂载到 html 这个数据卷上，方便操作其中的内容。</p>\n</blockquote>\n<p><strong>提示</strong>：运行容器时使用  <code>-v</code>  参数挂载数据卷</p>\n<p><strong>步骤</strong>：</p>\n<p><font color='red'>提醒</font>：如果数据卷不存在在创建容器的时候里面 <code>-v</code>  参数执行数据卷就会自动被创建</p>\n<p>1、创建容器并挂载数据卷到容器内的 HTML 目录</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run --name mn -p 80:80 -v html:/usr/share/nginx/html -d nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a4e6d36a4c1ccb8948d93990839244207cb1db9856a607680350871c13fc7458</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS        PORTS                               NAMES</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a4e6d36a4c1c   nginx     <span class=\"token string\">\"/docker-entrypoint.…\"</span>   <span class=\"token number\">2</span> seconds ago   Up <span class=\"token number\">1</span> second   <span class=\"token number\">0.0</span>.0.0:80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp, :::80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp   mn</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、进入 html 数据卷所在位置，并修改 HTML 内容</p>\n<p>2.1、首先看一下 html 数据卷的具体位置</p>\n<p>2.2、进入到目录</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker volume inspect html</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"CreatedAt\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2023-10-08T21:26:51-04:00\"</span>,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">\"Driver\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"local\"</span>,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">\"Labels\"</span><span class=\"token builtin class-name\">:</span> null,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"Mountpoint\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/var/lib/docker/volumes/html/_data\"</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"html\"</span>,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">\"Options\"</span><span class=\"token builtin class-name\">:</span> null,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">\"Scope\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"local\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /var/lib/docker/volumes/html/_data</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost _data<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost _data<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -ahl</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>total <span class=\"token number\">8</span>.0K</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">40</span> Oct  <span class=\"token number\">9</span> 02:54 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>drwx-----x. <span class=\"token number\">3</span> root root  <span class=\"token number\">19</span> Oct  <span class=\"token number\">8</span> <span class=\"token number\">21</span>:26 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">497</span> Aug <span class=\"token number\">15</span> <span class=\"token number\">13</span>:03 50x.html</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">615</span> Aug <span class=\"token number\">15</span> <span class=\"token number\">13</span>:03 index.html</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost _data<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091459700.png\" alt=\"image-20231009145716659\"></p>\n<p>我们可以右键 index.html 直接在 windows 上进行修改然后保存那么 nginx 容器内的 index.html 也就被修改了</p>\n<p>改完保存后这个工具会提示是否保存到 Linux 系统中 index 文件去还是很智能的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091505065.png\" alt=\"image-20231009150527902\"></p>\n<p>下面就是修改了内容成功了，但是乱码</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091505224.png\" alt=\"image-20231009150556316\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>数据卷挂载方式：</p>\n<ul>\n<li><code>-v volumeName: /targetContainerPath</code></li>\n<li>如果容器运行时 volume 不存在，会自动被创建出来</li>\n</ul>\n</blockquote>\n<p>通过案例演示宿主机直接与容器进行挂载</p>\n<h6 id=\"75742-宿主机直接与容器进行挂载\"><a class=\"markdownIt-Anchor\" href=\"#75742-宿主机直接与容器进行挂载\">#</a> 7.5.7.4.2、宿主机直接与容器进行挂载🎋</h6>\n<p>案例，创建并运行一个 MYSQL 容器，将宿主机目录直接挂载到容器</p>\n<p>提示：目录挂载与数据卷挂载的语法是类似的：</p>\n<ul>\n<li><code>-v [宿主机目录]:[容器目录]</code></li>\n<li><code>-v [宿主机文件]:[容器内文件]</code></li>\n</ul>\n<p>实现思路如下：</p>\n<p>1、在将课前资料中的 mysql.tar 文件上传到虚拟机，通过 load 命令加载为镜像</p>\n<p>操作：直接拖进去即可</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091539535.png\" alt=\"image-20231009153911060\"></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker load -i mysql.tar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>5dacd731af1b: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">58</span>.45MB/58.45MB</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f411d8bde01c: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">338</span>.4kB/338.4kB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>0aa7d65147ef: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">10</span>.44MB/10.44MB</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>3437f67a712b: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">4</span>.472MB/4.472MB</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ec41e34b35a0: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">1</span>.536kB/1.536kB</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>458d25c646d8: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">46</span>.15MB/46.15MB</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>97874ea0e7f9: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">31</span>.74kB/31.74kB</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>5075b9328698: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">3</span>.584kB/3.584kB</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>364557e875f1: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">257</span>.3MB/257.3MB</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>9209148debed: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">9</span>.728kB/9.728kB</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>82582edf9553: Loading layer <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>  <span class=\"token number\">1</span>.536kB/1.536kB</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Loaded image: mysql:5.7.25</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago   187MB</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>redis        latest    7c4b517da47d   <span class=\"token number\">4</span> weeks ago   153MB</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mysql        <span class=\"token number\">5.7</span>.25    98455b9624a9   <span class=\"token number\">4</span> years ago   372MB</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、创建目录 /tem/mysql/data</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir -p mysql/data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir -p mysql/conf</span></pre></td></tr></table></figure><p>3、创建目录 /tmp/mysql/conf，将课前资料提供的 hmy.cnf 文件上传到 /tmp/mysql/conf</p>\n<p>hmy.conf 配置文件内容：</p>\n<pre><code>[mysqld]\nskip-name-resolve\ncharacter_set_server=utf8\ndatadir=/var/lib/mysql\nserver-id=1000\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091545686.png\" alt=\"image-20231009154459349\"></p>\n<p>4、去 DockerHub 查阅资料，创建并运行 MySQL 容器</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--name</span> some-mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 环境变量 environment variables 设置 mysql 密码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 设置宿主机与容器的端口都为 3306</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">3306</span>:3306</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 挂载配置文件目录，前面是宿主机目录后面是容器内的配置文件目录可以去官网查看</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token parameter variable\">-v</span> /tmp/mysql/conf/hmy.cnf:/etc/mysql/conf.d/hmy.cnf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 挂载数据目录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token parameter variable\">-v</span> /tmp/mysql/data:/var/lib/mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token parameter variable\">-d</span> mysql:5.7.25</pre></td></tr></table></figure><p>可复制如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">--name</span> some-mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">3306</span>:3306 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-v</span> /tmp/mysql/conf/hmy.cnf:/etc/mysql/conf.d/hmy.cnf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-v</span> /tmp/mysql/data:/var/lib/mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-d</span> mysql:5.7.25</pre></td></tr></table></figure><p>my.conf 就是 mysql 的默认配置文件了但是并不建议去覆盖它，它里面东西很多，我们只是希望要简化的配置 下面文档说，my.conf 配置文件里包含了两个目录一个是 /etc/mysql/conf.d 或 /etc/mysql/mysql/conf.d 其中.d 后缀就是目录的意思，因此放到这两个包含的目录里面的一切文件都会被加载到一起作为合并配置</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091602833.png\" alt=\"image-20231009160248603\"></p>\n<p>要求：</p>\n<ol>\n<li>挂载 /tmp/myql/data 到 mysql 容器内数据存储到目录</li>\n<li>挂载 /tmp/myql/conf/hmy/cnf 到 mysql 容器的配置文件</li>\n<li>设置 MySQL 密码</li>\n</ol>\n<p>打开链接 mysql 的工具进行连接，连接的是 Linux 中的 mysql</p>\n<p>连接密码是上面创建容器的时候的密码也就是 123</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091640299.png\" alt=\"image-20231009164005163\"></p>\n<p>连接成功！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091640185.png\" alt=\"image-20231009164040831\"></p>\n<p>查看宿主机的 data 目录可以看到里面的 mysql 数据就全都写进来了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  /tmp <span class=\"token builtin class-name\">cd</span> mysql/data</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>➜  data <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>auto.cnf    ca.pem           client-key.pem  ibdata1      ib_logfile1  mysql               private_key.pem  server-cert.pem  sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ca-key.pem  client-cert.pem  ib_buffer_pool  ib_logfile0  ibtmp1       performance_schema  public_key.pem   server-key.pem</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>➜  data</pre></td></tr></table></figure><h5 id=\"7575-数据卷挂载和目录直接挂载的区别\"><a class=\"markdownIt-Anchor\" href=\"#7575-数据卷挂载和目录直接挂载的区别\">#</a> 7.5.7.5、数据卷挂载和目录直接挂载的区别🌴</h5>\n<p>当我们用数据卷时，Docker 会自动帮我们创建数据卷对应的目录，这样数据卷就指向了宿主机的 html 目录。而 Docker 挂载时只需要挂载到数据卷的 html 目录上就可以了。它不需要关系宿主机的 html 目录在哪里，这种方式等于全权交给了 Docker 去处理</p>\n<p>这是数据卷挂载的优势，但是劣势呢？</p>\n<p>劣势就是，目录不是我们创建的，到哪创建了我们也不知道目录结构也比较深想去找比较麻烦</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091651091.png\" alt=\"image-20231009165142878\"></p>\n<p>而第二种方式直接挂载，宿主机目录是我们自己创建的，创建目录的时候挺麻烦的但是自己知道这个目录在哪，将来挂载的时候也没有人帮我做什么代理。我直接挂上去就行了。因此我想快速定位这个文件在哪就可以一目了然，这就是直接挂载的优势，劣势就是自己挂载</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091654555.png\" alt=\"image-20231009165439938\"></p>\n<blockquote>\n<p><strong>总结</strong>:</p>\n<ol>\n<li>docker run 的命令通过 -v 参数挂载文件或目录到容器中：\n<ol>\n<li><code>-v volume [名称]</code>  ：容器内目录</li>\n<li><code>-v</code>  宿主机文件：容器内文件</li>\n<li><code>-v</code>  宿主机目录：容器内目录</li>\n</ol>\n</li>\n<li>数据卷挂载与目录直接挂载的区别：\n<ol>\n<li>数据卷挂载耦合度低，由 docker 来管理目录，但是目录较深，不好找</li>\n<li>目录直接挂载耦合度高，需要我们自己管理目录，不过目录容易找到</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"76-dockerfile自定义镜像\"><a class=\"markdownIt-Anchor\" href=\"#76-dockerfile自定义镜像\">#</a> 7.6、Dockerfile 自定义镜像🌳</h3>\n<h4 id=\"自定义镜像\"><a class=\"markdownIt-Anchor\" href=\"#自定义镜像\">#</a> 自定义镜像</h4>\n<h5 id=\"761-镜像结构\"><a class=\"markdownIt-Anchor\" href=\"#761-镜像结构\">#</a> 7.6.1、镜像结构🌴</h5>\n<ul>\n<li>镜像是将应用程序及其需要的系统函数库，环境，配置，依赖打包而成。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091711487.png\" alt=\"image-20231009171118975\"></p>\n<p>如果要制作一个镜像，就一定要先了解它内部的构成</p>\n<p>上面说到镜像就是系统函数库，环境，配置，依赖组成的，而且它们之间有相互之间的依赖关系或者顺序。镜像不仅仅是把一对东西组合在一起而且还要按照一定顺序去翻层</p>\n<p>下面以 mysql 为例讲讲镜像结构，我们把 mysql 结构打散</p>\n<p>下图中 mysql 镜像结构分成了 n 层，它就是按照上面的依赖顺序来分层的，要想构建一个镜像，最底层一定是它所在的系统函数库，而最下面就是用了 Ubuntu 操作系统，把 mysql 安装包拷贝下来然后在此基于上使用 rpm 进行安装 mysql，安装完了进行配置文件的配置等等，所有的安装配置完流程就完成的差不多了，还差一个入口 Entrypoint 通过这个入口启动程序的，这就是镜像的构成流程</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091724288.png\" alt=\"image-20231009172404559\"></p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>镜像是分层结构，每一层称为一个 Layer</p>\n<ul>\n<li>BaseImage 层：包含基本的系统函数库，环境变量，文件系统</li>\n<li>Entrypoint：入口，是镜像中应用启动的命令</li>\n<li>其它：在 BaseImage 基础上添加依赖，安装程序，完成整个应用的安装和配置</li>\n</ul>\n</blockquote>\n<h3 id=\"762-什么是dockerfile\"><a class=\"markdownIt-Anchor\" href=\"#762-什么是dockerfile\">#</a> 7.6.2、什么是 Dockerfile🌲</h3>\n<p>Dockerfile 就是一个文本文件，其中包含一个个的指令 (Instruction) ，用指令来说明要执行什么操作来构建镜像。每一个指令都会形成一层 Layer</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>说明</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FROM</td>\n<td>指定基础镜像</td>\n<td>FROM centos:6</td>\n</tr>\n<tr>\n<td>ENV</td>\n<td>设置环境变量，可在后面指令使用</td>\n<td>ENV key value</td>\n</tr>\n<tr>\n<td>COPY</td>\n<td>拷贝本地文件到镜像的指定目录</td>\n<td>COPY ./mysql-5.7.rpm /tmp</td>\n</tr>\n<tr>\n<td>RUN</td>\n<td>执行 Linux 的 shell 命令，一般是安装过程的命令</td>\n<td>RUN yum install gcc</td>\n</tr>\n<tr>\n<td>EXPOSE</td>\n<td>指定容器运行时监听的端口，是给镜像使用者看的</td>\n<td>EXPOSE 8080</td>\n</tr>\n<tr>\n<td>ENTPYOINT</td>\n<td>镜像中应用的启动命令，容器运行时调用</td>\n<td>ENTPYPOINT java -jar x</td>\n</tr>\n</tbody>\n</table>\n<p>更新详细语法说明，请参考官网文档：<a href=\"https://docs.docker.com/engine/reference/builder\">https://docs.docker.com/engine/reference/builder</a></p>\n<h3 id=\"763-案例基于ubuntu镜像构建一个新镜像运行一个java项目\"><a class=\"markdownIt-Anchor\" href=\"#763-案例基于ubuntu镜像构建一个新镜像运行一个java项目\">#</a> 7.6.3、案例，基于 Ubuntu 镜像构建一个新镜像，运行一个 java 项目🌲</h3>\n<p>步骤：</p>\n<p>1、新建一个空文件夹 docker-demo</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  /tmp <span class=\"token function\">mkdir</span> docker-demo</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>➜  /tmp <span class=\"token builtin class-name\">cd</span> docker-demo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>➜  docker-demo l</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxrwxr-x.  <span class=\"token number\">2</span> dkx  dkx    <span class=\"token number\">6</span> Oct  <span class=\"token number\">9</span> 05:52 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>drwxrwxrwt. <span class=\"token number\">11</span> root root <span class=\"token number\">228</span> Oct  <span class=\"token number\">9</span> 05:52 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>➜  docker-demo</pre></td></tr></table></figure><p>2、拷贝 docker-demo.jar 文件到 docker-demo 这个目录中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091756545.png\" alt=\"image-20231009175606996\"></p>\n<p>3、拷贝 jdk8.tar.gz 文件到 docker-demo 这个目录</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091801025.png\" alt=\"image-20231009180127529\"></p>\n<p>4、拷贝 Dockerfile 到 docker-demo 目录</p>\n<p>Dockerfile 内容</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FROM ubuntu:16.04</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 配置环境变量，JDK 的安装目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ENV <span class=\"token assign-left variable\">JAVA_DIR</span><span class=\"token operator\">=</span>/usr/local</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 拷贝 jdk 和 java 项目的包</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>COPY ./jdk8.tar.gz <span class=\"token variable\">$JAVA_DIR</span>/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COPY ./docker-demo.jar /tmp/app.jar</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 安装 JDK</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>RUN <span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$JAVA_DIR</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> ./jdk8.tar.gz <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mv</span> ./jdk1.8.0_144 ./java8</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 配置环境变量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ENV <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_DIR</span>/java8</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ENV <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>EXPOSE <span class=\"token number\">8090</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 入口，java 项目的启动命令</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091802428.png\" alt=\"image-20231009180246866\"></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  docker-demo ll</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total 202M</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> dkx dkx  25M Oct  <span class=\"token number\">9</span> 06:02 docker-demo.jar</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> dkx dkx  <span class=\"token number\">494</span> Oct  <span class=\"token number\">9</span> 06:02 Dockerfile</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> dkx dkx 177M Oct  <span class=\"token number\">9</span> 06:02 jdk8.tar.gz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>➜  docker-demo</pre></td></tr></table></figure><p>6、在 docker-demo 目录中运行命令： <code>docker build -t javaweb:1.0 .</code></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  docker-demo <span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> javaweb:1.0 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>sudo<span class=\"token punctuation\">]</span> password <span class=\"token keyword\">for</span> dkx:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">46</span>.3s <span class=\"token punctuation\">(</span><span class=\"token number\">9</span>/9<span class=\"token punctuation\">)</span> FINISHED                                                                                                          docker:default</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 591B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/ubuntu:16.04                                                                                      <span class=\"token number\">5</span>.6s</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/4<span class=\"token punctuation\">]</span> FROM docker.io/library/ubuntu:16.04@sha256:1f1a2d56de1d604801a9671f301190704c25d604a416f59e03c04f5c6ffee0d6                               <span class=\"token number\">30</span>.9s</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> resolve docker.io/library/ubuntu:16.04@sha256:1f1a2d56de1d604801a9671f301190704c25d604a416f59e03c04f5c6ffee0d6                                <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:1f1a2d56de1d604801a9671f301190704c25d604a416f59e03c04f5c6ffee0d6 <span class=\"token number\">1</span>.42kB / <span class=\"token number\">1</span>.42kB                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:a3785f78ab8547ae2710c89e627783cfa7ee7824d3468cae6835c9f4eae23ff7 <span class=\"token number\">1</span>.15kB / <span class=\"token number\">1</span>.15kB                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:b6f50765242581c887ff1acc2511fa2d885c52d8fb3ac8c4bba131fd86567f2e <span class=\"token number\">3</span>.36kB / <span class=\"token number\">3</span>.36kB                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50 <span class=\"token number\">46</span>.50MB / <span class=\"token number\">46</span>.50MB                                                    <span class=\"token number\">27</span>.2s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01 857B / 857B                                                           <span class=\"token number\">0</span>.9s</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1 528B / 528B                                                           <span class=\"token number\">0</span>.8s</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e 170B / 170B                                                           <span class=\"token number\">1</span>.5s</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50                                                            <span class=\"token number\">3</span>.5s</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01                                                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1                                                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e                                                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build context                                                                                                                    <span class=\"token number\">1</span>.6s</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: <span class=\"token number\">211</span>.19MB                                                                                                                <span class=\"token number\">1</span>.6s</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>/4<span class=\"token punctuation\">]</span> COPY ./jdk8.tar.gz /usr/local/                                                                                                             <span class=\"token number\">0</span>.7s</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span>/4<span class=\"token punctuation\">]</span> COPY ./docker-demo.jar /tmp/app.jar                                                                                                        <span class=\"token number\">0</span>.1s</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span>/4<span class=\"token punctuation\">]</span> RUN <span class=\"token builtin class-name\">cd</span> /usr/local  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> ./jdk8.tar.gz  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mv</span> ./jdk1.8.0_144 ./java8                                                                  <span class=\"token number\">4</span>.8s</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting to image                                                                                                                               <span class=\"token number\">4</span>.0s</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting layers                                                                                                                              <span class=\"token number\">3</span>.9s</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> writing image sha256:7163e4e0d2b830e1f411e6d50c40cb258e0110888af48e8ddce9642f72f564c1                                                         <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> naming to docker.io/library/javaweb:1.0                                                                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>➜  docker-demo</pre></td></tr></table></figure><p>可以看到镜像构建好了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker images</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REPOSITORY   TAG       IMAGE ID       CREATED              SIZE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>javaweb      <span class=\"token number\">1.0</span>       7163e4e0d2b8   About a minute ago   722MB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nginx        latest    61395b4c586d   <span class=\"token number\">2</span> weeks ago          187MB</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>redis        latest    7c4b517da47d   <span class=\"token number\">4</span> weeks ago          153MB</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mysql        <span class=\"token number\">5.7</span>.25    98455b9624a9   <span class=\"token number\">4</span> years ago          372MB</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>创建容器并运行</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker run --name web -p 8090:8090 -d javaweb:1.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>de4fc104d20fd0c7a44fe227aa07bbba8fb5fd6c7ca04400e7b90c93375573a5</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                                                  NAMES</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>de4fc104d20f   javaweb:1.0    <span class=\"token string\">\"/bin/sh -c 'java -j…\"</span>   <span class=\"token number\">4</span> seconds ago   Up <span class=\"token number\">2</span> seconds   <span class=\"token number\">0.0</span>.0.0:8090-<span class=\"token operator\">></span><span class=\"token number\">8090</span>/tcp, :::8090-<span class=\"token operator\">></span><span class=\"token number\">8090</span>/tcp              web</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>10d26568836c   mysql:5.7.25   <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">2</span> hours ago     Up <span class=\"token number\">2</span> hours     <span class=\"token number\">0.0</span>.0.0:3306-<span class=\"token operator\">></span><span class=\"token number\">3306</span>/tcp, :::3306-<span class=\"token operator\">></span><span class=\"token number\">3306</span>/tcp, <span class=\"token number\">33060</span>/tcp   some-mysql</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>2ba6c6cf79f4   nginx          <span class=\"token string\">\"/docker-entrypoint.…\"</span>   <span class=\"token number\">4</span> hours ago     Up <span class=\"token number\">4</span> hours     <span class=\"token number\">0.0</span>.0.0:80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp, :::80-<span class=\"token operator\">></span><span class=\"token number\">80</span>/tcp                      mn</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>访问页面 uri：<a href=\"http://192.168.249.128:8090/hello/count\">http://192.168.249.128:8090/hello/count</a></p>\n<p>访问成功</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091907846.png\" alt=\"image-20231009190718545\"></p>\n<p><font color='red'>问题</font>：</p>\n<p>如果每个微服务构建都要进行下面的流程会很麻烦</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FROM ubuntu:16.04</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 配置环境变量，JDK 的安装目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ENV <span class=\"token assign-left variable\">JAVA_DIR</span><span class=\"token operator\">=</span>/usr/local</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 拷贝 jdk 和 java 项目的包</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>COPY ./jdk8.tar.gz <span class=\"token variable\">$JAVA_DIR</span>/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>COPY ./docker-demo.jar /tmp/app.jar</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 安装 JDK</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>RUN <span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$JAVA_DIR</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> ./jdk8.tar.gz <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mv</span> ./jdk1.8.0_144 ./java8</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 配置环境变量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ENV <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_DIR</span>/java8</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ENV <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>EXPOSE <span class=\"token number\">8090</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 入口，java 项目的启动命令</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar</pre></td></tr></table></figure><p>从配置环境前 n 层的内容不会变，我们可以对前 n 层提前构建好做一个镜像。以后就都在这个构建好的基础上去构建镜像是不是就方便多了。</p>\n<p>但实际上已经有人帮我们做好了这件事儿了。</p>\n<p>就是如下：</p>\n<h3 id=\"764-基于java8-alpine镜像将一个java项目构建为镜像\"><a class=\"markdownIt-Anchor\" href=\"#764-基于java8-alpine镜像将一个java项目构建为镜像\">#</a> 7.6.4、基于 java:8-alpine 镜像，将一个 java 项目构建为镜像🌲</h3>\n<p><strong>实现思路如下</strong>：</p>\n<p>1、新建一个空的目录，然后在目录中新建一个文件，命名为 Dockerfile</p>\n<p>2、拷贝 docker-demo.jar 到这个目录中</p>\n<p>3、编写 Dockerfile 文件：</p>\n<ol>\n<li>基于 java:8-alpine 作为基础镜像</li>\n<li>将 app.jar 拷贝到镜像中</li>\n<li>暴漏端口</li>\n<li>编写入口 ENTRYPOINT</li>\n</ol>\n<p>4、使用 docker build 命令构建镜像</p>\n<p>5、使用 docker run 创建容器并运行</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FROM java:8-alpine</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>EXPOSE <span class=\"token number\">8090</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 入口，java 项目的启动命令</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar</pre></td></tr></table></figure><p>直接节省了大量的代码工作</p>\n<p>修改完成保存后，覆盖 Linux，/tmp/docker-demo 中的 Dockerfile 文件</p>\n<p>覆盖成功</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091923461.png\" alt=\"image-20231009192320991\"></p>\n<p>使用 cat 命令查看下修改情况</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /tmp/docker-demo/Dockerfile</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>FROM java:8-alpine</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>EXPOSE <span class=\"token number\">8090</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 入口，java 项目的启动命令</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>再次进行构建镜像</p>\n<p>如果构建遇到报错如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  docker-demo <span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> javaweb:1.0 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">2</span>.7s <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span> FINISHED                                                                                                           docker:default</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 245B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> ERROR <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjava:8-alpine                                                                           <span class=\"token number\">2</span>.6s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>------</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjava:8-alpine:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>------</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Dockerfile:2</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>--------------------</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">1</span> <span class=\"token operator\">|</span>     <span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">2</span> <span class=\"token operator\">|</span> <span class=\"token operator\">>></span><span class=\"token operator\">></span> FROM openjava:8-alpine</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token number\">3</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token number\">4</span> <span class=\"token operator\">|</span>     <span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>--------------------</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ERROR: failed to solve: openjava:8-alpine: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed</pre></td></tr></table></figure><p>则需要将 Dockerfile 文件中的 java:8-alpine 改为 openjdk:8-alpine</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 指定基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FROM openjdk:8-alpine</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 暴露端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>EXPOSE <span class=\"token number\">8090</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 入口，java 项目的启动命令</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar</pre></td></tr></table></figure><p>再次进行构建镜像</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  docker-demo <span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> javaweb:1.0 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">89</span>.8s <span class=\"token punctuation\">(</span><span class=\"token number\">5</span>/5<span class=\"token punctuation\">)</span> FINISHED                                                                                                          docker:default</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 244B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjdk:8-alpine                                                                                  <span class=\"token number\">6</span>.1s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/1<span class=\"token punctuation\">]</span> FROM docker.io/library/openjdk:8-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3                           <span class=\"token number\">83</span>.6s</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> resolve docker.io/library/openjdk:8-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:a3562aa0b991a80cfe8172847c8be6dbf6e46340b759c2b782f8b8be45342717 <span class=\"token number\">3</span>.40kB / <span class=\"token number\">3</span>.40kB                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:e7c96db7181be991f19a9fb6975cdbbd73c65f4a2681348e63a141a2192a5f10 <span class=\"token number\">2</span>.76MB / <span class=\"token number\">2</span>.76MB                                                      <span class=\"token number\">10</span>.9s</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:f910a506b6cb1dbec766725d70356f695ae2bf2bea6224dbe8c7c6ad4f3664a2 238B / 238B                                                           <span class=\"token number\">0</span>.8s</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:c2274a1a0e2786ee9101b08f76111f9ab8019e368dce1e325d3c284a0ca33397 <span class=\"token number\">70</span>.73MB / <span class=\"token number\">70</span>.73MB                                                    <span class=\"token number\">80</span>.6s</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3 <span class=\"token number\">1</span>.64kB / <span class=\"token number\">1</span>.64kB                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> sha256:44b3cea369c947527e266275cee85c71a81f20fc5076f6ebb5a13f19015dce71 947B / 947B                                                           <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:e7c96db7181be991f19a9fb6975cdbbd73c65f4a2681348e63a141a2192a5f10                                                            <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:f910a506b6cb1dbec766725d70356f695ae2bf2bea6224dbe8c7c6ad4f3664a2                                                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> extracting sha256:c2274a1a0e2786ee9101b08f76111f9ab8019e368dce1e325d3c284a0ca33397                                                            <span class=\"token number\">2</span>.8s</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting to image                                                                                                                               <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting layers                                                                                                                              <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> writing image sha256:d92b26b799ba6c537e486f7619b96f16ae44e8d4fb296ab05cd80e9d764f5b30                                                         <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> naming to docker.io/library/javaweb:1.0                                                                                                       <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>➜  docker-demo</pre></td></tr></table></figure><p>构建完成！</p>\n<p>再次进行访问页面 uri：<a href=\"http://192.168.249.128:8090/hello/count\">http://192.168.249.128:8090/hello/count</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310091951847.png\" alt=\"image-20231009194918244\"></p>\n<blockquote>\n<p>总结:</p>\n<ol>\n<li>Dockerfile 的本质是一个文件，通过指令描述镜像的构建过程</li>\n<li>Dockerfile 的第一行必须是 FROM，从一个基础镜像来构建</li>\n<li>基础镜像可以是基本操作系统，如 Ubuntu。也可以是其它人制作好的镜像，例如：java:8-alpine 亦或者 openjdk:8-alpine</li>\n</ol>\n</blockquote>\n<h3 id=\"765-dockercompose\"><a class=\"markdownIt-Anchor\" href=\"#765-dockercompose\">#</a> 7.6.5、DockerCompose🌲</h3>\n<ul>\n<li>初始 DockerCompose</li>\n<li>部署微服务集群</li>\n</ul>\n<p>实际生产环境中微服务很多很多，数十上百甚至上千个微服务我们如果一个一个去构建这可得累死了。所以我们需要有一种集群部署的手段，那么这就是我们要学习的 DockerCompose 了</p>\n<h4 id=\"7651-什么是dockercompose\"><a class=\"markdownIt-Anchor\" href=\"#7651-什么是dockercompose\">#</a> 7.6.5.1、什么是 DockerCompose🌴</h4>\n<ul>\n<li>DockerCompose 可以基于 Compose 文件帮我们快速的部署分布式应用，而无需手动一个一个创建和运行容器！</li>\n<li>Compose 文件是一个文本文件， 通过指令定义集群中的每个容器如果运行。</li>\n<li>Compose 文件是把 Docker run 命令集合进来的然后把语法转换了一下</li>\n</ul>\n<p>DockerCompose 文件就是把 Docker run 的各种参数转换成指令去定义了。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092019582.png\" alt=\"image-20231009201930379\"></p>\n<ul>\n<li>DockerCompose 的详细语法参考官网：<a href=\"https://docs.docker.com/compose/compose-file/\">https://docs.docker.com/compose/compose-file/</a></li>\n</ul>\n<p>上面了解后我们就进行安装 DockerCompose：<a href=\"./Docker/Centos7%E5%AE%89%E8%A3%85Docker.md\">查看安装文章</a>.</p>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>DockerCompose 有什么用？</p>\n<ul>\n<li>帮助我们快速部署分布式应用，无需一个一个微服务去构建镜像和部署</li>\n</ul>\n</blockquote>\n<h4 id=\"7652-dockercompose部署\"><a class=\"markdownIt-Anchor\" href=\"#7652-dockercompose部署\">#</a> 7.6.5.2、DockerCompose 部署🌴</h4>\n<p><strong>案例，将之前学习的 cloud-demo 微服务集群利用 DockerCompose 部署</strong>.</p>\n<p>实现思路如下：</p>\n<p>1、创建与 cloud-demo 项目目录相同的几个文件夹</p>\n<p>三个微服务需要依赖于 mysql 所以需要准备 mysql 的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092043951.png\" alt=\"image-20231009204357169\"></p>\n<p>2、每个文件夹里面存放 Dockerfile 文件，内容如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FROM java:8-alpine</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 拷贝当前目录中的 app.jar 到 tem 目录中，将运行的 jar 包拷贝到镜像中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>COPY ./app.jar /tmp/app.jar</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 启动脚本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ENTRYPOINT <span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> /tmp/app.jar</pre></td></tr></table></figure><p>除了 mysql 的目录中再创建两个目录</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092047841.png\" alt=\"image-20231009204740200\"></p>\n<p>conf 目录中存放 mysql 配置文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092048636.png\" alt=\"image-20231009204801023\"></p>\n<p>data 目录里面存放数据库的数据</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092048062.png\" alt=\"image-20231009204831646\"></p>\n<p>3、最外层创建一个 docker-compose.yml 文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092049638.png\" alt=\"image-20231009204929278\"></p>\n<p>内容为：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.2\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nacos/nacos<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 环境配置，启动参数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">MODE</span><span class=\"token punctuation\">:</span> standalone</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8848:8848\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span>5.7.25</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 数据卷挂载</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 使用 Linux 指令 pwd 获取当前目录位置然后从这个位置找对应的目录，不写硬编码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"$PWD/mysql/data:/var/lib/mysql\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"$PWD/mysql/conf:/etc/mysql/conf.d/\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">userservice</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\"># 服务构建基于 dockerfile 完成构建，在当前目录下的 user-service 目录下找到 dockerfile 进行构建镜像</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./user<span class=\"token punctuation\">-</span>service</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\"># 服务构建基于 dockerfile 完成构建，在当前目录下的 order-service 目录下找到 dockerfile 进行构建镜像</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token key atrule\">orderservice</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./order<span class=\"token punctuation\">-</span>service</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token key atrule\">gateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\"># 网关构建基于 dockerfile 完成构建，在当前目录下的 gateway 目录下找到 dockerfile 进行构建镜像</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./gateway</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># 只有网关暴漏了端口，剩下上面的微服务都没有暴漏，因为网关才是入口而不应该将微服务暴漏出去</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"10010:10010\"</span></pre></td></tr></table></figure><p>将来 DockerCompose 就会帮我们自动的去构建这三个微服务的镜像了，实现一次性部署</p>\n<p>4、修改自己的 cloud-demo 项目，将数据库，nacos 地址都命名为 docker-compose 中的服务名</p>\n<p>不能把 nacos，数据库之类的配置地址写死，因为微服务可能配置在不同的机器上</p>\n<blockquote>\n<p>用 DockerCompose 部署时所有的服务之间都可以用服务名称去互相访问，这是 DockerCompose 底层做了一些配置</p>\n</blockquote>\n<p>user-service 中的 nacos 配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> userservice <span class=\"token comment\"># 服务名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\"># 环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> nacos<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># cluster-name: TJ</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yaml <span class=\"token comment\"># 配置文件后缀名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 三要素：服务名称，环境，后缀名 而这三个决定了 DateId</span></pre></td></tr></table></figure><p>user-service 中的 mysql 配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//mysql<span class=\"token punctuation\">:</span>3306/cloud_user<span class=\"token punctuation\">?</span>useSSL=false<span class=\"token important\">&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr></table></figure><p>同样将 order-service 中的 mysql 和 nacos 地址配置改过来</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//mysql<span class=\"token punctuation\">:</span>3306/cloud_order<span class=\"token punctuation\">?</span>useSSL=false<span class=\"token important\">&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> dkx.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> orderservice</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> nacos<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># cluster-name: HZ # 集群名称</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># namespace: ed32fa6f-e9e3-4483-b860-7bcd9731d0d9 # 命名空间，填 ID dev 环境</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">ephemeral</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 设置是否为临时实例 设置为非临时实例</span></pre></td></tr></table></figure><p>修改网关服务的 nacos 地址配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#=========== 这些配置让网关能够联系上 nacos 实现服务注册和发现 ====</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10010</span> <span class=\"token comment\"># 网关端口                              #||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gateway <span class=\"token comment\"># 服务名称                           #||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>                                              <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>                                            <span class=\"token comment\">#||</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> nacos<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span> <span class=\"token comment\"># nacos 地址          #||</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#========================================================</span></pre></td></tr></table></figure><p>5、使用 maven 打包工具，将项目中的每个微服务都打包为 app.jar 文件</p>\n<p>如果要让项目打包为 app.jar 名称则需要在 pom.xml 文件中配置如下：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>finalName</span><span class=\"token punctuation\">></span></span>app<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>finalName</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>我们在所有需要打包的服务中的 pom 文件里面进行配置</p>\n<p>先进行一下 clean 清空一个然后再进行 install 安装本地</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092114297.png\" alt=\"image-20231009211435849\"></p>\n<p>6、将打包好的 app.jar 拷贝到 cloud-demo 中的每一个对应的子目录中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092123149.png\" alt=\"image-20231009212348796\"></p>\n<p>7、将 cloud-demo 上传至虚拟机，利用 docker-compose up -d 来部署</p>\n<p>参数说明：up - 创建并执行容器</p>\n<p>​\t\t\t -d - 后台运行</p>\n<p>其它参数 help 参见</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092126664.png\" alt=\"image-20231009212636444\"></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost tmp<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd cloud-demo/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker-compose.yml  gateway  mysql  order-service  user-service</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>使用命令进行部署</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose up -d</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Building userservice</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">3</span>.5s <span class=\"token punctuation\">(</span><span class=\"token number\">7</span>/7<span class=\"token punctuation\">)</span> FINISHED                                                                                                           docker:default</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 182B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjdk:8-alpine                                                                                  <span class=\"token number\">2</span>.7s</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build context                                                                                                                    <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: <span class=\"token number\">39</span>.30MB                                                                                                                 <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> CACHED <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/2<span class=\"token punctuation\">]</span> FROM docker.io/library/openjdk:8-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3                     <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>/2<span class=\"token punctuation\">]</span> COPY ./app.jar /tmp/app.jar                                                                                                                <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting to image                                                                                                                               <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting layers                                                                                                                              <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> writing image sha256:ab22b9b33217d7b1e7287dc7b16564ba7a683bcc390e961ffb7d6f77069ea697                                                         <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> naming to docker.io/library/cloud-demo_userservice                                                                                            <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>WARNING: Image <span class=\"token keyword\">for</span> <span class=\"token function\">service</span> userservice was built because it did not already exist. To rebuild this image you must use <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> build<span class=\"token variable\">`</span></span> or <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">--build</span><span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Building orderservice</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">1</span>.4s <span class=\"token punctuation\">(</span><span class=\"token number\">7</span>/7<span class=\"token punctuation\">)</span> FINISHED                                                                                                           docker:default</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 182B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjdk:8-alpine                                                                                  <span class=\"token number\">0</span>.6s</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build context                                                                                                                    <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: <span class=\"token number\">41</span>.82MB                                                                                                                 <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> CACHED <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/2<span class=\"token punctuation\">]</span> FROM docker.io/library/openjdk:8-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3                     <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>/2<span class=\"token punctuation\">]</span> COPY ./app.jar /tmp/app.jar                                                                                                                <span class=\"token number\">0</span>.1s</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting to image                                                                                                                               <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting layers                                                                                                                              <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> writing image sha256:4fb619347bfb2d9aac0e824d4334973c18761b4ee64c1f9fddbd3b6041b8fad1                                                         <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> naming to docker.io/library/cloud-demo_orderservice                                                                                           <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>WARNING: Image <span class=\"token keyword\">for</span> <span class=\"token function\">service</span> orderservice was built because it did not already exist. To rebuild this image you must use <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> build<span class=\"token variable\">`</span></span> or <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">--build</span><span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>Building gateway</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Building <span class=\"token number\">1</span>.2s <span class=\"token punctuation\">(</span><span class=\"token number\">7</span>/7<span class=\"token punctuation\">)</span> FINISHED                                                                                                           docker:default</pre></td></tr><tr><td data-num=\"36\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build definition from Dockerfile                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"37\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring dockerfile: 182B                                                                                                                 <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load .dockerignore                                                                                                                    <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"39\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: 2B                                                                                                                      <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"40\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load metadata <span class=\"token keyword\">for</span> docker.io/library/openjdk:8-alpine                                                                                  <span class=\"token number\">0</span>.6s</pre></td></tr><tr><td data-num=\"41\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>internal<span class=\"token punctuation\">]</span> load build context                                                                                                                    <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"42\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> transferring context: <span class=\"token number\">39</span>.92MB                                                                                                                 <span class=\"token number\">0</span>.3s</pre></td></tr><tr><td data-num=\"43\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> CACHED <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/2<span class=\"token punctuation\">]</span> FROM docker.io/library/openjdk:8-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3                     <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"44\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>/2<span class=\"token punctuation\">]</span> COPY ./app.jar /tmp/app.jar                                                                                                                <span class=\"token number\">0</span>.1s</pre></td></tr><tr><td data-num=\"45\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting to image                                                                                                                               <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"46\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> exporting layers                                                                                                                              <span class=\"token number\">0</span>.2s</pre></td></tr><tr><td data-num=\"47\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> writing image sha256:53993c010033dc8356f48ddd183ad1768544070ceb7e803ada30d20e9b3ae316                                                         <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"48\"></td><td><pre> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> naming to docker.io/library/cloud-demo_gateway                                                                                                <span class=\"token number\">0</span>.0s</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>WARNING: Image <span class=\"token keyword\">for</span> <span class=\"token function\">service</span> gateway was built because it did not already exist. To rebuild this image you must use <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> build<span class=\"token variable\">`</span></span> or <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">--build</span><span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Creating cloud-demo_nacos_1        <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Creating cloud-demo_userservice_1  <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Creating cloud-demo_mysql_1        <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Creating cloud-demo_gateway_1      <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>Creating cloud-demo_orderservice_1 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>部署成功使用命令查看启动日志：docker-compose logs -f</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose logs -f</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Attaching to cloud-demo_orderservice_1, cloud-demo_gateway_1, cloud-demo_userservice_1, cloud-demo_mysql_1, cloud-demo_nacos_1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>   <span class=\"token builtin class-name\">.</span>   ____          _            __ _ _</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>  /<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span> / ___<span class=\"token string\">'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>gateway_1       | ( ( )\\___ | '</span>_ <span class=\"token operator\">|</span> <span class=\"token string\">'_| | '</span>_ <span class=\"token punctuation\">\\</span>/ _` <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span> <span class=\"token punctuation\">\\</span> <span class=\"token punctuation\">\\</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>  <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>/  ___<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">|</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>   '  <span class=\"token operator\">|</span>____<span class=\"token operator\">|</span> .__<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> <span class=\"token operator\">|</span>_<span class=\"token punctuation\">\\</span>__, <span class=\"token operator\">|</span> / / / /</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>  <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">|</span>___/<span class=\"token operator\">=</span>/_/_/_/</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span>  :: Spring Boot ::        <span class=\"token punctuation\">(</span>v2.3.9.RELEASE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span> <span class=\"token number\">10</span>-09 <span class=\"token number\">13</span>:37:38:143  INFO <span class=\"token number\">1</span> --- <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> cn.itcast.gateway.GatewayApplication     <span class=\"token builtin class-name\">:</span> No active profile set, falling back to default profiles: default</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>gateway_1       <span class=\"token operator\">|</span> <span class=\"token number\">10</span>-09 <span class=\"token number\">13</span>:37:41:667  INFO <span class=\"token number\">1</span> --- <span class=\"token punctuation\">[</span>           main<span class=\"token punctuation\">]</span> o.s.cloud.context.scope.GenericScope     <span class=\"token builtin class-name\">:</span> BeanFactory <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span>87ef38f0-5652-3427-832e-5397c91e63b6</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><p>启动时 nacos 会报错因为它启动的比较慢我们需要先启动 nacos 执行命令： <code>docker-compose up -d nacos</code></p>\n<p>等待 nacos 启动完成后可以访问 uri 测试一下：<a href=\"http://192.168.249.128:8848/nacos\">http://192.168.249.128:8848/nacos</a></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101029911.png\" alt=\"image-20231010102946333\"></p>\n<p>如果有报错信息可以使用命令重启服务 <code>docker-compose restart gateway userservice orderservice</code></p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose restart gateway userservice orderservice</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Restarting cloud-demo_orderservice_1 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Restarting cloud-demo_gateway_1      <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Restarting cloud-demo_userservice_1  <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost cloud-demo<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h3 id=\"766-docker镜像仓库\"><a class=\"markdownIt-Anchor\" href=\"#766-docker镜像仓库\">#</a> 7.6.6、Docker 镜像仓库🌲</h3>\n<ul>\n<li>搭建私有镜像仓库</li>\n<li>向镜像仓库推送镜像</li>\n<li>从镜像仓库拉取镜像</li>\n</ul>\n<h4 id=\"7661-常见镜像仓库服务\"><a class=\"markdownIt-Anchor\" href=\"#7661-常见镜像仓库服务\">#</a> 7.6.6.1、常见镜像仓库服务🌴</h4>\n<p>镜像仓库 (Docker Registry) 有公共和私有的两种形式：</p>\n<ul>\n<li>公共仓库：例如 Docker 官方的 Docker Hub，国内也有一些服务商提供类似于 Docker Hub 的公开服务，比如 网易云镜像服务，DaoCloud 镜像服务，阿里云镜像服务等。</li>\n<li>除了使用公开仓库外，用户还可以在本地搭建私有 Docker Registry。企业自己的镜像最好是采用私有 Docker Registry 来实现。</li>\n</ul>\n<h4 id=\"7662-创建私服镜像仓库查看文章\"><a class=\"markdownIt-Anchor\" href=\"#7662-创建私服镜像仓库查看文章\">#</a> 7.6.6.2、创建私服镜像仓库查看文章🌴</h4>\n<p><a href=\"./Docker/Centos7%E5%AE%89%E8%A3%85Docker.md\">查看 Docker 带有图形化镜像仓库</a>.</p>\n<h4 id=\"7663-在私有镜像仓库推送或拉取镜像\"><a class=\"markdownIt-Anchor\" href=\"#7663-在私有镜像仓库推送或拉取镜像\">#</a> 7.6.6.3、在私有镜像仓库推送或拉取镜像🌴</h4>\n<p>推送镜像到私有镜像服务必须先 tag，步骤如下：</p>\n<p>1、重新 tag 本地镜像，名称前缀为私有仓库的地址：192.168.150.101:8080/</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> tag nginx:latest <span class=\"token number\">192.168</span>.150.101:8080/nginx:1.0</pre></td></tr></table></figure><p>使用 docker images 查看打包好的镜像</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310101215960.png\" alt=\"image-20231010121530321\"></p>\n<p>2、推送镜像</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> push <span class=\"token number\">192.168</span>.150.101:8080/nginx:1.0</pre></td></tr></table></figure><p>3、拉取镜像</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull <span class=\"token number\">192.168</span>.150.101:8080/nginx:1.0</pre></td></tr></table></figure><blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>推送本地镜像到仓库前都必须重命名 (docker tag) 镜像，以镜像仓库地址为前缀</li>\n<li>镜像仓库推送前需要把仓库地址配置到 docker 服务的 daemon.json 文件中，被 docker 信任</li>\n<li>推送使用 docker push 命令</li>\n<li>拉取使用 docker pull 命令</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机学科",
                "springcloud",
                "Docker"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/docker%E5%AE%B9%E5%99%A8%E4%B8%80%E9%94%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/docker%E5%AE%B9%E5%99%A8%E4%B8%80%E9%94%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD/",
            "title": "docker一键启动和关闭，删除所有镜像",
            "date_published": "2024-04-02T10:00:51.005Z",
            "content_html": "<p>docker 中 启动所有的容器命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> start <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print $1&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tail</span> <span class=\"token parameter variable\">-n</span> +2<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>docker 中    关闭所有的容器命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print $1&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tail</span> <span class=\"token parameter variable\">-n</span> +2<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>docker 中 删除所有镜像</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> rmi <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> images <span class=\"token parameter variable\">-q</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 如果删除不成功使用如下命令：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> rmi <span class=\"token parameter variable\">-f</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> images <span class=\"token parameter variable\">-q</span><span class=\"token variable\">)</span></span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "知识点",
                "springcloud",
                "Docker"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/Linux%E4%B8%ADDocker%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/Docker/Linux%E4%B8%ADDocker%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/",
            "title": "Linux中Docker的下载和安装",
            "date_published": "2024-04-02T10:00:51.002Z",
            "content_html": "<h1 id=\"0安装docker\"><a class=\"markdownIt-Anchor\" href=\"#0安装docker\">#</a> 0. 安装 Docker</h1>\n<p>Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。</p>\n<p>Docker CE 分为  <code>stable</code>   <code>test</code>  和  <code>nightly</code>  三个更新频道。</p>\n<p>官方网站上有各种环境下的 <a href=\"https://docs.docker.com/install/\">安装指南</a>，这里主要介绍 Docker CE 在 CentOS 上的安装。</p>\n<h1 id=\"1centos安装docker\"><a class=\"markdownIt-Anchor\" href=\"#1centos安装docker\">#</a> 1.CentOS 安装 Docker</h1>\n<p>Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10， CentOS 7 满足最低内核的要求，所以我们在 CentOS 7 安装 Docker。</p>\n<h2 id=\"11卸载可选\"><a class=\"markdownIt-Anchor\" href=\"#11卸载可选\">#</a> 1.1. 卸载（可选）</h2>\n<p>如果之前安装过旧版本的 Docker，可以使用下面命令卸载：</p>\n<pre><code>yum remove docker \\\ndocker-client \\\ndocker-client-latest \\\ndocker-common \\\ndocker-latest \\\ndocker-latest-logrotate \\\ndocker-logrotate \\\ndocker-selinux \\\ndocker-engine-selinux \\\ndocker-engine \\\ndocker-ce\n</code></pre>\n<h2 id=\"12安装docker\"><a class=\"markdownIt-Anchor\" href=\"#12安装docker\">#</a> 1.2. 安装 docker</h2>\n<p>首先需要大家虚拟机联网，安装 yum 工具</p>\n<p>注意： 这里是必须安装的，因为下面的 yum-utils 不是 yum 它们是不同的如果没有 yum-utils 那么下面的步骤就会失败</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> yum-utils <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>device-mapper-persistent-data <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lvm2 --skip-broken</pre></td></tr></table></figure><p>然后更新本地镜像源：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 设置 docker 镜像源</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum-config-manager <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --add-repo <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/download.docker.com/mirrors.aliyun.com\\/docker-ce/g'</span> /etc/yum.repos.d/docker-ce.repo</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>yum makecache fast</pre></td></tr></table></figure><p>然后输入命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> docker-ce</pre></td></tr></table></figure><p>docker-ce 为社区免费版本。稍等片刻，docker 即可安装成功。</p>\n<h2 id=\"13启动docker\"><a class=\"markdownIt-Anchor\" href=\"#13启动docker\">#</a> 1.3. 启动 docker</h2>\n<p>Docker 应用需要用到各种端口，逐一去修改防火墙设置。非常麻烦，因此建议大家直接关闭防火墙！</p>\n<p>启动 docker 前，一定要关闭防火墙后！！</p>\n<p>启动 docker 前，一定要关闭防火墙后！！</p>\n<p>启动 docker 前，一定要关闭防火墙后！！</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 关闭</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl stop firewalld</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 禁止开机启动防火墙</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>systemctl disable firewalld</pre></td></tr></table></figure><p>通过命令启动 docker：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl start <span class=\"token function\">docker</span>  <span class=\"token comment\"># 启动 docker 服务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl stop <span class=\"token function\">docker</span>  <span class=\"token comment\"># 停止 docker 服务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>systemctl restart <span class=\"token function\">docker</span>  <span class=\"token comment\"># 重启 docker 服务</span></pre></td></tr></table></figure><p>然后输入命令，可以查看 docker 版本：</p>\n<pre><code>docker -v\n</code></pre>\n<p>如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081526343.png\" alt=\"image-20210418154704436\"></p>\n<h2 id=\"14配置镜像加速\"><a class=\"markdownIt-Anchor\" href=\"#14配置镜像加速\">#</a> 1.4. 配置镜像加速</h2>\n<p>docker 官方镜像仓库网速较差，我们需要设置国内镜像服务：</p>\n<p>参考阿里云的镜像加速文档：<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p>\n<h1 id=\"2centos7安装dockercompose\"><a class=\"markdownIt-Anchor\" href=\"#2centos7安装dockercompose\">#</a> 2.CentOS7 安装 DockerCompose</h1>\n<h2 id=\"21下载\"><a class=\"markdownIt-Anchor\" href=\"#21下载\">#</a> 2.1. 下载</h2>\n<p>Linux 下需要通过命令下载：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-s</span><span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-m</span><span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose</pre></td></tr></table></figure><p>如果下载速度较慢，或者下载失败，可以使用课前资料提供的 docker-compose 文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310081526880.png\" alt=\"image-20210417133020614\"></p>\n<p>上传到 <code>/usr/local/bin/</code>  目录也可以。</p>\n<p>在当前目录下也可以找到 docker-compose 文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310092029811.png\" alt=\"image-20231009202915017\"></p>\n<h2 id=\"22修改文件权限\"><a class=\"markdownIt-Anchor\" href=\"#22修改文件权限\">#</a> 2.2. 修改文件权限</h2>\n<p>修改文件权限：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 修改权限</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose</pre></td></tr></table></figure><h2 id=\"23base自动补全命令\"><a class=\"markdownIt-Anchor\" href=\"#23base自动补全命令\">#</a> 2.3.Base 自动补全命令：</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 补全命令</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-L</span> https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose <span class=\"token operator\">></span> /etc/bash_completion.d/docker-compose</pre></td></tr></table></figure><p>如果出错可以尝试开：梯子。</p>\n<p>如果这里出现错误，需要修改自己的 hosts 文件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"199.232.68.133 raw.githubusercontent.com\"</span> <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr></table></figure><h1 id=\"3docker镜像仓库\"><a class=\"markdownIt-Anchor\" href=\"#3docker镜像仓库\">#</a> 3.Docker 镜像仓库</h1>\n<p>搭建镜像仓库可以基于 Docker 官方提供的 DockerRegistry 来实现。</p>\n<p>官网地址：<a href=\"https://hub.docker.com/_/registry\">https://hub.docker.com/_/registry</a></p>\n<h2 id=\"31简化版镜像仓库\"><a class=\"markdownIt-Anchor\" href=\"#31简化版镜像仓库\">#</a> 3.1. 简化版镜像仓库</h2>\n<p>Docker 官方的 Docker Registry 是一个基础版本的 Docker 镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。</p>\n<p>搭建方式比较简单，命令如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token parameter variable\">--name</span> registry\t<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5000</span>:5000 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token parameter variable\">-v</span> registry-data:/var/lib/registry <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    registry</pre></td></tr></table></figure><p>命令中挂载了一个数据卷 registry-data 到容器内的 /var/lib/registry 目录，这是私有镜像库存放数据的目录。</p>\n<p>访问 http://YourIp:5000/v2/_catalog 可以查看当前私有镜像服务中包含的镜像</p>\n<h2 id=\"32带有图形化界面版本\"><a class=\"markdownIt-Anchor\" href=\"#32带有图形化界面版本\">#</a> 3.2. 带有图形化界面版本</h2>\n<p>使用 DockerCompose 部署带有图象界面的 DockerRegistry，命令如下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.0'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./registry<span class=\"token punctuation\">-</span>data<span class=\"token punctuation\">:</span>/var/lib/registry</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> CATALOG_ELEMENTS_LIMIT=\"1000\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">ui</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> joxit/docker<span class=\"token punctuation\">-</span>registry<span class=\"token punctuation\">-</span>ui<span class=\"token punctuation\">:</span>static</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> REGISTRY_TITLE=传智教育私有仓库</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> REGISTRY_URL=http<span class=\"token punctuation\">:</span>//registry<span class=\"token punctuation\">:</span><span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> registry</pre></td></tr></table></figure><h2 id=\"321创建docker-composeyml文件\"><a class=\"markdownIt-Anchor\" href=\"#321创建docker-composeyml文件\">#</a> 3.2.1. 创建 docker-compose.yml 文件</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost etc<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir registry-ui</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost etc<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd registry-ui/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost etc<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch docker-compose.yml</span></pre></td></tr></table></figure><p>打开 docker-compose.yml 文件编写上面的代码</p>\n<h2 id=\"33配置docker信任地址\"><a class=\"markdownIt-Anchor\" href=\"#33配置docker信任地址\">#</a> 3.3. 配置 Docker 信任地址</h2>\n<p>我们的私服采用的是 http 协议，默认不被 Docker 信任，所以需要做一个配置：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 打开要修改的文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vi</span> /etc/docker/daemon.json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 添加内容：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"insecure-registries\"</span>:<span class=\"token punctuation\">[</span><span class=\"token string\">\"http://192.168.150.101:8080\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 重加载</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>systemctl daemon-reload</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重启 docker</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>systemctl restart <span class=\"token function\">docker</span></pre></td></tr></table></figure><h2 id=\"34执行命令创建容器并执行\"><a class=\"markdownIt-Anchor\" href=\"#34执行命令创建容器并执行\">#</a> 3.4. 执行命令创建容器并执行</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost registry-ui<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose up -d</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Creating network <span class=\"token string\">\"registry-ui_default\"</span> with the default driver</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Pulling registry <span class=\"token punctuation\">(</span>registry:<span class=\"token punctuation\">)</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>latest: Pulling from library/registry</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>96526aa774ef: Pull complete</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cc37b24bb099: Pull complete</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>1d8a1aa97222: Pull complete</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e3ff0af69d79: Pull complete</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>17443307a4fc: Pull complete</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Digest: sha256:12a6ddd56d2de5611ff0d9735ac0ac1d1e44073c7d042477329e589c46867e4e</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Status: Downloaded newer image <span class=\"token keyword\">for</span> registry:latest</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Pulling ui <span class=\"token punctuation\">(</span>joxit/docker-registry-ui:static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>static: Pulling from joxit/docker-registry-ui</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>540db60ca938: Pull complete</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>197dc8475a23: Pull complete</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>39ea657007e5: Pull complete</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>37afbf7d4c3d: Pull complete</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>0c01f42c3df7: Pull complete</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>d590d87c9181: Pull complete</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>3333c94ae44f: Pull complete</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>33d7cca6fc9f: Pull complete</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>076b2dd9bdd1: Pull complete</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>b70198f04ee7: Pull complete</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>1fb6c5acc953: Pull complete</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Digest: sha256:b0657b6be748173583516e411bd71552e54cb7d5dda94964726297ce8774415c</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Status: Downloaded newer image <span class=\"token keyword\">for</span> joxit/docker-registry-ui:static</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Creating registry-ui_registry_1 <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>Creating registry-ui_ui_1       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost registry-ui<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "基础",
                "springcloud",
                "Docker"
            ]
        }
    ]
}