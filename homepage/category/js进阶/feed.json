{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"js进阶\" category",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/web/js/JS%E8%BF%9B%E9%98%B6/JS%E8%BF%9B%E9%98%B6/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/web/js/JS%E8%BF%9B%E9%98%B6/JS%E8%BF%9B%E9%98%B6/",
            "title": "JS进阶",
            "date_published": "2024-04-02T10:00:51.732Z",
            "content_html": "<h1 id=\"js进阶\"><a class=\"markdownIt-Anchor\" href=\"#js进阶\">#</a> JS 进阶</h1>\n<h2 id=\"学习目标\"><a class=\"markdownIt-Anchor\" href=\"#学习目标\">#</a> 学习目标</h2>\n<blockquote>\n<ol>\n<li>掌握作用域等概念加深对 JS 理解</li>\n<li>学习 ES6 新特性让代码书写更加简洁便利</li>\n</ol>\n</blockquote>\n<h2 id=\"作用域进阶\"><a class=\"markdownIt-Anchor\" href=\"#作用域进阶\">#</a> 作用域进阶</h2>\n<p><strong>目标</strong>：了解作用域对程序执行的影响及作用域链的查找机制，使用闭包函数创建隔离作用域避免全局变量污染。</p>\n<blockquote>\n<ul>\n<li>作用域 (scope) 规定了变量能够被访问的 “范围”，离开了这个 “范围” 变量便不能被访问</li>\n<li><strong>作用域分为</strong>：\n<ul>\n<li>局部作用域</li>\n<li>全局作用域</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"11-局部作用域\"><a class=\"markdownIt-Anchor\" href=\"#11-局部作用域\">#</a> 1.1 局部作用域</h3>\n<p>局部作用域分为<font title=red>函数作用域</font>和<font title=red>块作用域</font>。</p>\n<h4 id=\"1-函数作用域\"><a class=\"markdownIt-Anchor\" href=\"#1-函数作用域\">#</a> 1 函数作用域</h4>\n<p>在<mark>函数内部声明的变量</mark>只能在函数内部被访问，<mark>外部无法直接访问</mark>。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   \t<span class=\"token comment\">// 函数内部是函数作用域 属于局部变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   \t<span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token comment\">// 此处报错，函数外部不能使用局部作用域变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li><mark>函数内部声明的变量</mark>，在<mark>函数外部无法被访问</mark>.</li>\n<li>函数的<mark>参数</mark>也是<mark>函数内部的局部变量</mark>.</li>\n<li><mark>不同函数内部</mark>声明的<mark>变量无法互相访问</mark>.</li>\n<li><mark>函数执行完毕后</mark>，函数内部的<mark>变量实际被清空了</mark><sup>垃圾回收机制</sup>.</li>\n</ol>\n</blockquote>\n<h4 id=\"2-块作用域\"><a class=\"markdownIt-Anchor\" href=\"#2-块作用域\">#</a> 2 块作用域</h4>\n<p>在 JavaScript 中使用 { } 包裹的代码称为<mark>代码块</mark>，代码块内部声明的变量外部将 [<font title=red>有可能<sup>可能指的是使用 var 声明变量的块作用域</sup></font>] 无法被访问。</p>\n<p><strong>使用 let 来声明变量</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">//t 只能在改代码块中被访问</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 正常</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 超出了 t 的作用域</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 报错，会产生块作用域</span></pre></td></tr></table></figure><p><strong>使用 const 来声明变量</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">//t 只能在改代码块中被访问</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 正常</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 超出了 t 的作用域</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 报错，会产生块作用域</span></pre></td></tr></table></figure><p><strong>使用 var 来声明变量</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>t <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">//t 只能在改代码块中被访问</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 正常</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 超出了 t 的作用域</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token comment\">// 正常，var 声明的变量不会产生作用域。</span></pre></td></tr></table></figure><blockquote>\n<ol>\n<li><mark>let</mark> 声明的变量会<mark>产生块作用域</mark>，<mark>var 不会产生块作用域</mark>.</li>\n<li><mark>const</mark> 声明的常量也会<mark>产生块作用域</mark>.</li>\n<li><mark>不同代码块</mark>之间的变量<mark>无法互相访问</mark>.</li>\n<li>推荐使用<mark> let</mark> 或 <mark>const</mark>.</li>\n</ol>\n</blockquote>\n<blockquote>\n<p><font>总结</font></p>\n<ol>\n<li>局部作用域分为哪两种？\n<ul>\n<li>函数作用域 函数内部</li>\n<li>块级作用域</li>\n</ul>\n</li>\n<li>局部作用域声明的变量外部能使用吗？\n<ul>\n<li>不能</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"12-全局作用域\"><a class=\"markdownIt-Anchor\" href=\"#12-全局作用域\">#</a> 1.2 全局作用域</h3>\n<p><code>&lt;script&gt;</code>  标签和 <code>.js</code>  文件的 [<font title=red>最外层</font>] 就是所谓的<mark>全局作用域</mark>，在此声明的变量在<mark>函数内部也可以被访问</mark>。</p>\n<p><span alt=solid>全局作用域中声明的变量，任何其它作用域都可以被访问</span>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 全局作用域</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 全局作用域下声明了 num 变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 函数内部可以使用全局作用域的变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> \t<span class=\"token comment\">// 此处全局作用域</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token comment\">// 可以正常访问</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote alt=\"danger\">\n\t<p>\n      <font title=red>\n      \t注意：\n      </font>\n   </p>\n   <p>\n\t\t1.  为window对象动态添加的属性默认也是全局的，不推荐！\n   </p>\n   <p>\n\t\t2.  函数中未使用任何关键字声明的变量为全局变量，不推荐！！\n   </p>\n   <p>\n\t\t3.  尽可能少的声明全局变量，防止全局变量被污染。\n   </p>\n</blockquote>\n<p><strong>总结</strong>：</p>\n<ol>\n<li>全局作用域有哪些？\n<ul>\n<li><code>&lt;script&gt;</code>  标签内部</li>\n<li><code>.js</code>  文件</li>\n</ul>\n</li>\n<li>全局作用域声明的变量其它作用域能使用吗\n<ul>\n<li>可以</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"13-作用域链\"><a class=\"markdownIt-Anchor\" href=\"#13-作用域链\">#</a> 1.3 作用域链</h3>\n<p><mark>作用域链</mark>本质上是底层的 <mark>变量查找机制</mark>.</p>\n<ul>\n<li>在函数被执行时，会<mark>优先查找当前函数作用域中查找变量</mark></li>\n<li>如果<mark>当前作用域查找不到</mark>则会依次<mark>逐级查找父级作用域</mark>直到全局作用域</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 全局作用域</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 局部作用域</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 局部作用域</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         a <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 调用 g 函数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 调用 f 函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>查找顺序</strong>： <code>g</code>  —&gt;  <code>f</code>  —&gt;  <code>global</code></p>\n<blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li>嵌套关系的作用域串联起来形成了作用域链</li>\n<li>相同作用域中按着<mark>从小到大</mark>的规则查找变量</li>\n<li><span alt=wavy>子作用域能够访问父作用域，父级作用域无法访问子级作用域</span>.</li>\n</ol>\n</blockquote>\n<h3 id=\"垃圾回收机制\"><a class=\"markdownIt-Anchor\" href=\"#垃圾回收机制\">#</a> 垃圾回收机制</h3>\n<blockquote>\n<p>垃圾回收机制 (Garbage Collection) 简称<font title=red>GC</font>.</p>\n</blockquote>\n<p>JS 中<mark>内存</mark>的分配和回收都是<mark>自动完成</mark>的，内存在不使用的时候会被<mark>垃圾回收器</mark>自动回收</p>\n<h4 id=\"内存的声明周期\"><a class=\"markdownIt-Anchor\" href=\"#内存的声明周期\">#</a> 内存的声明周期</h4>\n<p>JS 环境中分配的内存，一般有如下<mark>声明周期</mark>：</p>\n<blockquote>\n<ol>\n<li><strong>内存分配</strong>：当我们声明<mark>变量</mark>，<mark>函数</mark>，<mark>对象</mark>的时候，系统会自动为它们<mark>分配内存</mark>.</li>\n<li><strong>内存使用</strong>：即读写内存，也就是使用变量，函数等</li>\n<li><strong>内存回收</strong>：使用完毕，由<mark>垃圾回收器</mark>自动回收不再使用的内存</li>\n</ol>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 为变量分配内存</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 为对象分配内存</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 为函数分配内存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>说明</strong>：</p>\n<blockquote>\n<ol>\n<li>全局变量一般不会回收 (关闭页面回收)</li>\n<li>一般情况下<mark>局部变量的值</mark>，不用了，会被<mark>自动回收</mark>掉</li>\n</ol>\n</blockquote>\n<p><strong>内存泄漏</strong>：程序中分配的内存由于某种原因程序<mark>未释放</mark>或<mark>无法释放</mark>叫做<mark>内存泄漏</mark>.</p>\n<h4 id=\"js垃圾回收机制算法说明\"><a class=\"markdownIt-Anchor\" href=\"#js垃圾回收机制算法说明\">#</a> JS 垃圾回收机制 — 算法说明</h4>\n<p><strong>堆栈空间分配区别</strong>：</p>\n<blockquote>\n<ol>\n<li>栈 (操作系统)：由<mark>操作系统自动分配释放</mark>函数的参数值，局部变量等，基本数据类型放到栈里面。</li>\n<li>堆 (操作系统)：一般由程序员分配释放，若程序员不释放，由<mark>垃圾回收机制</mark>回收。<mark>复杂数据类型</mark>放到堆里面。</li>\n</ol>\n</blockquote>\n<p><strong>下面介绍两种常见的浏览器</strong><mark>垃圾回收算法</mark>：<mark>引用计数法</mark> <strong>和</strong> <mark>标记清除法</mark>.</p>\n<h5 id=\"引用计数\"><a class=\"markdownIt-Anchor\" href=\"#引用计数\">#</a> 引用计数</h5>\n<p>IE 采用的引用计数算法，定义 “<mark>内存不再使用</mark>” ，就是看一个<mark>对象</mark>是否有指向它的<mark>引用</mark>，<mark>没有引用</mark>了就<mark>回收对象</mark>.</p>\n<p><strong>算法</strong>：</p>\n<blockquote>\n<ol>\n<li>跟踪记录被<mark>引用的次数</mark>.</li>\n<li>如果被<mark>引用了一次</mark>，那么就<mark>记录次数 1</mark>，多次引用会 <mark>累加 ++</mark>.</li>\n<li>如果<mark>减少一个引用</mark>就<mark>减 1 - -</mark>.</li>\n<li>如果引用次数是<mark> 0</mark>，则<mark>释放内存</mark>.</li>\n</ol>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061541096.png\" alt=\"image-20230806154152471\"></p>\n<p>但它却存在一个致命的问题：<font color=red>嵌套引用</font> (循环引用)</p>\n<p>如果两个对象<mark>互相引用</mark>，尽管它们已经<mark>不再使用</mark>，垃圾回收器<mark>不会进行回收</mark>，<mark>导致内存泄漏</mark>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">let</span> o1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">let</span> o2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   o1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> o2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   o2<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> o1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token string\">'引用计数无法回收'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>因为它们的引用次数<mark>永远不会是 0</mark>，这样的相互引用如果说<font title=red>很大量的存在</font>就<mark>会导致大量的内存泄露</mark>。</p>\n<h5 id=\"标记清除法\"><a class=\"markdownIt-Anchor\" href=\"#标记清除法\">#</a> 标记清除法</h5>\n<p><span alt=wavy>现代的浏览器已经不再使用引用计数算法了</span>。</p>\n<p>现代浏览器通用的大多是基于 <mark>标记清楚算法</mark> 的某些改进算法，总体思想都是一致的。</p>\n<p><strong>核心</strong>：</p>\n<blockquote>\n<ol>\n<li>标记清除算法将 “不再使用的对象” 定义为 “<mark>无法达到的对象</mark>”</li>\n<li>就是从<mark>根部</mark> (在 JS 中就是全局对象) 出发<mark>定时扫描内存中的对象</mark>。凡是<mark>能从根部到达的对象，都是还需要使用的</mark>。</li>\n<li>那些<mark>无法</mark>由<mark>根部出发 触及到</mark>的 <mark>对象被标记</mark>为<mark>不再使用</mark>，稍后进行<mark>回收</mark>。</li>\n</ol>\n</blockquote>\n<p><strong>标记所有的引用</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061606847.png\" alt=\"image-20230806160645281\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061607509.png\" alt=\"image-20230806160709067\"></p>\n<h5 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h5>\n<blockquote>\n<ol>\n<li><mark>标记清除法</mark>核心思路是什么？\n<ul>\n<li>从<mark>根部扫描</mark>对象，<mark>能查找到的就是使用的</mark>，<mark>查找不到的就要被回收</mark>。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"闭包\"><a class=\"markdownIt-Anchor\" href=\"#闭包\">#</a> 闭包</h3>\n<p><strong>目标</strong>：能说出什么是闭包，闭包的作用以及注意事项</p>\n<p><strong>概念</strong>：一个<mark>函数对周围状态的引用捆绑在一起</mark>，<mark>内层函数中访问到其外层函数的作用域</mark>.</p>\n<p><strong>简单理解</strong>：<mark>闭包</mark> = <mark>内层</mark><strong>函数</strong> + <mark>外层</mark><strong>函数</strong>的<mark>变量</mark>.</p>\n<p><strong>先看个简单代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token comment\">// 外层函数变量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">//                 + </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 内层函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">//           =  闭包</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061620199.png\" alt=\"image-20230806162014826\"></p>\n<p><strong>闭包作用</strong>：<mark>封闭数据</mark>，<mark>提供操作</mark>，<mark>外部函数也可以访问函数内部的变量</mark>。</p>\n<p><strong>闭包的基本格式</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">return</span> fn <span class=\"token comment\">// 将 fn 返回给外部函数使用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//outer () = 等价于 = fn = 等价于 = function fn ()&#123;&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 外层函数使用内部函数的变量</span></pre></td></tr></table></figure><p><code>outer() =等价于= fn =等价于= function fn()&#123;&#125;</code></p>\n<p><strong>简约写法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 调用 fun   1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 外层函数使用内层函数的变量</span></pre></td></tr></table></figure><p><strong>闭包应用</strong>：实现数据的<font title=\"red\">私有</font>.</p>\n<blockquote>\n<p>比如，我们要做个统计函数调用次数，函数调用一次，就 + +</p>\n</blockquote>\n<p><strong>使用普通函数的形式</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用普通函数的形式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">函数被调用</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">次</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//3</span></pre></td></tr></table></figure><blockquote alt=\"warn\"><p><font title=\"red\">但是，这个i是个全局变量，很容易被修改</font></p></blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061656547.gif\" alt=\"test\"></p>\n<p><strong>使用闭包函数的形式</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用闭包的形式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">函数被调用了</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">次~~~</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote alt=\"success\"><p>解决了修改全局变量的问题 ! 实现数据私有。</p></blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061704072.gif\" alt=\"test\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061709949.png\" alt=\"image-20230806170926606\"></p>\n<blockquote>\n<p>从 window 最大的开始能找到 fun，fun 又能找到 outer 函数内返回的 return function () 该函数内部使用到了外部函数的 i 内部函数又能找到外部函数的 i ，所以 变量 i 不会被垃圾回收。</p>\n</blockquote>\n<blockquote alt=\"danger\">\n   <p>\n\t\t但是闭包存在一个问题就是：内存泄漏 ！   \n   </p>\n   <p>\n      fun是全局作用域会一直被使用，所以一直都有一个指向关系直到 变量 i 不能被垃圾回收掉可能导致<font title=\"red\">内存泄漏 ！</font>\n   </p>\n</blockquote>\n<h4 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结</h4>\n<blockquote>\n<ol>\n<li>怎么理解闭包？\n<ul>\n<li>闭包 = 内层函数 + 外层函数的变量</li>\n</ul>\n</li>\n<li>闭包的作用？\n<ul>\n<li>封闭数据，实现数据私有，外部函数也可以访问函数内部的变量</li>\n<li>闭包很有用，因为它允许将函数与其所有操作的某些数据 (环境) 关联起来</li>\n</ul>\n</li>\n<li>闭包可能引起的问题？\n<ul>\n<li>内存泄漏！！</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"变量提升了解\"><a class=\"markdownIt-Anchor\" href=\"#变量提升了解\">#</a> 变量提升 (了解)</h3>\n<p><strong>目标</strong>：了解什么是变量提升</p>\n<p>变量提升是 JavaScript 中比较 “<mark>奇怪</mark>” 的现象，它允许在<mark>变量声明之前即被访问</mark> (仅存在于 var 声明变量)</p>\n<blockquote alt=\"info\">\n\t<p>\n      <font>说明</font>：\n   </p>\n   <p>\n      JS初学者经常花很多时间才能习惯变量提升，还经常出现一些意想不到的bug，正因\n   </p>\n   <p>\n      为如此，ES6引入了块级作用域，用let或者const声明变量，让代码写更加规范和人性化。\n   </p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 把所有 var 声明的变量提升到 当前作用域的最前面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 2. 只提升声明，不提升赋值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token comment\">// 相当于将下面的 num 提升到了当前作用域最前面也就是这里了</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token string\">'件'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//undefined 件 ，提升了 num 变量并没有赋值 否则应该会报错说 num is not definedat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061917516.png\" alt=\"image-20230806191723213\"></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//console.log (num) 报错:  num is not definedat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> num <span class=\"token comment\">//var 声明的变量只提升当前作用域的最前面外部并不能访问到</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token string\">'件'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//undefined 件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061920853.png\" alt=\"image-20230806192051726\"></p>\n<blockquote alt=\"danger\">\n\t<p>\n      <font title=red>注意</font>\n   </p>\n   <p>\n      1. 变量在未声明即被访问时会报语法错误\n   </p>\n   <p>\n      2. 变量在var声明之前即被访问，变量的值为 undefined (因为存在变量提升的问题 !)\n   </p>\n   <p>\n      3. let / const 声明的变量不存在变量提升\n   </p>\n   <p>\n      4. 变量提升出现在相同作用域当中\n   </p>\n   <p>\n      <font title=red>\n      \t5. 实际开发中推荐先声明再访问变量\n      </font>\n   </p>\n</blockquote>\n<blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li>用哪个关键字声明变量会有变量提升？\n<ul>\n<li>var</li>\n</ul>\n</li>\n<li>变量提升是什么流程？\n<ul>\n<li>先把 var 变量提升到当前作用域最前面</li>\n<li>只提升变量<mark>声明</mark>，不提升变量<mark>赋值</mark>.</li>\n<li>然后依次执行代码</li>\n</ul>\n</li>\n</ol>\n<p>我们不建议使用 var 声明变量</p>\n</blockquote>\n<h2 id=\"函数进阶\"><a class=\"markdownIt-Anchor\" href=\"#函数进阶\">#</a> 函数进阶</h2>\n<p>目标：知道函数参数默认值，动态参数，剩余参数的使用细节，提升函数应用的灵活度，知道箭头函数的语法及与普通函数的差异。</p>\n<h3 id=\"11-函数提升\"><a class=\"markdownIt-Anchor\" href=\"#11-函数提升\">#</a> 1.1 函数提升</h3>\n<p>目标：能说出函数提升的过程</p>\n<p>函数提升与变量提升比较类似，是指函数在声明之前即可被调用。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 会把所有函数声明提升到当前作用域的最前面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 2. 只提升函数声明，不提升函数调用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 函数提升</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'函数提升'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// ------------------------------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> fn</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//fn is not a function</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'函数表达式'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 函数表达式，必须先声明并且赋值，后调用使用 否则报错</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308061947985.png\" alt=\"image-20230806194738556\"></p>\n<blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li>函数提升能够使函数的声明调用更灵活</li>\n<li>函数表达式不存在提升的现象</li>\n<li>函数提升出现在相同作用域当中</li>\n</ol>\n</blockquote>\n<h3 id=\"12-函数参数\"><a class=\"markdownIt-Anchor\" href=\"#12-函数参数\">#</a> 1.2 函数参数</h3>\n<p>函数参数的使用细节，能够提升函数应用的<mark>灵活度</mark>。</p>\n<p><strong>学习路径</strong>：</p>\n<ol>\n<li>动态参数</li>\n<li>剩余参数</li>\n</ol>\n<h4 id=\"121-动态参数\"><a class=\"markdownIt-Anchor\" href=\"#121-动态参数\">#</a> 1.2.1 动态参数</h4>\n<p><code>arguments</code>  是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 求和函数，计算所有参数的和</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">//consoole.log (arguments) //arguments 动态参数 只存在于函数中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      s <span class=\"token operator\">+=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">// 调用求和函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 两个参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 三个参数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li>arguments 是一个伪数组，只存在于函数中</li>\n<li>arguments 的作用是动态获取函数的实参</li>\n<li>可以通过 for 循环依次得到传递过来的实参</li>\n<li>当不确定传递多少个实参的时候，我们怎么办？\n<ul>\n<li>arguments 动态参数</li>\n</ul>\n</li>\n<li>arguments 是什么？\n<ul>\n<li>伪数组</li>\n<li>它只存在函数中</li>\n</ul>\n</li>\n<li>箭头函数中没有 <code>arguments</code> .</li>\n</ol>\n</blockquote>\n<h4 id=\"122-剩余参数\"><a class=\"markdownIt-Anchor\" href=\"#122-剩余参数\">#</a> 1.2.2 剩余参数</h4>\n<p>目标：能够使用剩余参数</p>\n<p>剩余参数允许我们将一个不定数量的参数表示为一个<font title=red>真数组</font>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//... 剩余参数 arr 变量名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 将前面的实参传给形参 a,b 剩余的给... 剩余参数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// a = 1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// b = 2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Array[3]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308062020926.png\" alt=\"image-20230806202027525\"></p>\n<blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li><code>...</code>  是语法符号，置于最末<sup> mo</sup> 函数形参之前，用于获取<mark>多余</mark>的实参</li>\n<li>借助 <code>...</code>  获取的剩余实参，是个 <font title=red>真数组</font>.</li>\n</ol>\n</blockquote>\n<p>开发中，还是提倡多使用<font title=red>剩余参数</font>.</p>\n<h4 id=\"总结-3\"><a class=\"markdownIt-Anchor\" href=\"#总结-3\">#</a> 总结</h4>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span>1. 剩余参数主要的使用场景是?</span>\n   \t</p>\n      <ul>\n         <li>\n         \t<p>\n\t\t\t\t\t<span>用于获取多余的实参</span>\n      \t\t</p>\n         </li>\n         <li>\n         \t<p>\n               <span>剩余参数只能用于函数中</span>\n            </p>\n         </li>\n      </ul>\n      <p>\n         <span>2. 剩余参数和动态参数区别是什么？开发中提倡使用哪一个？</span>\n   \t</p>\n      <ul>\n         <li>\n         \t<p>\n               <span>动态参数是伪数组</span>\n   \t\t\t</p>\n         </li>\n         <li>\n         \t<p>\n               <span>剩余参数是<font>真数组</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>开发中使用剩余参数想必也是极好的。</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h3 id=\"展开运算符\"><a class=\"markdownIt-Anchor\" href=\"#展开运算符\">#</a> 展开运算符</h3>\n<p>目标：能够使用展开运算符并说出常用的场景</p>\n<p>展开运算符 ( <code>...</code> ) 将一个数组进行展开</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token comment\">//1 5 3 8 2</span></pre></td></tr></table></figure><blockquote>\n<p><font>说明</font>：</p>\n<ul>\n<li>展开运算符<mark>不会修改原数组</mark>.</li>\n</ul>\n</blockquote>\n<p><strong>典型运用场景</strong>：求数组最大值 (最小值)，合并数组等。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 展开运算符，可以展开数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 使用 Math.max 求最大值的函数配合... 展开运算符求出数组中的最大值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//...arr = 等价于 = 1,2,3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 使用 Math.max 求最大值的函数配合... 展开运算符求出数组中的最小值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//...arr = 等价于 = 1,2,3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 1</span></pre></td></tr></table></figure><p><strong>合并数组</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 展开运算符，可以展开数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 使用展开运算 合并数组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr1<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token comment\">//[1, 2, 3, 4, 5, 6] 合并后的数组</span></pre></td></tr></table></figure><h3 id=\"箭头函数️-非常重要\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数️-非常重要\">#</a> 箭头函数⭐️ (非常重要)</h3>\n<p>目标：能够熟悉箭头函数<mark>不同写法</mark>.</p>\n<p><strong>目的</strong>：引入箭头函数的目的是更<mark>简短</mark>的函数写法并且<mark>不绑定 this</mark>，箭头函数的语法比函数表达式更简洁</p>\n<p><strong>使用场景</strong>：箭头函数更适用于那些本来<mark>需要匿名函数的地方</mark>.</p>\n<blockquote alt=info>\n\t<p>\n      <font>学习路径：</font>\n   </p>\n   <p>\n      1. 基本语法\n   </p>\n   <p>\n      2. 箭头函数参数\n   </p>\n   <p>\n      3. 箭头函数 this\n   </p>\n</blockquote>\n<h4 id=\"1-基本语法\"><a class=\"markdownIt-Anchor\" href=\"#1-基本语法\">#</a> 1 基本语法</h4>\n<p><strong>语法 1</strong>：基本写法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 箭头函数 声明类型 函数名 = (参数列表) => &#123;方法体&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>语法 2</strong>：只有一个参数时可以省略小括号</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//x 是形参</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>语法 3</strong>：如果函数体<mark>只有一行代码</mark>，可以<mark>省略</mark><mark>方法体</mark>写到一行上，并且无需写 <code>return</code>  直接返回</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 箭头函数 声明类型 函数名 = (参数列表) => &#123;方法体&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 只有一个形参的函数 小括号可以省略 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 只有一行代码时，可以省略大括号和 return，有返回值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fun</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">+</span> x</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 调用箭头函数并传入实参</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>更加简介的事件阻止默认行为的方式</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 更加简介的语法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>form<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>语法 4</strong>：加括号的函数体返回对象字面量表达式 (箭头函数可以直接返回一个<mark>对象</mark>)</p>\n<ul>\n<li>返回对象的函数体格式： <code>(&#123;复杂数据类型&#125;)</code>  必须再用小括号包起来</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 返回一个对象 不能直接使用 &#123;&#125; 需要配合（）使用，因为 &#123;&#125; 和函数 &#123;&#125; 冲突</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fn1</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">uname</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> uname<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pink老师'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote alt=success>\n\t<p>\n      <font>总结</font>：\n   </p>\n   <p>\n      1. 箭头函数属于表达式函数，因此<font>不存在函数提升</font>\n   </p>\n   <p>\n      2. 箭头函数只有一个参数时可以省略小括号 ()\n   </p>\n   <p>\n      3. 箭头函数函数体只有一行代码时，可以省略方法体{}，还有返回值 return\n   </p>\n   <p>\n      4. 加括号的函数体返回对象字面量表达式 格式必须是 ({复杂数据类型}) 因为 {} 与函数 {} 冲突\n   </p>\n</blockquote>\n<h4 id=\"2-箭头函数参数\"><a class=\"markdownIt-Anchor\" href=\"#2-箭头函数参数\">#</a> 2 箭头函数参数</h4>\n<blockquote alt=info>\n\t<p>\n      1. 普通函数有 arguments 动态参数\n   </p>\n   <p>\n      2. 箭头函数没有arguments 动态参数，但是有 剩余参数 …args\n   </p>\n</blockquote>\n**箭头函数求和** \n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 利用箭头函数求和</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 参数列表使用剩余参数 来接收</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 便利剩余参数 累加 数组内的元素值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        sum <span class=\"token operator\">+=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 返回结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> sum</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 5</span></pre></td></tr></table></figure><blockquote alt=success>\n   <div>\n      <p>\n         <span><font>总结</font>：</span>\n   \t</p>\n      <p>\n         <span>1. 箭头函数里面有 arguments 动态参数吗？可以使用什么参数？</span>\n      </p>\n      <ul>\n         <li>\n            <p>\n               <span>没有arguments动态参数</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>可以使用 ... 剩余参数</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h4 id=\"3-箭头函数this\"><a class=\"markdownIt-Anchor\" href=\"#3-箭头函数this\">#</a> 3 箭头函数 this</h4>\n<p>在箭头函数出现之前，每一个新函数根据它是被<font title=red>如何调用的</font>来定义这个函数的 this 值，<mark>非常令人讨厌</mark>。</p>\n<p><mark>箭头函数不会创建自己的 this</mark>，它只会从自己的作用域链的上一层沿用 this。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 以前 this 的指向：谁调用我，我就是谁</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 此处为 window</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   cnosole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 普通函数指向调用者 此处为 window</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 函数的完整调用方式：window.sayHi ()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 当前 this 指向 btn</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在开发中 [使用箭头函数前需要考虑函数中 this 的值] ，事件回调函数使用箭头函数时，this 为全局的 window，因此<font title=red>DOM 事件回调函数为了简便，还是不太推荐使用箭头函数</font>。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// DOM 节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">const</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 箭头函数 此时 this 指向了 window</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 普通函数 此时 this 指向了 DOM 对象</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote alt=success>\n\t<div>\n      <font>总结</font>：\n      <p>\n         <span>1. 箭头函数里面有this吗？</span>\n      </p>\n      <ul>\n         <li>\n            <p>\n               <span><font title=red>箭头函数不会创建自己的this</font>，它只会从自己的作用域链的上一层沿用this</span>\n            </p>\n         </li>\n      </ul>\n      <p>\n         <span>2. DOM事件回调函数推荐使用箭头函数吗？</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span><font title=red>不太推荐，特别是需要用到this的时候</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>事件回调函数使用箭头函数时，this为全局的window</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h2 id=\"解构赋值\"><a class=\"markdownIt-Anchor\" href=\"#解构赋值\">#</a> 解构赋值</h2>\n<ul>\n<li>数组解构</li>\n<li>对象解构</li>\n</ul>\n<p>目标：知道解构的语法及分类，使用解构简洁语法快速为变量赋值</p>\n<p><strong>打比方</strong>：</p>\n<p>获取数组中的最大值，最小值，平均值。</p>\n<p>方式一：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 最大值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 最小值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 平均值</span></pre></td></tr></table></figure><p>方式二：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> min <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> avg <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token comment\">// 最大值 100</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token comment\">// 最小值 60</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">)</span><span class=\"token comment\">// 平均值 80</span></pre></td></tr></table></figure><p>以上要么不好记忆<sup>对于新手而言</sup>，要么书写麻烦，此时可以使用<mark>解构赋值</mark>的方法让代码更简洁，如下代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">,</span>min<span class=\"token punctuation\">,</span>avg<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token comment\">// 最大值 100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token comment\">// 最小值 60</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">)</span><span class=\"token comment\">// 平均值 80</span></pre></td></tr></table></figure><h3 id=\"11-数组解构\"><a class=\"markdownIt-Anchor\" href=\"#11-数组解构\">#</a> 1.1 数组解构</h3>\n<p><mark>数组解构</mark>是将数组的<mark>单元值<sup>指的是数组元素 [1,2,3]</sup> 快速批量赋值</mark>给一系列<mark>变量<sup> [a,b,c] 批量声明的变量</sup><mark>的</mark>简洁语法</mark>。</p>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>基本语法</font>：</span>\n      </p>\n      <p>\n         <span>1. 赋值运算符 = 左侧的 [ ] 用于批量声明变量，右侧数组的单元值将被赋值给左侧的变量</span>\n      </p>\n      <p>\n         <span>2. 变量的顺序对应数组单元值的位置依次进行赋值操作</span>\n      </p>\n   </div>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 普通数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//---------------------------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 两种语法格式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 批量声明变量 a,b,c 同时将普通数组的元素对应下标赋值给 批量声明的变量中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 或者</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// const [a,b,c] = [1,2,3]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//---------------------------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//const [a,b,c] = arr 类似于如下：</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// const a = arr[0]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// const b = arr[1]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// const c = arr[2]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//---------------------------------</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">a = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>a<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// a = 1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">b = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>b<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// b = 2</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">c = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>c<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// c = 3</span></pre></td></tr></table></figure><p><strong>典型应用交换 2 个变量的值</strong>：</p>\n<blockquote alt=danger>\n\t<div>\n      <p>\n         <span>一定注意变量b = 3; 后面有一个分号跟解构数组语法连起来的 可以换行写</span>\n      </p>\n   </div>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//============ 交换变量 ============</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">交换后的变量: a = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>a<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">,b = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>b<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 或者这么写 ================================================</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">交换前的变量: a = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>a<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">,b = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>b<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">]</span> <span class=\"token comment\">// 必须使用 ； 分号将 [] 与它之前的代码分隔开来否则就会报错 为什么报错 下面有解释</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">交换后的变量: a = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>a<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">,b = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>b<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <p>\n         <span>冒泡排序的简洁写法—使用 解构数组方式来进行变量的交换 省去一个中间人。</span>\n      </p>\n   </div>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"实参数量与形参数量问题\"><a class=\"markdownIt-Anchor\" href=\"#实参数量与形参数量问题\">#</a> 实参数量与形参数量问题</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量多 单元值少</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 变量少 单元值多</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">,</span>b1<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <p>\n         <span>1. 变量多 单元值少</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>多余的变量没有接收到 单元值的值 默认为 undefined</span>\n            </p>\n         </li>\n      </ul>\n      <p>\n         <span>2. 变量少 单元值多</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>多余的单元值，没有变量来接收 可以使用  剩余参数来使用</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h5 id=\"1-利用剩余参数解决多余的单元值\"><a class=\"markdownIt-Anchor\" href=\"#1-利用剩余参数解决多余的单元值\">#</a> 1 利用剩余参数解决多余的单元值</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量少 单元值多</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">,</span>b1<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>d<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [4] 得到一个 真数组</span></pre></td></tr></table></figure><h5 id=\"2-防止有undefined-传递-单元值的情况可以为变量设置默认值\"><a class=\"markdownIt-Anchor\" href=\"#2-防止有undefined-传递-单元值的情况可以为变量设置默认值\">#</a> 2 防止有 undefined 传递 单元值的情况，可以为变量设置默认值</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量多 单元值少</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> b <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span></pre></td></tr></table></figure><h5 id=\"3-按需导入赋值\"><a class=\"markdownIt-Anchor\" href=\"#3-按需导入赋值\">#</a> 3 按需导入赋值</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 按需导入赋值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//\t        ↓ 忽略一位</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token comment\">// 4</span></pre></td></tr></table></figure><h5 id=\"4-支持多维数组的解构\"><a class=\"markdownIt-Anchor\" href=\"#4-支持多维数组的解构\">#</a> 4 支持多维数组的解构</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 多维数组演示</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//5</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 使用数组解构</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token comment\">// 5</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token comment\">// 6</span></pre></td></tr></table></figure><h4 id=\"分号解释\"><a class=\"markdownIt-Anchor\" href=\"#分号解释\">#</a> 分号解释</h4>\n<blockquote alt=danger>\n\t<div>\n      <p>\n         <span><font title=red>注意：JS前面必须加分号情况</font></span>\n      </p>\n   </div>\n</blockquote>\n<ol>\n<li>\n<p>立即执行函数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>数组解构</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 数组开头的，特别是前面有语句的一定注意加分号 前面带；是表示结束的意思</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071014090.png\" alt=\"image-20230807101435985\"></p>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <P>\n         <span>1. 数组解构赋值的作用是什么？</span>\n      </P>\n      <ul>\n         <li>\n         \t<p>\n               <span>是将数组的单元值快速<font title=red>批量赋值</font>给一系列变量<font title=red>的简洁语法</font></span>\n            </p>\n         </li>\n      </ul>\n      <p>\n         <span>2. JS前面有哪两种情况需要加分号？</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>立即执行函数</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>数组解构</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h4 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h4>\n<p><strong>独立完成数组解构赋值</strong></p>\n<blockquote>\n<p>需求 1：</p>\n<p>有个数组： <code>const ps = ['张三','李四','刘桑']</code></p>\n<p>解构为变量：zs，ls，ls</p>\n<p>需求 2：</p>\n<p>请将最大值和最小值函数返回值解构为 max 和 min 两个变量</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 要求 max 变量里面存 100 min 变量里面存 60</span></pre></td></tr></table></figure></blockquote>\n<p><strong>题一</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'刘桑'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>zs<span class=\"token punctuation\">,</span>ls<span class=\"token punctuation\">,</span>ls1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>zs<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 张三</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 李四</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ls1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 刘桑</span></pre></td></tr></table></figure><p><strong>题二</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">,</span>min<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">最大值 = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>max<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">最小值 = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>min<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 60</span></pre></td></tr></table></figure><h3 id=\"12-对象解构-非常的重要\"><a class=\"markdownIt-Anchor\" href=\"#12-对象解构-非常的重要\">#</a> 1.2 对象解构 (非常的重要 ！)</h3>\n<p><mark>对象解构</mark>是将对象<mark>属性</mark>和<mark>方法</mark>快速<mark>批量赋值给</mark>一系列<mark>变量</mark>的<mark>简洁语法</mark>.</p>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>1. 基本语法</font>：</span>\n      </p>\n      <p>\n         <span>1. 赋值运算符 = 左侧的 { } 用于批量声明变量，右侧对象的属性值将被赋值给左侧的变量</span>\n      </p>\n      <p>\n         <span>2. 对象属性的值将被赋值与属性名<font title=red>相同的</font>变量</span>\n      </p>\n      <p>\n         <span>3. 注意解构的<font title=red>变量名不要和外面的变量名冲突否则报错</font></span>\n      </p>\n      <p>\n         <span>4. 对象中找不到与变量名一致的属性时变量值为 <font title=red>undefined</font></span>\n      </p>\n   </div>\n</blockquote>\n<h4 id=\"1-基本语法-2\"><a class=\"markdownIt-Anchor\" href=\"#1-基本语法-2\">#</a> 1 基本语法：</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建普通对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">unames</span><span class=\"token operator\">:</span> <span class=\"token string\">'小花'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">ages</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 对象解构</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>unames<span class=\"token punctuation\">,</span>ages<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> obj1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 打印输出</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>unames<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 小花</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ages<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 18</span></pre></td></tr></table></figure><p><strong>更简洁的写法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// ========== 普通调用方式 ==========</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 普通对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//          麻烦 不方便</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// obj.uname</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// obj.age</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// ========== 对象解构 —— 解构语法 ==========</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>uname <span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 等价于 const uname = obj.uname</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 要求 声明变量的名称 要和 对象属性名一致</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 李四</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// ========== 对象解构中函数 this 的指向 ==========</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 使用  对象解构的话 this 指向的是 window</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>uname1 <span class=\"token punctuation\">,</span> sayHi<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname1</span><span class=\"token operator\">:</span> <span class=\"token string\">'王刚'</span> <span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">sayHi</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 王刚</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 必须在上面声明 sayHi 才能调用否则报错</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//window 对象</span></pre></td></tr></table></figure><h4 id=\"2-为对象解构变量名重新改名防止变量名冲突\"><a class=\"markdownIt-Anchor\" href=\"#2-为对象解构变量名重新改名防止变量名冲突\">#</a> 2 为对象解构变量名重新改名，防止变量名冲突</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>uname <span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// ========== 对象解构的变量名 可以重新改名 防止变量名冲突 ==========</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> username <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> userage<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 李四</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>userage<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span></pre></td></tr></table></figure><p><strong>冒号表示</strong> “什么值：赋值给谁”</p>\n<h3 id=\"13-数组对象解构\"><a class=\"markdownIt-Anchor\" href=\"#13-数组对象解构\">#</a> 1.3 数组对象解构</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 数组对象解构</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 数组对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> pig <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 解构 数组对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>uname <span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pig</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname<span class=\"token punctuation\">)</span><span class=\"token comment\">// 佩奇</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token comment\">// 6</span></pre></td></tr></table></figure><h3 id=\"14-多级对象解构\"><a class=\"markdownIt-Anchor\" href=\"#14-多级对象解构\">#</a> 1.4 多级对象解构</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 多级对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> pig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">mother</span><span class=\"token operator\">:</span> <span class=\"token string\">'猪妈妈'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">father</span><span class=\"token operator\">:</span> <span class=\"token string\">'猪爸爸'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">sister</span><span class=\"token operator\">:</span> <span class=\"token string\">'乔治'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 多级对象 解构</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> uname<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> mother<span class=\"token punctuation\">,</span> father<span class=\"token punctuation\">,</span> sister <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> pig</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname<span class=\"token punctuation\">)</span><span class=\"token comment\">// 佩奇</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token comment\">// 16</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mother<span class=\"token punctuation\">)</span><span class=\"token comment\">// 猪妈妈</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>father<span class=\"token punctuation\">)</span><span class=\"token comment\">// 猪爸爸</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sister<span class=\"token punctuation\">)</span><span class=\"token comment\">// 乔治</span></pre></td></tr></table></figure><h3 id=\"15-多级数组对象-解构\"><a class=\"markdownIt-Anchor\" href=\"#15-多级数组对象-解构\">#</a> 1.5 多级数组对象 解构</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 多级数组对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> pigs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">mother</span><span class=\"token operator\">:</span> <span class=\"token string\">'猪妈妈'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">father</span><span class=\"token operator\">:</span> <span class=\"token string\">'猪爸爸'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">sister</span><span class=\"token operator\">:</span> <span class=\"token string\">'乔治'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'大佩奇'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token literal-property property\">mother</span><span class=\"token operator\">:</span> <span class=\"token string\">'大猪妈妈'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token literal-property property\">father</span><span class=\"token operator\">:</span> <span class=\"token string\">'大猪爸爸'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token literal-property property\">sister</span><span class=\"token operator\">:</span> <span class=\"token string\">'大乔治'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 多级 数组对象 解构</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> uname<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> mother<span class=\"token punctuation\">,</span> father<span class=\"token punctuation\">,</span> sister <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> uname1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> age1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">mother</span><span class=\"token operator\">:</span> mother1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">father</span><span class=\"token operator\">:</span> father1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">sister</span><span class=\"token operator\">:</span> sister1 <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pigs</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname<span class=\"token punctuation\">)</span><span class=\"token comment\">// 佩奇</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token comment\">// 6</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mother<span class=\"token punctuation\">)</span><span class=\"token comment\">// 猪妈妈</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>father<span class=\"token punctuation\">)</span><span class=\"token comment\">// 猪爸爸</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sister<span class=\"token punctuation\">)</span><span class=\"token comment\">// 乔治</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uname1<span class=\"token punctuation\">)</span><span class=\"token comment\">// 大佩奇</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age1<span class=\"token punctuation\">)</span><span class=\"token comment\">// 12</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mother1<span class=\"token punctuation\">)</span><span class=\"token comment\">// 大猪妈妈</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>father1<span class=\"token punctuation\">)</span><span class=\"token comment\">// 大猪爸爸</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sister1<span class=\"token punctuation\">)</span><span class=\"token comment\">// 大乔治</span></pre></td></tr></table></figure><h3 id=\"练习案例\"><a class=\"markdownIt-Anchor\" href=\"#练习案例\">#</a> 练习案例：</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 这是后台传递过来的数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"获取新闻列表成功\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string-property property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5G商用自己，三大运用商收入下降\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string-property property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token number\">58</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"国际媒体头条速览\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string-property property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token number\">56</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"乌克兰和俄罗斯持续冲突\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token string-property property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1669</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// ========================== 请不看下面的代码完成上面的 数据解构 ==========================</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 形参接收到 msg 的对象数组后 将其进行 解构 得到 msg 中 data 的数据 数据解构 得到 data 的数据并改名为 myData 传入函数中</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> myData <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 参数列表中 &#123;data:myData&#125; 等价于 const &#123;data:myData&#125; = arr</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 解构 数组对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> count <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> id1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> count1 <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> id2<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title2<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> count2 <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myData</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">title: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>title<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">count: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>count<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'---------------------'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id1<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">title: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>title1<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">count: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>count1<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'---------------------'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id2<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">title: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>title2<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">count: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>count2<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">// 将 msg 对象数组 传入函数实参</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"遍历数组foreach方法-重点\"><a class=\"markdownIt-Anchor\" href=\"#遍历数组foreach方法-重点\">#</a> 遍历数组 forEach 方法 (重点)</h2>\n<ul>\n<li>forEach ( ) 方法用于调用数组的每个元素，并将元素传递给回调函数</li>\n<li><strong>主要使用场景</strong>：<span alt=wavy>遍历数组的每个元素</span>.</li>\n</ul>\n<blockquote>\n<p><span alt=solid>就是增强的 for 循环，主要适用于 遍历 数组对象 ，数组对象越是复杂 用 forEach 越是明显，但是用来遍历普通的数组并不推荐，普通数组还是用 for 来得比较轻松</span>.</p>\n</blockquote>\n<p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>被遍历的数组<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">当前数组元素，当前元素索引号</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">// 函数体</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>例如</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token comment\">// 依次打印数组中的每个元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token comment\">// 依次打印数组元素对应的下标</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote alt=danger>\n\t<div>\n      <p>\n         <span><font title=red>注意</font>：</span>\n      </p>\n      <p>\n         <span>1. forEach主要是遍历数组</span>\n      </p>\n      <p>\n         <span>2. 参数中获取<span alt=solid>当前数组元素</span>是必须要写的，<span alt=dotted>当前元素索引号</span>可选。</span>\n      </p>\n      <p>\n         <span>3. <font title=red>不返回新的数组 ，只用于遍历</font></span>\n      </p>\n   </div>\n</blockquote>\n<h3 id=\"练习渲染商品案例\"><a class=\"markdownIt-Anchor\" href=\"#练习渲染商品案例\">#</a> 练习 — 渲染商品案例</h3>\n<p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071540714.png\" alt=\"image-20230807154019723\"></p>\n<p>html 与 js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span> <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">const</span> goodsList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001172'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'称心如意手摇咖啡磨豆机咖啡豆研磨机'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'289.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001594'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'日式黑陶功夫茶组双侧把茶具礼盒装'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'288.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/3346b7b92f9563c7a7e24c7ead883f18.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001009'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'竹制干泡茶盘正方形沥水茶台品茶盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'109.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/2d942d6bc94f1e230763e1a5a3b379e1.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001874'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'古法温酒汝瓷酒具套装白酒杯莲花温酒器'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'488.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/44e51622800e4fceb6bee8e616da85fd.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001649'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'大师监制龙泉青瓷茶叶罐'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'139.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/4356c9fc150753775fe56b465314f1eb.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3997185'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'与众不同的口感汝瓷白酒杯套组1壶4杯'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'108.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/8e21c794dfd3a4e8573273ddae50bce2.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3997403'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'手工吹制更厚实白酒杯壶套装6壶6杯'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'99.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/af2371a65f60bce152a61fc22745ff3f.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3998274'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'德国百年工艺高端水晶玻璃红酒杯2支装'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'139.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/8896b897b3ec6639bbd1134d66b9715c.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">// 1. 声明一个空串</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 2. 遍历数组</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token comment\">// 对象解构</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> name<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> item</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token comment\">// 拼接字符串</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      str <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>          &lt;div class=\"item\"></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>picture<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" alt=\"\"></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            &lt;p class=\"name\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            &lt;p class=\"price\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>price<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          &lt;/div></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      </span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token comment\">// 添加到盒子中</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> str</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><p>css</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">&lt;style></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    *</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token selector\">.list</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 990px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token selector\">.item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 240px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px 30px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all .5s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token selector\">.item:nth-child(4n)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token selector\">.item:hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0px 0px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate3d</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> -4px<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token selector\">.item img</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token selector\">.item .name</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #666<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token selector\">.item .price</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 22px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> firebrick<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token selector\">.item .price::before</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"¥\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  &lt;/style></pre></td></tr></table></figure><h2 id=\"综合案例价格筛选\"><a class=\"markdownIt-Anchor\" href=\"#综合案例价格筛选\">#</a> 综合案例 — 价格筛选</h2>\n<p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071647839.gif\" alt=\"test\"></p>\n<p>需要用到 filter 方法，先学习一下 filter 方法</p>\n<h3 id=\"筛选数组filter方法-重点\"><a class=\"markdownIt-Anchor\" href=\"#筛选数组filter方法-重点\">#</a> 筛选数组 filter 方法 (重点)</h3>\n<ul>\n<li>\n<p>filter () 筛选数组</p>\n</li>\n<li>\n<p>flter () 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素</p>\n</li>\n<li>\n<p><strong>主要使用场景</strong>：<font title=red>筛选数组符合条件的元素</font>，并返回筛选之后元素的新数组</p>\n</li>\n<li>\n<p><strong>返回值</strong>：返回数组，包含了符合条件的所有元素。如果没有符合条件的元素则返回空数组</p>\n</li>\n<li>\n<p><strong>参数</strong>：currentValue 必须写，index 可选</p>\n</li>\n<li>\n<p>因为返回新数组，所以不会影响原数组</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071604621.png\" alt=\"image-20230807160454114\"></p>\n<p><strong>基本语法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>被遍历的数组<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currentValue <span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">return</span> 筛选条件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>例如</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 使用 filter 过滤数组中不符合条件的元素 item 是元素，index 是索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 返回 大于 20 的元素 过滤后 返回一个 真数组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> item <span class=\"token operator\">></span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">//filter 中只能写 比较运算符其它无效</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// return item + 20</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>简写</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 使用 filter 过滤数组中不符合条件的元素 item 是元素，index 是索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <p>\n         <span>1. return 过滤条件只能使用 比较运算符 其它无效</span>\n      </p>\n      <p>\n         <span>2. 过滤返回的是 真数组</span>\n      </p>\n   </div>\n</blockquote>\n<h3 id=\"案例代码\"><a class=\"markdownIt-Anchor\" href=\"#案例代码\">#</a> 案例代码：</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token selector\">*</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token selector\">.list</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 990px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token selector\">.item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 240px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px 30px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all .5s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token selector\">.item:nth-child(4n)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token selector\">.item:hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0px 0px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate3d</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> -4px<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token selector\">.item img</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token selector\">.item .name</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #666<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token selector\">.item .price</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 22px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> firebrick<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token selector\">.item .price::before</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"¥\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token selector\">.filter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 990px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 50px 30px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token selector\">.filter a</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #666<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token selector\">.filter a:active,</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    .filter a:focus</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #05943c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0-100元<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>100-300元<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>300元以上<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>全部区间<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token comment\">&lt;!-- &lt;div class=\"item\"></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      &lt;img src=\"\" alt=\"\"></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      &lt;p class=\"name\">&lt;/p></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      &lt;p class=\"price\">&lt;/p></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    &lt;/div> --></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token comment\">// 2. 初始化数据</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">const</span> goodsList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001172'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'称心如意手摇咖啡磨豆机咖啡豆研磨机'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'289.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001594'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'日式黑陶功夫茶组双侧把茶具礼盒装'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'288.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/3346b7b92f9563c7a7e24c7ead883f18.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001009'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'竹制干泡茶盘正方形沥水茶台品茶盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'109.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/2d942d6bc94f1e230763e1a5a3b379e1.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001874'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'古法温酒汝瓷酒具套装白酒杯莲花温酒器'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'488.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/44e51622800e4fceb6bee8e616da85fd.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001649'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'大师监制龙泉青瓷茶叶罐'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'139.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/4356c9fc150753775fe56b465314f1eb.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3997185'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'与众不同的口感汝瓷白酒杯套组1壶4杯'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'108.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/8e21c794dfd3a4e8573273ddae50bce2.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3997403'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'手工吹制更厚实白酒杯壶套装6壶6杯'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'99.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/af2371a65f60bce152a61fc22745ff3f.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'3998274'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'德国百年工艺高端水晶玻璃红酒杯2支装'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">'139.00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/8896b897b3ec6639bbd1134d66b9715c.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.filter'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    filter<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      <span class=\"token comment\">// const id = ev.target.dataset.index</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>      <span class=\"token comment\">// 对象解构 对象名：对象解构</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> tagName<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">dataset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> index <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>      <span class=\"token comment\">// 将 goodsList 赋值给 arr 默认渲染全部的商品</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>      <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> goodsList</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>          arr <span class=\"token operator\">=</span> goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>          arr <span class=\"token operator\">=</span> goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">>=</span> <span class=\"token number\">100</span> <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">&lt;=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>          arr <span class=\"token operator\">=</span> goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">>=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token comment\">// 渲染函数</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token comment\">// 渲染函数 封装</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>      <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>      arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> name<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> picture <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> item</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        str <span class=\"token operator\">+=</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        &lt;div class=\"item\"></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>          &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>picture<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" alt=\"\"></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>          &lt;p class=\"name\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>          &lt;p class=\"price\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>price<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>        &lt;/div></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        </span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> str</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>goodsList<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"深入对象\"><a class=\"markdownIt-Anchor\" href=\"#深入对象\">#</a> 深入对象</h2>\n<p><strong>学习路径</strong>：</p>\n<ul>\n<li>创建对象三种方式</li>\n<li>构造函数</li>\n<li>实例成员 &amp; 静态成员</li>\n</ul>\n<h3 id=\"11-创建对象三种方式\"><a class=\"markdownIt-Anchor\" href=\"#11-创建对象三种方式\">#</a> 1.1 创建对象三种方式</h3>\n<p>目标：了解创建对象有三种方式</p>\n<h4 id=\"1-利用对象字面量创建对象\"><a class=\"markdownIt-Anchor\" href=\"#1-利用对象字面量创建对象\">#</a> 1 利用对象字面量创建对象</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"2-利用new-object-创建对象\"><a class=\"markdownIt-Anchor\" href=\"#2-利用new-object-创建对象\">#</a> 2 利用 new Object 创建对象</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token comment\">// &#123;name: ' 佩奇 '&#125;</span></pre></td></tr></table></figure><h3 id=\"12-构造函数\"><a class=\"markdownIt-Anchor\" href=\"#12-构造函数\">#</a> 1.2 构造函数</h3>\n<p><strong>利用构造函数创建对象  (自定义构造函数创建对象)</strong></p>\n<p>目标：能够利用构造函数创建对象</p>\n<blockquote>\n<ul>\n<li>构造函数：是一种<font>特殊</font>的函数，主要用来<font>初始化对象</font>。</li>\n<li>使用场景：常规的  <code>&#123;...&#125;</code>  语法允许创建一个对象。比如我们创建了佩奇的对象 ，继续创建乔治的对象还需要重新写一遍，此时可以通过<font title=red>构造函数</font>来<font title=red>快速创建多个类似的对象</font>。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071705310.png\" alt=\"image-20230807170529419\"></p>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span>构造函数在技术上是<font>常规函数</font></span>\n      </p>\n      <p>\n         <span>不过有两个<font title=red>约定</font>：</span>\n      </p>\n      <p>\n         <span>1. 它们的命名以<font title=red>大写字母开头</font></span>\n      </p>\n      <p>\n         <span>2. 它们只能由 \"<font>new</font>\" 操作符来执行</span>\n      </p>\n   </div>\n</blockquote>\n<ul>\n<li><strong>构造函数语法</strong>：大写字母开头的函数</li>\n</ul>\n<p><strong>创建构造函数</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//new 关键字调用 构造函数 传入实参赋值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//new Pig (参数列表)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//const Peppa 接收创建的对象</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> Peppa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">const</span> George <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'乔治'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> Mum <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'猪妈妈'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> Dad <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'猪爸爸'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Peppa<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>George<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Mum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Dad<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><mark>效果</mark>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071726698.png\" alt=\"image-20230807172651411\"></p>\n<blockquote alt=warn>\n\t<div>\n      <p>\n         <span>说明：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>使用 new 关键字调用函数的行为被称为<font title=red>实例化</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>实例化构造函数时没有参数时 可以省略 ()</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>构造函数内部无需写 return，返回值即为新创建的对象</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>构造函数内部的 return 返回的值<font title=red>无效</font>，所以不要写 return</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>new Object() new Date() 也是实例化构造函数</span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>构造函数的作用是什么？怎么写呢？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span>构造函数是来快速<font title=red>创建多个</font>类似的<font title=red>对象</font></span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n          <li>\n         \t<p>\n               <span>new 关键字调用函数的行为被称为？</span>\n            </p>\n             <ul>\n               <li>\n                  <p>\n                     <span>实例化</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n         <li>\n         \t<p>\n               <span>构造函数内部需要写 return 吗，返回值是什么？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span>不需要</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>构造函数自动返回创建的新的对象</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<h4 id=\"121-实例化执行过程\"><a class=\"markdownIt-Anchor\" href=\"#121-实例化执行过程\">#</a> 1.2.1 实例化执行过程</h4>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>说明</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>创建新对象</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>构造函数this指向新对象</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>执行构造函数代码，修改this，添加新的属性</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>返回新对象</span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 创建构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 2.new 关键字 调用函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//new Pig (' 佩奇 ')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 接收创建的对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> peppa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>peppa<span class=\"token punctuation\">)</span> <span class=\"token comment\">// &#123;name: ' 佩奇 '&#125;</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308071751121.png\" alt=\"image-20230807175138441\"></p>\n<h3 id=\"13-实例成员静态成员\"><a class=\"markdownIt-Anchor\" href=\"#13-实例成员静态成员\">#</a> 1.3 实例成员 &amp; 静态成员</h3>\n<h4 id=\"131-实例成员\"><a class=\"markdownIt-Anchor\" href=\"#131-实例成员\">#</a> 1.3.1 实例成员：</h4>\n<p>通过构造函数创建的对象称为实例对象，<font title=red>实例对象中</font>的<font title=red>属性和方法</font>称为<font title=red>实例成员</font> (实例属性和实例方法)</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 实例成员和静态成员</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 1. 实例成员：实例对象上的属性和方法属于实例成员</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> peppa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>peppa<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'小猪佩奇今年6岁'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> George <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pig</span><span class=\"token punctuation\">(</span><span class=\"token string\">'乔治'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>peppa<span class=\"token punctuation\">)</span><span class=\"token comment\">// Pig &#123;uname: ' 小猪佩奇今年 6 岁 '&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>George<span class=\"token punctuation\">)</span><span class=\"token comment\">// Pig &#123;uname: ' 乔治 '&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>peppa <span class=\"token operator\">===</span> George<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>说明</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>为构造函数传入参数，创建结构相同但值<font title=red>不同的对象</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>为构造函数创建的实例对象<font title=red>彼此独立</font>互不影响</span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<h4 id=\"132-静态成员\"><a class=\"markdownIt-Anchor\" href=\"#132-静态成员\">#</a> 1.3.2 静态成员</h4>\n<p><font title=red>构造函数</font>的属性和方法被称为<font title=red>静态成员</font> (静态属性和静态方法)</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname <span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token comment\">// 省略实例成员</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 静态属性</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Person<span class=\"token punctuation\">.</span>eyers <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Person<span class=\"token punctuation\">.</span>arms <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 静态方法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Person<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">walk</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^_^人都会走路...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token comment\">//this 指向 Person</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eyes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>说明</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>静态成员只能构造函数来访问</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>静态方法中的this指向构造函数</span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<p>比如  <code>Date.now()</code>   <code>Math.PI</code>   <code>Math.random()</code></p>\n<blockquote alt=success>\n\t<div>\n      <P>\n         <span><font>总结</font>：</span>\n      </P>\n      <ol>\n         <li>\n         \t<p>\n               <span>实例成员 (属性和方法) 写在谁身上？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span><font title=red>实例对象</font>的属性和方法即为实例成员</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>实例对象<font title=red>相互独立</font>，<font title=red>实例成员</font>当前实例对象使用</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n         <li>\n         \t<p>\n               <span>静态成员 (属性和方法) 写在谁身上？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span><font title=red>构造函数</font>的属性和方法被称为静态成员</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>静态成员只能构造函数访问</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<h2 id=\"内置构造函数\"><a class=\"markdownIt-Anchor\" href=\"#内置构造函数\">#</a> 内置构造函数</h2>\n<blockquote>\n<p>学习路径:</p>\n<ul>\n<li>Object</li>\n<li>Array</li>\n<li>String</li>\n<li>Number</li>\n</ul>\n</blockquote>\n<p>在 JavaScript 中<font title=red>最主要</font>的数据类型有 6 种：</p>\n<p><strong>基本数据类型</strong>：</p>\n<ul>\n<li>字符串，数值，布尔，undefined，null</li>\n</ul>\n<p><strong>引用类型</strong>：</p>\n<ul>\n<li>对象</li>\n</ul>\n<p><strong>但是我们会发现有些特殊情况</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 普通 字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'pink'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 普通 整数类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 12.00</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 实际上 js 底层完成的 把简单数据类型包装为了引用数据类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pink'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其实<mark>字符串</mark>，<mark>数值</mark>，<mark>布尔</mark>，等基本类型<mark>也有专门的构造函数</mark>，这些我们称为<mark>包装类型</mark>。</p>\n<p><span alt=wavy>JS 中几乎<mark>所有</mark>的数据都可以基于构成函数<mark>创建</mark></span>。</p>\n<h3 id=\"js提供的内置构造函数\"><a class=\"markdownIt-Anchor\" href=\"#js提供的内置构造函数\">#</a> JS 提供的内置构造函数</h3>\n<h4 id=\"引用类型\"><a class=\"markdownIt-Anchor\" href=\"#引用类型\">#</a> 引用类型</h4>\n<ul>\n<li>Object，Array，RegEp，Date 等</li>\n</ul>\n<h4 id=\"包装类型\"><a class=\"markdownIt-Anchor\" href=\"#包装类型\">#</a> 包装类型</h4>\n<ul>\n<li>String，Number，Boolean 等</li>\n</ul>\n<h3 id=\"1-object\"><a class=\"markdownIt-Anchor\" href=\"#1-object\">#</a> 1 Object</h3>\n<p>Object 是内置的构造 函数，用于<mark>创建普通对象</mark>。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 通过构造函数创建普通对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'小明'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>推荐使用<mark>字面量</mark>方式声明对象，而不是 Object 构造函数。</p>\n<p>学习三个常用静态方法 (静态方法就是<mark>只有构造函数 Object 可以调用</mark>的)</p>\n<p><strong>获取对象里面的属性和值怎么做</strong>？</p>\n<p><strong>以前的方法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 想要获取对象里面的属性和值怎么做？</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token comment\">// 属性 uname age</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 值 佩奇 6</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>新的方法</strong>。</p>\n<ul>\n<li>\n<p><strong>作用</strong>：Object.keys (obj) 静态方法获取对象中 <mark>所有属性名</mark> (键)</p>\n</li>\n<li>\n<p><strong>作用</strong>：Object.values (obj) 静态方法获取对象中 <mark>所有属性值</mark> (值)</p>\n</li>\n<li>\n<p><strong>作用</strong>：Object.assign (空对象，拷贝对象) 静态方法常用于<mark>对象拷贝</mark>.</p>\n<ul>\n<li>\n<p><strong>使用场景</strong>：给一个对象<mark>追加属性</mark>.</p>\n</li>\n<li>\n<p><strong>语法</strong> Object.assign：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//========== 对象的拷贝 ==========</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 将 obj 拷贝到 obj1 中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//========== 对象追加属性 ==========</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'女'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p><strong>语法</strong> Object.keys &amp; Object.values：</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'佩奇'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//keys 和 values 返回的是一个 真数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 获取对象的所有属性名</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// ['uname', 'age']</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 获取对象的所有属性值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// [' 佩奇 ', 6]</span></pre></td></tr></table></figure><blockquote alt=danger>\n\t<div>\n      <p>\n         <span><font title=red>注意</font>：返回的是一个 真数组</span>\n      </p>\n   </div>\n</blockquote>\n### 2 Array\n<p>Array 是内置的构造函数，用于<mark>创建数组</mark>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token comment\">// [3,5]</span></pre></td></tr></table></figure><p>创建数组建议使用<font title=red>字面量</font>创建，不用 Array 构造函数创建</p>\n<h6 id=\"1-数组常见实例方法核心方法\"><a class=\"markdownIt-Anchor\" href=\"#1-数组常见实例方法核心方法\">#</a> 1 数组常见<mark>实例方法</mark> — 核心方法</h6>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forEach</td>\n<td><font title=red>遍历</font>数组</td>\n<td>不返回数组，经常用于<font title=red>查找遍历数组元素</font></td>\n</tr>\n<tr>\n<td>filter</td>\n<td><font title=red>过滤</font>数组</td>\n<td><font title=red>返回新数组</font>，返回的是<font title=red>筛选满足条件</font>的数组元素</td>\n</tr>\n<tr>\n<td>map</td>\n<td><font title=red>迭代</font>数组</td>\n<td><font title=red>返回新数组</font>，返回的是<font title=red>处理之后</font>的数组元素，想要使用返回的新数组</td>\n</tr>\n<tr>\n<td>reduce</td>\n<td><font title=red>累计器</font></td>\n<td>返回累计处理的结果，经常用于<font title=red>求和</font>等</td>\n</tr>\n</tbody>\n</table>\n<p><strong>理解图</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308080914757.png\" alt=\"image-20230808091415006\"></p>\n<h4 id=\"reduce\"><a class=\"markdownIt-Anchor\" href=\"#reduce\">#</a> reduce</h4>\n<ul>\n<li><strong>作用</strong>：<mark>reduce</mark> 返回<font title=red>累计处理的结果</font>，经常用于<font title=red>求和等</font>.</li>\n<li><strong>基本语法</strong>：</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>起始值<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">上一次值，当前值</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>起始值<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>\n<p><strong>参数</strong>：</p>\n<p>1 如果<font title=red>有起始值</font>，则把初始值<mark>累加</mark>到里面</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//arr.reduce (function (上一次的值，当前的值) &#123; &#125;, 初始值) 有没有初始值 会影响到最后的计算结果</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 1. 没有初始值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> current</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 没有初始值 直接将数组的所有元素进行累加</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">没有初始值: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>total<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 14</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 2. 有初始值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> initTotal <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> current</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 有初始值 将数组所有元素进行累加并加上自己的初始值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">有初始值: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>initTotal<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 24</span></pre></td></tr></table></figure><p><strong>使用箭头函数写法</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//=============== 箭头函数 ==============</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> totalJ <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> current<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">箭头函数: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>totalJ<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 24</span></pre></td></tr></table></figure><blockquote alt=warn>\n\t<div>\n      <ul>\n         <li>\n         \t<p>\n               <span>reduce执行过程：</span>\n            </p>\n         </li>\n      </ul>\n      <ol>\n         <li>\n         \t<p>\n               <span>如果<font title=red>没有起始值</font>，则<font tite=red>上一次值以</font>数组的<font title=red>第一个数组元素的值</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>每一次循环，把<font title=red>返回值</font>给做为，下一次循环的<font title=red>上一次值</font></span>\n            </p>\n         </li>\n          <li>\n         \t<p>\n               <span>如果<font title=red>有起始值</font>，则 起始值做为<font title=red>上一次值</font></span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<p><strong>分析过程表</strong>：对比下面代码和表</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> current</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>上一次值</th>\n<th>当前值</th>\n<th>返回值</th>\n<th>(没有起始值的情况)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>5</td>\n<td>6</td>\n<td>第一次循环</td>\n</tr>\n<tr>\n<td>6</td>\n<td>8</td>\n<td>14</td>\n<td>第二次循环</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>上一次值</td>\n<td>当前值</td>\n<td>返回值</td>\n<td>(有起始值的情况 比方 10)</td>\n</tr>\n<tr>\n<td>----------</td>\n<td>------</td>\n<td>------</td>\n<td>------------------------</td>\n</tr>\n<tr>\n<td>起始值 (10)</td>\n<td>1</td>\n<td>11</td>\n<td>第一次循环</td>\n</tr>\n<tr>\n<td>11</td>\n<td>5</td>\n<td>16</td>\n<td>第二次循环</td>\n</tr>\n<tr>\n<td>16</td>\n<td>8</td>\n<td>24</td>\n<td>第三次循环</td>\n</tr>\n</tbody>\n</table>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>对数组中所有的元素进行累加计算 返回求和结果</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>有，没有起始值会影响到 最后的计算结果，起始值第一次循环在上一次值中进行运算</span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<h5 id=\"案例求员工的薪资\"><a class=\"markdownIt-Anchor\" href=\"#案例求员工的薪资\">#</a> 案例 — 求员工的薪资</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">uanme</span><span class=\"token operator\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">salary</span><span class=\"token operator\">:</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">uanme</span><span class=\"token operator\">:</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">salary</span><span class=\"token operator\">:</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">uanme</span><span class=\"token operator\">:</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">salary</span><span class=\"token operator\">:</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 解构 方式</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> salary<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">salary</span><span class=\"token operator\">:</span> salary1<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">salary</span><span class=\"token operator\">:</span> salary2 <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">const</span> number <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>salary<span class=\"token punctuation\">,</span> salary1<span class=\"token punctuation\">,</span> salary2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> number<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> current<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">总工资方式一：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>total<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 总工资方式一：3000</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 初始值 方式</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 上一次值 如果有 起始值 则为 起始值，当前值是一个对象 调用 salary 进行计算 0 + 10000</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//   _______________________________________.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// / 。。。    + ---- +         ___________...</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// + ---------| 计算过程 |---------___________ +</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// | 上一次值 | 当前值 | 结果   | ===========||</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// |    0    | 10000 | 10000  | 第一次计算 + |</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// |  10000  | 10000 | 20000  | 第二次计算 + |</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// |  20000  | 10000 | 30000  | 第三次计算 + |</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// +----------------------------------------+</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">const</span> total2 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> current<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">总工资方式二：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>total2<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 总工资方式二：30000</span></pre></td></tr></table></figure><hr>\n<h4 id=\"21-数组常见方法其它方法\"><a class=\"markdownIt-Anchor\" href=\"#21-数组常见方法其它方法\">#</a> 2.1 数组常见方法 — 其它方法</h4>\n<blockquote>\n<ol>\n<li>实例方法<mark> join</mark> 数组元素拼接为字符串，返回字符串 (重点)</li>\n<li>实例方法<mark> find</mark> 查找元素，返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回<mark> undefined</mark> (重点)</li>\n<li>实例方法<mark> every</mark> 检测数组所有元素是否都符合指定条件，如果<strong>所有元素</strong>都通过检测都返回 true，否则返回 false (重点)</li>\n<li>实例方法<mark> some</mark> 检测数组中的元素是否满足指定条件，<strong>如果数组中有</strong>元素满足条件返回 true，否则返回 false</li>\n<li>实例方法<mark> concat</mark> 合并两个数组，返回生成新数组</li>\n<li>实例方法<mark> sort</mark> 对原数组单元值排序</li>\n<li>实例方法<mark> splice</mark> 删除或替换原数组单元</li>\n<li>实例方法<mark> reverse</mark> 反转数组</li>\n<li>实例方法<mark> findIndex</mark> 查找元素的索引值</li>\n</ol>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308081135529.png\" alt=\"image-20230808113520614\"></p>\n<h5 id=\"1-find\"><a class=\"markdownIt-Anchor\" href=\"#1-find\">#</a> 1 find</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'小米'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">1999</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'华为'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">3999</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'小米'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 查找 uname 为小米的对象 并返回，注意：find 是找到后直接返回而不是遍历数组的全部对象</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 第二个小米不会输出 找到第一个小米后就直接返回了</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">const</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">===</span> <span class=\"token string\">'小米'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span><span class=\"token comment\">// &#123;uname: ' 小米 ', price: 1999&#125;</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <ul>\n         <li>\n         \t<p>\n               <span>查找数组中的某一个满足条件的元素并返回一个伪数组</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>查找时只要找到满足条件的直接返回 不会再继续进行查找 所以返回的是第一个满足条件的</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>如果找不到符合条件的 则返回 <font title=red>undefined</font></span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h5 id=\"2-every\"><a class=\"markdownIt-Anchor\" href=\"#2-every\">#</a> 2 every</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//every 检测数组所有元素是否都符合条件，都符合返回 true 其中一个不符合返回 false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> flag <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//---------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> flag <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token comment\">// false</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <ul>\n         <li>\n         \t<p>\n               <span>检测数组的所有元素，检测是否都满足条件</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>若全部都满足条件则返回true，若其中一个不满足则返回false</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h5 id=\"3-some\"><a class=\"markdownIt-Anchor\" href=\"#3-some\">#</a> 3 some</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//some 检测数组所有元素是否有其中一个符合条件，有 则返回 true, 都没有 (一个也没有) 则返回 false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> flag1 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag1<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr></table></figure><blockquote alt=info>\n\t<div>\n      <ul>\n         <li>\n         \t<p>\n               <span>检测数组中的所有元素，检测是否有其中一个满足条件</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>若其中一个满足条件则返回 true，若全都不满足条件则返回 false</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<hr>\n<h3 id=\"3-string\"><a class=\"markdownIt-Anchor\" href=\"#3-string\">#</a> 3 String</h3>\n<p>在 JavaScript 中的<mark>字符串</mark>，<mark>数值</mark>，<mark>布尔</mark>具有对象的使用特征，如具有属性和方法</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 字符串类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hellow world!'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 统计字符的长度 (字符数量)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 数值类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>coonst price <span class=\"token operator\">=</span> <span class=\"token number\">12.345</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 保留两位小数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>price<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>之所以具有对象特征的原因是字符串，数值，布尔类型数据是 JavaScript 底层使用 Object 构造函数 “包装” 来的，被称为 <font title=red>包装类型</font>.</p>\n<h5 id=\"string-常见实例方法\"><a class=\"markdownIt-Anchor\" href=\"#string-常见实例方法\">#</a> String 常见实例方法</h5>\n<blockquote>\n<ol>\n<li>实例属性 == <code>length</code> == 用来获取字符串的长度 (重点)</li>\n<li>实例方法 == <code>split('分隔符')</code> == 用来以特定的规则将字符串拆分成数组 (重点)</li>\n<li>实例方法 == <code>substring(需要截取的第一个字符的索引[，结束的索引号])</code> == 用于字符串截取 (重点)</li>\n<li>实例方法 == <code>startsWith(检测字符串[，检测位置索引号])</code> == 检测是否以某字符开头 (重点)</li>\n<li>实例方法 == <code>includes(搜索的字符串[，检测位置索引号])</code> == 判断一个字符串是否包含在另一个字符串中，根据情况返回 布尔值 (重点)</li>\n<li>实例方法 == <code>toUppreCase(str)</code> == 用于将字母转换成大写</li>\n<li>实例方法 == <code>toLowerCase(str)</code> == 用于将字母转换成小写</li>\n<li>实例方法 == <code>indexOf(str)</code> == 获取某个字符的下标号</li>\n<li>实例方法 == <code>endWith</code> == 检测是否以某字符结尾</li>\n<li>实例方法 == <code>replace</code> == 用于替换字符串，支持正则匹配</li>\n<li>实例方法 == <code>math</code> == 用于查找字符串，支持正则匹配</li>\n</ol>\n</blockquote>\n<h6 id=\"1-split\"><a class=\"markdownIt-Anchor\" href=\"#1-split\">#</a> 1 split</h6>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'pink,red,green'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//split 使用特定的方式对数组进行切割并返回一个切割后的数组，split 返回一个 真数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//['pink', 'red', 'green']</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">'2023-07-08'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//['2023', '07', '08']</span></pre></td></tr></table></figure><h6 id=\"2-substring\"><a class=\"markdownIt-Anchor\" href=\"#2-substring\">#</a> 2 substring</h6>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 字符串截取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'wecomtonewyourk!!!'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 从字符串下标 7 开始 到最后 没有指定结束位置默认为直到该字符串的最后</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// newyourk</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 包头不包尾</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// ne</span></pre></td></tr></table></figure><h6 id=\"3-startswith\"><a class=\"markdownIt-Anchor\" href=\"#3-startswith\">#</a> 3 startsWith</h6>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'wecomtonewyourk!!!'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 上面字符串是以 w 开头的，第二个参数不写默认以开头开始判断</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 从下标 2 的位置开始</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comto'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr></table></figure><h6 id=\"4-incudes\"><a class=\"markdownIt-Anchor\" href=\"#4-incudes\">#</a> 4 incudes</h6>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'wecomtonewyourk!!!'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 判断上面字符串中是否包含 your 字符串</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'your'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 第二个参数是指定从索引 12 开始但是 12 超过了 y 了所以就不包含 your 了</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'your'</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// false</span></pre></td></tr></table></figure><h4 id=\"练习显示赠品练习\"><a class=\"markdownIt-Anchor\" href=\"#练习显示赠品练习\">#</a> 练习 — 显示赠品练习</h4>\n<p>请将下面字符串渲染到准备好的 p 标签内部，结构必须如坐下图所示，展示效果如右图所示：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> gift <span class=\"token operator\">=</span> <span class=\"token string\">'50g茶叶，清洗球'</span></pre></td></tr></table></figure><blockquote>\n<p>思路：</p>\n<ol>\n<li>把字符串拆分为数组，这样两个赠品就拆分开了 用哪个方法？  <code>split('')</code></li>\n<li>利用<mark> map</mark> 遍历数组，同时把数组元素生成到 span 里面，并且返回</li>\n<li>因为返回的是数组，所以需要 转换为 字符串，用哪个方法？ <code> join</code></li>\n</ol>\n</blockquote>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> gift <span class=\"token operator\">=</span> <span class=\"token string\">'50g的茶叶,清洗球'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 以，将数组进行分割，map 遍历 split 返回的数组并进行处理返回新的数组 再使用 join 将数组的内容以特定形式进行拼接</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> gift<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &lt;span>赠品:【</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">】&lt;/span>&lt;br></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 将内容添加到 div 中</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> str</pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308081642453.png\" alt=\"image-20230808164254967\"></p>\n<h3 id=\"4-number\"><a class=\"markdownIt-Anchor\" href=\"#4-number\">#</a> 4 Number</h3>\n<p>Number 是<mark>内置</mark>的<mark>构造函数</mark>，用于<mark>创建数值</mark>.</p>\n<blockquote>\n<p><font>常用方法</font>：</p>\n<p>toFixed () 设置保留小数位的长度</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 数值类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> <span class=\"token number\">12.345</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 保留两位小数 四舍五入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 12.35</span></pre></td></tr></table></figure><h3 id=\"购物车展示案例️\"><a class=\"markdownIt-Anchor\" href=\"#购物车展示案例️\">#</a> 购物车展示案例⭐️</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">*</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      box<span class=\"token operator\">-</span>sizing<span class=\"token operator\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">.</span>list <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 990px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 100px auto <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> all <span class=\"token punctuation\">.</span>5s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      border<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 1px solid #e4e4e4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">.</span>item<span class=\"token operator\">:</span>nth<span class=\"token operator\">-</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">4n</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">.</span>item<span class=\"token operator\">:</span>hover <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f5f5f5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">.</span>item img <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 80px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 80px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      margin<span class=\"token operator\">-</span>right<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      margin<span class=\"token operator\">-</span>right<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #<span class=\"token number\">333</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token literal-property property\">flex</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">.</span>tag <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 12px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #<span class=\"token number\">999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>sub<span class=\"token operator\">-</span>total <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> firebrick<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token literal-property property\">flex</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>price<span class=\"token operator\">:</span><span class=\"token operator\">:</span>before<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>sub<span class=\"token operator\">-</span>total<span class=\"token operator\">:</span><span class=\"token operator\">:</span>before<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">.</span>amount<span class=\"token operator\">:</span><span class=\"token operator\">:</span>before <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"¥\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 12px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>spec <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token literal-property property\">flex</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #<span class=\"token number\">888</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 14px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">.</span>count <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token literal-property property\">flex</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #aaa<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">.</span>total <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 990px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      border<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 1px solid #e4e4e4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">.</span>total <span class=\"token punctuation\">.</span>amount <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> firebrick<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      font<span class=\"token operator\">-</span>weight<span class=\"token operator\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      margin<span class=\"token operator\">-</span>right<span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span>称心如意手摇咖啡磨豆机咖啡豆研磨机 <span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"tag\"</span><span class=\"token operator\">></span>【赠品】<span class=\"token number\">10</span>优惠券<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"spec\"</span><span class=\"token operator\">></span>白色<span class=\"token operator\">/</span><span class=\"token number\">10</span>寸<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"price\"</span><span class=\"token operator\">></span><span class=\"token number\">289.90</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"count\"</span><span class=\"token operator\">></span>x2<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"sub-total\"</span><span class=\"token operator\">></span><span class=\"token number\">579.80</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span> <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"total\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>合计：<span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"amount\"</span><span class=\"token operator\">></span><span class=\"token number\">1000.00</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">const</span> goodsList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001172'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'称心如意手摇咖啡磨豆机咖啡豆研磨机'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">289.9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'白色'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001009'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'竹制干泡茶盘正方形沥水茶台品茶盘'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">109.8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/2d942d6bc94f1e230763e1a5a3b379e1.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token string\">'40cm*40cm'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'黑色'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001874'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'古法温酒汝瓷酒具套装白酒杯莲花温酒器'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">488</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/44e51622800e4fceb6bee8e616da85fd.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'青色'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">sum</span><span class=\"token operator\">:</span> <span class=\"token string\">'一大四小'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'4001649'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'大师监制龙泉青瓷茶叶罐'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">139</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://yanxuan-item.nosdn.127.net/4356c9fc150753775fe56b465314f1eb.png'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token string\">'小号'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'紫色'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token literal-property property\">gift</span><span class=\"token operator\">:</span> <span class=\"token string\">'50g茶叶,清洗球'</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t <span class=\"token comment\">//map 遍历返回处理后的数据</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>      <span class=\"token comment\">// 对象解构</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span> name<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> picture<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> gift<span class=\"token punctuation\">,</span> spec <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> item</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>      <span class=\"token comment\">// 获取 spec 对象 所有属性值并以 / 拼接</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>      <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>spec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>      <span class=\"token comment\">// 求出一个商品的总价</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>      <span class=\"token keyword\">let</span> subTotal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>price  <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> count<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>      <span class=\"token comment\">// 处理赠品模块</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>      <span class=\"token comment\">// 三目运算符判断是否存在 gift 如果不存在则 gift 为 undefined 执行 '' 如果存在执行前面的操作</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>      <span class=\"token comment\">//gift 内容以，分割 返回数组 用 map 遍历 处理数据后 返回数组 并 join 拼接为 字符串</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>      <span class=\"token keyword\">const</span>  str <span class=\"token operator\">=</span> gift <span class=\"token operator\">?</span> gift<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;span class=\"tag\">【赠品】</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>item<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>      <span class=\"token comment\">// 返回所有数据都处理后的结果</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>            &lt;div class=\"item\"></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>              &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>picture<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\" alt=\"\"></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>              &lt;p class=\"name\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>str<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>              &lt;p class=\"spec\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>text<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> &lt;/p></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>              &lt;p class=\"price\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>price<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>              &lt;p class=\"count\">x</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>count<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>              &lt;p class=\"sub-total\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>subTotal<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            &lt;/div></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>          </span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 拼接为字符串</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token comment\">// 合计模块</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.amount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> goodsList<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span>current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> current<span class=\"token punctuation\">.</span>count <span class=\"token operator\">*</span> current<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308090901457.png\" alt=\"image-20230809090121616\"></p>\n<h2 id=\"练习-完成以下需求\"><a class=\"markdownIt-Anchor\" href=\"#练习-完成以下需求\">#</a> 练习 - 完成以下需求</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> spec <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token string\">'40cm*40cm'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'黑色'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>请将 size 和 color 里面的值拼接为字符串之后，写道 div 标签里面，展示内容如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308081400848.png\" alt=\"image-20230808140020322\"></p>\n<blockquote>\n<p><font>思路</font>：获得所有的属性值，然后拼接字符串就可以了</p>\n<ol>\n<li>获得所有属性值是： <code>Object.values(arr)</code>  返回的是 真数组</li>\n<li>拼接数组是  <code>join('/')</code>  这样就可以转换为字符串了</li>\n</ol>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token string\">'40*40'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'黑色'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 获取 div 元素对象，Object.values 获取对象所有的属性值返回一个真数组，使用 join 进行拼接以 '/' 来拼接 最后 innerHTML 到 div 元素内容中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight less\"><figcaption data-lang=\"less\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">-webkit-tab-heiglight-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 370px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> sticky<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 125px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 36px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px #ccc solid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"伪数组转换为真数组\"><a class=\"markdownIt-Anchor\" href=\"#伪数组转换为真数组\">#</a> 伪数组转换为真数组</h2>\n<blockquote>\n<p>伪数组<mark>盘点</mark>：</p>\n<ol>\n<li>querySelectorAll () 获取所有的子元素对象</li>\n<li>getElements 带 s 的都是伪数组</li>\n<li>children 获得所有子元素节点</li>\n<li>arguments 动态参数</li>\n<li>find 查找满足条件的第一个元素并返回一个伪数组</li>\n</ol>\n<p>统统可以使用 静态方法： Array.from (伪数组) 来进行转换为 真数组</p>\n</blockquote>\n<p>静态方法 Array.from ()</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取 ul 中所有的 li 返回一个伪数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> lis <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul li'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//lis.pop () 伪数组不能使用函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 将伪数组转换为真数组</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> newLis <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 可以使用 pop 函数 移动并返回 数组最后一个元素</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> val <span class=\"token operator\">=</span> newLis<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newLis<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "web",
                "js"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/web/js/JS%E8%BF%9B%E9%98%B6/JS%E8%BF%9B%E9%98%B6-%E6%B7%B1%E5%85%A5%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/web/js/JS%E8%BF%9B%E9%98%B6/JS%E8%BF%9B%E9%98%B6-%E6%B7%B1%E5%85%A5%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "title": "JS进阶-深入面向对象",
            "date_published": "2024-04-02T10:00:51.729Z",
            "content_html": "<h2 id=\"深入面向对象\"><a class=\"markdownIt-Anchor\" href=\"#深入面向对象\">#</a> 深入面向对象</h2>\n<h3 id=\"1-编程思想\"><a class=\"markdownIt-Anchor\" href=\"#1-编程思想\">#</a> 1 编程思想</h3>\n<ul>\n<li>面向过程</li>\n<li>面向对象</li>\n</ul>\n<h4 id=\"11-面向过程\"><a class=\"markdownIt-Anchor\" href=\"#11-面向过程\">#</a> 1.1 面向过程</h4>\n<p>目标：从生活例子了解什么是面向过程</p>\n<blockquote>\n<ul>\n<li><font title=red>面向过程</font>：就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用就可以了。</li>\n<li><font>举个栗子</font>：蛋炒饭</li>\n</ul>\n<ol>\n<li>蒸米饭</li>\n<li>炒鸡蛋</li>\n<li>放点，胡萝卜丁，洋葱，香肠，红椒</li>\n<li>最后将它们依次调用 就得出了 香喷喷的 <mark>蛋炒饭</mark>.</li>\n</ol>\n<p><font>面向过程</font>，就是按照我们分析好了的步骤，按照步骤解决问题。</p>\n</blockquote>\n<hr>\n<h4 id=\"12-面向对象-oop\"><a class=\"markdownIt-Anchor\" href=\"#12-面向对象-oop\">#</a> 1.2 面向对象 (oop)</h4>\n<p>目标：从生活例子了解什么是面向对象编程</p>\n<blockquote>\n<ul>\n<li><font title=red>面向对象</font>：是把事务分解成为一个个对象，然后由对象之间分工合作。</li>\n<li><font>举个栗子</font>：盖浇饭</li>\n</ul>\n<ol>\n<li>下面的配菜都提前准备好了然后直接调用就好了</li>\n</ol>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308090914759.png\" alt=\"image-20230809091454087\"></p>\n<blockquote>\n<ul>\n<li>在面向对象程序开发思想中，每一个对象都是功能中心，具有明确分工。</li>\n<li>面向对象编程具有灵活，代码可复用，容易维护和开发的优点，更适合多人合作的大型软件项目。</li>\n<li><font>面向对象的特性</font>：\n<ul>\n<li>封装性</li>\n<li>继承性</li>\n<li>多态性</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308090925578.png\" alt=\"image-20230809092546938\"></p>\n<p><strong>继承</strong>：继承自拖拉机，实现了扫地的接口</p>\n<p><strong>封装</strong>：无需知道如何运作，开动即可</p>\n<p><strong>动态</strong>：平时扫地，天热当风扇</p>\n<p><strong>重用</strong>：没用额外动力，重复利用了发动机能量</p>\n<p><strong>多线程</strong>：多个扫把同时工作</p>\n<p><strong>低耦合</strong>：扫把可以换成拖把而无须改动</p>\n<p><strong>组件编程</strong>：每个配件都是可单独利用的工具</p>\n<p><strong>适配器模式</strong>：无需造发动机，继承自拖拉机，只取动力方法</p>\n<p><strong>代码托管</strong>：无需管理垃圾，直接扫到路边即可</p>\n<hr>\n<h4 id=\"13-面向过程面向对象-对比\"><a class=\"markdownIt-Anchor\" href=\"#13-面向过程面向对象-对比\">#</a> 1.3 面向过程 &amp; 面向对象 对比</h4>\n<h5 id=\"131-面向过程编程\"><a class=\"markdownIt-Anchor\" href=\"#131-面向过程编程\">#</a> 1.3.1 面向过程编程</h5>\n<p><strong>优点</strong>：</p>\n<p>性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程面呈。</p>\n<p><strong>缺点</strong>：</p>\n<p>没有面向对象易维护，易复用，易扩展</p>\n<h5 id=\"132-面向对象编程-oop\"><a class=\"markdownIt-Anchor\" href=\"#132-面向对象编程-oop\">#</a> 1.3.2 面向对象编程 (oop)</h5>\n<p><strong>优点</strong>：</p>\n<p>易维护，易复用，易扩展，由于面向对象有封装，继承，多态的特性，可以设计出低耦合的系统，使系统 更加灵活，更加易于维护</p>\n<p><strong>缺点</strong>：</p>\n<p>性能比面向过程低</p>\n<hr>\n<h3 id=\"2-构造函数\"><a class=\"markdownIt-Anchor\" href=\"#2-构造函数\">#</a> 2 构造函数</h3>\n<blockquote>\n<ul>\n<li>封装是面向对象思想中比较重要的一部分，JS 面向对象可以通过<mark>构造函数实现的封装</mark>。</li>\n<li>同样的将变量和函数组合到了一起并通过<mark> this 实现数据的共享</mark>，所不同的是借助<mark>构造函数创建出来的实例对象之间是彼此不影响</mark>的</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname <span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我会唱歌'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 实例对象，获得了构造函数中封装的所有逻辑</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token string\">'刘德华'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> zxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张学友'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh <span class=\"token operator\">===</span> zxy<span class=\"token punctuation\">)</span><span class=\"token comment\">// false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">.</span>sing <span class=\"token operator\">===</span> zxy<span class=\"token punctuation\">.</span>sing<span class=\"token punctuation\">)</span><span class=\"token comment\">// false</span></pre></td></tr></table></figure><blockquote alt=danger>\n\t<div>\n      <p>\n         <span><font title=red>注意</font>：</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>封装是面向对象思想中比较重要的一部分，JS面向对象可以通过<span alt=solid>构造函数实现的封装</span></span>\n            </p>\n         </li>\n          <li>\n         \t<p>\n               <span><span alt=wavy>前面我们学过的构造函数方法很好用</span>，但是<font title=red>存在浪费内存的问题</font></span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091000680.png\" alt=\"image-20230809100029870\"></p>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>构造函数体现了面向对象的<span alt=solid>封装特性</span></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span><span alt=wavy>构造函数实例创建的对象彼此独立，互不影响</span></span>\n            </p>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span>我们希望<span alt=solid>所有的对象使用同一个函数，这样就比较节省内存</span>，那么我们要怎么做呢？</span>\n      </p>\n      <p>\n         <span>我们就需要用到<font title=red>原型了</font> 下面学习原型</span>\n      </p>\n   </div>\n</blockquote>\n<h3 id=\"3-原型\"><a class=\"markdownIt-Anchor\" href=\"#3-原型\">#</a> 3 原型</h3>\n<blockquote alt=info>\n\t<div>\n      <p>\n         <span><font>学习路径</font>：</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>原型</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>constructor属性</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>对象原型</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>原型继承</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>原型链</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h4 id=\"31-原型prototype\"><a class=\"markdownIt-Anchor\" href=\"#31-原型prototype\">#</a> 3.1 原型 (prototype)</h4>\n<p>目标：能够利用<mark>原型对象</mark> 实现 <mark>方法 共享</mark>.</p>\n<blockquote>\n<ul>\n<li>构造函数通过<mark>原型分配的函数</mark>是所有对象所<font title=red>共享的</font>。</li>\n<li>JavaScript 规定，<font title=red>每一个构造函数都有一个 prototype 属性</font>，指向另一个对象，所以我们也称为<font title=red>原型对象</font>.</li>\n<li>这个对象可以<font title=red>挂载函数</font>，对象实例化不会多次创建<span alt=solid>原型</span>上函数，<span alt=wavy>节约内存</span>.</li>\n<li><mark>我们可以把那些不变的方法，直接定义在 prototype 对象上<sup>不要直接写在构造函数中</sup>，这样所有对象的实例就可以共享这些方法</mark>。</li>\n<li><mark>构造函数和原型对象中的 this 都指向 实例化的对象</mark>。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091028554.png\" alt=\"image-20230809102822018\"></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1. 公共的属性写到 构造函数里面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 构造函数实例对象都是独立的彼此互不影响但是 多个对象就会有多个不同地址的函数 浪费内存</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 不建议将函数写在构造函数中</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// this.sing = function () &#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">//     console.log (' 唱歌 ')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 2. 公共的函数写到 原型对象 身上</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'唱歌'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token string\">'刘德华'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> zxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张学友'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 唱歌</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>zxy<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 唱歌</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">.</span>sing <span class=\"token operator\">===</span> zxy<span class=\"token punctuation\">.</span>sing<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091032780.png\" alt=\"image-20230809103215391\"></p>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>公共的属性写到，构造函数里面</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>公共的函数写到 原型对象 身上</span>\n            </p>\n         </li>\n      </ul>\n      <hr>\n      <ol>\n         <li>\n         \t<p>\n               <span>原型是什么？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span>一个对象，我们也称为<font>prototype</font>为<font>原型对象</font></span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n         <li>\n         \t<p>\n               <span>原型的作用是什么？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span>共享方法</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>可以把那些<font>不变的方法</font>，直接定义在<font>prototype</font>对象上</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n          <li>\n         \t<p>\n               <span>构造函数和原型里面的this指向谁？</span>\n            </p>\n              <ul>\n               <li>\n                  <p>\n                     <span><font title=red>实例化的对象</font></span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n<blockquote>\n<p>两句话：</p>\n<ol>\n<li>所有的对象里面都有 <code>__proto__</code> 对象原型 指向原型 <code>prototype</code>  对象\n<ul>\n<li><code>__proto__.constructor</code>  指向构造函数</li>\n</ul>\n</li>\n<li>所有的原型对象 <code>(prototype)</code>  里面都有 <code>constructor</code> ，指向 创建该原型对象的构造函数</li>\n</ol>\n</blockquote>\n<h4 id=\"311-原型this指向\"><a class=\"markdownIt-Anchor\" href=\"#311-原型this指向\">#</a> 3.1.1 原型 —this 指向</h4>\n<p>目标：能够说出构造函数和原型对象中的 this 指向</p>\n<blockquote>\n<p><mark>构造函数</mark>和<mark>原型对象</mark>中的<mark> this</mark> 都<mark>指向</mark>，<mark>实例化的对象</mark>.</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> that</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uname<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 构造函数里面的 this 就是 实例对象 ldh</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// console.log(this)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uanem <span class=\"token operator\">=</span> uname</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">let</span> that1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 原型对象里面的函数 this 指向的还是 实例对象 ldh</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    that1 <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'会唱歌'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 实例对象 ldh</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token string\">'刘德华'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 判断两个 对象是否是同一个 对象</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>that <span class=\"token operator\">===</span> ldh<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>that1 <span class=\"token operator\">===</span> ldh<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></pre></td></tr></table></figure><blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>构造函数和原型里面的this指向谁？</span>\n            </p>\n         </li>\n      </ol>\n      <ul>\n         <li>\n         \t<p>\n               <span>实例化的对象</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h4 id=\"312-数组扩展案例求最大值和数组求和\"><a class=\"markdownIt-Anchor\" href=\"#312-数组扩展案例求最大值和数组求和\">#</a> 3.1.2 数组扩展案例 — 求最大值和数组求和</h4>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 自己定义 数组扩展方法  求和 和 最大值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 1. 我们定义的这个方法， 任何一个数组实例对象都可以使用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 2. 自定义的方法写到 数组.prototype 身上</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 最大值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 数组实例.prototype 原型.max 返回最大值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">max</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 原型函数里面的 this 指向 实例对象 arr 并 展开 this</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 求和函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 原型函数里面的 this 指向 实例对象 arr</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> current<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 6</span></pre></td></tr></table></figure><hr>\n<h4 id=\"32-constructor属性\"><a class=\"markdownIt-Anchor\" href=\"#32-constructor属性\">#</a> 3.2 constructor 属性</h4>\n<p><strong>在哪里</strong>？每个<mark>原型对象</mark>里面都有个 <code>constructor</code>  属性 ( <code>constructor</code>  构造函数)</p>\n<p><strong>作用</strong>：该属性<font title=red>指向</font>该<mark>原型对象</mark>的<font title=red>构造函数，简单理解，就是指向我的爸爸，我是有爸爸的孩子</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091118245.png\" alt=\"image-20230809111807683\"></p>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 只要是原型对象里面默认都有一个 constructor 属性并且指向 Star</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token comment\">//constructor : ƒ Star()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 判断原型里面的构造函数属性是否与 Star 构造函数是相同的</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Star<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr></table></figure><p><strong>使用场景</strong>：</p>\n<blockquote>\n<p>如果有<mark>多个方法的对象</mark>，我们可以给<mark>原型对象采取对象形式赋值</mark>。</p>\n<p>但是这样就<mark>会覆盖构造函数原型对象原来的内容</mark>，这样修改后的 原型对象  <code>constructor</code>  就<mark>不再指向当前构造函数了</mark>此时，我们可以在<mark>修改后的原型对象中</mark>，<mark>添加一个  <code>constructor</code>  指向原来的构造函数</mark>。</p>\n</blockquote>\n<p><strong>以下两种方式的区别</strong>：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>sing <span class=\"token operator\">=</span> function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//-----------------------------------</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sing<span class=\"token operator\">:</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token char\">'唱'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 这么写 比较麻烦</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 追加的不会覆盖原型中的 constructor 属性的指向</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'唱'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">dance</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">warp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'warp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">qiu</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'篮球'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">dance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">warp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">qiu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091133419.png\" alt=\"image-20230809113309022\"></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 赋值的会覆盖原型中原有的 constructor 属性指向</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 这种方式属于是将一个新的对象赋值给了 prototype 不再是之前的也不知道是谁的 this 了</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function-variable function\">sing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'唱'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function-variable function\">dance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function-variable function\">warp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'warp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function-variable function\">qiu</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'篮球'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">dance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">warp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">qiu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091134190.png\" alt=\"image-20230809113434852\"></p>\n<h4 id=\"321-重新指回创建原型对象的构造函数\"><a class=\"markdownIt-Anchor\" href=\"#321-重新指回创建原型对象的构造函数\">#</a> 3.2.1 重新指回创建原型对象的构造函数</h4>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 赋值的会覆盖原型中原有的 constructor 属性指向</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 重新指回创造这个原型对象的 构造函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">constructor</span><span class=\"token operator\">:</span> Star<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function-variable function\">sing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'唱'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function-variable function\">dance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function-variable function\">warp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'warp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function-variable function\">qiu</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'篮球'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">dance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">warp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ldh<span class=\"token punctuation\">.</span><span class=\"token function\">qiu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091141707.png\" alt=\"image-20230809114108545\"></p>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结</font>：</span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>constructor属性的作用是什么？</span>\n            </p>\n         </li>\n      </ol>\n      <ul>\n         <li>\n         \t<p>\n               <span><span alt=wavy>指向该原型对象的构造函数</span></span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<h4 id=\"33-对象原型\"><a class=\"markdownIt-Anchor\" href=\"#33-对象原型\">#</a> 3.3 对象原型</h4>\n<blockquote>\n<p>思考：</p>\n<p><mark>构造函数</mark>可以创建<mark>实例对象</mark>，构造函数还<mark>有一个</mark><mark>原型对象</mark>，<mark>一些公共的属性</mark>或者<mark>方法放到</mark>这个<mark>原型对象身上</mark>，但是 <mark>为啥实例对象可以访问原型对象里面的属性和方法呢</mark>？</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091147172.png\" alt=\"image-20230809114739934\"></p>\n<blockquote alt=info>\n\t<div>\n      <p>\n        <span><font>对象原型</font>：</span> \n      </p>\n      <p>\n         <span><font title=red>对象都会有一个属性</font> <font>__proto__</font> 指向构造函数的 <font>prototype</font> 原型对象，之所以我们对象可以使用构造函数<font>prototype</font>原型对象的属性和方法，就是因为对象有<font>__proto__</font>原型的存在。对象里面的原型所以叫对象原型</span>\n      </p>\n   </div>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091153140.png\" alt=\"image-20230809115311930\"></p>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 打印实例化对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091315944.png\" alt=\"image-20230809131512463\"></p>\n<p>打印中，其中 [[Prototype]] 就是  <code>__proto__</code>  看如下解释：</p>\n<blockquote alt=danger>\n\t<div>\n      <p>\n         <span><font title=red>注意：</font></span>\n      </p>\n      <ul>\n         <li>\n         \t<p>\n               <span>__proto__ 是JS非标准属性，所以有些浏览器不是显示的 __proto__ </span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>[[prototype]] 和 __proto__ 意义相同，但是我们写的时候必须写 __proto__</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span><span alt=solid>用来表明当前实例对象 指向哪个原型对象 prototype</span></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>__proto__ 对象原型里面也有一个<font>constructor</font>属性，<font title=red>指向创建该实例对象的构造函数</font></span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>__proto__ 是只读的，不能修改！！！</span>\n            </p>\n         </li>\n         <li>\n         \t<p>\n               <span>对象原型 (_proto_) 指向原型对象 prototype</span>\n            </p>\n         </li>\n      </ul>\n   </div>\n</blockquote>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 实例化对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 对象原型__proto__指向 构造函数的原型对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Star</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 对象原型里面有 constructor 指向 构造函数 Star 又指回来了！</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">.</span><span class=\"token class-name\">__proto__</span><span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Star<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr></table></figure><p>爸爸指向哥哥，哥哥的 constructor 指向爸爸，弟弟指向哥哥，弟弟的 constructor 指向爸爸。爸爸指向弟弟</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091333285.png\" alt=\"image-20230809133342890\"></p>\n<blockquote alt=success>\n\t<div>\n      <p>\n         <span><font>总结：</font></span>\n      </p>\n      <ol>\n         <li>\n         \t<p>\n               <span>prototype 是什么？哪里来的？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span>原型(原型对象)</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>构造函数都自动有原型</span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n         <li>\n         \t<p>\n               <span>constructor属性在哪里？作用干啥的？</span>\n            </p>\n            <ul>\n               <li>\n                  <p>\n                     <span><font title=red>prototype原型对象</font>和<font title=red>对象原型__proto__</font>里面都有</span>\n                  </p>\n               </li>\n               <li>\n                  <p>\n                     <span>都<font title=red>指向</font>创建实例对象 / 原型的<font title=red>构造函数</font></span>\n                  </p>\n               </li>\n            </ul>\n         </li>\n         <li>\n         \t<p>\n               <span>__proto__ 属性在哪里？ 指向谁？</span>\n            </p>\n            <ul>\n            <li>\n            \t<p>\n                  <span>在实例对象里面</span>\n               </p>\n            </li>\n            <li>\n            \t<p>\n                  <span>指向原型 prototype</span>\n               </p>\n            </li>\n         </ul>\n         </li>\n      </ol>\n   </div>\n</blockquote>\n#### 3.4 原型继承\n<p><mark>继承</mark>是<mark>面向对象编程的另一个特征</mark>，通过继承<mark>进一步提升代码封装的程度</mark>，JavaScript 中大多是<mark>借助原型对象实现继承的特性</mark>。</p>\n<blockquote>\n<p>龙生龙，凤生凤，老鼠的儿子会打洞 描述的正是继承的含义。</p>\n</blockquote>\n<p><strong>我们来看个代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>legs <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">say</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">eat</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> pink <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>legs <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">say</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">eat</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">baby</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> red <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"1-font-titlered封装font抽取公共部分\"><a class=\"markdownIt-Anchor\" href=\"#1-font-titlered封装font抽取公共部分\">#</a> 1 <font title=red>封装</font>— 抽取公共部分</h5>\n<p>把男人和女人公共的部分抽取出来放到人类里面</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 人类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">eyes</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">head</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 男人</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 女人</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">baby</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"2-问题原因\"><a class=\"markdownIt-Anchor\" href=\"#2-问题原因\">#</a> 2 问题 —— 原因</h5>\n<p>将 构造函数.prototype.constructor 重新指回自己</p>\n<p><strong>代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 对象 公共属性或方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">eyes</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">head</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 女人构造函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 原型对象继承 Person 对象 公共属性或方法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Person</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 指向自己构造函数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Woman</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 向女人 中 追加一个 baby 的 特有函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">baby</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小宝宝'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 男人构造函数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 原型对象继承 Person 对象 公共属性或方法</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token class-name\">Man</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Person</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 指向自己构造函数</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token class-name\">Man</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Man</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091707485.png\" alt=\"image-20230809170720906\"></p>\n<p><strong>结果</strong>：</p>\n<p><span alt=solid>注意，这里面的两个不同实例对象的 constructor 指向同一个实例方法</span>.</p>\n<p><img src=\"./JS%E8%BF%9B%E9%98%B6.assets/image-20230809161325679.png\" alt=\"image-20230809161325679\"></p>\n<p>男人和女人<mark>同时使用了同一个对象</mark>，根据<mark>引用类型的特点</mark>，<mark>它们指向同一个对象</mark>，<mark>修改一个就会都影响</mark>。</p>\n<p><img src=\"./JS%E8%BF%9B%E9%98%B6.assets/image-20230809163744490.png\" alt=\"image-20230809163744490\"></p>\n<p><img src=\"./JS%E8%BF%9B%E9%98%B6.assets/image-20230809163754261.png\" alt=\"image-20230809163754261\"></p>\n<blockquote>\n<p><font>解决方式</font>：</p>\n<ol>\n<li>既然使用对象抽取公共属性的话，很多个实例都要使用而一个修改 prototype 就是全部修改，因为对象是引用数据类型</li>\n<li>那么就换成<span alt=solid>构造函数</span>，构造函数 每个实例要使用都需要 new 一下构造函数这样每个实例的 prototype 都是不同的，这样修改就不会影响其它的了。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 对象 公共属性或方法 不要使用对象 因为对象都引用了同一个内容一个修改会影响其它的</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// const Person = &#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//     eyes: 1,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//     head: 2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 使用构造函数 抽取公共的属性或方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 构造函数 new 出来的对象 结构一样 但是对象不一样</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 女人构造函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 原型对象继承 Person 对象 公共属性或方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 指向自己构造函数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Woman</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 向女人 中 追加一个 baby 的 特有函数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token class-name\">Woman</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">baby</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小宝宝'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 男人构造函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 原型对象继承 Person 对象 公共属性或方法</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token class-name\">Man</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// 指向自己构造函数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token class-name\">Man</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Man</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Man</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091705280.png\" alt=\"image-20230809165135788\"></p>\n<h4 id=\"35-原型链\"><a class=\"markdownIt-Anchor\" href=\"#35-原型链\">#</a> 3.5 原型链</h4>\n<p>基于<mark>原型对象的继承使得不同构造函数的原型对象关联在一起</mark>，并且这种<mark>关联的关系是一种链状的结构</mark>，我们将原型对象的链状结构关系称为<mark>原型链</mark>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 实例对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 判断实例对象的__proto__ 是否与 Person.prototype 相同 实例对象__prto__是指向 Person.prototype 的</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//__proto__：对象原型 指向 原型对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 原型对象 里面有一个 对象原型 指向的还是一个 原型对象，那么指向的是谁的 原型对象呢？</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 判断原型对象的对象原型是否指向 Object 的原型对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 因为 Person.prototype 是自定义函数 往上走就是 Object 没有其它的了 Object 指向 Object.prototype</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// Object 的构造函数 指向 Object.prototype 而 Object.prototype.constructor 指向 它自己的构造函数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// Object 的 prototype.__proto__ 指向上一层但是上一层就没有了 所以为 null</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token comment\">// null</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091800621.png\" alt=\"image-20230809180028175\"></p>\n<ul>\n<li>\n<p><span alt=wavy>只要是个对象就有 <code>__proto__</code>  </span>.</p>\n</li>\n<li>\n<p><span alt=wavy>只要是原型对象里面就有 <code>constructor</code>  </span>.</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091739595.png\" alt=\"image-20230809173938143\"></p>\n<h5 id=\"351-原型链查找规则\"><a class=\"markdownIt-Anchor\" href=\"#351-原型链查找规则\">#</a> 3.5.1 原型链 — 查找规则</h5>\n<ol>\n<li>当访问一个对象的属性 (包括方法) 时 ， 首先查找这个<font title=red>对象自身</font>有没有该属性。</li>\n<li>如果没有就查找它的原型 (也就是 <code>__proto__</code> 指向的<font title=red>prototype 原型对象</font>)</li>\n<li>如果还没有就查找原型对象 的原型 (<font title=red>Object 的原型对象</font>)</li>\n<li>依此类推一直找到 Object 为止 (null)</li>\n<li><code>__proto__</code> 对象原型的<mark>意义</mark>就在于<mark>为对象成员查找机制提供一个方向，或者一条路线</mark>.</li>\n<li>可以使用 <code>instanceof</code>  运算符用于检测构造函数的 <code>prototype</code>  属性<mark>是否出现在某个实例对象的原型链上</mark>.</li>\n</ol>\n<p><strong>instanceof 演示</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 实例对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> ldh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ldh <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//false ldh 是一个对象它不属于数组</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//true [] 数组类型属于数组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Array <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 万物皆对象</span></pre></td></tr></table></figure><h3 id=\"综合案例模态框封装\"><a class=\"markdownIt-Anchor\" href=\"#综合案例模态框封装\">#</a> 综合案例 — 模态框封装</h3>\n<p>目的：练习<font title=red>面向对象</font> 写插件 (模态框)</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091833091.png\" alt=\"image-20230809183332615\"></p>\n<p><strong>分析需求</strong>：</p>\n<ol>\n<li>多个模态框一样的，而且每次点击都会出来一个，怎么做呢？\n<ul>\n<li><font title=red>构造函数</font>。把模态框封装一个<font title=red>构造函数 Modal</font>，每次 new 都会产出一个模态框，所以点击不同的按钮就是在做<font title=red>new 模态框</font>，实例化。</li>\n</ul>\n</li>\n<li>模态框有什么功能呢？打开功能 (显示)，关闭功能，而且每个模态框都包含着 2 个功能\n<ul>\n<li>open 功能 (打开)</li>\n<li>close 功能 (关闭)</li>\n</ul>\n</li>\n</ol>\n<p><strong>问</strong>：open 和 close 方法，写到哪里？</p>\n<p><span alt=solid>构造函数 Modal 的<font title=red>原型对象上</font>，共享方法</span>.</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>面向对象封装消息提示<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token selector\">.modal</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 10px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 999<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate3d</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token selector\">.modal .header</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token selector\">.modal .header i</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token selector\">.modal .body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token selector\">.modal .footer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token selector\">.modal .footer a</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 3px 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token selector\">.modal .footer a.submit</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #369<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>delete<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>删除<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token comment\">&lt;!-- &lt;div class=\"modal\"></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    &lt;div class=\"header\"> 温馨提示 &lt;i>x&lt;/i>&lt;/div></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    &lt;div class=\"body\"> 您没有删除权限操作 & lt;/div></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  &lt;/div> --></span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./js/模态框.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1.Modal 构造函数封装 — 模态框</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Modal</span><span class=\"token punctuation\">(</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'加载中...'</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 创建 Modal 模态框盒子</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 1.1 创建 div 标签</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 1.2 给 div 标签添加类名为 modal</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'modal'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 1.3 modal 盒子内部填充 2 个 div 标签并且修改文字内容</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    &lt;div class=\"header\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>title<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> &lt;i>x&lt;/i>&lt;/div></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &lt;div class=\"body\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> &lt;/div></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 2. 给构造函数原型对象 挂载 open 方法</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">Modal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">open</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 先来判断页面中是否有 modal 盒子，如果有先删除，否则继续添加，防止重复打开同一个窗口</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">const</span> modal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.modal'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    modal <span class=\"token operator\">&amp;&amp;</span> modal<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 注意这个方法不要用箭头函数 因为还需要用到 this</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 把刚才创建的 modalBox 显示到页面 body 中</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 要等着盒子显示出来，就可以绑定点击事件了 (关闭窗口事件)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 这个地方需要用到箭头函数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 这个 this 指向 实例对象 箭头函数 沿用作用域链上一层找 this 就是 function 函数 Modal 了</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// 3. 给构造函数原型对象挂载 close 方法 </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token class-name\">Modal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">close</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 将当前元素从 DOM 树中删除</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalBox<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// 点击 删除按钮</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#delete'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">const</span> del <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Modal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'温馨提示'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'您没有权限删除操作'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    del<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 点击 登录按钮</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Modal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'友情提示'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'您没有注册呢 ?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308091936673.gif\" alt=\"test\"></p>\n<h2 id=\"深浅拷贝\"><a class=\"markdownIt-Anchor\" href=\"#深浅拷贝\">#</a> 深浅拷贝</h2>\n<ul>\n<li>\n<p>浅拷贝</p>\n</li>\n<li>\n<p>深拷贝</p>\n</li>\n</ul>\n<h3 id=\"1-浅拷贝\"><a class=\"markdownIt-Anchor\" href=\"#1-浅拷贝\">#</a> 1 浅拷贝</h3>\n<p>首先浅拷贝和深拷贝只针对引用类型</p>\n<p><strong>浅拷贝</strong>：拷贝的是地址</p>\n<p><strong>常见方法</strong>：</p>\n<ol>\n<li><strong>拷贝对象</strong>：Object.assgin () / 展开运算符 <code>&#123;…Obj&#125;</code>   拷贝对象</li>\n<li>拷贝数组：Array.prototype.concat () 或者 <code>[…arr]</code></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">baby</span><span class=\"token operator\">:</span> <span class=\"token string\">'小Pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 浅拷贝</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span>obj<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 基本数据类型拷贝的是值，引用类型拷贝的是地址值 一个修改影响全部</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token comment\">// &#123;uname: 'pink', age: 18&#125;  family: &#123;baby: ' 老 pink', age: 3&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>o<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>o<span class=\"token punctuation\">.</span>family<span class=\"token punctuation\">.</span>baby <span class=\"token operator\">=</span> <span class=\"token string\">'老pink'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token comment\">// &#123;uname: 'pink', age: 20&#125; family: &#123;baby: ' 老 pink', age: 3&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token comment\">// &#123;uname: 'pink', age: 18&#125; family: &#123;baby: ' 老 pink', age: 3&#125;</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308092037020.png\" alt=\"image-20230809203736792\"></p>\n<blockquote>\n<p>如果是简单数据类型拷贝<mark>值</mark>，引用数据类型拷贝的是<mark>地址</mark> (简单理解：如果是<mark>单层对象，没问题</mark>，如果有<mark>多层就有问题</mark>)</p>\n</blockquote>\n<blockquote>\n<p><font>总结</font>：</p>\n<ol>\n<li>直接赋值和浅拷贝有什么区别？\n<ul>\n<li>直接赋值的方法，只要是对象，都会互相影响，因为是直接拷贝对象栈里面的地址</li>\n<li>浅拷贝如果是一层对象，不互相影响，如果出现多层对象拷贝还是会互相影响</li>\n</ul>\n</li>\n<li>浅拷贝怎么理解？\n<ul>\n<li>拷贝对象之后，里面的属性值是简单数据类型直接拷贝值</li>\n<li>如果属性值是引用数据类型则拷贝的是地址值</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"2-深拷贝\"><a class=\"markdownIt-Anchor\" href=\"#2-深拷贝\">#</a> 2 深拷贝</h3>\n<p>首先浅拷贝和深拷贝只针对引用类型</p>\n<p><strong>深拷贝</strong>：拷贝的是<mark>对象</mark>，<mark>不是地址</mark>.</p>\n<blockquote>\n<p><font>常见方法</font>：</p>\n<ol>\n<li>通过递归实现深拷贝</li>\n<li>lodash / cloneDeep</li>\n<li>通过 JSON.stringify () 实现</li>\n</ol>\n</blockquote>\n<p><strong>常见方法</strong>：</p>\n<h4 id=\"1-通过递归实现深拷贝\"><a class=\"markdownIt-Anchor\" href=\"#1-通过递归实现深拷贝\">#</a> 1 通过递归实现深拷贝</h4>\n<h5 id=\"递归介绍\"><a class=\"markdownIt-Anchor\" href=\"#递归介绍\">#</a> 递归介绍</h5>\n<blockquote>\n<p><font>函数递归</font>：</p>\n<p><span alt=solid>如果一个函数在内部可以调用其本身，那么这个函数就是递归函数</span>.</p>\n<ul>\n<li>简单理解：函数内部自己调自己，这个函数就是递归函数</li>\n<li>递归函数的作用和循环效果类似</li>\n<li>由于递归很容易发生 “栈溢出” 错误 (stack ooverflow)，所以 <font title=red>必须要加退出条件 return</font>。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308092047083.png\" alt=\"image-20230809204658767\"></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">调用第</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">次</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308092053955.png\" alt=\"image-20230809205327608\"></p>\n<p><strong>函数递归</strong></p>\n<p>利用递归函数实现 setTimeout 模拟 setInterval 效果</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./js/模拟定时器.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"11-通过递归实现深拷贝-精简版\"><a class=\"markdownIt-Anchor\" href=\"#11-通过递归实现深拷贝-精简版\">#</a> 1.1 通过递归实现深拷贝 (精简版)</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newObj <span class=\"token punctuation\">,</span> oldObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> oldObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     \t\tnewObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>             </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newObj <span class=\"token punctuation\">,</span> oldObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> oldObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newObj <span class=\"token punctuation\">,</span> oldObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> oldObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newObj <span class=\"token punctuation\">,</span> oldObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> oldObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>综合代码</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">famiyl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'老pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">hobby</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'唱'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'跳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wrap'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 拷贝函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newObj<span class=\"token punctuation\">,</span> oldObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> oldObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 处理数组的拷贝问题</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 判断属性值是否为数组类型的</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 万物皆对象，先筛选数组 再 对象 </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 新数组中传入属性名 默认赋值类型为数组</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 递归调用自己传入 属性名 ， 属性值 传入函数中</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 千万不要将对象的判断写在前面因为数组也是对象它会将数组当对象处理</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token comment\">//k : uname , age | oldOb[k] 'pink' , 18</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">//newObj [k] 等价于 o.uname , o.age</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            newObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldObj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// 调用函数 传入实参 两个对象  新对象  旧对象</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">// 功能： 将旧对象的属性名属性值 拷贝到 新对象中</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// 基本数据类型修改后不会影响到另一个对象</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>o<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>o<span class=\"token punctuation\">.</span>famiyl<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'老老老pink'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>o<span class=\"token punctuation\">.</span>hobby<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'练习两年半'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101029120.png\" alt=\"image-20230810095909996\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101029744.png\" alt=\"image-20230810102915988\"></p>\n<h4 id=\"2-js库lodash里面clonedeep内部实现了深拷贝-常用️\"><a class=\"markdownIt-Anchor\" href=\"#2-js库lodash里面clonedeep内部实现了深拷贝-常用️\">#</a> 2 js 库 lodash 里面 cloneDeep 内部实现了深拷贝 (常用)⭐️</h4>\n<p><strong>使用步骤</strong>：</p>\n<ol>\n<li>\n<p>引入 lodash.min.js 文件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"./js/lodash.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n<li>\n<p>开始调用 lodash 里面的函数进行使用</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'老pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'唱'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'跳'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'篮球'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 调用函数进行深拷贝</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>o<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'小pink'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>o<span class=\"token punctuation\">.</span>family<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'老老老老pink'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>o<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'鸡哥'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101113200.png\" alt=\"image-20230810111311696\"></p>\n<h4 id=\"3-使用json的方式实现深拷贝\"><a class=\"markdownIt-Anchor\" href=\"#3-使用json的方式实现深拷贝\">#</a> 3 使用 JSON 的方式实现深拷贝</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">hobby</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'唱歌'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'跳舞'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">family</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'老pink'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 把对象转换为 JSON 字符串</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 再将转换为字符串的 JSON 数据解析为 对象 此时它们的 地址 和 引用的地址都不同了</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>o<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'小pink'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>o<span class=\"token punctuation\">.</span>hobby<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'ikun'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>o<span class=\"token punctuation\">.</span>family<span class=\"token punctuation\">.</span>uname <span class=\"token operator\">=</span> <span class=\"token string\">'老老老pink'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>图解</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101118380.png\" alt=\"image-20230810111855025\"></p>\n<p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101119177.png\" alt=\"image-20230810111918889\"></p>\n<blockquote>\n<p><span alt=solid>总结</span>：</p>\n<ol>\n<li>实现深拷贝三种方式？\n<ul>\n<li>自己利用递归函数书写深拷贝</li>\n<li>利用 js 库 lodash 里面的 <code>_.cloneDeep()</code></li>\n<li>利用 JSON 字符串转换</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"异常处理\"><a class=\"markdownIt-Anchor\" href=\"#异常处理\">#</a> 异常处理</h2>\n<ul>\n<li>throw 抛异常</li>\n<li>try /catch 捕获异常</li>\n<li>debugger</li>\n</ul>\n<p>了解 JavaScript 中程序异常处理的方法，提升代码运行的健壮性。</p>\n<h3 id=\"1-throw-抛异常\"><a class=\"markdownIt-Anchor\" href=\"#1-throw-抛异常\">#</a> 1 throw 抛异常</h3>\n<p>异常处理是指预估代码执行过程中<mark>可能发生的错误</mark>，然后最大程度的<mark>避免错误的发生导致整个程序无法继续运行</mark>。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>x <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//throw ' 参数不能为空'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数不能为空'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101129281.png\" alt=\"image-20230810112858201\"></p>\n<blockquote>\n<p><span alt=solid>总结</span>：</p>\n<ol>\n<li>throw 抛出异常信息，<mark>程序也会终止执行</mark>.</li>\n<li>throw 后面跟的是<mark>错误提示信息</mark>.</li>\n<li>Error 对象，配合 throw 使用，能够设置<mark>更详细的错误信息</mark>.</li>\n</ol>\n<hr>\n<ol>\n<li>抛出异常我们用哪个关键字？它会终止程序吗？\n<ul>\n<li>throw 关键字</li>\n<li><font title=red>会终止程序</font>.</li>\n</ul>\n</li>\n<li>抛出异常经常和谁配合使用？\n<ul>\n<li>Error 对象，配合 throw 使用</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<hr>\n<h3 id=\"2-try-catch-捕获错误信息\"><a class=\"markdownIt-Anchor\" href=\"#2-try-catch-捕获错误信息\">#</a> 2 try /catch 捕获错误信息</h3>\n<p>我们可以通过 <code>try/catch</code> <mark> 捕获错误信息</mark> (<mark>浏览器提供</mark>的错误信息) <span alt=dotted>try 试试</span>   <span alt=dotted>catch 拦住</span>    <span alt=dotted>finally 最后</span>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"../js/try/catch捕获异常.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 可能发生错误的代码 放到 try 中 试试</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        p<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 捕获可能发生的异常</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//catch 参数列表中 随意写一个变量名称 它是由浏览器提供的错误信息</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 调用错误信息的属性 message</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 抛出异常后会终止后面的代码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择器 获取不到指定的标签'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 上面抛出了异常程序终止下面的打印不会执行</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">//finally 无论是否发生异常 都会执行代码块</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world !'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101153181.png\" alt=\"image-20230810115318837\"></p>\n<blockquote>\n<p><span alt=\"solid\">总结</span>:</p>\n<ol>\n<li><code>try...catch</code>  用于捕获错误信息</li>\n<li>将预估可能发生错误的代码写在 <code>try</code>  代码块中</li>\n<li>如果 <code>try</code>  代码块中出现错误后，会执行 <code>catch</code>  代码块，并拦截到错误信息</li>\n<li><code>finally </code> 不管是否有错误，都会执行</li>\n</ol>\n<hr>\n<ol>\n<li>捕获异常我们用哪 3 个关键字？可能会出现的错误代码写到谁里面\n<ul>\n<li><code>try catch finally</code></li>\n<li><code>try</code></li>\n</ul>\n</li>\n<li>怎么调用错误信息？\n<ul>\n<li>利用 <code>catch</code>  的参数</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"3-debugger\"><a class=\"markdownIt-Anchor\" href=\"#3-debugger\">#</a> 3 debugger</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 可能发生错误的代码 放到 try 中 试试</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        p<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 捕获可能发生的异常</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//catch 参数列表中 随意写一个变量名称 它是由浏览器提供的错误信息</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 抛出异常后会终止后面的代码</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 相当于打了个断点</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">debugger</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 调用错误信息的属性 message</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择器 获取不到指定的标签'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 上面抛出了异常程序终止下面的打印不会执行</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//finally 无论是否发生异常 都会执行代码块</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world !'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101313189.png\" alt=\"image-20230810131346686\"></p>\n<h2 id=\"处理this\"><a class=\"markdownIt-Anchor\" href=\"#处理this\">#</a> 处理 this</h2>\n<ul>\n<li>this 指向</li>\n<li>改变 this</li>\n</ul>\n<p>this 是 JavaScript 最具 “魅惑” 的知识点，不同的应用场合 this 的取值可能会与意想不到的结果，在此我们对以往学习过的关于 [this 默认的取值] 情况进行归纳和总结。</p>\n<p>目标：了解函数中 this 在不同场景下的默认值，知道动态指定函数 this 值的方法</p>\n<p><strong>学习路径</strong>：</p>\n<ol>\n<li>普通函数 this 指向</li>\n<li>箭头函数 this 指向</li>\n</ol>\n<h3 id=\"1-this-指向普通函数\"><a class=\"markdownIt-Anchor\" href=\"#1-this-指向普通函数\">#</a> 1 this 指向 — 普通函数</h3>\n<p>目标：能说出普通函数的 this 指向</p>\n<p>普通函数的调用方式决定了 this 的值，即 [谁调用 this 的值指向谁]</p>\n<h4 id=\"普通函数\"><a class=\"markdownIt-Anchor\" href=\"#普通函数\">#</a> 普通函数</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 普通函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 函数表达式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sayHello</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 函数的调用方式决定了 this 的值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 普通对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'小明'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token function-variable function\">walk</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// user</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 动态为 user 添加方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>user<span class=\"token punctuation\">.</span>sayHi <span class=\"token operator\">=</span> sayHi <span class=\"token comment\">// user</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>user<span class=\"token punctuation\">.</span>sayHello <span class=\"token operator\">=</span> sayHello <span class=\"token comment\">// user</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 函数调用方式，决定了 this 的值</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// user</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>user<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// user</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token string\">'use strict'</span> <span class=\"token comment\">// 开启严格模式 下面的函数中获取 this 就是 undefined 了</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><p><span alt=solid>普通函数没有明确调用者时 this 值为 window，严格模式下没有调用者时 this 的值为 undefined</span>.</p>\n<blockquote>\n<p>总结：</p>\n<ol>\n<li>普通函数 this 指向我们怎么记忆？\n<ul>\n<li>[谁调用 this 的值指向谁]</li>\n</ul>\n</li>\n<li>普通函数严格模式下指向谁？\n<ul>\n<li>严格模式下指向  <code>undefined</code></li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"11-this-指向箭头函数\"><a class=\"markdownIt-Anchor\" href=\"#11-this-指向箭头函数\">#</a> 1.1 this 指向 — 箭头函数</h3>\n<p>目标：能说出箭头函数的 this 指向</p>\n<blockquote>\n<p>箭头函数中的 this 与普通函数完全不同，也不受调用方式的影响，事实上<span alt=solid>箭头函数中并不存在 this!</span></p>\n<ol>\n<li>箭头函数会默认帮我们绑定外层 this 的值，所以在箭头函数中 this 的值和外层的 this 是一样的</li>\n<li>箭头函数中的 this 引用的就是最近作用域中的 this</li>\n<li>向外层作用域中，一层一层查找 this ， 直到有 this 的定义</li>\n</ol>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window.sayHi()</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 到了 user 的作用域中 而 user 是 window 调用的</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function-variable function\">walk</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 从上一层作用域开始找</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>user<span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"注意情况1\"><a class=\"markdownIt-Anchor\" href=\"#注意情况1\">#</a> 注意情况 1：</h4>\n<p>在开发中 [使用箭头函数前需要考虑函数中 this 的值] ，事件回调函数使用箭头函数时，this 为全局的 window 因此 DOM 事件回调函数<mark>如果里面需要</mark> DOM 对象的 this，<span alt=solid>则不推荐使用箭头函数</span>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取元素对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 箭头函数此时 this 指向了 window</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 普通函数 此时 this 指向了 DOM 对象 button</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// button</span></pre></td></tr></table></figure><h4 id=\"注意情况2\"><a class=\"markdownIt-Anchor\" href=\"#注意情况2\">#</a> 注意情况 2：</h4>\n<p>同样由于箭头函数 this 的原因，基于原型的面向对象也<mark>不推荐采用箭头函数</mark>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 原型对象上 添加了 箭头函数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">walk</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> man <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>man<span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><span alt=solid>总结</span>：</p>\n<ol>\n<li>函数内不存在 this ，沿用上一级的\n<ul>\n<li>过程：向外层作用域中，一层一层查找 this ，直到有 this 的定义为止</li>\n</ul>\n</li>\n<li><font>不适用</font>.\n<ul>\n<li><mark>构造函数</mark>，<mark>原型函数</mark>，<mark>dom 事件函数</mark>等等</li>\n</ul>\n</li>\n<li><font>适用</font>.\n<ul>\n<li>需要使用<mark>上层 this</mark> 的地方</li>\n</ul>\n</li>\n<li><span alt=wavy>使用正确的话，它会在很多地方带来方便，后面我们会大量使用慢慢体会</span>.</li>\n</ol>\n</blockquote>\n<h3 id=\"2-改变this\"><a class=\"markdownIt-Anchor\" href=\"#2-改变this\">#</a> 2 改变 this</h3>\n<p>JavaScript 中还允许指定函数中 this 的指向，有 3 个方法可以动态指定普通函数中 this 的指向</p>\n<ol>\n<li><code>call()</code></li>\n<li><code>apply()</code></li>\n<li><code>bind()</code></li>\n</ol>\n<h4 id=\"1-call了解\"><a class=\"markdownIt-Anchor\" href=\"#1-call了解\">#</a> 1 call ()— 了解</h4>\n<p>使用 call 方法调用函数，同时指定被调用函数中 this 的值</p>\n<h6 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\">#</a> 语法：</h6>\n<p><code>fun.call(thisArg,arg1,arg2,...)</code></p>\n<ul>\n<li><code>thisArg</code> ：在 fun 函数运行时指定的 this 值</li>\n<li><code>arg2,arg2</code> ：传递的其它参数</li>\n</ul>\n<p><span alt=solid>返回值就是函数的返回值，因为它就是调用函数</span>.</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">uname</span><span class=\"token operator\">:</span> <span class=\"token string\">'ikun'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 逻辑中断 默认赋值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    x <span class=\"token operator\">=</span> x <span class=\"token operator\">|</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    y <span class=\"token operator\">=</span> y <span class=\"token operator\">|</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// obj</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 1. 调用函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 1.2 可以传递实参</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 2. 改变 this 指向</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101414250.png\" alt=\"image-20230810141447040\"></p>\n<h4 id=\"2-apply理解\"><a class=\"markdownIt-Anchor\" href=\"#2-apply理解\">#</a> 2 apply ()— 理解</h4>\n<p>使用 apply 方法调用函数，同时指定被调用函数中 this 的值</p>\n<h6 id=\"语法-2\"><a class=\"markdownIt-Anchor\" href=\"#语法-2\">#</a> 语法：</h6>\n<p><code>fun.apply(thisArg,[argsArray])</code></p>\n<ul>\n<li><code>thisArg</code> ：在 fun 函数运行时指定的 this 值</li>\n<li><code>argsArray</code> ：传递的值，必须包含在 <mark>数组</mark> 里面</li>\n</ul>\n<p><span alt=solid>返回值就是函数的返回值，因为它就是调用函数</span>.</p>\n<p>因此 apply 主要<mark>跟数组有关系</mark>，比如使用  <code>Math.max()</code>  求数组的最大值</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// obj</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 1. 调用函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 2. 改变 this 指向</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 3. 返回值，本身就是在调用函数，所以返回值就是函数返回值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101427538.png\" alt=\"image-20230810142707106\"></p>\n<blockquote>\n<p>思考：</p>\n<ol>\n<li>call 和 apply 的区别是？\n<ul>\n<li>都是调用函数，都能改变 this 指向</li>\n<li>参数不一样，apply 传递的必须是数组，但是形参接收写法和变量一样</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"3-bind重点\"><a class=\"markdownIt-Anchor\" href=\"#3-bind重点\">#</a> 3 bind ()— 重点</h4>\n<p>bind () 方法不会调用函数。但是能改变函数内部 this 指向</p>\n<h6 id=\"语法-3\"><a class=\"markdownIt-Anchor\" href=\"#语法-3\">#</a> 语法：</h6>\n<p><code>fun.bind(thisArg,arg1,arg2,...)</code></p>\n<ul>\n<li><code>thisArg</code> ：在 fun 函数运行时指定的 this 值</li>\n<li><code>arg1,arg2</code> ：传递的其它参</li>\n<li>返回由指定的 this 值和初始化参数改造的 <mark>原函数拷贝 (新函数)</mark>.</li>\n<li>因此当我们只是想改变 this 指向，并且不想调用这个函数的时候，可以使用 bind ，比如改变定时器内部的 this 指向。</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// window</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 1.bind 不会调用函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 2. 能改变 this 指向</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 3. 返回值是个函数，但是这个函数里面的 this 是更改过的</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// obj</span></pre></td></tr></table></figure><h5 id=\"定时器点击按钮后2秒恢复\"><a class=\"markdownIt-Anchor\" href=\"#定时器点击按钮后2秒恢复\">#</a> 定时器 — 点击按钮后 2 秒恢复</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 需求，有一个按钮 点击里面就禁用，2 秒之后就开启</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 禁用元素</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 定时器里面也可以改为使用箭头函数 因为箭头函数 this 沿用上一层就是 button 对象的 this</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//window.button.disabled = false 无效</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 在这个函数里面，我们要由原来的 window 改为 button</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 打印查看 定时器内部函数的 this 跟 单击事件里面的 this 是否相同 单击事件的 this 是 buttn 按钮对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> that<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">//bind (this) 里面的 this 就是单击事件函数中的 this 也就是 button 对象</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><span alt=solid>call,apply,bind 总结</span>：</p>\n<ul>\n<li>相同点：\n<ul>\n<li>都可以改变函数内部 this 的指向。</li>\n</ul>\n</li>\n<li>区别点：\n<ul>\n<li>call 和 apply 会调用函数，并且改变函数内部 this 的指向</li>\n<li>call 和 apply 传递的参数不一样 call 传递参数 <code>arg1,arg2,...</code>  形式 apply 必须数组形式传递 <code>[arg1,arg2,...]</code></li>\n<li><span alt=solid>bind 不会调用函数，可以改变函数内部 this 的指向</span>.</li>\n</ul>\n</li>\n<li>主要应用场景：\n<ul>\n<li>call 调用函数并且可以传递参数</li>\n<li>apply 经常跟数组有关系，比如借助于数学对象实现数组最大值最小值</li>\n<li><span alt=solid>bind 不调用函数，但是还会改变 this 指向，比如改变定时器内部的 this 指向</span>。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"防抖-debounce\"><a class=\"markdownIt-Anchor\" href=\"#防抖-debounce\">#</a> 防抖 (debounce)</h2>\n<p><strong>防抖</strong>：单位时间内，频繁触发事件，<font title=red>只执行最后一次</font>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101532326.png\" alt=\"image-20230810153242050\"></p>\n<p><strong>举个栗子</strong>：<span alt=solid>王者荣耀回城</span>，只要被打断就需要重新来</p>\n<p>廉颇残血了 想要 回家补补血，这时鲁班突然冒出来打了 廉颇一下，廉颇的回城施法被打断了，生气的廉颇就需要重新点一下回城，重新等待 3 秒的 施法时间。</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101534660.png\" alt=\"image-20230810153426277\"></p>\n<p><strong>使用场景</strong>：</p>\n<ul>\n<li><mark>搜索框搜索输入</mark>。只需用户<mark>最后</mark>一次输入完，再发送请求</li>\n<li>手机号，邮箱验证 <mark>输入检测</mark>。</li>\n</ul>\n<h3 id=\"案例利用防抖来处理鼠标滑过盒子显示文字1\"><a class=\"markdownIt-Anchor\" href=\"#案例利用防抖来处理鼠标滑过盒子显示文字1\">#</a> 案例 — 利用防抖来处理 — 鼠标滑过盒子显示文字 + 1</h3>\n<p><strong>要求</strong>：鼠标再盒子上移动，里面的数字就会变化 + 1</p>\n<h4 id=\"1-使用-loadsh库来实现-防抖\"><a class=\"markdownIt-Anchor\" href=\"#1-使用-loadsh库来实现-防抖\">#</a> 1 使用 loadsh 库来实现 防抖</h4>\n<p>1. 引入 lodash 库的 js 文件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span>box <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      text<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"./js/lodash.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><p>2. 编写 js 代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 利用防抖实现性能优化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 需求：鼠标在盒子上移动，里面的数字就会 + 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 鼠标移动函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">mouseMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      box<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">// 如果里面存在大量消耗性能的代码，比如 dom 操作，比如数据处理，可能造成卡顿</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 添加鼠标移动监听事件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// box.addEventListener('mousemove', mouseMove)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 利用 lodash 库实现防抖 —500 毫秒之后才 + 1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 语法：_.debounce (fun, 时间)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>mouseMove<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101602532.gif\" alt=\"test\"></p>\n<h3 id=\"2-手写防抖函数\"><a class=\"markdownIt-Anchor\" href=\"#2-手写防抖函数\">#</a> 2 手写防抖函数</h3>\n<p><strong>核心思路</strong>：</p>\n<p>防抖的核心就是利用定时器 (setTimeout) 来实现</p>\n<ol>\n<li>声明一个定时器 <mark>变量</mark>。</li>\n<li>当鼠标每次滑动都先判断 <mark>是否有定时器</mark>了，如果有定时器先 <mark>清除以前</mark>的定时器</li>\n<li>如果没有定时器则 <mark>开启</mark> 定时器 ，记得<mark>存到变量</mark>里面</li>\n<li>在<mark>定时器里面调用</mark>要执行的函数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 利用防抖实现性能优化</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 需求：鼠标在盒子上移动，里面的数字就会 + 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 鼠标移动函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">mouseMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   box<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">// 如果里面存在大量消耗性能的代码，比如 dom 操作，比如数据处理，可能造成卡顿</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 手写防抖函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 1.  声明一个定时器 变量。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 2.  当鼠标每次滑动都先判断 是否有定时器了，如果有定时器先 清除以前的定时器</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 3.  如果没有定时器则 开启 定时器 ，记得存到变量里面</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 4.  在定时器里面调用要执行的函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">let</span> timer</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">//return 返回一个匿名函数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token comment\">// 判断是否有定时器了 有则函数 </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>         <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 调用传入的函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">//debounce (mouseMOve, 500) 相当于 function () &#123;定时器&#125; 当鼠标再次移动就调用了返回的函数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>mouseMove<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"节流throttle\"><a class=\"markdownIt-Anchor\" href=\"#节流throttle\">#</a> 节流 —throttle</h2>\n<p><strong>节流</strong>：单位时间内，频繁触发事件，<mark>只执行一次</mark>.</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101619481.png\" alt=\"image-20230810161935226\"></p>\n<p><strong>举个栗子</strong>：</p>\n<ul>\n<li>\n<p><mark>王者荣耀技能冷却</mark>，期间无法继续释放技能</p>\n</li>\n<li>\n<p><mark>和平精英 98k</mark> 换子弹期间不能射击</p>\n</li>\n<li>\n<p><strong>使用场景</strong>：</p>\n<ul>\n<li><strong>高频事件</strong>：鼠标移动 == <code>mousemove</code> ==，页面尺寸缩放 <mark>resize</mark>，滚动条滚动 <mark>scroll 等等</mark>.</li>\n</ul>\n</li>\n</ul>\n<p><strong>要求</strong>：鼠标在盒子上移动， 不管移动多少次，每隔 500ms 才 + 1</p>\n<p><strong>实现方式</strong>：</p>\n<ol>\n<li><mark>lodash</mark> 提供的<mark>节流函数</mark>来处理</li>\n<li><mark>手写</mark>一个<mark>节流函数</mark>来处理</li>\n</ol>\n<h3 id=\"1-使用lodash方式实现节流\"><a class=\"markdownIt-Anchor\" href=\"#1-使用lodash方式实现节流\">#</a> 1 使用 lodash 方式实现节流</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span>box <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      text<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"./js/lodash.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 利用防抖实现性能优化</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 需求：鼠标在盒子上移动，里面的数字就会 + 1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 鼠标移动函数</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">mouseMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      box<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\">// 如果里面存在大量消耗性能的代码，比如 dom 操作，比如数据处理，可能造成卡顿</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 利用 lodash 库实现节流，500 毫秒之后才 + 1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">// 语法: _.throttle (fun, 时间)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>mouseMove<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101631716.gif\" alt=\"test\"></p>\n<h3 id=\"手写节流函数\"><a class=\"markdownIt-Anchor\" href=\"#手写节流函数\">#</a> 手写节流函数</h3>\n<p>核心也是使用定时器实现 setTimeout 实现</p>\n<p><strong>核心思路</strong>：</p>\n<ol>\n<li>声明一个定时器 <mark>变量</mark>.</li>\n<li>当鼠标每次滑动都先判断 <mark>是否有定时器了</mark>，如果有定时器则<mark>不开启</mark>新定时器</li>\n<li>如果没有定时器则<mark>开启</mark>定时器，记得<mark>存到变量</mark>里面\n<ol>\n<li>定时器里面<mark>调用</mark>执行的函数</li>\n<li>定时器里面要把定时器<mark>清空</mark>.</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 利用防抖实现性能优化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 需求：鼠标在盒子上移动，里面的数字就会 + 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 鼠标移动函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">mouseMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      box<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">// 如果里面存在大量消耗性能的代码，比如 dom 操作，比如数据处理，可能造成卡顿</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 利用 lodash 库实现节流，500 毫秒之后才 + 1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 语法: _.throttle (fun, 时间)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token comment\">// 清空定时器 </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token comment\">// 思考这里为什么不使用 clearTimeout 来清除定时器 而是赋值为 null 呢？</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>mouseMove<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"定时器的冷知识\"><a class=\"markdownIt-Anchor\" href=\"#定时器的冷知识\">#</a> 定时器的冷知识</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 在 setTimeout 中是无法删除定时器的，</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 因为定时器还在运作，所以使用 timer = null 而不是 clearTimeout (timer)</span></pre></td></tr></table></figure><p>定时器还在运作的期间是无法删除的，一般不要在定时器的内部使用 clearTimeout 来删除当前的定时器可以删除其它的</p>\n<h2 id=\"防抖和节流总结\"><a class=\"markdownIt-Anchor\" href=\"#防抖和节流总结\">#</a> 防抖和节流总结</h2>\n<table>\n<thead>\n<tr>\n<th>性能优化</th>\n<th>说明</th>\n<th>使用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>防抖</td>\n<td>单位时间内，频繁触发事件，只执行最后一次</td>\n<td>搜索框搜索输入，手机号，邮箱验证输入检测</td>\n</tr>\n<tr>\n<td>节流</td>\n<td>单位时间内，频繁触发事件，只执行一次</td>\n<td>高频事件：鼠标移动，页面尺寸缩放，滚动条滚动等等</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"综合案例记录上次视频播放位置\"><a class=\"markdownIt-Anchor\" href=\"#综合案例记录上次视频播放位置\">#</a> 综合案例 — 记录上次视频播放位置</h2>\n<p><strong>分析</strong>：</p>\n<p><strong>两个事件</strong>：</p>\n<ol>\n<li>ontimeupdate 事件在 视频 / 音频 (audio/video) 当前的播放位置发送改变时触发</li>\n<li>onloadeddata 事件在当前帧的数据加载完成且还没有足够的数据播放 视频 / 音频 (audio /video) 的下一帧时触发</li>\n</ol>\n<h5 id=\"演示ontimeupdate事件\"><a class=\"markdownIt-Anchor\" href=\"#演示ontimeupdate事件\">#</a> 演示 ontimeupdate 事件</h5>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://v.itheima.net/LapADhV6.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 获取元素 要对视频进行操作</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 当视频 / 音频 当前播放的位置发送改变时触发事件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    video<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontimeupdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>效果</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202308101700465.gif\" alt=\"test\"></p>\n<p><strong>谁需要节流</strong>？</p>\n<p>ontimeupdate，触发频次太高了，我们可以设定 1 秒钟触发一次</p>\n<p><strong>思路</strong>：</p>\n<ol>\n<li>在 ontimeupdate 事件触发的时候，每隔 1 秒钟，就记录当前时间到本地存储</li>\n<li>下次打开页面，onloadeddata 事件触发，就可以从本地存储取出时间，让视频从取出的时间播放，如果没有就默认为 0</li>\n<li>获得当前时间： <code>video.currentTime</code></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta http<span class=\"token operator\">-</span>equiv<span class=\"token operator\">=</span><span class=\"token string\">\"X-UA-Compatible\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"IE=edge\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"referrer\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"never\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>综合案例<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">*</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      box<span class=\"token operator\">-</span>sizing<span class=\"token operator\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 1200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">.</span>video video <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 20px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">.</span>elevator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> fixed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> 280px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      z<span class=\"token operator\">-</span>index<span class=\"token operator\">:</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> #fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #e4e4e4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 60px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">.</span>elevator a <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      text<span class=\"token operator\">-</span>decoration<span class=\"token operator\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      text<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #<span class=\"token number\">999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">.</span>elevator a<span class=\"token punctuation\">.</span>active <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #1286ff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">.</span>outline <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      padding<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"header\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"http://pip.itcast.cn\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"https://pip.itcast.cn/img/logo_v3.29b9ba72.png\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"video\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token operator\">&lt;</span>video src<span class=\"token operator\">=</span><span class=\"token string\">\"https://v.itheima.net/LapADhV6.mp4\"</span> controls<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>video<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"elevator\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:;\"</span> data<span class=\"token operator\">-</span>ref<span class=\"token operator\">=</span><span class=\"token string\">\"video\"</span><span class=\"token operator\">></span>视频介绍<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:;\"</span> data<span class=\"token operator\">-</span>ref<span class=\"token operator\">=</span><span class=\"token string\">\"intro\"</span><span class=\"token operator\">></span>课程简介<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:;\"</span> data<span class=\"token operator\">-</span>ref<span class=\"token operator\">=</span><span class=\"token string\">\"outline\"</span><span class=\"token operator\">></span>评论列表<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">// 获取元素 要对视频进行操作</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token comment\">// 当视频 / 音频 当前播放的位置发送改变时触发事件</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    video<span class=\"token punctuation\">.</span>ontimeupdate <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获得当前视频时间</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token comment\">// 本地存储视频时间</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'currentTime'</span><span class=\"token punctuation\">,</span> video<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">// 打开页面触发事件，就从本地存储里面取出记录的时间，赋值给 video.currentTime</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">// 注意打开页面触发事件 ，而不是刷新页面触发事件 刷新页面不触发事件</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    video<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadeddata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      <span class=\"token comment\">// 防止用户第一次打开本地没有 currentTime 获取就是 undefined 使用 || 逻辑中断</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      <span class=\"token comment\">// 将本地存储播放的视频 赋值给视频</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      video<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'currentTime'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "web",
                "js"
            ]
        }
    ]
}