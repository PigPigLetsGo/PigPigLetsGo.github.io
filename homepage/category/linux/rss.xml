<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>homepage • Posts by &#34;linux&#34; category</title>
        <link>https://pigpigletsgo.github.io/homepage</link>
        <description>欢迎来我的博客空间</description>
        <language>zh-CN</language>
        <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
        <lastBuildDate>Tue, 02 Apr 2024 18:00:51 +0800</lastBuildDate>
        <category>计算机底层</category>
        <category>问题总汇</category>
        <category>jdk版本问题</category>
        <category>mybatis</category>
        <category>linux</category>
        <category>报错</category>
        <category>编码问题</category>
        <category>springboot</category>
        <category>Jwt</category>
        <category>读取配置文件</category>
        <category>JdbcTemplate</category>
        <category>MyBatisPlus</category>
        <category>版本问题</category>
        <category>nginx</category>
        <category>Swing</category>
        <category>java</category>
        <category>vim</category>
        <category>输入法</category>
        <category>hexo</category>
        <category>shoka</category>
        <category>english</category>
        <category>math</category>
        <category>算法</category>
        <category>计算机学科</category>
        <category>C</category>
        <category>介绍</category>
        <category>基础</category>
        <category>mysql</category>
        <category>blog - sql</category>
        <category>git</category>
        <category>web</category>
        <category>坑点</category>
        <category>nodeJs</category>
        <category>tools</category>
        <category>idea</category>
        <category>项目</category>
        <category>PowerDesigner</category>
        <category>windows</category>
        <category>密码管理</category>
        <category>vscode</category>
        <category>database</category>
        <category>JDBC</category>
        <category>mongodb</category>
        <category>navicat</category>
        <category>redis</category>
        <category>集群</category>
        <category>知识点</category>
        <category>代码经验</category>
        <category>jvm</category>
        <category>config配置类</category>
        <category>maven</category>
        <category>数据结构与算法</category>
        <category>图</category>
        <category>多路查找树</category>
        <category>递归</category>
        <category>链表</category>
        <category>队列</category>
        <category>栈</category>
        <category>数组</category>
        <category>排序</category>
        <category>查找</category>
        <category>哈希表</category>
        <category>树结构</category>
        <category>程序员常用的10中算法</category>
        <category>编程题</category>
        <category>动态规划</category>
        <category>贪心算法</category>
        <category>二叉树</category>
        <category>层序遍历</category>
        <category>后序遍历</category>
        <category>广度优先搜索</category>
        <category>双指针</category>
        <category>还原二叉树</category>
        <category>快慢指针</category>
        <category>分而治之</category>
        <category>单调栈</category>
        <category>对称二叉树</category>
        <category>堆</category>
        <category>小顶堆</category>
        <category>大顶堆</category>
        <category>逆波兰表达式</category>
        <category>spring</category>
        <category>servlet</category>
        <category>工具类</category>
        <category>开源项目框架</category>
        <category>案例Demo</category>
        <category>网络编程</category>
        <category>菜单数据结构</category>
        <category>多线程</category>
        <category>分页</category>
        <category>lombok</category>
        <category>爬虫</category>
        <category>API的区别</category>
        <category>设计模式</category>
        <category>第三方库</category>
        <category>Minio</category>
        <category>Thymeleaf</category>
        <category>hutool</category>
        <category>七牛云</category>
        <category>vue3</category>
        <category>websocket</category>
        <category>前后端交互</category>
        <category>数据格式</category>
        <category>axios</category>
        <category>ORM</category>
        <category>mybatisplus-join</category>
        <category>avl树</category>
        <category>进阶</category>
        <category>二叉树搜索树</category>
        <category>二叉树的遍历</category>
        <category>优先级队列</category>
        <category>完全二叉树</category>
        <category>heapify</category>
        <category>动态数组</category>
        <category>阻塞队列</category>
        <category>堆排序</category>
        <category>红黑树</category>
        <category>SSM</category>
        <category>springsecurity</category>
        <category>JWT</category>
        <category>MD5</category>
        <category>thymeleaf</category>
        <category>springmvc</category>
        <category>springcloud</category>
        <category>源码</category>
        <category>整合jar包</category>
        <category>Junit</category>
        <category>拦截器</category>
        <category>IO</category>
        <category>String</category>
        <category>http</category>
        <category>lambda</category>
        <category>stream流</category>
        <category>number</category>
        <category>对象</category>
        <category>泛型</category>
        <category>集合</category>
        <category>jquery</category>
        <category>js</category>
        <category>JSR303</category>
        <category>devtools</category>
        <category>springboot高级</category>
        <category>Nacos</category>
        <category>Docker</category>
        <category>Elasticsearch</category>
        <category>Knife4j</category>
        <category>RabbitMQ</category>
        <category>部署</category>
        <category>Canal</category>
        <category>OpenResty</category>
        <category>Seata</category>
        <category>Sentinel</category>
        <category>持久化</category>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/Linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/</guid>
            <title>linux网络配置指令</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/Linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;指定 ip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我们每次开机有可能 ip 地址分配不同如果想要固定 ip 则如下设置操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明:&lt;/p&gt;
&lt;p&gt;直接修改配置文件来指定 ip, 并可以连接到外网 (程序员推荐)&lt;/p&gt;
&lt;p&gt;编辑: &lt;code&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ifcfg-ens33 文件说明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DEVICE=eth9     #接口名 (设备，网卡)&lt;/p&gt;
&lt;p&gt;HWADDR=00:0C:2x:6x:0x:xx        #MAC 地址&lt;/p&gt;
&lt;p&gt;TYPE=Ethernet       #网络类型 (通常是 Ethemet)&lt;/p&gt;
&lt;p&gt;UUID=926a57ba-92c6-4231-bacb-f27e5e6a9f44       #随机&lt;/p&gt;
&lt;p&gt;#系统启动的时候网络接口是否有效 (yes/no)&lt;/p&gt;
&lt;p&gt;NOBOOT=yes      #默认为 no 则不使用该配置启动网络接口，如果使用则改为 yes&lt;/p&gt;
&lt;p&gt;#IP 的配置方法 [none|static|bootp|dhcp (动态分配主机)] (引导时不使用协议 | 静态分配 IP|BOOTP 协议 | DHCP 协议)&lt;/p&gt;
&lt;p&gt;BOOTPROTO=static&lt;/p&gt;
&lt;p&gt;#IP 地址&lt;/p&gt;
&lt;p&gt;IPADDR=192.168.200.130&lt;/p&gt;
&lt;p&gt;#网关&lt;/p&gt;
&lt;p&gt;GATEWAY=192.168.200.2&lt;/p&gt;
&lt;p&gt;#域名解析器&lt;/p&gt;
&lt;p&gt;DNS1=192.168.200.2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重启网络服务器或者重启系统生效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; network restart 或者 &lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;再将虚拟机中的网络适配器更改对应的子网掩码和网关&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124822023.png&#34; alt=&#34;image-20240208124822023&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124833571.png&#34; alt=&#34;image-20240208124833571&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/Linux_NAT%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/</guid>
            <title>linux网络原理</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/Linux_NAT%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-21-42-30.png&#34; alt=&#34;image_2023-01-05-21-42-30&#34;&gt;&lt;/p&gt;
&lt;p&gt;Linux 虚拟机与 vmnet8 是互通的，如果 Linux 虚拟机访问不到 vmnet8 则将 windows 的防火墙关闭再次尝试&lt;/p&gt;
&lt;p&gt;Linux 虚拟机访问 vmnet8, vmnet8 通过代理 无线网卡来访问外部网络来达到上网&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%A3%81%E7%9B%98/%E6%9F%A5%E8%AF%A2%E7%A3%81%E7%9B%98%E6%83%85%E5%86%B5/</guid>
            <title>linux查询磁盘情况</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%A3%81%E7%9B%98/%E6%9F%A5%E8%AF%A2%E7%A3%81%E7%9B%98%E6%83%85%E5%86%B5/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;查询磁盘情况&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询磁盘情况&#34;&gt;#&lt;/a&gt; 查询磁盘情况&lt;/h2&gt;
&lt;p&gt;基本语法:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询系统整体磁盘使用情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-19-25-29.png&#34; alt=&#34;image_2023-01-05-19-25-29&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;Filesystem：标识该文件系统位于哪个分区，因此该列显示的是设备名称；&lt;/p&gt;
&lt;p&gt;1K-blocks：此列表示文件系统的总大小，默认以 KB 为单位&lt;/p&gt;
&lt;p&gt;Used：表示用掉的硬盘空间大小&lt;/p&gt;
&lt;p&gt;Available：表示剩余的硬盘空间大小&lt;/p&gt;
&lt;p&gt;Use%：硬盘空间使用率，如果使用率高达 90% 以上，就需要额外注意，因为容量不足，会严重影响系统的正常运行&lt;/p&gt;
&lt;p&gt;Mounted on：文件系统的挂载点，也就是硬盘挂载的目录位置&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;du&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt; /目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询指定目录的磁盘占用情况，默认为当前目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-s 指定目录占用大小汇总&lt;/p&gt;
&lt;p&gt;-h 带计量单位&lt;/p&gt;
&lt;p&gt;-a 含文件&lt;/p&gt;
&lt;p&gt;–max-depth=1 子目录深度&lt;/p&gt;
&lt;p&gt;-c 列出明细的同时，增加汇总值&lt;/p&gt;
&lt;p&gt;应用实例:&lt;/p&gt;
&lt;p&gt;查询 /opt 目录的磁盘占用情况，深度为 1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124032631.png&#34; alt=&#34;image-20240208124032631&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;练习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;统计 /opt 目录下的文件数量&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#ll 列出 目录 | 管道 过滤 以 - 开头的 | 管道 wc:wordcount 统计文件数量 -l 显示统计数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dkx@192  ~  ll /opt&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;^-&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;                                                                                        ✔  &lt;span class=&#34;token number&#34;&gt;901&lt;/span&gt;  06:38:02&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;统计 /opt 文件夹下目录的个数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#文件都是以 d 开头的:dwrxwrxwrx&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; dkx@192  ~  ll /opt&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;^d&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;                                                                                        ✔  &lt;span class=&#34;token number&#34;&gt;902&lt;/span&gt;  06:38:22&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;统计 /opt 文件夹下文件的个数，包括子文件夹里的&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#-R 递归显示出所有的文件个数，然后统计数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; dkx@192  ~  ll &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; /opt&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;^-&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;                                                                                     ✔  &lt;span class=&#34;token number&#34;&gt;904&lt;/span&gt;  06:48:48&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1302&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;统计 /opt 文件夹下目录的个数，包括子文件夹里的&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#-R 递归显示出所有的文件夹个数，然后统计数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; dkx@192  ~  ll &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; /opt&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;^d&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;                                                                                     ✔  &lt;span class=&#34;token number&#34;&gt;903&lt;/span&gt;  06:47:27&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;161&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%A3%81%E7%9B%98/Linux%E5%88%86%E5%8C%BA%E6%9C%BA%E5%88%B6/</guid>
            <title>Linux分区</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E7%A3%81%E7%9B%98/Linux%E5%88%86%E5%8C%BA%E6%9C%BA%E5%88%B6/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;linux分区&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux分区&#34;&gt;#&lt;/a&gt; Linux 分区&lt;/h2&gt;
&lt;p&gt;原理介绍&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对 Linux 来说无论有几个分区，分给哪一目录使用，它归根结底就只有一个根目录，一个独立且唯一的文件结构，Linux 中每个分区都是用来组成整个文件系统的一部分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux 采用了一种叫 &lt;code&gt;载入&lt;/code&gt;  的处理方法，它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来，这时要载入的一个分区将使它的存储空间在一个目录下获得&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-11-08.png&#34; alt=&#34;image_2023-01-05-18-11-08&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看所有设备挂载情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令: &lt;code&gt;lsblk&lt;/code&gt;  或者 &lt;code&gt;lsblk -f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数: -f : 显示文件系统信息&lt;/p&gt;
&lt;p&gt;​		 -m : 显示权限信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124153263.png&#34; alt=&#34;image-20240208124153263&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬盘说明&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Linux 硬盘分 IDE 硬盘和 SCSI 硬盘，目前基本上是 SCSI 硬盘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于&lt;font color=&#39;red&#39;&gt;IDE 硬盘&lt;/font&gt;, 驱动器标识符为 &amp;quot;hdx~&amp;quot;, 其中 &amp;quot;hd&amp;quot; 表明分区所在设备的类型，这里是指 IDE 硬盘了.&amp;quot;x&amp;quot; 为盘号 (a 为基本盘，b 为基本从属盘，c 为辅助主盘，d 为辅助从属盘), &amp;quot;~&amp;quot; 代表分区，前四个分区用数字 1 到 4 表示，它们是主分区或扩展分区，从 5 开始就是逻辑分区。例:hda3 表示为第一个 IDE 硬盘上的第三个主分区或扩展分区，hdb2 表示为第二个 IDE 硬盘上的第二个主分区或扩展分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于&lt;font color=&#39;red&#39;&gt;SCSI 硬盘&lt;/font&gt;则标识为 &amp;quot;sdx~&amp;quot;, SCSI 硬盘是用 &amp;quot;sd&amp;quot; 来表示分区所在设备的类型的，其余则和 IDE 硬盘的表示方法一样&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;增加硬盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增加硬盘&#34;&gt;#&lt;/a&gt; 增加硬盘&lt;/h3&gt;
&lt;p&gt;虚拟机增加硬盘的步骤&lt;/p&gt;
&lt;p&gt;在 [虚拟机] 菜单中，选择 [设置], 然后设备列表里添加硬盘，然后一路 [下一步], 中间只有选择磁盘大小的地方需要修改，直到完成，然后&lt;font color=&#39;red&#39;&gt;重启系统&lt;/font&gt;(才能识别！)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-18-02.png&#34; alt=&#34;image_2023-01-05-18-18-02&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124211316.png&#34; alt=&#34;image-20240208124211316&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-19-22.png&#34; alt=&#34;image_2023-01-05-18-19-22&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-20-05.png&#34; alt=&#34;image_2023-01-05-18-20-05&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-22-53.png&#34; alt=&#34;image_2023-01-05-18-22-53&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分区命令: &lt;code&gt;fdisk /dev/sdb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;/dev: 字符设备文件&lt;/p&gt;
&lt;p&gt;开始对 /sdb 分区&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;m 显示命令列表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;p 显示磁盘分区 同 fdisk -l&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n 新增分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;d 删除分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;w 写入并退出&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说明：开始分区后输入 n, 新增分区，然后选择 p, 分区类型为主分区，两次回车默认剩余全部空间，最后输入 w 写入分区并退出，若不保存退出输入 q&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-18-33-34.png&#34; alt=&#34;image_2023-01-05-18-33-34&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;格式化磁盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#格式化磁盘&#34;&gt;#&lt;/a&gt; 格式化磁盘&lt;/h3&gt;
&lt;p&gt;分区命令: &lt;code&gt;mkfs -t ext4 /dev/sdb1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/1286512-20190206141059483-251392832.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中 ext4 是分区类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124231127.png&#34; alt=&#34;image-20240208124231127&#34;&gt;&lt;/p&gt;
&lt;p&gt;挂载：将一个分区与一个目录联系起来&lt;/p&gt;
&lt;p&gt;mount   设备名称  挂载目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;挂载分区: &lt;code&gt;mount /dev/sdb1 /newdisk&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124240563.png&#34; alt=&#34;image-20240208124240563&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124255145.png&#34; alt=&#34;image-20240208124255145&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意:&lt;font color=&#39;red&#39;&gt;用命令挂载重启后会生效&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;断开挂载点：注意切出挂载点目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;断开挂载点: &lt;code&gt;umount /dev/sdb1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124305347.png&#34; alt=&#34;image-20240208124305347&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124323320.png&#34; alt=&#34;image-20240208124323320&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;永久挂载&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过修改 &lt;code&gt;/etc/fstab&lt;/code&gt;  实现挂载&lt;/p&gt;
&lt;p&gt;添加完成后 执行 mount -a 立刻生效&lt;/p&gt;
&lt;p&gt;第一个数组：0/1 = 备份 / 不备份，第二个数字：2/1/0 = 根目录 / 其它目录文件检查 / 不检查&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-19-07-32.png&#34; alt=&#34;image_2023-01-05-19-07-32&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启之后还是挂载的状态说明成功了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-19-09-52.png&#34; alt=&#34;image_2023-01-05-19-09-52&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%861/</guid>
            <title>linux服务管理</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%861/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;服务 (service) 本质就是进程，但是是运行在后台的，通常会监听某个端口，等待其它程序的请求，比如 (mysqld,sshd, 防火墙等等), 因此我们又成为守护进程，是 Linux 中非常重要的知识点&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;service 管理指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;service 服务名 [start|stop|restart|reload|status]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 CentOS7.0 后&lt;font color=&#39;red&#39;&gt;很多服务不再使用 service&lt;/font&gt;, 而是&lt;font color=&#39;red&#39;&gt;systemctl&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;service 指令管理的服务在 &lt;code&gt;/etc/init.d&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ls -l /etc/init.d/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-15-37-26.png&#34; alt=&#34;image_2023-01-06-15-37-26&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看全部系统服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;setup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果提示不存在则进行安装 &lt;code&gt;sudo yum -y install setuptool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成后即可执行命令:setup&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124524934.png&#34; alt=&#34;image-20240208124524934&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务的运行级别 (runlevel)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux 系统有 7 种运行级别 (runlevel):&lt;font color=&#39;red&#39;&gt;常用的是级别 3 和 5&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;运行级别 0: 系统停机状态，系统默认运行级别不能设为 0, 否则不能正常启动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 1: 单用户工作状态，root 权限，用于系统维护，禁止远程登陆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 2: 多用户状态 (没有 NFS), 不持支网络&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 3: 完全的多用户状态 (有 NFS), 登录后进入控制台命令行模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 4: 系统未使用，保留&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 5:X11 控制台，登录后进入图形 GUI 模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行级别 6: 系统正常关闭并重启，默认运行级别不能设为 6, 否则不能正常启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开机的流程说明:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124539115.png&#34; alt=&#34;image-20240208124539115&#34;&gt;&lt;/p&gt;
&lt;p&gt;CentOS7 后台运行级别说明&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;/etc/initab&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进行了简化，如下&lt;/p&gt;
&lt;p&gt;multi-user.target:analogous to runlevel 3&lt;/p&gt;
&lt;p&gt;graphical.target:analogous to runlevel 5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;chkconfig&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 chkconfig 命令可以给服务的各个运行级别设置自 启动 / 关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chkconfig 指令管理的服务在 &lt;code&gt;/etc/initab.d&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：CentOS7.0 后，很多服务使用&lt;font color=&#39;red&#39;&gt;systemctl&lt;/font&gt;管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;chkconfig 基本语法:&lt;/p&gt;
&lt;p&gt;查看服务:chkconfig  --list [|grep xxx]&lt;/p&gt;
&lt;p&gt;chkconfig   服务名  --list&lt;/p&gt;
&lt;p&gt;chkconfig   --level 5   服务名  on/off&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用细节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;chkconfig 重新设置服务后自启动或关闭，需要重启机器 reboot 生效&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-17-29-29.png&#34; alt=&#34;image_2023-01-06-17-29-29&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如将 network 服务在指定的运行级别下让其关闭的则执行下面命令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;chkconfig&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--level&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; network off&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;Systemctl 管理指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本语法:systemctl [start|stop|restart|status] 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl 指令管理的服务在 &lt;code&gt;/usr/lib/systemd/system&lt;/code&gt;  查看&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl 设置服务的自启动状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;systemctl list-unit-files [|grep 服务名] (查看服务开机启动状态，grep 可以进行过滤)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl enable 服务名 (设置服务开机启动)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl disable 服务名 (关闭服务开机启动)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl is-enabled 服务名 (查询某个服务是否是自启动的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl status 服务名 (查看服务的状态)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systemctl daemon reload (重新加载系统服务)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;细节讨论&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;关闭或者启用防火墙后，立即生效 [telnet 测试，某个端口即可]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;telnet 命令为 Windows 中的命令详细查看 Windows 中笔记&lt;a href=&#34;......%5CTyporanote%5CWindows%5C%E5%BC%80%E5%90%AFtelnet%E5%8A%9F%E8%83%BD.md&#34;&gt; Windows:Telnet 开启&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果开启了防火墙而且没有将端口开放则外部主机访问不到&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208124554601.png&#34; alt=&#34;image-20240208124554601&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果希望设置某个服务自启动或关闭永久生效，要使用 systemctl [enable|disable] 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;打开或者关闭指定端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在真正的生产环境，往往需要将防火墙打开，但问题来了，如果我们把防火墙打开，那么外部请求数据包就不能跟服务器监听端口通讯，这时，需要打开指定的端口，比如 80,22,8080 等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;firewall 指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开端口:firewall-cmd --permanent --add-port = 端口号 / 协议&lt;/p&gt;
&lt;p&gt;关闭端口:firewall-cmd --permanent --remove-port = 端口号 / 协议&lt;/p&gt;
&lt;p&gt;重新载入，才能生效:firewall-cmd --reload&lt;/p&gt;
&lt;p&gt;查询端口是否开放:firewall-cmd --query-port = 端口 / 协议&lt;/p&gt;
&lt;p&gt;查看所有开放端口:firewall-cmd --list-ports&lt;/p&gt;
&lt;p&gt;查看端口号:netstat -ntlp|grep [端口号]&lt;/p&gt;
&lt;p&gt;查看防火墙配置规则:iptables -nL&lt;/p&gt;
&lt;p&gt;对其它主机开放指定端口:firewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address port protocol=“tcp” port=“8080” accept”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开放指定端口&lt;/strong&gt;: firewall-cmd --permanent --zone=public --add-port=8080/tcp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⚠️&lt;strong&gt;注意&lt;/strong&gt;：执行操作后执行重载:firewall-cmd --reload&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E9%85%8D%E7%BD%AEJDK/</guid>
            <title>配置JDK</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E9%85%8D%E7%BD%AEJDK/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;配置jdk&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置jdk&#34;&gt;#&lt;/a&gt; 配置 JDK&lt;/h1&gt;
&lt;p&gt;&lt;mark&gt;重要提示！&lt;/mark&gt;: 下载 JDK 前先创建一个属于 JDK 的文件地址，因为这样好管理也好找到，虽然 linux 配置 JDK 没有 Windows 那么复杂，创建文件指令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; /opt/jdk&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;下载前可以看下浏览器默认下载位置或者下载的时候弹出提示框进行选择下载到的位置我们就选择新创建的 jdk 目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208121140196.png&#34; alt=&#34;image-20240208121140196&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /opt/jdk&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;切换到这个自己创建的 jdk 目录下再下载或者传输 jdk 压缩包&lt;/p&gt;
&lt;p&gt;首先去官网下载一个 JDK (注意：一定要下载对应自己 linux 系统的 JDK 不然可能会出现在执行 JDK 的时候报错)&lt;/p&gt;
&lt;p&gt;Arm 64 Compressed Archive&lt;/p&gt;
&lt;p&gt;x64 Compressed Archive&lt;/p&gt;
&lt;p&gt;这两个 linux 版本的看系统下载，我当前下载的是 64 为的 x64 Compressed Archive&lt;/p&gt;
&lt;p&gt;报错信息: &lt;code&gt;无法执行二进制文件&lt;/code&gt; ！&lt;/p&gt;
&lt;p&gt;在虚拟机中下载或者在 Windows 中下载都可以在 Windows 中可以使用&lt;mark&gt; Xftp&lt;/mark&gt; 工具将其传输到 linux 中，当然如果出现传输失败就切换下权限切换到 root 试试，应该会成功的&lt;/p&gt;
&lt;p&gt;下载完成后:&lt;/p&gt;
&lt;p&gt;使用 Xshell 或者 linux 中打开终端，在当前压缩包的目录下&lt;/p&gt;
&lt;p&gt;输入指令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xvzf&lt;/span&gt; jdk-n.n.n_x64_tar.gz&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;如果只有这一个压缩包其实直接tab就好了,写这么多就是示个意&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;完成后终端输入指令:&lt;/p&gt;
&lt;p&gt;切换到跟目录下:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; /etc/profile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;打开配置文件后，在配置文件的末尾输入:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/jdk/jdk-17.0.4.1&lt;span class=&#34;token comment&#34;&gt;#这里根据自己的 jdk 位置来进行配置即可&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入好配置文件后执行指令让这个目录的 jdk 生效，不然还是不能使用的&lt;/p&gt;
&lt;p&gt;执行指令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /etc/profile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后就可以输入指令来查看 jdk 是否安装成功了&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javac&lt;/code&gt;  ,  &lt;code&gt;java -version&lt;/code&gt;  ,  &lt;code&gt;java&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB/</guid>
            <title>Linux运行级别</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E8%BF%90%E8%A1%8C%E7%BA%A7%E5%88%AB/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;init 运行级别&lt;/th&gt;
&lt;th&gt;systemd 目标&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;poweroff.target&lt;/td&gt;
&lt;td&gt;关机&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;rescue.target&lt;/td&gt;
&lt;td&gt;单用户模式 [找回丢失密码]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;multi-user.target&lt;/td&gt;
&lt;td&gt;多用户状态没有网络服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;multi-user.target&lt;/td&gt;
&lt;td&gt;多用户状态有网络服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;multi-user.target&lt;/td&gt;
&lt;td&gt;系统未使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;graphical.target&lt;/td&gt;
&lt;td&gt;多用户图形界面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;reboot.target&lt;/td&gt;
&lt;td&gt;重启&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;查看当前运行级别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看当前运行级别&#34;&gt;#&lt;/a&gt; 查看当前运行级别:&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl get-default&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;设置默认运行级别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置默认运行级别&#34;&gt;#&lt;/a&gt; 设置默认运行级别:&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl set-default xxx.target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E5%8C%96root%E7%94%A8%E6%88%B7/</guid>
            <title>设置/初始化root用户</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E5%8C%96root%E7%94%A8%E6%88%B7/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;设置初始化root用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置初始化root用户&#34;&gt;#&lt;/a&gt; 设置 / 初始化 root 用户&lt;/h1&gt;
&lt;p&gt;【设置 root 用户密码】&lt;br&gt;
默认安装好的 linux 系统是没有设置 root 用户密码的，下面介绍如何设置 root 用户的密码。&lt;/p&gt;
&lt;p&gt;由于 Linux 系统默认是没有激活 root 用户的，需要我们手动进行操作，步骤也非常简单，在命令行界面（终端）中输入如下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt; 或者 &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt; root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Password： 你当前用户的密码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Enter new UNIX password： 设置是 root 用户的密码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Retype new UNIX password：重复以上 root 用户的密码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E7%9A%84%E4%B8%89%E7%A7%8D%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F/</guid>
            <title>vmware网络的三种连接方式</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E7%9A%84%E4%B8%89%E7%A7%8D%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;1桥接模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1桥接模式&#34;&gt;#&lt;/a&gt; 1. 桥接模式&lt;/h3&gt;
&lt;p&gt;说明：桥接模式，虚拟机系统可以和外部系统通讯，但是容易造成 ip 冲突&lt;/p&gt;
&lt;p&gt;桥接模式需要和主机使用同一个网段&lt;/p&gt;
&lt;p&gt;问题：它们需要是同一个网段中那么如果一个教室中有 200 名学生呢，都是同一个网段这时 192.168.0 这个网段的 ip 地址就不够了，因为最多只有 255 个，就会造成重复 ip 造成 ip 冲突的问题&lt;/p&gt;
&lt;p&gt;桥接模式是与外界互通的&lt;/p&gt;
&lt;h3 id=&#34;2nat模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2nat模式&#34;&gt;#&lt;/a&gt; 2.NAT 模式&lt;/h3&gt;
&lt;p&gt;说明：网络地址转换模式，虚拟系统可以和外部系统通讯，不造成 ip 冲突&lt;/p&gt;
&lt;p&gt;地址映射：虚拟机会在主机上产生另外一个 ip 地址，它们之间产生映射关系，它们之间会形成独立，可以相互通讯的网络&lt;/p&gt;
&lt;p&gt;NAT 模式可以通过主机的 ip 来与外部联系，但是使用的却不是同一个网段&lt;/p&gt;
&lt;p&gt;此时虚拟机的网段为内网，内网可以与外部通讯但是内网的那个线不成立，因为通过 192.168.0.33 代理与外部交互，但是外部不能与 192.168.100.88 进行通讯&lt;/p&gt;
&lt;h3 id=&#34;3主机模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3主机模式&#34;&gt;#&lt;/a&gt; 3. 主机模式&lt;/h3&gt;
&lt;p&gt;独立模式，不与外部进行通讯&lt;/p&gt;
&lt;h5 id=&#34;视图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#视图&#34;&gt;#&lt;/a&gt; 视图&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20230106002750581.png&#34; alt=&#34;image-20230106002750581&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%9D%83%E9%99%90%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid>
            <title>权限的基本介绍</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%9D%83%E9%99%90%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;权限的基本介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限的基本介绍&#34;&gt;#&lt;/a&gt; 权限的基本介绍&lt;/h2&gt;
&lt;p&gt;ls -l 中显示的内容如下&lt;/p&gt;
&lt;p&gt;-rwxrw-r-- 1root root 1213 Feb 2 09:39 abc&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;r: 可读&lt;/li&gt;
&lt;li&gt;w: 可写&lt;/li&gt;
&lt;li&gt;x: 可执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208120820450.png&#34; alt=&#34;image-20240208120820450&#34;&gt;&lt;/p&gt;
&lt;p&gt;0-9 位说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第 0 位确定文件类型 (d,-,l,c,b)&lt;/p&gt;
&lt;p&gt;l: 是链接，相当于 windows 的快捷方式&lt;/p&gt;
&lt;p&gt;d: 是目录，相当于 windows 的文件夹&lt;/p&gt;
&lt;p&gt;c: 是&lt;font color=blue&gt;字符设备&lt;/font&gt;文件，鼠标，键盘&lt;/p&gt;
&lt;p&gt;b: 是块设备，比如硬盘&lt;/p&gt;
&lt;p&gt;-: 普通文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第 1-3 位确定所有者 (该文件的所有者) 拥有该文件的权限 —User&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第 4-6 位确定所属者 (同用户组的) 拥有该文件的权限 —Group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第 7-9 位确定其它用户拥有该文件的权限 —Other&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;rwx权限详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rwx权限详解&#34;&gt;#&lt;/a&gt; rwx 权限详解&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-04-21-08-34.png&#34; alt=&#34;image_2023-01-04-21-08-34&#34;&gt;&lt;/p&gt;
&lt;p&gt;rwx 作用文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[r] 代表可读 (read): 可读取，查看&lt;/li&gt;
&lt;li&gt;[w] 代表可写 (write): 可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件所在的目录有写权限，才能删除该文件&lt;/li&gt;
&lt;li&gt;[x] 代表可执行 (execute): 可以被执行&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;rwx 作用到目录&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;[r] 代表可读 (read): 可读取，ls 查看目录内容&lt;/li&gt;
&lt;li&gt;[w] 代表可写 (write): 可以修改，对目录内容创建 + 删除 + 重命名目录&lt;/li&gt;
&lt;li&gt;[x] 代表可执行 (execute): 可以进入该目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可用数字表示为:r=4, w=2, x=1 因此 rwx=4+2+1=7&lt;/p&gt;
&lt;p&gt;其它说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1 文件：硬连接数或 目录：子目录数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;root 用户&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;root 组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1213 文件大小 (字节), 如果是文件夹，显示 4096 字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feb 2 09:39 最后修改日期&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;abc 文件名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修改权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改权限&#34;&gt;#&lt;/a&gt; 修改权限&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-04-21-53-08.png&#34; alt=&#34;image_2023-01-04-21-53-08&#34;&gt;&lt;/p&gt;
&lt;p&gt;第一种方式: &lt;code&gt;+ - =&lt;/code&gt;  变更权限&lt;/p&gt;
&lt;p&gt;u: 所有者 g: 所有组 o: 其它人 a: 所有人 (u, g, o 的总和)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;chmod u=rwx, g=rx, o=x  文件 / 目录名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chmod o+w 文件 / 目录名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chmod a-x 文件 / 目录名&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;r=4, w=2, x=1 rwx=4+2+1=7&lt;/p&gt;
&lt;p&gt;chmod 7 (所有者) 5 (所有组) 1 (其它人) 文件目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;细节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果目录权限为:drwx–x--x 而这个目录里面的文件权限为:-rw–rx-r-, 那么文件可执行 cd 而不能执行 ls 那可以对文件进行修改码？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;登录 &lt;code&gt;milan&lt;/code&gt;  用户进入到 &lt;code&gt;/opt&lt;/code&gt;  目录下查看 test 的权限状态&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-12-05-09.png&#34; alt=&#34;image_2023-01-05-12-05-09&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到所有者，所有组都是 dkx 的而其它组没有任何权限， &lt;code&gt;milan&lt;/code&gt;  用户是 dkx 一组的所以可执行 x&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-12-06-18.png&#34; alt=&#34;image_2023-01-05-12-06-18&#34;&gt;&lt;/p&gt;
&lt;p&gt;进去之后除了可 x 不能 rw, 但是里面还有一个文件夹下面是文件夹的权限:-rw–rw-r-&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208120844328.png&#34; alt=&#34;image-20240208120844328&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到所有组可读写其它组可读，那么问题来了目录为所有组可 x, 可以对文件进行编辑吗？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-12-11-39.png&#34; alt=&#34;image_2023-01-05-12-11-39&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以进去并且可修改，得出结论 目录的权限不会影响到文件的权限，但是目录不可 x 那么也不能操作到文件&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%8C%87%E4%BB%A4/</guid>
            <title>指令</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%8C%87%E4%BB%A4/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;清空控制台命令: clear&lt;/p&gt;
&lt;p&gt;查看 ip 地址的两种方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ip add&lt;/li&gt;
&lt;li&gt;ifconfig    如果不存在下载执行: sudo yum install net-tools.x86_64 -y&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;路径&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路径&#34;&gt;#&lt;/a&gt; 路径&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;安全人员&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;必须&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;知道的路径&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /var/log/messages &lt;span class=&#34;token comment&#34;&gt;#Linux 系统日志文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /var/log/secure &lt;span class=&#34;token comment&#34;&gt;#登入日志，ssh 远程连接安全，很重要&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /var/log/lastlog &lt;span class=&#34;token comment&#34;&gt;#有哪些用户登入 lastlog&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;用户和组相关文件&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /etc/passwd &lt;span class=&#34;token comment&#34;&gt;#用户 (user) 的配置文件，记录用户的各种信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;每行的含义:用户名&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;用户标识号&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;组标识号&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;注释性描述&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;主目录&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;登入Shell&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /etc/shadow &lt;span class=&#34;token comment&#34;&gt;#口令的配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;每行的含义:登入名&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;加密口令&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;最后一次修改的时间&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;最小时间间隔&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;最大时间间隔&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;警告时间&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;不活动时间&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;失效时间&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;标志&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /etc/group &lt;span class=&#34;token comment&#34;&gt;#组 (group) 的配置文件，记录 Linux 包含的组的信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;每行含义:组名&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;口令&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;组标识号&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;组内用户列表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;删除目录或文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除目录或文件&#34;&gt;#&lt;/a&gt; 删除目录或文件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-r:&lt;/code&gt;  或 &lt;code&gt;-R:&lt;/code&gt;  删除指定目录及目录下的所有文件&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  强制删除，不进行提示&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-i:&lt;/code&gt;  删除前进行提示&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-d:&lt;/code&gt;  将欲删除目录的硬链接数据删成 0, 删除该目录&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-l:&lt;/code&gt;  删除文件超过 3 个或递归删除前进行提示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;删除目录或文件&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rm英文全拼&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;删除的意思&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;用于删除一个文件或目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;注意:文件一旦通过rm命令删除,则无法恢复,所以必须格外小心的使用该命令&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; 删除前逐一确认是否删除&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; 即使原档案属性设为唯读,亦直接删除,无需逐一确认&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; 将目录及以下之档案亦逐一删除&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;案例:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;删除一般文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt;  文件名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;删除目录/文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; /目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rm:是否删除 目录XXX? 回复y就是确认删除&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;删除当前目录下所有文件及目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;删除指定目录所有文件及目录直接删除无需逐一确认&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; 文件名或者/目录/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;添加用户删除用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加用户删除用户&#34;&gt;#&lt;/a&gt; 添加用户 / 删除用户&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;添加&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# useradd 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;说明:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;.当创建成功后,会自动创建和用户名同名的家目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;.通过useradd &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; /目录/ 用户名,指定目录,新的用户名,给新创建的用户指定家目录,注意:不用提前创建家目录因为自己创建的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# useradd -d /home/nidejia/ tom&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;删除&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;.删除用户但保留家目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# userdel 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;.删除用户与家目录一并删除,不用指定目录位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# userdel -r 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;细节:讨论是否保留家目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;建议:保留,毕竟删了就找不回来了&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;指定修改用户密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指定修改用户密码&#34;&gt;#&lt;/a&gt; 指定 / 修改用户密码&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;passwd是password的缩写是密码的意思&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt; 用户名,注意:如果不指定密码则修改当前的用户密码很危险&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# passwd zwj&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;显示当前所在目录位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#显示当前所在目录位置&#34;&gt;#&lt;/a&gt; 显示当前所在目录位置&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pwd:显示当前所在目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# pwd&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;查询用户信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询用户信息&#34;&gt;#&lt;/a&gt; 查询用户信息&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;翻译:此用户不存在 id: jack: no such user&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# id 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;输出 &lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;用户名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1003&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;group&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 组&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1003&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;group&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;查询当前用户第一次登入的用户信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询当前用户第一次登入的用户信息&#34;&gt;#&lt;/a&gt; 查询当前用户 / 第一次登入的用户信息&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# who am i&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;输出: root     pts/0        &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-09-29 &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;:43 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.244.1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;切换用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#切换用户&#34;&gt;#&lt;/a&gt; 切换用户&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# su - dkx&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果低权限转高权限则需要密码,反之高权限转低权限不需要密码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;通过logout指令回到上次的登入状态,注意此指令只能在Xshell中使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;logout&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果上次没有登入记录则退出登入&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# logout&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Connection closed. 翻译:连接关闭&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;解释图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019191019613.png&#34; alt=&#34;image-20221019191019613&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;用户组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户组&#34;&gt;#&lt;/a&gt; 用户组&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019191034275.png&#34; alt=&#34;image-20221019191034275&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;新增组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新增组&#34;&gt;#&lt;/a&gt; 新增组:&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# groupadd 组名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;查看组的位置&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /etc/group&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;查看指定的组&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost home&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /etc/group|grep 组名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;与上面的cat /etc/group&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; 组名 大同小异&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# getent group 组名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;删除组&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# groupdel 组名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;增加用户时直接存入组中&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# useradd -g 组名 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;可以通过id来查询这个用户的组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;修改用户的组&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# usermod -g 组名 用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;可以通过id来查询这个用户的组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;关机指令注销&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关机指令注销&#34;&gt;#&lt;/a&gt; 关机指令 / 注销&lt;/h2&gt;
&lt;p&gt;&lt;mark&gt;注意&lt;/mark&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不管是重启系统还是关闭系统，首先要运行 == &lt;code&gt;sync&lt;/code&gt; == 指令，把内存中的数据写到磁盘中&lt;/li&gt;
&lt;li&gt;目前的 shutdown/reboot/halt 等命令均已经在关机前进行了 == &lt;code&gt;sync&lt;/code&gt; ==,&lt;mark&gt; 提醒&lt;/mark&gt;：小心使得万年船&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;shutdown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt; now ---立刻进行关机&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;shutdown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt; 指定分钟 ---指定分钟后关机&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;shutdown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; now ---现在重新启动计算机&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;halt&lt;/span&gt; ---关机,作用和上面一样&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt; ---现在重新启动计算机&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sync&lt;/span&gt; ---把内存的数据同步到磁盘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;logout/exit ---注销/登出&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;logout [^ 示意图]&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019190932609-1666177777190-1.png&#34; alt=&#34;image-20221019190932609&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;文件-a-href-删除目录或文件-删除目录或文件-查看其它相关标题-a&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件-a-href-删除目录或文件-删除目录或文件-查看其它相关标题-a&#34;&gt;#&lt;/a&gt; 文件 &lt;a href = &#34;#删除目录或文件&#34;&gt; 删除目录或文件 查看其它相关标题 &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;修改文件所在组查看 (&lt;a href=&#34;http://xn--zouo53b.md&#34;&gt;用户.md&lt;/a&gt;)&lt;/strong&gt;[&lt;a href=&#34;http://xn--h0tn5emc213g.md&#34;&gt;打开用户.md&lt;/a&gt;](E:\Typora\ 笔记 \Linux\CentOS 7 Linux\ 指令 \&lt;a href=&#34;http://xn--zouo53b.md&#34;&gt; 用户.md&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;chgrp&lt;/span&gt; 组名 文件名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;创建一个文件touch&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建一个文件touch&#34;&gt;#&lt;/a&gt; 创建一个文件 (touch)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-a:&lt;/code&gt;  只修改文件的读取时间 (access)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-m:&lt;/code&gt;  只修改文件的修改时间 (modify)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-c:&lt;/code&gt;  若指定的文件不存在，不创建新的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-d:&lt;/code&gt;  修改时指定日期时间，而不是当前的系统时间，可设定多种格式 (date)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-r:&lt;/code&gt;  将指定文档和目录的日期时间设置成为与参考文档或目录日期时间一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-t:&lt;/code&gt;  使用过指定的时间，而不是当前的系统时间，可设定多种格式 (time)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 二进制文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; 文件名.后缀名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;查看文件内容cat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看文件内容cat&#34;&gt;#&lt;/a&gt; 查看文件内容 (cat)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-b:&lt;/code&gt;  查看文件时对于空白行不编号&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-E:&lt;/code&gt;  每行结尾显示 $ 符号&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-n:&lt;/code&gt;  查看文件时对每一行进行显示行号，从 1 开始计数&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-s:&lt;/code&gt;  当遇到两行以上的空白行时替换为一行空白行&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-T:&lt;/code&gt;  将 tab 字符显示为 ^|&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; 文件名.后缀名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;cat&lt;/code&gt;  只能浏览文件，而不能修改文件，为了方便，一般会带上&lt;font size=4,font color=red&gt;管道命令&lt;/font&gt; &lt;code&gt;|more&lt;/code&gt;  分页查看&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; 文件名.后缀名 &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看文件内容并以分页的形式展示出来&lt;/p&gt;
&lt;p&gt;关于 more 详情查看&lt;a href=&#34;#more&#34;&gt;more 介绍&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;管道符号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#管道符号&#34;&gt;#&lt;/a&gt; 管道符号 (|)&lt;/h3&gt;
&lt;p&gt;在一个语句后面加上  &lt;code&gt;|&lt;/code&gt;  表示将前一个命令的处理结果输出传递给后面的命令再次处理&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 过滤 test.txt 文件内容并以分页形式展现&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; he text.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;编辑文件vivim&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编辑文件vivim&#34;&gt;#&lt;/a&gt; 编辑文件 (vi/vim)&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; 文件名.后缀名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;拷贝文件或目录cp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拷贝文件或目录cp&#34;&gt;#&lt;/a&gt; 拷贝文件或目录 (cp)&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将 data 目录下的 test.txt 文件拷贝到 tmp 目录中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; /data/test.txt &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;一个空格&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /tmp/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;将 test.txt 文件拷贝到当前目录下&lt;/strong&gt; (. 为当前目录下), 使用特殊符号 &lt;code&gt;.&lt;/code&gt;  表示当前目录&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; /root/data/test.txt &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 &lt;code&gt;cp -r&lt;/code&gt;  命令，拷贝目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-r:&lt;/code&gt;  为递归拷贝，拷贝目录及目录里的内容&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-p:&lt;/code&gt;  拷贝时保持文件属性不变&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-a:&lt;/code&gt;  为拷贝所有，与参数 &lt;code&gt;-pdr&lt;/code&gt;  等价&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-d:&lt;/code&gt;  若复制的源文件是符号链接，仅复制链接本身，并且保留符号链接所指向的目标文件或目录，复制时保留链接&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  强制覆盖已经存在的目标文件，不提示用户进行确认&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-i:&lt;/code&gt;  在覆盖已经存在的目标文件前提示用户进行确认，防止覆盖重要文件&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-l:&lt;/code&gt;  为源文件创建硬链接，与 ln 命令相同，(要求源文件和目标文件必须在同一个分区或同一个文件系统上)&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-p:&lt;/code&gt;  复制文件时保留源文件的所有者，权限信息及事件属性&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-u:&lt;/code&gt;  在目标文件不存在或源文件比目标文件新时才进行复制，否则，不进行复制&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-S:&lt;/code&gt;  在备份文件时，用指定的后缀 SUFFIX 代替文件名的默认后缀&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-v:&lt;/code&gt;  详细显示命令执行的操作&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-s:&lt;/code&gt;  不进行真正的复制操作，仅为源文件创建符号链接，与 ls -s 功能相同&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将 data 目录下内容递归拷贝到 tmp 目录中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; /data/ /tmp/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 如果再次执行就会提示是否覆盖如果内容过多可以直接使用以下两种方式强制覆盖不提示&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;cp &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; /data/ /tmp/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /data/ /tmp/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;移动文件或目录mv注意移动跟拷贝不是一样含义的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动文件或目录mv注意移动跟拷贝不是一样含义的&#34;&gt;#&lt;/a&gt; 移动文件或目录 (mv)(注意：移动跟拷贝不是一样含义的)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;mv&lt;/code&gt;  命令，全名为 &lt;code&gt;move&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数: &lt;code&gt;-i:&lt;/code&gt;  在目标文件已存在时提示用户是否覆盖&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  强制覆盖已存在的目标文件而不进行提示&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-b:&lt;/code&gt;  在覆盖目标文件前进行备份&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-S:&lt;/code&gt;  与参数 b 一起使用，可指定备份文件的所有附加的字尾&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将 data 目录移动到 root 目录中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /data/ /root/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;将 /data/ 目录移动到当前目录下，使用特殊符号 &lt;code&gt;.&lt;/code&gt;  表示当前目录&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /data/ &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;查找当前位置的文件或目录find&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查找当前位置的文件或目录find&#34;&gt;#&lt;/a&gt; 查找当前位置的文件或目录 (find)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;find&lt;/code&gt;  命令，查找文件或目录&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-type&lt;/td&gt;
&lt;td&gt;查找类型，f 为文件 file&lt;br&gt;d 为目录 directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-name&lt;/td&gt;
&lt;td&gt;查找名称，可以使用 &lt;code&gt;*&lt;/code&gt;  作为通配符&lt;br&gt;匹配名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-user&lt;/td&gt;
&lt;td&gt;查找属于指定用户的所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-size&lt;/td&gt;
&lt;td&gt;按指定大小查找文件 (+n 大于 -n 小于 n 等于，单位有 k,M,G)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在 /opt/typora/ 目录中，查找 /note/ 目录，找到则输出位置，否则不输出&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 要找到的目录不能带有 / 符号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/typora/ -type d -name note&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在 /opt/typora/note/ 目录中，查找 MySQL.dm 文件，找到则输出，否则不输出&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/typora/note/ -type f -name MySQL.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note/MySQL.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;*&lt;/code&gt;  作为通配符，匹配名称&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/ -type d -name typo*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;*&lt;/code&gt;  通配符查找 /opt/typora/note/ 目录下所有后缀名为.md 的文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/typora/note -type f -name *.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note/MySQL.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note/test.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note/cha.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;find&lt;/code&gt;  命令与管道 &lt;code&gt;|&lt;/code&gt;  配合使用，管道的意思是， &lt;code&gt;|&lt;/code&gt;  前面的命令执行成功后，交给后面的命令再执行&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查找 /opt/typora/note/ 目录下后缀名为 md 的文件并执行 ls 命令将它们列出来&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/typora/note/ -type f -name *.md | xargs ls&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/typora/note/cha.md  /opt/typora/note/MySQL.md  /opt/typora/note/test.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查找 /opt/typora/note/ 目录下后缀名为.md 的文件，并执行 cat 命令查看内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# find /opt/typora/note/ -type f -name *.md |xargs cat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二进制文件夹Linux你好&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查找 /opt 目录下属于 root 的所有文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /opt &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; d &lt;span class=&#34;token parameter variable&#34;&gt;-user&lt;/span&gt; root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/rh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/JDK17&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/IDEA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/dataGrip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/MySQL&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/MEIPreload&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/WidevineCdm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/WidevineCdm/_platform_specific&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/WidevineCdm/_platform_specific/linux_x64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/default_apps&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/locales&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/googlechajian&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/tujie&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;从 / 目录查找，大于 200M (兆) 的文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /opt &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; f &lt;span class=&#34;token parameter variable&#34;&gt;-size&lt;/span&gt; +200M&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/IDEA/ideaIU-2021.3.3.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/dataGrip/datagrip-2021.3.3.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/MySQL/mysql-8.0.28-1.el7.x86_64.rpm-bundle.tar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/MySQL/mysql-community-server-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/MySQL/mysql-community-test-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;/opt/google/chrome-unstable/chrome&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;定位文件路径locate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位文件路径locate&#34;&gt;#&lt;/a&gt; 定位文件路径 (locate)&lt;/h3&gt;
&lt;p&gt;locate 指令可以&lt;font color=red&gt;快速定位文件路径&lt;/font&gt;,locate 指令利用事先建立的系统中所有文件名称及路径的&lt;mark&gt; locate 数据库实现快速定位给定的文件&lt;/mark&gt;，locate 指令&lt;mark&gt;无须遍历整个文件系统，查询速度较快&lt;/mark&gt;，为了&lt;mark&gt;保证查询结果的准备度&lt;/mark&gt;，&lt;mark&gt; 管理员必须定期更新 locate 时刻&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;基本语法:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 建立数据库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;updatedb&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 使用 locate 快速定位文件路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;locate&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;文件/目录&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;font color=blue&gt;&lt;strong&gt;特别说明:&lt;/strong&gt;&lt;/font&gt;由于 locate 指令基于数据库进行查询，所以第一次运行前必须使用&lt;strong&gt; updatedb&lt;/strong&gt; 指令&lt;font color =red&gt;创建数据库&lt;/font&gt;.&lt;/p&gt;
&lt;h2 id=&#34;查看指令所存放的目录中的位置which&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看指令所存放的目录中的位置which&#34;&gt;#&lt;/a&gt; 查看指令所存放的目录中的位置 (which)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;which 指令会在环境变量 $PATH 设置的目录里查找符合条件的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;在文件内容中筛选出执行内容grep&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#在文件内容中筛选出执行内容grep&#34;&gt;#&lt;/a&gt; 在文件内容中筛选出执行内容 (grep)&lt;/h3&gt;
&lt;h3 id=&#34;方法1使用grep命令筛选文件指定内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法1使用grep命令筛选文件指定内容&#34;&gt;#&lt;/a&gt; 方法 1, 使用 &lt;code&gt;grep&lt;/code&gt;  命令，筛选文件指定内容&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;排除指定内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;显示行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;test.txt&lt;/code&gt;  文件内容中，找到包含 &lt;code&gt;he&lt;/code&gt;  的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# grep he /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;test.txt&lt;/code&gt;  文件内容中，找到排除 he 的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# grep -v he /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;方法2使用awk命令筛选文件指定内容查找的内容需要使用内容包含&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法2使用awk命令筛选文件指定内容查找的内容需要使用内容包含&#34;&gt;#&lt;/a&gt; 方法 2, 使用 &lt;code&gt;awk&lt;/code&gt;  命令，筛选文件指定内容 (查找的内容需要使用 &lt;code&gt;&#39;/内容/&#39;&lt;/code&gt;  包含)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;test.txt&lt;/code&gt;  文件内容中，找到包含 he 的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# awk &#39;/he/&#39; /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;test.txt&lt;/code&gt;  文件内容中，查找不包含 he 的内容 (语法: &lt;font color = Re,font size=5&gt; &lt;code&gt;!&#39;/内容/&#39;&lt;/code&gt; &lt;/font&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# awk &#39;!/he/&#39; /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;方式3使用sed命令筛选文件指定内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方式3使用sed命令筛选文件指定内容&#34;&gt;#&lt;/a&gt; 方式 3, 使用 &lt;code&gt;sed&lt;/code&gt;  命令，筛选文件指定内容&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;sed&lt;/code&gt;  命令，获取 &lt;code&gt;test.txt&lt;/code&gt;  文件内容，删除 (并不是删除文件中的) 包含 he 字符的行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hello&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# sed &#39;/he/d&#39; /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中参数 &lt;code&gt;&#39;/he/d&#39;&lt;/code&gt;  表示删除包含 &lt;code&gt;he&lt;/code&gt;  的选项行，最后的结果是不包含 he 的行&lt;/p&gt;
&lt;h3 id=&#34;获取文件内容的前几行head&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取文件内容的前几行head&#34;&gt;#&lt;/a&gt; 获取文件内容的前几行 (head)&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;head&lt;/code&gt;  命令，取出文件的前几行，默认取出前 10 行&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-n [数字]&lt;/td&gt;
&lt;td&gt;表示取出前几行&lt;br&gt;例如 &lt;code&gt;-n2&lt;/code&gt;  表示取出前 2 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-[数字]&lt;/td&gt;
&lt;td&gt;表示取出前几行&lt;br&gt;例如 &lt;code&gt;-2&lt;/code&gt;  表示取出前 2 行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用 &lt;code&gt;head -n2&lt;/code&gt;  命令，取出 &lt;code&gt;test.txt&lt;/code&gt;  文件的前 2 行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# head -2 /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;获取文件内容的最后几行tail&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取文件内容的最后几行tail&#34;&gt;#&lt;/a&gt; 获取文件内容的最后几行 (tail)&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;tail&lt;/code&gt;  命令，取出文件最后几行，默认去处最后 10 行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  实时追踪该文件的所有更新&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-n [数字]&lt;/td&gt;
&lt;td&gt;表示取出最后几行&lt;br&gt;例如 - n2 表示取出最后 2 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-[数字]&lt;/td&gt;
&lt;td&gt;表示取出最后几行&lt;br&gt;例如 - 2 表示取出最后 2 行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# tail -2 /opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hello&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;获取文件某一行或连续几行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取文件某一行或连续几行&#34;&gt;#&lt;/a&gt; 获取文件某一行，或连续几行&lt;/h4&gt;
&lt;p&gt;题目：有一个 &lt;code&gt;text.txt&lt;/code&gt;  文件，共有 100 行，要求显示出文件中的第 50 行至第 60 行内容&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;seq&lt;/code&gt;  命令，给 &lt;code&gt;test.txt&lt;/code&gt;  文件写入 100 行内容&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# seq 100 &gt;/opt/typora/note/test.md&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 sed 替换指定&lt;/p&gt;
&lt;h4 id=&#34;方法1使用sed命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法1使用sed命令&#34;&gt;#&lt;/a&gt; 方法 1, 使用 &lt;code&gt;sed&lt;/code&gt;  命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;获取文件第 50 行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost /&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# sed -n &#39;50p&#39; /opt/typora/note/test.md &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;sed&lt;/code&gt;  命令默认输出文件全部内容，使用参数 &lt;code&gt;-n&lt;/code&gt;  取消默认输出， &lt;code&gt;&#39;50p&#39;&lt;/code&gt;  表示只输出第 50 行内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取文件第 50 到 60 行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# sed -n &#39;50,60p&#39; /opt/typora/note/test.md &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;51&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;52&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;53&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;56&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;57&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;58&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;59&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;把参数改成’50,60p’即可&lt;/p&gt;
&lt;h4 id=&#34;方法2使用head和tail命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法2使用head和tail命令&#34;&gt;#&lt;/a&gt; 方法 2, 使用 &lt;code&gt;head&lt;/code&gt;  和 &lt;code&gt;tail&lt;/code&gt;  命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;首先，使用 &lt;code&gt;tail&lt;/code&gt;  命令获取倒数 20 行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# tail -20 /opt/typora/note/test.md &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;81&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;82&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;83&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;84&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;85&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;86&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;87&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;88&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;89&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;90&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;91&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;92&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;93&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;94&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;95&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;96&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;97&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;98&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;然后使用 &lt;code&gt;|&lt;/code&gt;  管道加 &lt;code&gt;head&lt;/code&gt;  命令，获取第 50 到 60 行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# tail -50 /opt/typora/note/test.md |head -10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;51&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;52&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;53&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;56&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;57&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;58&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;59&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;方法3使用awk命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法3使用awk命令&#34;&gt;#&lt;/a&gt; 方法 3, 使用 &lt;code&gt;awk&lt;/code&gt;  命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;获取文件第 50 行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# awk &#39;NR==50&#39; /opt/typora/note/test.md &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数中 &lt;code&gt;NR&lt;/code&gt;  表示行号， &lt;code&gt;==&lt;/code&gt;  表示等于&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取文件第 50 到 60 行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# awk &#39;NR==50,NR==60&#39; /opt/typora/note/test.md &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;51&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;52&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;53&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;56&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;57&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;58&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;59&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数中添加 &lt;code&gt;&#39;NR==60&#39;&lt;/code&gt; , 限定行号范围，从第 50 行到第 60 行的内容&lt;/p&gt;
&lt;h3 id=&#34;修改文件名mv&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改文件名mv&#34;&gt;#&lt;/a&gt; 修改文件名 (mv)&lt;/h3&gt;
&lt;p&gt;例如：吧 &lt;code&gt;abc.txt&lt;/code&gt;  文件重命名为 &lt;code&gt;abc123.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=red&gt;注意&lt;/font&gt;: 这是文件重命名，不是移动文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;mv&lt;/code&gt;  命令，必须保证 &lt;code&gt;abc123.txt&lt;/code&gt;  文件是不存在的，正是因为文件不存在，所以在使用 &lt;code&gt;mv&lt;/code&gt;  命令时，直接重命名了该文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建一个文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost opt&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cd typora/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ls&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;note  Typora-linux-x64  Typora-linux-x64&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mkdir test&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ls&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;note  &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;  Typora-linux-x64  Typora-linux-x64&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mv test/ 测试文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost typora&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ls&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;note  Typora-linux-x64  Typora-linux-x64&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;.tar.gz  测试文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;写入文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写入文件&#34;&gt;#&lt;/a&gt; 写入文件&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;echo&lt;/code&gt;  命令与 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  追加重定向符号，将内容写入某个文件内的最后一行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将 &#34;Hello Linux&#34; 这句话写入到 Demo.txt 文件的最后一行中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; Hello Linux &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; Demo.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;linux重定向相关知识&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux重定向相关知识&#34;&gt;#&lt;/a&gt; Linux 重定向相关知识&lt;/h2&gt;
&lt;p&gt;配合 echo 使用，echo 原本输出到终端中，如果使用重定向那么就会输出到一个文件中&lt;/p&gt;
&lt;p&gt;水流：从一个地方流向另一个地方&lt;/p&gt;
&lt;p&gt;如果目标文件不存在则会创建目标文件&lt;/p&gt;
&lt;p&gt;数据流: &amp;gt; 从左流向右&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;  把输出的内容写入到右边的文件，同时清理右边源文件内容，放入新写入的内容:&lt;/p&gt;
&lt;p&gt;鸠占鹊巢 :&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# echo 1 &gt;test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  把输出写入到文件，源文件内容不动，在尾部放入写入的内容&lt;/p&gt;
&lt;p&gt;1 &amp;gt;&amp;gt; 和 &amp;gt;&amp;gt; 相同，接收，标准 [追加] [输出] 重定向 === 正确的输出&lt;/p&gt;
&lt;p&gt;鸠鹊同居:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# echo 1 &gt;&gt;test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt; (没有空格) 标准 [错误] [输出] 重定向 === 错误的输出:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cho 2&gt;test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost 测试文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat test.txt &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bash: cho: 未找到命令&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;向文件中输出 1~100 个数字&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;seq&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;text.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将日期输出重定向到 test 文件中&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost 桌面&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;cal&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      十月 &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;日 一 二 三 四 五 六&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost 桌面&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;cal&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;test&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost 桌面&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      十月 &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;日 一 二 三 四 五 六&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost 桌面&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;文件夹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件夹&#34;&gt;#&lt;/a&gt; 文件夹&lt;/h2&gt;
&lt;h3 id=&#34;创建文件夹目录mkdir&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建文件夹目录mkdir&#34;&gt;#&lt;/a&gt; 创建文件夹 / 目录 (mkdir)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-m:&lt;/code&gt;  设置新目录的存取权限，类似于 chmod&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-p:&lt;/code&gt;  创建多级目录&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 在 test 目录下 创建一级目录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost opt&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mkdir test/demo&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 在 test 目录下 创建多级目录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost opt&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# mkdir -p test/demoa/demob&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;rmdir删除空文件夹不可删除非空文件夹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rmdir删除空文件夹不可删除非空文件夹&#34;&gt;#&lt;/a&gt; rmdir (删除空文件夹，不可删除非空文件夹)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;--ignore-fail-on-non-empty:&lt;/code&gt;  忽略数据存在目录非空产生的错误&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-p:&lt;/code&gt;  递归删除各级目录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其它删除文件夹操作详情查看 (rm):&lt;/strong&gt; &lt;a href=&#34;#删除目录或文件&#34;&gt;删除目录或文件&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;more&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#more&#34;&gt;#&lt;/a&gt; more&lt;/h2&gt;
&lt;p&gt;Linux  &lt;code&gt;more&lt;/code&gt;  命令类似于 &lt;code&gt;cat&lt;/code&gt; , 不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键 (space), 就往下一页显示，按 b 键就会往回 (back) 一页显示，而且还有搜寻字符串的功能 (与 &lt;code&gt;vi&lt;/code&gt;  相似), 使用中的说明文件，请按 &lt;code&gt;h&lt;/code&gt; , 退出命令 &lt;code&gt;q&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按 &lt;code&gt;Space&lt;/code&gt;  键：显示文本的下一屏内容&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;Enter&lt;/code&gt;  键：只显示文本的下一行内容&lt;/li&gt;
&lt;li&gt;按斜线符 &lt;code&gt;|&lt;/code&gt; : 接着输入一个模式，可以在文本中寻找下一个相匹配的模式&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;H&lt;/code&gt;  键：显示帮助屏，该屏上有相关的帮助信息&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;B&lt;/code&gt;  键：显示上一行屏内容&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;Q&lt;/code&gt;  键：退出 more 命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+F&lt;/code&gt;  向下滚动一屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;  输出当前行的行号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:f&lt;/code&gt;  输出文件名和当前行的行号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;  调用 vi 编辑器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;  命令，调用 shell, 并执行命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;参数&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;文件&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;&amp;lt;数字&amp;gt;&lt;/code&gt; : 指定每屏显示的行数&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-d&lt;/code&gt; : 显示 &amp;quot;[press space to continue,‘q’ to quit]“和”[perss ‘h’ for instructions]&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--More--&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;68&lt;/span&gt;%&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Press space to continue, &lt;span class=&#34;token string&#34;&gt;&#39;q&#39;&lt;/span&gt; to quit.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-c&lt;/code&gt; : 不进行滚屏操作，每次刷新这个屏幕&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-s&lt;/code&gt; : 将多个空行压缩成一行显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-u&lt;/code&gt; : 禁止下划线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;+&amp;lt;数字&amp;gt;&lt;/code&gt; : 从指定数字的行开始显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-l&lt;/code&gt; : 取消遇见特殊字元 ^L (送纸字元) 时会暂停的功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 &lt;code&gt;-p&lt;/code&gt; : 不以卷动的方式显示每一页，而是先清除荧幕后再显示内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分屏查看less&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分屏查看less&#34;&gt;#&lt;/a&gt; 分屏查看 less&lt;/h2&gt;
&lt;p&gt;less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端，less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率&lt;/p&gt;
&lt;p&gt;常用操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;space bar: 向下翻动一页&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[pagedown] : 向下翻动一页&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[pageup] : 向上翻动一页&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/ 字串：向下搜寻 [字串] 的功能； &lt;code&gt;n&lt;/code&gt; : 向下查； &lt;code&gt;N&lt;/code&gt; : 向上查找&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;? 字串：向上搜寻 [字串] 的功能； &lt;code&gt;n&lt;/code&gt;  向上查找； &lt;code&gt;N&lt;/code&gt;  向下查找&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;q : 离开 less 这个程序&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本语法:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;文件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-b:&amp;lt;缓冲区大小&amp;gt;设置缓冲区的大小&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-e:&lt;/code&gt;  当文件显示结束后，自动离开&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  强迫打开特殊文件，例如外围设备代号，目录和二进制文件&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-g:&lt;/code&gt;  只标志追后搜索的关键词&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-i:&lt;/code&gt;  忽略搜索时的大小写&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-m:&lt;/code&gt;  显示类似 more 命令的百分比&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-N:&lt;/code&gt;  显示每行的行号&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-o&amp;lt;文件名&amp;gt;:&lt;/code&gt;  将 less 输出的内容在指定文件中保存起来&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-Q:&lt;/code&gt;  不使用警告音&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-s:&lt;/code&gt;  显示连续空行为一行&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-S:&lt;/code&gt;  行过长时间将超出部分舍弃&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-x&amp;lt;数字&amp;gt;:&lt;/code&gt;  将 &amp;quot;tab&amp;quot; 键显示为规定的数字空格&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;输出重定向查看a-href-linux重定向相关知识oa内容到控制台echo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#输出重定向查看a-href-linux重定向相关知识oa内容到控制台echo&#34;&gt;#&lt;/a&gt; 输出 (重定向查看&lt;a href =&#34;#Linux重定向相关知识&#34;&gt;o&lt;/a&gt;) 内容到控制台 (echo)&lt;/h2&gt;
&lt;p&gt;echo 命令用于在 shell 中打印 shell 变量的值，或者直接输出指定的字符串，linux 的 echo 命令，在 shell 编程中极为常用。在终端下打印变量 value 的时候也是常常用到的。因此有必要了解下 echo 的用法 echo 命令的功能是在显示器上显示一段文字，一般起到一个提示的作用&lt;/p&gt;
&lt;p&gt;使用 echo 输出环境变量演示:&lt;/p&gt;
&lt;p&gt;输出环境变量前面要加上 $ 并且大写&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$PATRH&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token environment constant&#34;&gt;$HOSTNAME&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;参数&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;输出内容&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-e:&lt;/code&gt;  激活转移字符，使用 &lt;code&gt;-e&lt;/code&gt;  参数时，若字符串中出现以下字符，则特殊加以处理，而不会将它当成一般文字输出:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\a:&lt;/code&gt;  发出警告声&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\b:&lt;/code&gt;  删除前一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\c:&lt;/code&gt;  最后不加上换行符号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\f:&lt;/code&gt;  换行但光标仍旧停留在原来的位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\n:&lt;/code&gt;  换行但光标移至行首&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\r:&lt;/code&gt;  光标移至行首，但不换行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\t:&lt;/code&gt;  插入 rab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\v:&lt;/code&gt;  与 \f 相同&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\\:&lt;/code&gt;  插入 \ 字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\nnn:&lt;/code&gt;  插入 nnn (八进制) 所代表的的 ASCII 字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实例:&lt;/p&gt;
&lt;p&gt;设置文字颜色和样式&lt;/p&gt;
&lt;p&gt;颜色码：重置 = 0; 黑色 = 30; 绿色 = 31; 黄色 = 33; 蓝色 = 34; 洋红 = 35; 青色 = 36; 白色 = 37&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示格式:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[36m 你好阿 &lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[0m&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;你好阿&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;此时这个字体是青色的&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;背景色：重置 = 0; 黑色 = 40; 红色 = 41; 绿色 = 42; 黄色 = 43; 蓝色 = 44; 洋红 = 45; 青色 = 46; 白色 = 47&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示格式:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[41m 你好阿 &lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[0m&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 你好阿 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;此时这个字体的背景颜色是红色的&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;文字样式：关闭所有属性 = 0; 设置高亮度 (加粗)=1; 下划线 = 4; 闪烁 = 5; 反显 = 7; 消隐 = 8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示格式:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[5m 你好阿 &lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[0m&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 你好阿&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;此时这个字体为闪烁状态&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;组合演示:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dkx@localhost ~&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[7;36;41m 你好Linux &lt;span class=&#34;token entity&#34; title=&#34;\e&#34;&gt;\e&lt;/span&gt;[1m&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221022185908381.png&#34; alt=&#34;image-20221022185908381&#34;&gt;&lt;/p&gt;
&lt;p&gt;ANSI 控制码说明:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[0m:&lt;/code&gt;  关闭所有属性&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[1m:&lt;/code&gt;  设置高亮度&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[4m:&lt;/code&gt;  下划线&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[5m:&lt;/code&gt;  闪烁&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[7m:&lt;/code&gt;  反显&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[8m:&lt;/code&gt;  消隐&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[30m--\33[37m:&lt;/code&gt;  设置前景色&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[40m--\33[47m:&lt;/code&gt;  设置背景色&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[nA:&lt;/code&gt;  光标上移 n 行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[nB:&lt;/code&gt;  光标下移 n 行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[nC:&lt;/code&gt;  光标右移 n 行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[nD:&lt;/code&gt;  光标左移 n 行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[y;xH:&lt;/code&gt;  设置光标位置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[2J:&lt;/code&gt;  清屏&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[K:&lt;/code&gt;  清除从光标到行尾的内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[s:&lt;/code&gt;  保存光标位置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[u:&lt;/code&gt;  恢复光标位置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[?25|:&lt;/code&gt;  隐藏光标&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\33[?25h:&lt;/code&gt;  显示光标&lt;/p&gt;
&lt;h2 id=&#34;符号链接ln&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#符号链接ln&#34;&gt;#&lt;/a&gt; 符号链接 (ln)&lt;/h2&gt;
&lt;p&gt;软连接也称为符号链接，类似于 Windows 里的快捷方式，主要存放了链接其它文件的路径&lt;/p&gt;
&lt;p&gt;示意图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221022223300608.png&#34; alt=&#34;image-20221022223300608&#34;&gt;&lt;/p&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;原文件或目录&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;目标文件或目录&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#功能描述：给原文件创建一个软连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;刪除软连接使用 &lt;code&gt;rm&lt;/code&gt;  删除掉软连接的那个文件夹即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;查看或执行历史命令history&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看或执行历史命令history&#34;&gt;#&lt;/a&gt; 查看或执行历史命令 (history)&lt;/h2&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看历史命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;history&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 显示历史使用的 n 个命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;history&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;数字&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 执行历史命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;数字执行历史命令&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;显示当前进程的状态ps&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#显示当前进程的状态ps&#34;&gt;#&lt;/a&gt; 显示当前进程的状态 (ps)&lt;/h2&gt;
&lt;p&gt;ps (英文全拼:&lt;strong&gt;process stafus&lt;/strong&gt;) 命令用于显示当前进程的状态，类似于 windows 的任务管理器&lt;/p&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;--help&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-A:&lt;/code&gt;  列出所有的进程&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-w:&lt;/code&gt;  显示加宽可以显示较多的资讯&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-au:&lt;/code&gt;  显示较详细的资讯&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-aux:&lt;/code&gt;  显示所有包含其它使用者的进程&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-e:&lt;/code&gt;  显示所有进程&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  全格式&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-h:&lt;/code&gt;  不显示标题&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-l:&lt;/code&gt;  长格式&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-r:&lt;/code&gt;  指显示正在运行的进程&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-x:&lt;/code&gt;  显示没有控制终端的进程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;USER:&lt;/code&gt;  行程拥有者&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PID:&lt;/code&gt; pid&lt;/p&gt;
&lt;p&gt;&lt;code&gt;%CPU:&lt;/code&gt;  占用的 cpu 是用率&lt;/p&gt;
&lt;p&gt;&lt;code&gt;%MEM:&lt;/code&gt;  占用的记忆体使用率&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VSZ:&lt;/code&gt;  占用的虚拟记忆体大小&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RSS:&lt;/code&gt;  占用的记忆体大小&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TTY:&lt;/code&gt;  终端的次要装置号码 (minor device number of tty)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;STAT:&lt;/code&gt;  该行程的状态:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;D:&lt;/code&gt;  无法终端的休眠状态 (通常 io 的进程)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R:&lt;/code&gt;  正在执行中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S:&lt;/code&gt;  静止状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T:&lt;/code&gt;  暂停执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Z:&lt;/code&gt;  不存在但暂时无法消除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;W:&lt;/code&gt;  没有足够的记忆体分页可分配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;:&lt;/code&gt;  高优先序的行程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N:&lt;/code&gt;  低优先序的行程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;L:&lt;/code&gt;  有记忆体分页分配并锁在记忆体内 (实时系统或捱 A I/O)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;START:&lt;/code&gt;  行程开始时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TIME:&lt;/code&gt;  执行的时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMMAND:&lt;/code&gt;  所执行的指令&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结束进程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结束进程&#34;&gt;#&lt;/a&gt; 结束进程:&lt;/h3&gt;
&lt;p&gt;通过指令查看进程 PID&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; -ef&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;进程名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后得到 PID 再通过指令来终止这个进程&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-9&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;PID&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;当使用此命令时，一定要通过 &lt;code&gt;ps -ef&lt;/code&gt;  确认没有剩下任何僵尸进程，只能通过终止父进程来消除僵尸进程，如果僵尸进程被 init 收养，问题就比较严重了，杀死 init 进程意味着关闭系统，如果系统中有僵尸进程，并且其父进程是 init, 而且僵尸进程占用了大量的系统资源，那么就需要在某个时候重启机器以清除进程表了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;crond任何调度&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crond任何调度&#34;&gt;#&lt;/a&gt; crond 任何调度&lt;/h2&gt;
&lt;p&gt;crontab 进行，定时任务的设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概述&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;任务调度：是指系统在某个时间执行的特定的命令或程序&lt;br&gt;任务调度分类：1. 系统工作：有些重要的工作必须周而复始的执行。如病毒扫描等&lt;br&gt;个别用户工作：个别用户可能希望执行某些程序，比如对 &lt;code&gt;mysql&lt;/code&gt;  数据库的备份&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-13-34-54.png&#34; alt=&#34;image_2023-01-05-13-34-54&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本语法:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;crontab&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;常用选项&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-e&lt;/th&gt;
&lt;th&gt;编辑 crontab 定时任务&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-l&lt;/td&gt;
&lt;td&gt;查询 crontab 任务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r&lt;/td&gt;
&lt;td&gt;删除当前用户所有的 crontab 任务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;service crond restart&lt;/td&gt;
&lt;td&gt;重启任务调度&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;输入指令 &lt;code&gt;crontab -e&lt;/code&gt;  后进入编辑任务文档&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;案例&lt;/strong&gt;：每隔一分钟执行一次命令: &lt;code&gt;cal &amp;gt; /opt/data.txt&lt;/code&gt;  在 opt 目录下重定向 data 文件内容为当前时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-13-56-27.png&#34; alt=&#34;image_2023-01-05-13-56-27&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;  号之间有空格&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数说明:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;五个占位符说明&lt;/strong&gt;：速记口诀：分，时，月，年，星&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;第一个 *&lt;/td&gt;
&lt;td&gt;一小时当中的第几分钟&lt;/td&gt;
&lt;td&gt;0-59&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第二个 *&lt;/td&gt;
&lt;td&gt;一天当中的第几个小时&lt;/td&gt;
&lt;td&gt;0-23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第三个 *&lt;/td&gt;
&lt;td&gt;一个月当中的第几天&lt;/td&gt;
&lt;td&gt;1-31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第四个 *&lt;/td&gt;
&lt;td&gt;一年当中的第几月&lt;/td&gt;
&lt;td&gt;1-12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第五个 *&lt;/td&gt;
&lt;td&gt;一周当中的星期几&lt;/td&gt;
&lt;td&gt;0-7 (0 和 7 都代表星期日)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;特殊符号的说明&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特殊符号&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;代表任何时间，比如第一个 * 就代表一小时中每分钟都执行一次的意思&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;,&lt;/td&gt;
&lt;td&gt;代表不连续的时间。比如 &amp;quot;0 8,12,16 * * * 命令&amp;quot;, 就代表在每天的 8 点 0 分，12 点 0 分，16 点 0 分都执行一次命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代表连续性的时间范围，比如 &amp;quot;0 5 * * 1-6 命令&amp;quot; , 代表在周一到周六的凌晨 5 点 0 分执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*/n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;代表每个多久执行一次，比如 &amp;quot;*/10 * * * * 命令&amp;quot;, 代表每隔 10 分钟就执行一遍命令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;特定时间执行任务案例&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;45 22 * * * 命令&lt;/td&gt;
&lt;td&gt;在 22 点 45 分执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 17 * * 1 命令&lt;/td&gt;
&lt;td&gt;每周 1 的 17 点 0 分执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 5 1,15 * * 命令&lt;/td&gt;
&lt;td&gt;每月 1 号和 15 号的凌晨 5 点 0 分执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40 4 * * 1-5 命令&lt;/td&gt;
&lt;td&gt;每周一到周五的凌晨 4 点 40 分执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*/10 4 * * * 命令&lt;/td&gt;
&lt;td&gt;每天的凌晨 4 点，每隔 10 分钟执行一次命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 0 1,15  &lt;code&gt;*&lt;/code&gt;  1 命令&lt;/td&gt;
&lt;td&gt;每月 1 号和 15 号，每周 1 的 0 点 0 分都会执行命令，注意：星期几和几号最好不要同时出现，因为它们定义的都是天，非常容易让管理员混乱&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;案例：每隔 1 分钟，将当前日期和日历都追加到 /home/mycal 文件中&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先写脚本:my.sh, 并给其脚本增加可执行权限:x&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /home/mycal.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cal&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /home/mycal.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编辑任务调度:crontab -e&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;每 1 分钟执行一次脚本文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/1 * * * * ~/./my.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-14-41-41.png&#34; alt=&#34;image_2023-01-05-14-41-41&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;at定时任务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#at定时任务&#34;&gt;#&lt;/a&gt; at 定时任务&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;at 命令是一次性定时计划任务，at 的守护进程 atd 会以后台模式运行，检查作业队列来运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认情况下，atd 守护进程每 60 秒检查作业队列，有作业时，会检查作业运行时间，如果时间与当前时间匹配，则运行此作业&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;at 命令是一次性定时计划任务，执行完一个任务后不再执行此任务了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 at 命令的时候，一定要保证 atd 进程的启动，可以使用相关指令来查看&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;at 命令格式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;at &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;时间&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-15-14-39.png&#34; alt=&#34;image_2023-01-05-15-14-39&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ctrl + D 结束 at 命令的输入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;at 命令选项&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-m&lt;/td&gt;
&lt;td&gt;当指定的任务被完成后，将给用户发送邮件，即使没有标准输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-I&lt;/td&gt;
&lt;td&gt;atq 的别名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-d&lt;/td&gt;
&lt;td&gt;atrm 的别名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;显示任务将被执行的时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-c&lt;/td&gt;
&lt;td&gt;打印任务的内容到标准输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-V&lt;/td&gt;
&lt;td&gt;显示版本信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-q &amp;lt;队列&amp;gt;&lt;/td&gt;
&lt;td&gt;使用指定的队列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f &amp;lt;文件&amp;gt;&lt;/td&gt;
&lt;td&gt;从指定文件读入任务而不是从标准输入读入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-t &amp;lt;时间参数&amp;gt;&lt;/td&gt;
&lt;td&gt;以时间参数的形式提交要运行的任务&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;at 时间定义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;at 指定时间的方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;接收在当天的 hh:mm (小时：分钟) 式的时间指定，假如该时间已过去，那么就放在第二天执行，例如：04:00&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 midnight (深夜), noon (中午), teatime (饮茶时间，一般是下午 4 点) 等比较模糊的词语来指定时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采用 12 小时计时制，即在时间后面加上 AM (上午) 或 PM (下午) 来说明是上午还是下午，例如：12pm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定命令执行的具体日期：指定格式为 month day (月日) 或 mm/dd/yy (月 / 日 / 年) 或 dd.mm.yy (日。月. 年) 指定的日期必须跟在指定时间的后面，例如：04:00 2021-03-1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用相对计时法，指定格式为:now+count time-units, now 就是当前时间，time-units 是时间单位，这里能够是 minutes (分钟), hours (小时), days (天), weeks (星期), count 是时间数量，几天，几小时，例如:now+5 minutes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接使用 today (今天), tomorrow (明天) 来指定完成命令的时间&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</guid>
            <title>找回root密码</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E6%89%BE%E5%9B%9Eroot%E5%AF%86%E7%A0%81/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;ol&gt;
&lt;li&gt;首先，启动系统，进入开机界面，在界面中按 &amp;quot;e&amp;quot; 进入编辑界面，如图&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208120620948.png&#34; alt=&#34;image-20240208120620948&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进入编辑界面，使用键盘上的上下键把光标往下移动，找到以 &amp;quot;Linux16&amp;quot; 开头的所在行数，在行的最后面输入: &lt;code&gt;init=/bin/sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019165625164.png&#34; alt=&#34;image-20221019165625164&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;接着，输入 &lt;code&gt;Ctrl+x&lt;/code&gt;  进入单用户模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019165642791.png&#34; alt=&#34;image-20221019165642791&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;接着，在光标闪烁的位置输入:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; remount,rw&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;空格&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意：各个单词间有空格，完成后按 Enter 键&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019165949956.png&#34; alt=&#34;image-20221019165949956&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;在新的一行最后面输入: &lt;code&gt;passwd&lt;/code&gt; , 完成后按键盘的 Enter, 输入密码，然后再次输入确认密码，密码修改后，会显示 &lt;code&gt;passwd ...&lt;/code&gt;  的样式，说明密码修改成功&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019170156539.png&#34; alt=&#34;image-20221019170156539&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019170232196.png&#34; alt=&#34;image-20221019170232196&#34;&gt;&lt;/p&gt;
&lt;p&gt;再次输入密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019170246789.png&#34; alt=&#34;image-20221019170246789&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改成功&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;接着，在鼠标闪烁的位置中 (最后一行中) 输入:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; /.autorelabel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意格式: touch [空格]/ 输入完成后按 Enter&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;继续在光标闪烁的位置中，输入:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; /sbin/init&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意格式:exec [空格]/ 等待系统自动修改密码。完成后，系统就会自动重启，新密码就生效了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20221019170930729.png&#34; alt=&#34;image-20221019170930729&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208120648476.png&#34; alt=&#34;image-20240208120648476&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%AE%89%E8%A3%85%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/</guid>
            <title>linux安装图形化界面</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%AE%89%E8%A3%85%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;开启 CentOS7 以 root 用户登录 (普通用户权限不够) 如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-06-38.png&#34; alt=&#34;image_2023-01-05-20-06-38&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置网络网卡，确保与外网连通 (后续要下载响应的包)&lt;/p&gt;
&lt;p&gt;在命令行界面输入命令 &lt;code&gt;cd /etc/sysconfig/network-script&lt;/code&gt;  进入 &lt;code&gt;network-script&lt;/code&gt;  目录，在输入 ls 命令查看目录下的文件，我们可以看到 &lt;code&gt;ifcfg-ens32&lt;/code&gt;  (有可能有区别) 文件，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208121959783.png&#34; alt=&#34;image-20240208121959783&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入命令 &lt;code&gt;vi ifcfg-ens32&lt;/code&gt;  打开网络配置文件，进行编辑，在文末加上下图所示内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-09-25.png&#34; alt=&#34;image_2023-01-05-20-09-25&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改完成后保存并退出该网络文件，然后重新加载网络配置文件使其生效，命令为 &lt;code&gt;service network restart&lt;/code&gt;  下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-11-08.png&#34; alt=&#34;image_2023-01-05-20-11-08&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后检验是否可以上外网，输入命令 &lt;code&gt;ping -c 3 www.baidu.com&lt;/code&gt;  下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208122013481.png&#34; alt=&#34;image-20240208122013481&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功 ping 通，说明网络配置成功&lt;/p&gt;
&lt;p&gt;安装图形化界面 GNOME 的程序包&lt;/p&gt;
&lt;p&gt;先输入 yum 检查 yum 是否可以正常使用，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-12-38.png&#34; alt=&#34;image_2023-01-05-20-12-38&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入命令 &lt;code&gt;yum grouplist&lt;/code&gt;  列出本系统支持的图形化界面有哪些，我们默认选择 (GNOME Desktop) 下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208122024978.png&#34; alt=&#34;image-20240208122024978&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入命令 &lt;code&gt;yum groupinstall &amp;quot;GNOME Desktop&amp;quot; &amp;quot;Graphical Administration Tools&amp;quot;&lt;/code&gt;  获取并安装图像化界面 GNOME 程序包 (大小写敏感)&lt;/p&gt;
&lt;p&gt;安装过程中会遇到提示 &amp;quot;…is ok?(y/b/n)“直接选择 y, 回车等待自动安装，大约需要 5-10 分钟，提示&amp;quot;Completed”, 表示安装完成，下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208122037130.png&#34; alt=&#34;image-20240208122037130&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 CentOS7 默认启动模式为图形化模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-16-07.png&#34; alt=&#34;image_2023-01-05-20-16-07&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入命令 &lt;code&gt;systemctl get-default&lt;/code&gt;  可查看当前默认的模式为 &lt;code&gt;multi-user.target&lt;/code&gt;  即命令行模式，我们要将它修改为图形化界面模式，下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-05-20-17-14.png&#34; alt=&#34;image_2023-01-05-20-17-14&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启 CentOS 即可为图形化界面&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%AE%89%E8%A3%85zsh%E9%85%8D%E7%BD%AEohmyzsh/</guid>
            <title>CentOS 7 Linux安装ohmyzsh</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%AE%89%E8%A3%85zsh%E9%85%8D%E7%BD%AEohmyzsh/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;最重要的一点：安装 &lt;code&gt;zsh&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;确保在 &lt;code&gt;root&lt;/code&gt;  的用户下，将 zsh 设置为默认的 shell, 然后再更换普通用户切换&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /bin/zsh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看是否切换成功输入指令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /etc/shells&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-03-18-26-19.png&#34; alt=&#34;image_2023-01-03-18-26-19&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果还没有 &lt;code&gt;git&lt;/code&gt;  的话就执行命令，安装 &lt;code&gt;git&lt;/code&gt;  有的话就跳过&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装最关键最有灵魂的插件 &lt;code&gt;oh-my-zsh&lt;/code&gt;  !!!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方推荐的安装方式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上面的方法尽管一步到位，但是在国内，我用上面的方法一直出现 clone 不下来的情况 (不光作者我也是)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果出现一直 &lt;code&gt;clone&lt;/code&gt;  不下来，就采用下面的方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先把 &lt;code&gt;install.sh&lt;/code&gt;  文件下载下来 (这是 &lt;code&gt;gieet&lt;/code&gt;  的国内镜像源)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;然后给 &lt;code&gt;install.sh&lt;/code&gt;  添加权限&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;vim&lt;/code&gt;  打开 &lt;code&gt;install.sh&lt;/code&gt;  发现，有的地方还是 &lt;code&gt;clone github&lt;/code&gt;  的代码，所以做如下修改&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;找到以下部分&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Default settings&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ZSH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;REPO&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;REPO&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;ohmyzsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;ohmyzsh&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;REMOTE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;REMOTE&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;https&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;github.com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;$&amp;#123;REPO&amp;#125;&lt;/span&gt;.git&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;BRANCH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;BRANCH&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;master&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;把中间两行修改为:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;REPO&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;REPO&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;mirrors&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;oh-my-zsh&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;REMOTE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;REMOTE&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;https&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;gitee.com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;$&amp;#123;REPO&amp;#125;&lt;/span&gt;.git&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;然后 &lt;code&gt;:wq!&lt;/code&gt;  保存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后执行 &lt;code&gt;install.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;出现如下说明安装成功了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-03-18-32-29.png&#34; alt=&#34;image_2023-01-03-18-32-29&#34;&gt;&lt;/p&gt;
&lt;p&gt;oh-my-zsh 常用插件&lt;/p&gt;
&lt;p&gt;zsh-syntax-highighting: 提供了语法高亮&lt;/p&gt;
&lt;p&gt;zsh-autosuggestions: 它会根据历史记录和完成情况建议您键入的命令，而且快速 / 不干扰自动提示&lt;/p&gt;
&lt;p&gt;zsh-completions: 命令自动补全&lt;/p&gt;
&lt;p&gt;安装:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-syntax-highlighting.git &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-syntax-highlighting&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-autosuggestions &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-autosuggestions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-completions &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-completions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;你可能会发现，又双叒叕 &lt;code&gt;clone&lt;/code&gt;  不下来，那就复制仓库名，去 &lt;code&gt;gieet&lt;/code&gt;  中搜索，替换连接即可&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://gitee.com/mo2/zsh-syntax-highlighting.git &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-syntax-highlighting&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://gitee.com/yantaozhao/zsh-autosuggestions.git &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-autosuggestions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://gitee.com/wangnd/zsh-completions.git &lt;span class=&#34;token variable&#34;&gt;$&amp;#123;ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&amp;#125;&lt;/span&gt;/plugins/zsh-completions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;下载好了之后，修改 &lt;code&gt;~/.zshrc&lt;/code&gt;  配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;取消配置文件中的第二行注释 &lt;code&gt;注意这不是profile文件&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/bin:/usr/local/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;设置插件当然这个操作也是在配置文件中进行的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改 &lt;code&gt;plugins=(git)&lt;/code&gt;  改成以下命令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;git zsh-completions zsh-autosuggestions zsh-syntax-highlighting&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;autoload &lt;span class=&#34;token parameter variable&#34;&gt;-U&lt;/span&gt; compinit &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; compinit&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后重载下配置文件即可&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; .zshrc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装 zsh 主题 &lt;code&gt;powerlevel9k&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;clone&lt;/code&gt;  不下来可以不屑的多尝试几次毕竟只是网络所造成的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt;  来启用主题，在配置文件中找到 &lt;code&gt;ZSH_THEME=&amp;quot;xxxx&amp;quot;&lt;/code&gt;  将内容更改为&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;powerlevel9k/powerlevel9k&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行命令：来重载一下就生效了&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; .zshrc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%91%BD%E4%BB%A4/</guid>
            <title>linux好玩的命令</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%91%BD%E4%BB%A4/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;需要先提前安装以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; epel-release&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;火车&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; sl&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sl &lt;span class=&#34;token comment&#34;&gt;#火车&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;火焰&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; aalib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;aafire &lt;span class=&#34;token comment&#34;&gt;#火焰&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;p&gt;水族馆 &lt;code&gt;asciiquarium&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 &lt;code&gt;Term-Animation包&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://search.cpan.org/CPAN/authors/id/K/KB/KBAUCOM/Term-Animation-2.4.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; xf Term-Animation-2.4.tar.gz &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;. &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; Term-Animation-2.4/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;下载 perl-Curses 和 perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker 软件并安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;. yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; perl-Curses.x86_64  &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;. yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker  &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;. perl Makefile.PL&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后安装 asciiquarium&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://www.robobunny.com/projects/asciiquarium/asciiquarium.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; asciiquarium.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;. &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; asciiquarium_1.1/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; asciiquarium /usr/local/bin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;. &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x /usr/local/bin/asciiquarium&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入命令: &lt;code&gt;asciiquarium&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</guid>
            <title>压缩与解压</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;查看压缩包中的内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看压缩包中的内容&#34;&gt;#&lt;/a&gt; 查看压缩包中的内容&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-tf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.XX&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;压缩和解压文件gzipgunzip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#压缩和解压文件gzipgunzip&#34;&gt;#&lt;/a&gt; 压缩和解压文件 (gzip/gunzip)&lt;/h2&gt;
&lt;h3 id=&#34;用于压缩文件gzip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用于压缩文件gzip&#34;&gt;#&lt;/a&gt; 用于压缩文件 (gzip)&lt;/h3&gt;
&lt;h3 id=&#34;用于解压文件gunzip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用于解压文件gunzip&#34;&gt;#&lt;/a&gt; 用于解压文件 (gunzip)&lt;/h3&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;gzip&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;文件名&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 功能描述：压缩文件，只能将文件压缩为 *.gz 文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gunzip &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;文件名.gz&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 功能描述：解压缩文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;压缩和解压目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#压缩和解压目录&#34;&gt;#&lt;/a&gt; 压缩和解压目录&lt;/h2&gt;
&lt;h2 id=&#34;tar压缩解压命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar压缩解压命令&#34;&gt;#&lt;/a&gt; tar 压缩 / 解压命令&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;压缩组合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zcvf&lt;/code&gt; — &lt;code&gt;zcf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-z:&lt;/code&gt;  压缩&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-c:&lt;/code&gt;  创建&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-v:&lt;/code&gt;  显示输出 (可省略)&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-f:&lt;/code&gt;  文件打包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 要压缩的文件夹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;参数&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.tar.gz&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将压缩包.tar.gz 打包到目标目录下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; zcvf &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩到的位置&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.tar.gz的位置&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;解压组合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zxvf&lt;/code&gt; — &lt;code&gt;xf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数 &lt;code&gt;-x:&lt;/code&gt;  解压&lt;/li&gt;
&lt;li&gt;参数 &lt;code&gt;-C:&lt;/code&gt;  解压到指定的目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;p&gt;解压到当前目录下:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.tar.gz&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;解压到指定目录下:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.tar.gz&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-C&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;解压的目标目录下&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;unzip压缩解压命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unzip压缩解压命令&#34;&gt;#&lt;/a&gt; unzip 压缩 / 解压命令&lt;/h2&gt;
&lt;p&gt;一般用于解压 Windows 放入 Linux 的.zip 压缩包&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解压命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;unzip&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩包.zip&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;压缩 / 打包命令&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;gzip&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;压缩文件夹.log&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F1/</guid>
            <title>CentOS 7 Linux安装动态监控htop</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F1/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;top 与 ps 命令很相似，它们都是用来显示正在执行的进程，top 与 ps 最大的不同之处，在于 top 在执行一段时间可以更新正在运行的进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;top [选项]&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-d 秒数&lt;/td&gt;
&lt;td&gt;指定 top 命令每隔几秒更新，默认是 3 秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;使 top 不显示任何闲置或者僵死进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;通过指定监控进程 ID 来仅仅监控某个进程的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-21-08-03.png&#34; alt=&#34;image_2023-01-06-21-08-03&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;交互操作说明&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;以 CPU 使用率排序，默认就是此项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;以内存的使用率排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;以 PID 排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;退出 top&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;输入指定进程监控指定的进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;k&lt;/td&gt;
&lt;td&gt;输入指定进程 ID 号结束指定的进程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;查看系统网络情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;netstat&lt;/p&gt;
&lt;p&gt;基本语法格式:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;netstat&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数:&lt;/p&gt;
&lt;p&gt;-an 按一定顺序排列输出&lt;/p&gt;
&lt;p&gt;-p  显示哪个进程在调用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;htop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装指令:htop 工具在 epel 源中提供，需要配置 epel 源 执行: sudo yum -y install epel-release&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;htop&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9root%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</guid>
            <title>CentOS 7 Linux修改root用户密码</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9root%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;修改root用户密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改root用户密码&#34;&gt;#&lt;/a&gt; 修改 root 用户密码&lt;/h1&gt;
&lt;p&gt;切换到 root 用户&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;su&lt;/span&gt; - root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后输入命令进行修改&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入要修改的密码输入两次&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316213719254.png&#34; alt=&#34;image-20240316213719254&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/tree%E5%AE%89%E8%A3%85%E5%8D%B3%E4%BD%BF%E7%94%A8/</guid>
            <title>CentOs-tree命令安装及使用</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/tree%E5%AE%89%E8%A3%85%E5%8D%B3%E4%BD%BF%E7%94%A8/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;直接命令安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; tree&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;等待安装即可&lt;/p&gt;
&lt;p&gt;安装完成后输入 tree / 来查看下是否安装成功&lt;/p&gt;
&lt;p&gt;tree -help&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tree 食用参数&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;-a 显示所有文件和目录&lt;/p&gt;
&lt;p&gt;-A 使用 ASNI 绘图字符显示树状图而非 ASCII 字符组合&lt;/p&gt;
&lt;p&gt;-C 在文件和目录清单加上色彩，便于区分各种类型&lt;/p&gt;
&lt;p&gt;-d 显示目录名称而非内容&lt;/p&gt;
&lt;p&gt;-D 列出文件或目录的更改时间&lt;/p&gt;
&lt;p&gt;-f 在每个文件或目录之前，显示完整的相对路径名称&lt;/p&gt;
&lt;p&gt;-F 在执行文件，目录，Socket, 符号链接，管道名称名称，各自加上 &amp;quot;*&amp;quot;,&amp;quot;/&amp;quot;,&amp;quot;=&amp;quot;,&amp;quot;@&amp;quot;,&amp;quot;|&amp;quot; 号&lt;/p&gt;
&lt;p&gt;-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码&lt;/p&gt;
&lt;p&gt;-i 不以阶梯状列出文件或目录名称&lt;/p&gt;
&lt;p&gt;-I &amp;lt;范本样式&amp;gt; 不显示符合范本样式的文件或目录名称&lt;/p&gt;
&lt;p&gt;-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录&lt;/p&gt;
&lt;p&gt;-n 不在文件和目录清单加上色彩&lt;/p&gt;
&lt;p&gt;-N 直接列出文件和目录名称，包括控制字符&lt;/p&gt;
&lt;p&gt;-p 列出权限标示&lt;/p&gt;
&lt;p&gt;-P &amp;lt;范本样式&amp;gt; 只显示符合范本样式的文件或目录名称&lt;/p&gt;
&lt;p&gt;-q 用 &amp;quot;?&amp;quot; 号取代控制字符，列出文件和目录名称&lt;/p&gt;
&lt;p&gt;-s 列出文件或目录大小&lt;/p&gt;
&lt;p&gt;-t 用文件和目录的更改时间排序&lt;/p&gt;
&lt;p&gt;-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码&lt;/p&gt;
&lt;p&gt;-x 将范围局限在现在的文件系统中，若指定目录下的某些子目录，某存放于另一个文件系统上&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/neofetch/</guid>
            <title>CentOs安装neofetch</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/neofetch/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;安装 &lt;code&gt;dnf命令&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; dnf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装 &lt;code&gt;dnf-plugins-core&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; dnf-plugins-core&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;启用 COPR 仓库然后安装 neofetch&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf copr &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; konimex/neofetch&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dnf &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; neofetch&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行命令 &lt;code&gt;neofetch&lt;/code&gt;  命令后查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-03-17-45-11.png&#34; alt=&#34;image_2023-01-03-17-45-11&#34;&gt;&lt;/p&gt;
&lt;p&gt;指定显示系统的 Logo&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;neofetch &lt;span class=&#34;token parameter variable&#34;&gt;--ascii_distro&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;系统比如:Mac&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20230603110201318.png&#34; alt=&#34;image-20230603110201318&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/curl/</guid>
            <title>linux - curl的用法指南</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/curl/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;curl的用法指南&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl的用法指南&#34;&gt;#&lt;/a&gt; curl 的用法指南&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;curl 是常用的命令工具，用来请求 web 服务器，它的名字就是客户端 (client) 的 URL 工具的意思&lt;br&gt;
的&lt;/p&gt;
&lt;p&gt;它的功能非常强大，命令行参数多达几十种，如果熟练的话，完全可以取代 Postman 这一类的图形界面工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-02-01-07-44-09.png&#34; alt=&#34;image_2023-02-01-07-44-09&#34;&gt;&lt;/p&gt;
&lt;p&gt;不带任何参数时，curl 就是发出 GET 请求&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令向&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt;&lt;/font&gt;发出 GET 请求，服务器返回的内容会在命令行输出&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-A&lt;/font&gt;参数指定客户端的用户代理标头，及&lt;font style=&#34;color:red&#34;&gt;User-Agent&lt;/font&gt;.curl 的默认用户代理字符串是&lt;font style=&#34;color:red&#34;&gt;curl/[version]&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -A &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面个命令将&lt;font style=&#34;color:red&#34;&gt;User_Agent&lt;/font&gt;改成 Chrome 浏览器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -A &#39;&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面个命令会移除&lt;font style=&#34;color:red&#34;&gt;User-Agent&lt;/font&gt;标头&lt;/p&gt;
&lt;p&gt;也可以通过&lt;font style=&#34;color:red&#34;&gt;-H&lt;/font&gt;参数直接指定标头，更改&lt;font style=&#34;color:red&#34;&gt;User-Agent&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H &#39;User-Agent: php/1.0&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-b&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-b&lt;/font&gt;参数用来向服务器发送 Cookie&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -b &#39;foo=bar&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令会生成一个标头&lt;font style=&#34;color:red&#34;&gt;Cookie:foo=bar&lt;/font&gt;, 向服务器发送一个名为&lt;font style=&#34;color:red&#34;&gt;foo&lt;/font&gt;, 值为&lt;font style=&#34;color:red&#34;&gt;bar&lt;/font&gt;的 Cookie&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -b &#39;foo1=bar;foo2=bar2&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令发送两个 Cookie&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -b cookies.txt https://www.google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令读取本地文件&lt;font style=&#34;color:red&#34;&gt;cookies.txt&lt;/font&gt;, 这里面是服务器设置的 Cookie (参见&lt;font style=&#34;color:red&#34;&gt;-c&lt;/font&gt;参数), 将其发送到服务器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-c&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-c&lt;/font&gt;参数将服务器设置的 Cookie 写入一个文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -c cookies.txt https://www.google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件&lt;font style=&#34;color:red&#34;&gt;cookies.txt&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-d&lt;/font&gt;参数用于发送 POST 请求的数据体&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -d&#39;login=emma＆password=123&#39;-X POST https://google.com/login
# 或者
curl -d &#39;login=emma&#39; -d &#39;password=123&#39; -X POST  https://google.com/login
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;font style=&#34;color:red&#34;&gt;-d&lt;/font&gt;参数以后，HTTP 请求会自动加上标头&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;Content-Type:application/x-www-form-urlencoded&lt;/font&gt;, 并且会自动请求转为 POST 方法，因此可以省略&lt;font style=&#34;color:red&#34;&gt;-X POST&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-d&lt;/font&gt;参数可以读取本地文本文件的数据，向服务器发送&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -d &#39;@data.txt&#39; https://google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面个命令读取&lt;font style=&#34;color:red&#34;&gt;data.txt&lt;/font&gt;文件的内容，作为数据体向服务器发送&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;–data-urlencode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;–data-urlencode&lt;/font&gt;参数等同于&lt;font style=&#34;color:red&#34;&gt;-d&lt;/font&gt;, 发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl --data-urlencode &#39;comment=hello world&#39; https://google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面改代码中，发送的数据&lt;font style=&#34;color:red&#34;&gt;hello world&lt;/font&gt;之间有一个空格，需要进行 URL 编码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-e&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-e&lt;/font&gt;参数用来设置 HTTP 的标头&lt;font style=&#34;color:red&#34;&gt;Referer&lt;/font&gt;, 表示请求的来源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -e &#39;https://google.com?q=example&#39; https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令将&lt;font style=&#34;color:red&#34;&gt;Referer&lt;/font&gt;标头设为&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;https://google.com?q=example&#34;&gt;https://google.com?q=example&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-H&lt;/font&gt;参数可以用过直接添加标头&lt;font style=&#34;color:red&#34;&gt;Referer&lt;/font&gt;, 达到同样效果&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H &#39;Referer: https://google.com?q=example&#39; https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-F&lt;/font&gt;参数用来向服务器上传二进制文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -F &#39;file=@photo.png&#39; https://google.com/profileH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令会给 HTTP 请求加上标头&lt;font style=&#34;color:red&#34;&gt;Content-Type: multipart/form-data&lt;/font&gt;, 返回将文件&lt;font style=&#34;color:red&#34;&gt;photo.png&lt;/font&gt;, 作为&lt;font style=&#34;color:red&#34;&gt;file&lt;/font&gt;字段上传&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-F&lt;/font&gt;参数可以指定 MIME 类型&lt;/p&gt;
&lt;p&gt;&lt;code&gt; curl -F &#39;file=@photo.png;type=image/png&#39; https://google.com/profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令指定 MIME 类型为&lt;font style=&#34;color:red&#34;&gt;image/png&lt;/font&gt;, 否则 curl 会把 MIME 类型设为&lt;font style=&#34;color:red&#34;&gt;application/octet-stream&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-F&lt;/font&gt;参数也可以指定文件名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -F &#39;file=@photo.png;filename=me.png&#39; https://google.com/profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令中，原始文件名为&lt;font style=&#34;color:red&#34;&gt;photo.png&lt;/font&gt;, 但是服务器接收到的文件名为&lt;font style=&#34;color:red&#34;&gt;me.png&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-G&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-G&lt;/font&gt;参数用来构造 URL 的查询字符串&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -G -d &#39;q=kitties&#39; -d &#39;count=20&#39; https://google.com/search&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令会发出一个 GET 请求，实际请求的 URL 为&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;https://google.com/search?q=kitties&amp;amp;count=20&#34;&gt;https://google.com/search?q=kitties&amp;amp;count=20&lt;/a&gt;&lt;/font&gt;, 如果省略&lt;font style=&#34;color:red&#34;&gt;-G&lt;/font&gt;, 会发出一个 POST 请求&lt;/p&gt;
&lt;p&gt;如果数据需要 URL 编码，可以结合&lt;font style=&#34;color:red&#34;&gt;–data–urlencodeH&lt;/font&gt;参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -G --data-urlencode &#39;comment=hello world&#39; https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-H&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-H&lt;/font&gt;参数添加 HTTP 请求的标头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H &#39;Accept-Language: en-US&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令添加 HTTP 标头&lt;font style=&#34;color:red&#34;&gt;Accept-Language: en-US&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H &#39;Accept-Language: en-US&#39; -H &#39;Secret-Message: xyzzy&#39; https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令添加两个 HTTP 标头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -d &#39;&amp;#123;&amp;quot;login&amp;quot;: &amp;quot;emma&amp;quot;, &amp;quot;pass&amp;quot;: &amp;quot;123&amp;quot;&amp;#125;&#39; -H &#39;Content-Type: application/json&#39; https://google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令添加 HTTP 请求的标头是&lt;font style=&#34;color:red&#34;&gt;Content-Type: application/json&lt;/font&gt;, 然后用&lt;font style=&#34;color:red&#34;&gt;-d&lt;/font&gt;参数发送 JSON 数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-i&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-i&lt;/font&gt;参数打印出服务器回应的 HTTP 标头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -i https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，在输出网页的源码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-I&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-I&lt;/font&gt;参数向服务器发送 HEAD 请求，然后会将服务器返回的 HTTP 标头打印出来&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -I https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令输出服务器对 HEAD 请求的回应&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-head&lt;/font&gt;参数等同于&lt;font style=&#34;color:red&#34;&gt;-I&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl --head https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-K&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-K&lt;/font&gt;参数指定跳过 SSL 检测&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -k https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令不会检查服务器的 SSL 证书是否正确&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-L&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-L&lt;/font&gt;参数会让 HTTP 请求跟随服务器的重定向，curl 默认不跟随重定向&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -L -d &#39;tweet=hi&#39; https://api.twitter.com/tweet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;–limit-rate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;–limit-rate&lt;/font&gt;用来限制，HTTP 请求和回应的宽带，模拟慢网速的环境&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl --limit-rate 200k https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令将带宽限制在每秒 200k 字节&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-o&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-o&lt;/font&gt;参数将服务器的回应保存成文件，等同于&lt;font style=&#34;color:red&#34;&gt;wget&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;上面命令将&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt;&lt;/font&gt;保存成&lt;font style=&#34;color:red&#34;&gt;example.html。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-O&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-O&lt;/font&gt;参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -O https://www.example.com/foo/bar.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令将服务器回应保存成文件，文件名为&lt;font style=&#34;color:red&#34;&gt;bar.html&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-s&lt;/font&gt;参数将不输出错误和进度信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -s https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令一旦发生错误，不会显示错误信息，不发生错误的话，会正常显示运行结果&lt;/p&gt;
&lt;p&gt;如果想让 curl 不产生任何输出，可以使用下面的命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -s -o /dev/null https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-S&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-S&lt;/font&gt;参数指定只输出错误的信息，通常与&lt;font style=&#34;color:red&#34;&gt;-s 一起使用&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -s -o /dev/null https://google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令没有任何输出，除非发生错误&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-u&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-u&lt;/font&gt;参数用来设置服务器认证的用户名和密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt; curl -u &#39;bob:12345&#39; https://google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令设置用户名为&lt;font style=&#34;color:red&#34;&gt;bob&lt;/font&gt;, 密码为&lt;font style=&#34;color:red&#34;&gt;12345&lt;/font&gt;, 然后将其转为 HTTP 标头&lt;font style=&#34;color:red&#34;&gt;Authorization: Basic Ym9iOjEyMzQ1&lt;/font&gt;.&lt;/p&gt;
&lt;p&gt;curl 能够识别 URL 里面的用户名和密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl https://bob:12345@google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令能够识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -u &#39;bob&#39; https://google.com/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令只设置了用户名，执行后，curl 会提示用户输入密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-v&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-v&lt;/font&gt;参数输出通信的整个过程，用于调式&lt;/p&gt;
&lt;p&gt;&lt;code&gt; curl -v https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-trace&lt;/font&gt;参数也可以用于调式，还会输出原始的二进制数据&lt;/p&gt;
&lt;p&gt;&lt;code&gt; curl --trace - https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-x&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-x&lt;/font&gt;参数指定 HTTP 请求的代理&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -x socks5://james:cats@myproxy.com:8080 https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令指定 HTTP 请求通过&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;http://myproxy.com:8081&#34;&gt;myproxy.com:8081&lt;/a&gt;&lt;/font&gt;cks&lt;br&gt;
5 代理发出&lt;/p&gt;
&lt;p&gt;如果没有指定代理协议，默认为 HTTP&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -x james:cats@myproxy.com:8080 https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令中，请求的代理使用 HTTP 协议&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-X&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;-X&lt;/font&gt;参数指定 HTTP 请求的方法&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -X POST https://www.example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面命令对&lt;font style=&#34;color:red&#34;&gt;&lt;a href=&#34;https://www.example.com&#34;&gt;https://www.example.com&lt;/a&gt;&lt;/font&gt;发出 POST 请求&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux%E6%89%93%E8%A1%A5%E4%B8%81,%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</guid>
            <title>Linux打补丁,安装常用软件 yum源</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux%E6%89%93%E8%A1%A5%E4%B8%81,%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux打补丁安装常用软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux打补丁安装常用软件&#34;&gt;#&lt;/a&gt; Linux 打补丁，安装常用软件&lt;/h1&gt;
&lt;p&gt;1. 配置官方源更新地址 (打补丁下载软件的地址)&lt;/p&gt;
&lt;p&gt;官方 ====&amp;gt; 国内 (阿里云，网易 163, 清华源)&lt;/p&gt;
&lt;p&gt;CentOS7 默认是从官方下载软件的，改为从阿里云网站下载&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 配置第三方 epel 源更新地址&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; /etc/yum. repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;一块使用&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; /etc/yum. repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 更新所有软件到最新 (注意以下说明再考虑是否要执行，不然后果自担)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum update &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#总下载量 279M&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;工作中服务器正式环境之前可以执行，否则不能执行，容易破坏服务器&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;要保证:&lt;/p&gt;
&lt;p&gt;1) 镜像备份&lt;/p&gt;
&lt;p&gt;2) 让服务的公司签字 (不承担责任)&lt;/p&gt;
&lt;p&gt;3) 搭建正式环境的测试环境测试好&lt;/p&gt;
&lt;p&gt;4.CentOS6 和 CentOS7 都要安装的企业运维常用基础工具包&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; nmap dos2unix lrzsz &lt;span class=&#34;token function&#34;&gt;nc&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;lsof&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; tcpdump &lt;span class=&#34;token function&#34;&gt;htop&lt;/span&gt; iftop iotop sysstat nethogs &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;CentOS7 要安装的企业运维常用基础工具包&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; psmisc net-tools bash-completion vim-enhanced &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;好玩的工具&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; coway &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux%E5%88%A0%E9%99%A4%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E6%96%87%E4%BB%B6%E6%88%96%E7%9B%AE%E5%BD%95/</guid>
            <title>linux删除特殊符号文件或目录</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux%E5%88%A0%E9%99%A4%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E6%96%87%E4%BB%B6%E6%88%96%E7%9B%AE%E5%BD%95/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <category>代码经验</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;想要删除 time&amp;amp;1.class, 用 &lt;code&gt;rm time&amp;amp;1.class&lt;/code&gt;  是不行的，可以用 &lt;code&gt;rm time&amp;quot;&amp;amp;&amp;quot;1.class&lt;/code&gt;  删掉&lt;/p&gt;
&lt;p&gt;假设 Linux 系统中有一个文件名叫 &amp;quot;-polo&amp;quot;, 如果用户想删除它，按照一般的删除方法在命令行中输入 &lt;code&gt;rm -polo&lt;/code&gt;  命令后，界面会提示是 &amp;quot;无效选项&amp;quot;(invalid option)&lt;/p&gt;
&lt;p&gt;原因是 Linux 把文件名的第一个字符为 &amp;quot;-“当作选项了，用户可以使用”–“符号来解决这个问题，输入 &lt;code&gt;rm -- -polo&lt;/code&gt;  命令便可顺利删除名为”-polo&amp;quot; 的文件&lt;/p&gt;
&lt;p&gt;如果是其它特殊字符的话可以在特殊字符前加一个 &amp;quot;&amp;quot;(双引号) 符号，或者&amp;quot;&amp;quot;(双引号) 把整个文件名括起来都可以&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/LinuxinstallMySQL8.0.28/</guid>
            <title>CentOs安装MySQL8.0.28</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/LinuxinstallMySQL8.0.28/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;去官网下载 MySQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个存放 MySQL 的目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在解压之前查看以下系统是否自带了 mariadb 数据库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看指令：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; -qa&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; mariadb&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;可能会列出两个出来，将都卸载掉输入指令：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodeps&lt;/span&gt; mariadb&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压 MySQL 输入指令：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mysql&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;在当前解压 MySQL 的目录中输入顺序安装 MySQL&lt;mark&gt; 注意：顺序很重要&lt;/mark&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-common-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-client-plugins-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-libs-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-client-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-icu-data-files-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ivh&lt;/span&gt; mysql-community-server-8.0.28-1.el7.x86_64.rpm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;安装完成后进行初始化 MySQL&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysqld &lt;span class=&#34;token parameter variable&#34;&gt;--initialize&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--console&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;修改 MySQL 所有者与所属组 [便以使用]&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; mysql:mysql &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; /var/lib/mysql/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;启动 MySQL 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl start mysqld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;MySQL 会自动帮我们创建一个密码使用指令查看密码&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /var/log/mysqld.log&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; localhost&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Enter 后显示 root@localhost: 后面就是密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@localhost opt&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /var/log/mysqld.log|grep localhost&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-10-21T14:55:24.788588Z &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Note&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;MY-010454&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; A temporary password is generated &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; root@localhost: AqFwbqjyd1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;_&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;输入上面 MySQL 自动创建的密码进入 MySQL&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; root &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Enter passwd：AqFwbqjyd1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;_ &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;最好复制粘贴因为容易出错&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;更改这个密码&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@&#39;localhost&#39;&lt;/span&gt; identified &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dkx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux_%E8%BF%9B%E7%A8%8B/</guid>
            <title>linux进程</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/Linux_%E8%BF%9B%E7%A8%8B/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 Linux 中，每个&lt;font color=&#39;red&#39;&gt;执行的程序&lt;/font&gt;都被称为一个进程，每一个进程都分配一个 ID 号 (pid, 进程号)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个进程都可能以两种方式存在，&lt;font color=&#39;red&#39;&gt;前台&lt;/font&gt;与&lt;font color=&#39;red&#39;&gt;后台&lt;/font&gt;, 所谓前台进程就是用户目前的屏幕上可以进行操作的，后台进程则是实际在操作，但由于屏幕上无法看到的进程，通常使用后台方式进行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般系统的服务都是以后台进程的方式存在 (如，MySQL,Tomcat 等等), 而且都会常驻在系统中，直到关机才结束&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;显示系统执行的进程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ps 命令是用来查看目前系统中，有哪些正在执行，以及它们执行的状况，可以不加任何参数&lt;/p&gt;
&lt;p&gt;ps 显示的信息选项:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PID&lt;/td&gt;
&lt;td&gt;进程识别号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIY&lt;/td&gt;
&lt;td&gt;终端机号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;此进程所消 CPU 时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CMD&lt;/td&gt;
&lt;td&gt;正在执行的命令或进程名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;参数:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-a : 显示当前终端的所有进程信息&lt;/p&gt;
&lt;p&gt;-u : 以用户的格式显示进程信息&lt;/p&gt;
&lt;p&gt;-x : 显示后台进程运行的参数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208125421467.png&#34; alt=&#34;image-20240208125421467&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps 详解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指令:ps -aux|grep xxx, 比如我看看有没有 sshd 服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指令说明:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;System V 展示风格&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USER  用户名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PID   进程号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;% CPU  进程占用 CPU 的百分比&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$MEM  进程所占用物理内存的百分比&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSZ   进程占用的虚拟内存大小 (单位：KB)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSS   进程占用的物理内存大小 (单位：KB)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TTY    终端名称，缩写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STAT  进程状态：其中 S: 睡眠，s: 表示该进程是会话的先导进程，N: 表示进程拥有比普通优先级更低的优先级，R: 表示正在运行，D: 短期等待，Z: 僵死进程，T: 被跟踪或者被停止等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STARTED   进程的启动时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIME  CPU 时间，即进程使用 CPU 的总时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;COMMAND   启动进程所用的命令和参数，如果过长会被截断显示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ps -ef 是以全格式显示当前所有的进程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参数:-e 显示所有进程，-f 全格式&lt;/p&gt;
&lt;p&gt;格式: &lt;code&gt;ps -ef|grep xxx&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是 BSD 风格&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UID   用户 ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PID   进程 ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PPID  父进程 ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C CPU 用于计算执行优先级的因子，数值越大，表明进程是 CPU 密集型运算，执行优先级会降低；数值越小，表明进程是 I/O 密集型运算，执行优先级会提高&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STIME 进程启动时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TTY   完整的终端名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIME  CPU 时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CMD   启动进程所用的命令和参数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208125432431.png&#34; alt=&#34;image-20240208125432431&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看 sshd 的父进程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-13-49-12.png&#34; alt=&#34;image_2023-01-06-13-49-12&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208125446349.png&#34; alt=&#34;image-20240208125446349&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:red&#34;&gt;&lt;strong&gt;过滤掉 grep 的查询出来的 grep 进程&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; -ef&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; Xxx.server&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以看到 Systemd 的进程的 PPID 为 0 表示它没有父进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;终止进程 kill 和 killall&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若是某个进程执行一半需要停止时，或是已取消了很大的系统资源，此时可以考虑停止该进程，使用 kill 命令来完成此项任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本语法格式:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kill    [选项] 进程号 (功能描述：通过进程号杀死进程)&lt;/p&gt;
&lt;p&gt;killall 进程名称 (功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变得很慢时很有用)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-9  表示强迫进程立刻停止&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看进程树 pstree&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;基本语法格式:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pstree  [选项], 可以更加直观的来看进程信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-p  显示进程的 PID&lt;/p&gt;
&lt;p&gt;-u  显示进程的所属用户&lt;/p&gt;
&lt;p&gt;命令不存在执行命令进行安装: &lt;code&gt;sudo yum -y install psmisc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-06-15-07-14.png&#34; alt=&#34;image_2023-01-06-15-07-14&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/CentOS%E5%AE%89%E8%A3%85fortune+cowsay/</guid>
            <title>CentOs安装forune+cowsay</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/CentOS%E5%AE%89%E8%A3%85fortune+cowsay/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;先找下看有没有&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum search fortune&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; fortune-mod&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装 cowsay&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; cowsay&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;现在就可以玩了！&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fortune&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;cowsay&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装有意思的 &lt;code&gt;pokemonsay&lt;/code&gt;  宝可梦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208123610659.png&#34; alt=&#34;image-20240208123610659&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;p&gt;拿到连接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-03-23-09-48.png&#34; alt=&#34;image_2023-01-03-23-09-48&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行命令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://gitee.com/sunfei2021/pokemonsay.git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; pokemonsay&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;退回到根目录下试一下命令 &lt;code&gt;pokemonsay&lt;/code&gt;  这个软件被安装到了根目录了&lt;/p&gt;
&lt;p&gt;执行命令:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pokemonsay Hello World&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fortune&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;pokemonsay&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;添加 &lt;code&gt;$fortune|pokemonsay 内容自己定义&lt;/code&gt;  到 &lt;code&gt;~/.zshrc&lt;/code&gt;  配置文件的末尾，使得每次打开终端都可以随机输出一个宝可梦&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/CentOS%207%20Linux%E5%AE%89%E8%A3%85GoogleChrome/</guid>
            <title>CentOS 7 Linux安装GoogleChrome</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/%E5%9F%BA%E7%A1%80/CentOS%207%20Linux%E5%AE%89%E8%A3%85GoogleChrome/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;centos-7-linux安装googlechrome&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#centos-7-linux安装googlechrome&#34;&gt;#&lt;/a&gt; CentOS 7 Linux 安装 GoogleChrome&lt;/h1&gt;
&lt;p&gt;直接操作步骤:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; etc/yum.repos.d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; google-chrome.repo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编辑输入 vim&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;google-chrome&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;google-chrome&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;baseurl&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;http://dl.google.com/linux/chrome/rpm/stable/&lt;span class=&#34;token variable&#34;&gt;$basearch&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;gpgcheck&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;gpgkey&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;https://dl-ssl.google.com/linux/linux_signing_key.pub&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装谷歌&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; google-chrome-stable &lt;span class=&#34;token parameter variable&#34;&gt;--nogpgcheck&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;OK!!!&lt;/p&gt;
&lt;p&gt;解决安装谷歌后 root 用户打不开情况&lt;/p&gt;
&lt;p&gt;终端输入:&lt;/p&gt;
&lt;p&gt;找到安装 google 的路径里面再找到 google-chrome 配置文件修改最后一行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; /opt/google/chrome/google-chrome&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;配置文件的最后一行修改为:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$0&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$HERE&lt;/span&gt;/chrome&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$@&lt;/span&gt;&#34;&lt;/span&gt; --no-sandbox&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;保存就 OK 了！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/</guid>
            <title>shell预定义变量</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就是 shell 设计者事先已经定义好的变量，可以直接在 shell 脚本中使用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mtext&gt;功能描述&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mtext&gt;当前进程的进程号&lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(功能描述:当前进程的进程号(PID))

&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;功&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;能&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;描&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;述&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;当&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;前&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;进&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;程&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;进&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;程&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;号&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$?(功能描述：最后一次执行的命令的返回状态，如果这个变量的值为 0, 证明上一个命令正确执行；如果这个变量的值为非 0 (具体是哪个数，由命令自己来决定), 则证明上一个命令执行不正确了)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
            <title>shell运算符</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本语法格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mtext&gt;运算式&lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;mtext&gt;或&lt;/mtext&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;&amp;quot;&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;((运算式))&amp;quot;或&amp;quot;&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;运&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;算&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;式&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;或&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;[运算式]&amp;quot; 或者 expr m + n //expression: 表达式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意 expr 运算符间要有空格，如果希望将 expr 的结果赋给某个变量，使用:  &lt;code&gt; &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;expr m - n&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;expr *,/,%  乘，除，取模      乘的前面 \ 是转移的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#使用第一种方式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$((&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果为：20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#使用第二种方式 推荐使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;+3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;*4&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$B&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果为：20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#使用第三种方式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expr&lt;/span&gt; $C &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;* &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#对于 expr 中的乘需要使用 \ 进行转移&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;+3&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$C&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果：5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$D&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果：2+3                                                                                                                            &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$E&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果为：20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt;+&lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#通过位置参数变量在命令行中赋值并计算&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$SUM&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果为：你自己输入的数值相加后的数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
            <title>shell设置环境变量</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;基本语法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;export 变量名 = 变量值 (功能描述：将 shell 变量输出为环境变量 / 全局变量)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;source 配置文件 (功能描述：让修改后的配置文件信息立即生效)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;echo $ 变量名 (功能描述：查询环境变量的值)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;注意：在输出 TOMCAT_HOME 环境变量前，需要让其生效&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /etc/profile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;shell 脚本的多行注释&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;:&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;内容&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</guid>
            <title>shell-case语句</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;case 语句&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;p&gt;case $ 变量名 in&lt;/p&gt;
&lt;p&gt;“值 1”)&lt;/p&gt;
&lt;p&gt;如果变量的值等于值 1, 则执行程序 1&lt;/p&gt;
&lt;p&gt;;;&lt;/p&gt;
&lt;p&gt;“值 2”)&lt;/p&gt;
&lt;p&gt;如果变量的值等于值 2, 则执行程序 2&lt;/p&gt;
&lt;p&gt;;;&lt;/p&gt;
&lt;p&gt;… 省略其它分支…&lt;/p&gt;
&lt;p&gt;*)&lt;/p&gt;
&lt;p&gt;如果变量的值都不是以上的值，则执行此程序&lt;/p&gt;
&lt;p&gt;;;&lt;/p&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;案例&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;周一&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;周二&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;周三&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;esac&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/</guid>
            <title>shell判断语句</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;if [condition] (注意 condition 前后要有空格)&lt;/p&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    echo &amp;quot;&amp;quot; #执行体
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;fi #结束&lt;/p&gt;
&lt;p&gt;#非空返回 true, 可使用 $? 验证 (0 为 true,&amp;gt;1 为 false)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;应用实例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[hspEdu] 返回 true&lt;/p&gt;
&lt;p&gt;[ ] 返回 false&lt;/p&gt;
&lt;p&gt;[condition] &amp;amp;&amp;amp; echo OK || echo notok 条件满足，执行后面的语句&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;判断语句&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常用判断条件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1)&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;字符串比较&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2)&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;green&#39;&gt;两个整数的比较&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-lt&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-le&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-eq&lt;/td&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gt&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ne&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3)&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;green&#39;&gt;按照文件权限进行判断&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r&lt;/td&gt;
&lt;td&gt;有度的权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-w&lt;/td&gt;
&lt;td&gt;有写的权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-x&lt;/td&gt;
&lt;td&gt;有执行的权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4)&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;green&#39;&gt;按照文件类型进行判断&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;文件存在并且是一个常规的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e&lt;/td&gt;
&lt;td&gt;文件存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-d&lt;/td&gt;
&lt;td&gt;文件存在并是一个目录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;案例&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#判断两个 ok 字符串是否相同&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ok&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ok&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;相同&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#判断 23 是否大于 22&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-ge&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;大于&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#判断文件是否存在且是否常规&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; /opt/shcodetest/a.txt &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;存在且无异常&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#细节&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; dkx &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#瞎写的非空即为 true 如果写 [] 中间没有空格则报错，如果有空格而为空那么就是 false 不输出 then 中的 echo&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OK&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;多分支-if&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多分支-if&#34;&gt;#&lt;/a&gt; 多分支 if&lt;/h3&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;p&gt;&lt;font color=&#39;red&#39;&gt;单分支&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;if [条件判断式]&lt;/p&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;&lt;font color=&#39;red&#39; size=4&gt;或者多分支&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;if [条件判断式]&lt;/p&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;p&gt;elif [条件判断式]&lt;/p&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意:[条件判断式], 中括号和条件判断式之间必须有空格&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0/</guid>
            <title>shell函数</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;函数介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;shell 编程和其它编程语言一样，有系统函数，也可以自定义函数，系统函数中，我们这里就介绍两个&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系统函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;basename 基本语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;功能：返回完整路径最后 / 的部分，常用于获取文件名&lt;/p&gt;
&lt;p&gt;basename [pathname] [suffix]&lt;/p&gt;
&lt;p&gt;basename [string] [suffix] (功能描述:basename 命令会删掉所有的前缀包括最后一个 (&amp;quot;/&amp;quot;) 字符，然后将字符显示出来)&lt;/p&gt;
&lt;p&gt;选项:&lt;/p&gt;
&lt;p&gt;suffix 为后缀，如果 suffix 被指定了，basename 会将 pathname 或 string 中的 suffix 去掉&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dirname 基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能：返回完整路径最后 / 的前面的部分，常用于返回路径部分&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dirname 文件绝对路径 (功能描述：从给定的包含绝对路径的文件名中去除文件名 (非目录的部分), 然后返回剩下的路径 (目录的部分))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;自定义函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本语法格式&lt;/p&gt;
&lt;p&gt;[ function ] funname [()]&lt;br&gt;
{&lt;br&gt;
Action;&lt;br&gt;
[return int;]&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;调用直接写函数名:funname [值]&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%85%A5%E9%97%A8/</guid>
            <title>shell编程入门</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E5%85%A5%E9%97%A8/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <category>介绍</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;为什么要学习 Shell 编程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于 JavaEE 和 Python 程序员来说，工作的需要，你的老大会要求你编写一些 Shell 脚本进行程序或者是服务器的维护，比如编写一个定时备份数据库的脚本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于大数据程序员来说，需要编写 Shell 程序来管理集群&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell 是什么&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序的界面系统级程序，用户可以用 Shell 来启动，挂起，停止甚至是编写一些程序&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image_2023-01-07-16-19-56.png&#34; alt=&#34;image_2023-01-07-16-19-56&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell 脚本的执行方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;脚本格式要求&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;脚本以 #!/bin/bash 开头&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脚本需要有可执行权限&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;脚本的常用执行方式&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;输入脚本的绝对路径或相对路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;说明：首先要赋予 xxx.sh 脚本的 + x 权限，再执行脚本&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;sh + 脚本:sh &lt;a href=&#34;http://hello.sh&#34;&gt;hello.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;说明：不用赋予脚本 + x 权限，直接执行即可&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell 变量介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Linux Shell 中的变量分为，系统变量和用户自定义变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统变量:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;HOME,&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PWD,&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;SHELL,&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;USER 等等，比如:echo $HOME 等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示当前 shell 中所有变量:set&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell 变量的定义&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本语法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定义变量：变量 = 值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;撤销变量:unset 变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明常量变量 (只读):readonly 变量，注意：不能 unset&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;演示:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#echo &#34;hello,world!&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#定义变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;300&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#输出变量 A 需要前面加上 $&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果 300&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#输出 A=300, 类似于 java 的拼接输出，先将 A = 输出再输出 A 变量的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果 A=300&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#同第二个效果只是加上了双引号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;A=&lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果 A=300&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#撤销变量 A&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;unset&lt;/span&gt; A&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果 A=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#定义只读变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;readonly&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$B&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#输出结果 B=200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;unset&lt;/span&gt; B &lt;span class=&#34;token comment&#34;&gt;#hello.sh: line 17: unset: B: cannot unset: readonly variable  执行报错：无法设置渎职变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;定义变量的规则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;变量名称可以由字母，数字和下划线组成，但是不能以数字开头.5A=200 (错误的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等号两侧不能有空格&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量名称一般习惯为大写&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;将命令的返回值赋给变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A= &lt;code&gt;date&lt;/code&gt;  反引号，运行里面的命令，并把结果返回给变量 A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A=$(date) 等价于反引号&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E4%BD%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%98%E9%87%8F/</guid>
            <title>位置参数变量</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/%E4%BD%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%98%E9%87%8F/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我们执行一个 shell 脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参数变量，比如: &lt;code&gt;./myshell.sh 100 200&lt;/code&gt;  这个就是一个执行 shell 的命令行，可以在 myshell 脚本中获取到参数信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;$n (功能描述:n 为数字，$0 代表命令本身，$1- &lt;code&gt;$9&lt;/code&gt;  代表第一到第九个参数，十以上的参数，十以上的参数需要用大括号包含，如 ${10})&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mtext&gt;功能描述&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mtext&gt;这个变量代表命令行中所有的参数&lt;/mtext&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;*(功能描述:这个变量代表命令行中所有的参数.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;功&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;能&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;描&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;述&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;这&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;个&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;变&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;量&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;代&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;表&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;命&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;令&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;行&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;中&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;所&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;有&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;参&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;* 把所有的参数看成一个整体)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;@&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mtext&gt;功能描述&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mtext&gt;这个变量也代表命令行中所有的参数&lt;/mtext&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mtext&gt;不过&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;@(功能描述:这个变量也代表命令行中所有的参数,不过&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;功&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;能&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;描&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;述&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;这&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;个&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;变&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;量&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;也&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;代&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;表&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;命&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;令&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;行&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;中&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;所&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;有&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;参&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;不&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;过&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; @把每个参数区分对待)&lt;/p&gt;
&lt;p&gt;$#(功能描述：这个变量代表命令行中所有参数的个数)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;位置参数变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://hello.sh&#34;&gt;hello.sh&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0=&lt;span class=&#34;token variable&#34;&gt;$0&lt;/span&gt; 1=&lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt; 2=&lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;所有的参数=&lt;span class=&#34;token variable&#34;&gt;$*&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;把每个参数区分对待=&lt;span class=&#34;token variable&#34;&gt;$@&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;参数的个数=&lt;span class=&#34;token variable&#34;&gt;$#&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;当前执行的进程id=&lt;span class=&#34;token variable&#34;&gt;$$&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#以后台的方式运行另一个脚本并获取它的进程号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; /opt/shcodetest/hello.sh &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;300&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;                                                                                                          &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;最后一个后台方式运行的进程id=&lt;span class=&#34;token variable&#34;&gt;$!&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;执行的结果为&lt;span class=&#34;token variable&#34;&gt;$?&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240208125729969.png&#34; alt=&#34;image-20240208125729969&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/while%E5%BE%AA%E7%8E%AF/</guid>
            <title>while循环</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/while%E5%BE%AA%E7%8E%AF/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本语法格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;while [条件判断式]&lt;/p&gt;
&lt;p&gt;do&lt;/p&gt;
&lt;p&gt;程序&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意:while 关键字和 [空格] 之间都有空格&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例：从命令行输入一个数 n, 统计从 1+…+n 的值是多少&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-le&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token assign-left variable&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$SUM&lt;/span&gt; + &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#i 自增&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token assign-left variable&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;+1 &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;总和:&lt;span class=&#34;token variable&#34;&gt;$SUM&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/for%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</guid>
            <title>for循环语句</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/for%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本语法格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;for 变量 in 值 1 值 2 值 3 …&lt;/p&gt;
&lt;p&gt;do&lt;/p&gt;
&lt;p&gt;程序代码&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本语法格式 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;for ((初始值；循环；控制条件；变量变化))&lt;/p&gt;
&lt;p&gt;do&lt;/p&gt;
&lt;p&gt;程序&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#打印 1-100 的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;((&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;===================================================&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#打印 1-100 的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;((&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;$&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;&lt;/span&gt;                                                                                                                           &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#如果这里使用 echo 输出那么下面的输出就是 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token assign-left variable&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$SUM&lt;/span&gt;+&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;总和:&lt;span class=&#34;token variable&#34;&gt;$SUM&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/Shell%E7%BC%96%E7%A8%8B%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/</guid>
            <title>shell编程综合案例</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/Shell%E7%BC%96%E7%A8%8B%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;需求分析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;每天凌晨 2:30 备份，数据库 &lt;code&gt;名字随意&lt;/code&gt;  到 /date/backup/db&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备份开始和备份结束能够给出响应的提示信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备份后的文件要求以备份时间为文件名，并打包成 &lt;code&gt;tar.gz&lt;/code&gt;  的形式，比如: &lt;code&gt;2022-03-12_230201.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在备份的同时，检查是否有 10 天前备份的数据库文件，如果有就将其删除&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;思路&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;定时任务 --&amp;gt; sh 脚本 --&amp;gt; 数据库&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/Read%E8%AF%BB%E5%8F%96%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5/</guid>
            <title>Read读取控制台输入</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/shell%E7%BC%96%E7%A8%8B/Read%E8%AF%BB%E5%8F%96%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;基本语法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;read (选项)(参数)&lt;/p&gt;
&lt;p&gt;选项:&lt;/p&gt;
&lt;p&gt;-p  指定读取值时的提示符&lt;/p&gt;
&lt;p&gt;-t  指定读取值时等待的时间 (秒), 如果没有在指定的时间内输入，就不再等待了&lt;/p&gt;
&lt;p&gt;参数:&lt;/p&gt;
&lt;p&gt;变量：指定读取值的变量名&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;请输入数值=&#34;&lt;/span&gt; NUM1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你输入的数值为=&lt;span class=&#34;token variable&#34;&gt;$NUM1&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;请输入数值2=&#34;&lt;/span&gt; NUM2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你输入的数值2为=&lt;span class=&#34;token variable&#34;&gt;$NUM2&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/VirtuBox/%E4%BD%BF%E7%94%A8Vagrant%E4%B8%8EVirtuBox%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85Linux%E7%B3%BB%E7%BB%9F/</guid>
            <title>使用Vagrant与VirtuBox快速安装Linux系统</title>
            <link>https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/linux/VirtuBox/%E4%BD%BF%E7%94%A8Vagrant%E4%B8%8EVirtuBox%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85Linux%E7%B3%BB%E7%BB%9F/</link>
            <category>linux</category>
            <category>计算机学科</category>
            <pubDate>Tue, 02 Apr 2024 18:00:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;使用vagrant与virtubox快速安装linux系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用vagrant与virtubox快速安装linux系统&#34;&gt;#&lt;/a&gt; 使用 Vagrant 与 VirtuBox 快速安装 Linux 系统&lt;/h1&gt;
&lt;p&gt;首先我们下载 VirtuBox 与 Vagrant&lt;/p&gt;
&lt;p&gt;Vagrant 下载完成后需要重启一下电脑，开机后我们输入命令来查看是否安装成功了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316164625749.png&#34; alt=&#34;image-20240316164625749&#34;&gt;&lt;/p&gt;
&lt;p&gt;vagrant 的镜像仓库：&lt;a href=&#34;https://app.vagrantup.com/boxes/search&#34;&gt;https://app.vagrantup.com/boxes/search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vagrant 的官方下载地址：&lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;https://www.vagrantup.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们下面就可以通过 Vagrant 来安装一个 Linux 系统了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;打开 window cmd 窗口，运行 vagrant init centos/7，即可初始化一个 centos7 系统&lt;/p&gt;
&lt;p&gt;下载虚拟机时 centos/7 是看镜像仓库中的名字的&lt;/p&gt;
&lt;p&gt;运行后提示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316165630971.png&#34; alt=&#34;image-20240316165630971&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行后在指定目录下就会创建一个文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316165621225.png&#34; alt=&#34;image-20240316165621225&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行 vgrant up 即可启动虚拟机，系统 root 用户的密码是 vagrant&lt;/p&gt;
&lt;p&gt;使用命令启动虚拟机&lt;/p&gt;
&lt;p&gt;过程比较漫长，因为他要从官方下载镜像然后启动系统&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316165755530.png&#34; alt=&#34;image-20240316165755530&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待一会儿在 VirtuBox 中就可以看到虚拟机了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316170809872.png&#34; alt=&#34;image-20240316170809872&#34;&gt;&lt;/p&gt;
&lt;p&gt;提示到如下消息后就直接 ctrl + c 停止&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316173641519.png&#34; alt=&#34;image-20240316173641519&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后通过命令 vagrant ssh 连接上虚拟机就行了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316173718891.png&#34; alt=&#34;image-20240316173718891&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vagrant 其它常用命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vagrant ssh：自动使用 vagrant 用户连接虚拟机
&lt;ul&gt;
&lt;li&gt;vagrant upload source [destination] [name|id]：上传文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vagrantup.com/docs/cli/init.html&#34;&gt;https://www.vagrantup.com/docs/cli/init.html&lt;/a&gt; Vagrant 命令行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认虚拟机的 ip 地址不是固定 ip，开发不方便&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 vagrantfile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找到用户目录下的 vagrantfile 文件打开找到如下位置将注释解开&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316180659036.png&#34; alt=&#34;image-20240316180659036&#34;&gt;&lt;/p&gt;
&lt;p&gt;cmd 中查看 ip 输入命令 ipconfig 如果没有找到关于 VirtuBox 的使用这个命令：ipconfig /all&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316181051000.png&#34; alt=&#34;image-20240316181051000&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到 ip 地址是 56.1 那么我们就需要在 vagrantfile 的当前位置写上 56.n 的 ip 地址如下：&lt;/p&gt;
&lt;p&gt;比如说：56.10&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316181207356.png&#34; alt=&#34;image-20240316181207356&#34;&gt;&lt;/p&gt;
&lt;p&gt;改完配置后我们就需要重启下虚拟机 输入命令：vagrant reload&lt;/p&gt;
&lt;p&gt;cmd 显示如下信息后直接 ctrl + c 退出就行了，然后重新连接虚拟机 vagrant ssh&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316181422136.png&#34; alt=&#34;image-20240316181422136&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用命令 ip addr&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316182254038.png&#34; alt=&#34;image-20240316182254038&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时我们可以看到 ip 地址就变成我们设置的 ip 了&lt;/p&gt;
&lt;p&gt;下面我们互相 ping 一下，先在 windows ping 下 linux 的 ip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316182409325.png&#34; alt=&#34;image-20240316182409325&#34;&gt;&lt;/p&gt;
&lt;p&gt;ping 得通&lt;/p&gt;
&lt;p&gt;下面 linux ping windows 的 ip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316182449309.png&#34; alt=&#34;image-20240316182449309&#34;&gt;&lt;/p&gt;
&lt;p&gt;也 ping 得通&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在命令窗口中退出虚拟机的连接状态执行如下命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下次使用虚拟机我们启动时可以使用命令：vagrant up 它依靠用户目录下的 Vagrantfile 启动，启动之后使用 vagrant ssh 连接上就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：VirtuBox 会与括号带不限于如下软件冲突，需要卸载这些软件，然后重启电脑&lt;/p&gt;
&lt;p&gt;冲突的软件：红蜘蛛，360，净网大师 (有可能) 等.&lt;/p&gt;
&lt;h2 id=&#34;环境-配置docker阿里云镜像加速&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境-配置docker阿里云镜像加速&#34;&gt;#&lt;/a&gt; 环境 - 配置 docker 阿里云镜像加速&lt;/h2&gt;
&lt;p&gt;到阿里云的控制台首页中找到 “容器镜像服务” 里面得到镜像&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors&#34;&gt;https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316185154088.png&#34; alt=&#34;image-20240316185154088&#34;&gt;&lt;/p&gt;
&lt;p&gt;依次执行图中的命令即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/image-20240316185319343.png&#34; alt=&#34;image-20240316185319343&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
