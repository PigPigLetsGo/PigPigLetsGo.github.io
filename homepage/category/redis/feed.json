{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"redis\" category",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "title": "redis-基础知识",
            "date_published": "2024-04-02T10:00:50.579Z",
            "content_html": "<p>redis 默认有<mark> 16 个</mark>数据库</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051433044.png\" alt=\"image-20240105143208746\"></p>\n<p>默认使用的是第 0 个</p>\n<p>可以使用<mark> select</mark> 进行切换数据库，<mark>dbsize</mark> 查看当前数据库大小</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span> <span class=\"token comment\">#切换数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> dbsize <span class=\"token comment\">#查看当前 DB 大小</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>不同的数据库可以存储不同的值 (不互通) 1 中 不能访问到 2 中的数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> dbsize</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token builtin class-name\">set</span> name dkx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> dbsize</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> get name</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token string\">\"dkx\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>查看<mark>当前数据库</mark>所有的 key: <code> keys *</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> keys * <span class=\"token comment\">#这个库是空的下面的 key 都是测试工具测试的时候添加的</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"mylist\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"key:__rand_int__\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"counter:__rand_int__\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> keys *</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"user\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>清空当前数据库: <code>flushdb</code>  (在数据库 3 中使用 flushdb, 数据库 3 中数据全被清除，数据库 0 中的数据不受影响)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> flushdb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> keys *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>empty list or <span class=\"token builtin class-name\">set</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>接上命令我们在 3 号数据库中有数据我们切换到 0 使用命令: <code>flushall</code>  (清空所有数据库)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> flushall</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> keys *</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>empty list or <span class=\"token builtin class-name\">set</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>判断<mark>指定 key</mark> 是否存在: <code>exists</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> exists user</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> user lisi</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> exists user</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>设置 key 的过期时间: <code>expire</code>   (翻译 expire  :  到期) 过期后指定的 key 就会被删除</p>\n<p>查看 key 的有效期剩余秒数: <code>ttl</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> expire name <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> ttl name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"lisi\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> ttl name</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token parameter variable\">-2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>移动当前的 key 到指定数据库: <code>move</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> name a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> move name <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token keyword\">select</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> get name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>查看<mark>当前 key 的数据类型</mark>: <code>type</code>  (查看 key 不存在返回 &quot;none&quot;)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">type</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>string</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p><font style=\"color:red\"><strong>incr,decr,incrby,decrby 只能用于 String 类型的 key</strong></font></p>\n<p>将数值加 1: <code>incr</code>  (直接使用可以创建一个 String 类型的 key 比如执行: incr ar 这里的 ar 并不存在，创建一个 1 的 number)</p>\n<p>将数值减 1: <code>decr</code>  (直接使用可以创建一个 String 类型的 key 比如执行: decr ar 这里的 ar 并不存在，创建一个 - 1 的 number)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> number <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> incr number</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> decr number</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>将数值增加指定数量: <code>incrby</code></p>\n<p>将数值减少指定数量: <code>decrby</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> incrby number <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"10\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> decrby number <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get number</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">\"-1\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>redis 是单线程的！</p>\n</blockquote>\n<p>明白 Redis 是很快的，官方表示，Redis 是基于内存操作，<mark>CPU 不是 Redis 性能瓶颈</mark>，Redis 的瓶颈是根据机器的<mark>内存和网络带宽</mark>，既然可以使用单线程来实现，就使用单线程了！所以就使用了单线程了</p>\n<p>Redis 是 C 语言写的，官方提供的数据为 100000 + 的 QPS, 说明完全不比同样是使用 key-value 的 Memecache 差！</p>\n<p><mark>Redis 为什么单线程还这么快？</mark></p>\n<p>1. 误区 1: 高性能的服务器一定是多线程的？</p>\n<p>2. 误区 2: 多线程 (CPU 上下文切换) 一定比单线程效率高</p>\n<p><code>CPU&gt;内存&gt;硬盘</code>   的速度</p>\n<p>核心:redis 是将所有的<mark>数据全部放在内存中</mark>，所以说使用<mark>单线程去操作效率就是最高</mark>的，多线程 (CPU 上下文切换:<mark> 耗时操作！！！</mark>), 对于<mark>内存系统来说，如果没有上下文切换效率就是最高</mark>的！多次<mark>读写都是在一个 CPU 上</mark>的，在内存情况下，这个就是最佳方案！</p>\n<h3 id=\"五大数据类型\"><a class=\"markdownIt-Anchor\" href=\"#五大数据类型\">#</a> 五大数据类型</h3>\n<h4 id=\"string字符串\"><a class=\"markdownIt-Anchor\" href=\"#string字符串\">#</a> String (字符串)</h4>\n<p>获取字符串的字符长度 <code>strlen</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> user <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> strlen user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>追加字符串 (<mark>如果当前 key 不存在那么就创建</mark>): <code>append key value</code>  (只能对 String 类型使用)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> append name <span class=\"token string\">\"shiwonanshen!\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"liusangshiwonanshen!\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>截取指定区间的字符串范围 (start:0 end:-1 表示全部): <code>getrange</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> name liusangshiwonanshen</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"liusangshiwonanshen\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getrange name <span class=\"token number\">0</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"liusa\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"liusangshiwonanshen\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>替换指定位置开始的字符串: <code>setrange</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"liusangshiwonanshen\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setrange name <span class=\"token number\">2</span> ****</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">19</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"li****gshiwonanshen\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>设置过期时间: <code>setex</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setex name <span class=\"token number\">10</span> <span class=\"token string\">\"hello\"</span>#设置hello10秒后过期</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> ttl name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> ttl name</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token parameter variable\">-2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>不存在则创建，存在则不创建 (在分布式锁中会常常使用): <code>setnx</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setnx myname zhangsan <span class=\"token comment\">#如果 myname 不存在则创建</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setnx myname zhangsan <span class=\"token comment\">#myname 存在则创建失败</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get myname</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"zhangsan\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>同时设置多个值: <code>mset</code></p>\n<p>同时获取多个值: <code>mget</code>   (不是只能同时获取 mset 创建的 key 其它的是 String 类型就可以)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> keys *</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>empty list or <span class=\"token builtin class-name\">set</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> mset k1 v1 k2 v2 k3 v3 <span class=\"token comment\">#同时设置多个值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> mget k1 k2 k3 <span class=\"token comment\">#同时获取多个值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"v1\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"v2\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"v3\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> msetnx k1 v1 k4 v4 <span class=\"token comment\">#配合 setnx 如果有存在的 key 则条件不成立</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> mget k4 <span class=\"token comment\">#没有创建成功</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><h4 id=\"对象\"><a class=\"markdownIt-Anchor\" href=\"#对象\">#</a> <mark>对象</mark></h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> user:1 <span class=\"token punctuation\">&#123;</span>name:lisi,age:18<span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">#设置一个 user:1 对象 值为 json 字符串来保存一个对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get user:1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"&#123;name:lisi,age:18&#125;\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#这里的 key 是一个巧妙的设计: user:&#123;id&#125;:&#123;filed&#125; , 如此设计在 Redis 中是完全 OK 了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> mset user:1:name lisi user:1:age <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> mget user:1:name user:1:age</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"lisi\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>先获取再设置值: <code>getset</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getset dkx niubi </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get dkx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getset dkx <span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get dkx</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>数据结构是相通的！</p>\n<p>String 类似的使用场景:  value 除了字符串还可以是数字！</p>\n<h4 id=\"list\"><a class=\"markdownIt-Anchor\" href=\"#list\">#</a> List</h4>\n<p>在 redis 中，我们可以把 list 玩成，<mark>栈，队列，阻塞队列</mark></p>\n<p>跟 String 语法类似，所有的 list 命令都是用 <strong>l , 字母 l</strong> 开头的，<font style=\"color:green\"><strong>添加 :lpush 前，rpush 后</strong></font> | <font style=\"color:red\"><strong>移除并返回 /lpop 前 /rpop 后</strong></font></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051432592.png\" alt=\"image-20240105143226491\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush list a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush list b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> rpush list c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpop list</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> rpop list</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpop list</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>通过索引获取值: <code>lindex</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush list a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush list b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush list c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lindex list <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>获取长度: <code>llen</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> llen name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>移除列表中的 key: <code>lrem key</code></p>\n<p>指定范围获取列表中的值: <code>lrange start end</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name a</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrem name <span class=\"token number\">2</span> a</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr></table></figure><p>截断，保留列表中截断的值: <code>ltrim  key  start  end</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name d</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> ltrim name <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token comment\">#通过下标截取指定的长度，这个 list 已经被改变了，截断了只剩下截取的元素！</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\">#查看全部元素</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051432478.png\" alt=\"image-20240105143241383\"></p>\n<p>移除列表的最后一个元素，将它移动到新的列表中，如果移动到列表不存在则创建: <code>rpoplpush key source distination</code></p>\n<p>翻译: source (根源) , distination (目的地)</p>\n<ul>\n<li><font style=\"color:red\"><strong>只有: rpoplpush  格式没有 lpoprpush 或者 lpoplpush 的格式</strong></font></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> rpoplpush name nametwo <span class=\"token comment\"># 移除并移动到指定列表中指定列表不存在则创建</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\"># 查看原来的列表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange nametwo <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\"># 查看新的列表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>将列表中指定存在的下标的值替换为另外一个值.<strong> 更新操作</strong>: <code>lset  key  index  value</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> exists list <span class=\"token comment\"># 判断列表是否存在</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lset list <span class=\"token number\">0</span> a <span class=\"token comment\"># 视图向不存在的列表中添加值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR no such key</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lpush name a <span class=\"token comment\"># 向 list 中添加值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\"># 查看列表的值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lset name <span class=\"token number\">0</span> liusang <span class=\"token comment\"># 通过 lset 指定下标替换值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\"># 查看列表的值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lset name <span class=\"token number\">1</span> lisi <span class=\"token comment\"># 视图在存在的列表中设置不存在的索引值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR index out of range</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>将给定<mark> value 插入</mark>到指定 value 的<mark> before (之前)<mark> 或</mark>者 after (之后)</mark>: <code>linsert  key  [before|after]  pivot  value</code></p>\n<p>翻译:  (pivot : 支点)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> linsert name before a niubi <span class=\"token comment\">#将 niubi 插入到 a 的之前</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> linsert name after a <span class=\"token number\">666</span> <span class=\"token comment\">#将 666 插入到 a 的之后</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> lrange name <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>小结</p>\n</blockquote>\n<ul>\n<li>它实际上是一个链表，before Node after , left, right (<strong>前后，左右</strong>) 都可以插入值</li>\n<li>如果 key 不存在，插入的话就会创建新的列表</li>\n<li>如果 key 存在，插入的话就会新增内容</li>\n<li>如果移除了所有值，空列表，也代表不存在！</li>\n<li>在<u>两边<mark>插入</mark>或者改动值，效率最高！中间元素，相对来说效率会低</u>一点</li>\n</ul>\n<p><u>消息队列 (lpush rpop), 栈 (lpush lpop)</u></p>\n<h4 id=\"set集合set中的值是不能重复的\"><a class=\"markdownIt-Anchor\" href=\"#set集合set中的值是不能重复的\">#</a> Set (集合):set 中的值是<mark>不能重复</mark>的</h4>\n<p>单词: member (成员)</p>\n<p>向集合中添加元素: <code>sadd key value</code></p>\n<p>查看集合中所有元素: <code>smembers key</code></p>\n<p>查看集合中是否包含该元素: <code>sismember key value</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd myset liusang <span class=\"token comment\">#向集合中添加元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd myset niubi</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset <span class=\"token comment\">#查看集合中所有元素</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sismember myset niubi <span class=\"token comment\">#查看集合中是否包含该元素</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sismember myset <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>查看集合中元素个数: <code>scard key</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> scard myset</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>移除指定元素: <code>srem key value</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srem myset aaa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>随机抽取指定 count 个元素: <code>srandmember key count</code>  (默认只抽取一个出来)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> srandmember myset <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>随机弹出元素: <code>spop key</code>  (弹出列表后相当于从列表中删除)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> spop myset</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">\"liusang\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> spop myset</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> spop myset</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>将指定的元素移动到另外指定的数据库集合中: <code>smove source distination member</code>  (指定的数据库不存在则创建)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smove myset myset1 aaa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ccc\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> smembers myset1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"aaa\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> keys * </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"myset\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"myset1\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p><strong>差集: <code>sdiff</code> </strong> : 假设有集合 A 和 B, 所有属于 A 且不属于 B 的元素的集合被称为 A 与 B 的差集</p>\n<ul>\n<li><u>示例：对于集合 A={<mark>a</mark>,<font style=\"color:red\"> b</font>, <font style=\"color:red\">c</font>, <mark>d</mark>} 和集合 B={<font style=\"color:red\">b</font>, <font style=\"color:red\">c</font>, w}, 则 A 与 B 的差集为 {<mark>a</mark>, <mark>d</mark>}</u></li>\n</ul>\n<p><strong>交集: <code>sinter</code> </strong>: 两个集合之间相同的元素</p>\n<ul>\n<li><u>示例：对于集合 A={a,<font style=\"color:red\"> b</font>, <font style=\"color:red\">c</font>, d} 和集合 B={<font style=\"color:red\">b</font>, <font style=\"color:red\">c</font>, w}, 则 A 与 B 的交集为 {<mark>b</mark>,<mark>c</mark>}</u></li>\n</ul>\n<p><strong>并集: <code>sunion</code> </strong>: 合并两个集合中去除相同元素 (<u>并不是说删除，而是不算重复的保留一个</u>) 后的整合</p>\n<ul>\n<li><u>示例：对于集合 A={a,<font style=\"color:red\"> b</font>, <font style=\"color:red\">c</font>, d} 和集合 B={<font style=\"color:red\">b</font>, <font style=\"color:red\">c</font>, w}, 则 A 与 B 的交集为 {<mark>a</mark>,<mark>b</mark>,<mark>c</mark>,<mark>d</mark>,<mark>w</mark>}</u></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k1 a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k1 b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k1 c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k2 c</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k2 d</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sadd k2 e</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token function\">sdiff</span> k1 k2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sinter k1 k2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> sunion k1 k2</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"e\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"d\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><h4 id=\"hash哈希集合\"><a class=\"markdownIt-Anchor\" href=\"#hash哈希集合\">#</a> Hash (哈希集合)</h4>\n<p>Map 集合，key-Map 集合，值是 map 集合！本质和 String 类型没有太大区别，还是一个简单的 key-value 而，value 是可以由两个值组成</p>\n<p>向集合中添加一个字段值对: <code>hset key field value field1 value1 ...</code></p>\n<p>通过键字段获取值: <code>hget key field</code></p>\n<p>向集合中添加一个键多个字段值: <code>hmset key field value field1 value1 ...</code>  (默认的 hset 也可以添加多个)</p>\n<p>获取集合中多个值的键的值: <code>hmget key field field1 ...</code></p>\n<p>获取全部数据: <code>hgetall key</code></p>\n<p>删除指定键中指定的字段: <code>hdel key field field1 field2 ...</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hset h1 k1 niubi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hget h1 k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"niubi\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hmset h1 k1 hello k2 <span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hmget h1 k1 k2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hgetall h1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k1\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hdel h1 k1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hgetall h1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>获取元素个数，一对 field value 为一个个数: <code>hlen key</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hgetall h1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k3\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi666\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hlen h1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>判断集合指定的键中是否存在该字段: <code>hexists key field</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hexists h1 k1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hexists h1 k2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> keys *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"h1\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hgetall h1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k3\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi666\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>获取指定键中所有的 field: <code>hkeys key</code></p>\n<p>获取指定键中所有的 field 的 value: <code>hvals key</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hgetall h1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k3\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi666\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hkeys h1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k2\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"k3\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hvals h1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"666\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"niubi666\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>指定增加数量 (如果 count 给定为负数那么就是减): <code>hincrby key field count</code>  (如果 key 不存在则创建)</p>\n<p>判断如果不存在字段则添加，如果存在则不添加: <code>hsetnx key field value</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hset h1 k1 <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hincrby h1 k1 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hincrby h1 k1 <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hsetnx h1 k1 hello</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hget h1 k1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token string\">\"5\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hsetnx h1 k2 hello</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> hget h1 k2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>hash 变更的数据 user, name, age, 尤其是用户信息之类的，经常变动的信息！<mark>hash 更适合于对象的存储</mark>，<mark>String 更适合字符串存储</mark></p>\n<h4 id=\"zset有序集合\"><a class=\"markdownIt-Anchor\" href=\"#zset有序集合\">#</a> Zset (有序集合)</h4>\n<p>向集合中添加元素: <code>zadd key NX|XX</code>  前者按编号排序，后者存储 value</p>\n<p>按照指定范围获取集合中的元素: <code>zrange key start end</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">1</span> a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">2</span> b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">3</span> e</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">4</span> c</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"b\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"e\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"c\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>查询指定的键从最小值到最大值排序获取 (-inf 不能大于 + inf 否则报错 (+inf 可指定条件)):  <code>zrangebyscore</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">5000</span> xiaogong <span class=\"token comment\">#添加三个用户分别有工资</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">3500</span> dagong</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">2500</span> liuhong</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zadd h1 <span class=\"token number\">500</span> dazuo</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\">#查询所有的用户，默认排序按降序</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dagong\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrangebyscore h1 <span class=\"token parameter variable\">-inf</span> +inf <span class=\"token comment\">#排序查询 从负∞ 到正∞</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dagong\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrangebyscore h1 <span class=\"token parameter variable\">-inf</span> <span class=\"token number\">2500</span> <span class=\"token comment\">#查询 从负∞ 到指定的 2500 的工资为止</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>通过键以升序获取元素 (反转查询结果): <code>zrevrange key start end</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrangebyscore h1 <span class=\"token parameter variable\">-inf</span> +inf withscores</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrevrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>通过键获取元素并附带分数 (withscores): <code>zrangebyscore key -inf +inf withscores</code></p>\n<p>翻译：带分数 withscores</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrangebyscore h1 <span class=\"token parameter variable\">-inf</span> +inf withscores</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>移除指定键中的 member: <code>zrem key member</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dagong\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrem h1 dagong</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>通过键获取集合中的元素个数: <code>zcard key</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zcard h1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>获取指定区间的成员数量: <code>zcount key start end</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange h1 <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> withscores</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dazuo\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"500\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"liuhong\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"2500\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"xiaogong\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"5000\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zcount h1 <span class=\"token number\">500</span> <span class=\"token number\">5000</span> <span class=\"token comment\">#从 500 到 5000 的存在的元素的个数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><ul>\n<li>区分总结: set 与 zset 都是 value 不可重复的\n<ul>\n<li>其中 String , Hash 添加命令都是 set  而  Set , Zset 添加命令是 add</li>\n<li>其中获取元素个数:</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"三种特殊数据类型\"><a class=\"markdownIt-Anchor\" href=\"#三种特殊数据类型\">#</a> 三种特殊数据类型</h3>\n<h4 id=\"geospatial地理位置\"><a class=\"markdownIt-Anchor\" href=\"#geospatial地理位置\">#</a> geospatial 地理位置</h4>\n<p><strong><u>朋友的定位，附近的人，打车距离计算</u></strong></p>\n<p>Redis 的 Geo 在 Redis3.2 版本就推出了，这个功能可以<u><mark>推算地理位置的信息</mark>，<mark>两地之间的距离</mark>，<mark>方圆几里的人</mark></u></p>\n<blockquote>\n<p>geoadd</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#geoadd 添加地理位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#规则：两级无法直接添加，我们一般会下载城市数据，直接通过 java 程序一次性导入</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#参数: key  值 (经度，纬度，名称)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#有效的经度从 - 180 度到 180 度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#有效的纬度从 - 85.05112878 度到 85.05112878 度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#当坐标位置超出上述指定范围时，该命令将会返回一个错误，添加时注意以下的格式说明</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#\t\t\t\t\t\t\t\t\t\t\t  经度  | 纬度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geoadd china:city <span class=\"token number\">116.40</span> <span class=\"token number\">39.90</span> beijing</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>geopos</p>\n</blockquote>\n<p>获得当前定位：一定是一个坐标值</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#获取指定的城市的经度，纬度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geopos china:city beijing</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"116.39999896287918091\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"39.90000009167092543\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geopos china:city beijing congqi</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"116.39999896287918091\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"39.90000009167092543\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"106.49999767541885376\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"29.52999957900659211\"</span></pre></td></tr></table></figure><blockquote>\n<p>geodist : 两个城市的直线距离</p>\n</blockquote>\n<p>返回两个给定位置之间的距离</p>\n<p>单位:</p>\n<ul>\n<li>m: 表示单位为米</li>\n<li>km: 表示单位为千米</li>\n<li>mi: 表示单位为英里</li>\n<li>ft: 表示单位为英尺</li>\n</ul>\n<p>北京与重庆默认的距离 (重庆拼音打错了)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geodist china:city beijing congqi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"1464070.8051\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geodist china:city beijing congqi m <span class=\"token comment\">#北京到重庆的直线距离以米为单位</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"1464070.8051\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geodist china:city beijing congqi km <span class=\"token comment\">#北京到重庆的直线距离以千米为单位</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"1464.0708\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geodist china:city beijing congqi mi <span class=\"token comment\">#北京到重庆的直线距离以英里为单位</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"909.7337\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geodist china:city beijing congqi ft <span class=\"token comment\">#北京到重庆的直线距离以英尺为单位</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"4803381.9063\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>georadius 以给定的经纬度为中心，找出某一半径内的元素</p>\n</blockquote>\n<p>我附近的人？(获得所有附近的人的地址，定位！) 通过半径来查询</p>\n<p>获得指定数量的人，200</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadius china:city <span class=\"token number\">110</span> <span class=\"token number\">30</span> <span class=\"token number\">1000</span> km <span class=\"token comment\">#获得以 110 , 30 这个经纬度为中心，方圆 1000km (千米) 内的城市</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadius china:city <span class=\"token number\">110</span> <span class=\"token number\">30</span> <span class=\"token number\">1000</span> km withdist <span class=\"token comment\">#显示两个城市的直线距离</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"341.9374\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"977.5143\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadius china:city <span class=\"token number\">110</span> <span class=\"token number\">30</span> <span class=\"token number\">1000</span> km withcoord <span class=\"token comment\">#显示两个城市的经度纬度</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"106.49999767541885376\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"29.52999957900659211\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"120.1600000262260437\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"30.2400003229490224\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadius china:city <span class=\"token number\">110</span> <span class=\"token number\">30</span> <span class=\"token number\">1000</span> km withdist withcoord count <span class=\"token number\">1</span> <span class=\"token comment\">#限制显示数量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"341.9374\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"106.49999767541885376\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"29.52999957900659211\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadius china:city <span class=\"token number\">110</span> <span class=\"token number\">30</span> <span class=\"token number\">1000</span> km withdist withcoord count <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"341.9374\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"106.49999767541885376\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"29.52999957900659211\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"977.5143\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"120.1600000262260437\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"30.2400003229490224\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>georadiusbymember 以某一城市为中心，查找指定范围内的其它城市</p>\n</blockquote>\n<p>翻译:  radiusbymember 半径成员</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#以某一城市为中心，查找指定范围内的其它城市</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadiusbymember china:city beijing <span class=\"token number\">1300</span> km</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"beijing\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadiusbymember china:city beijing <span class=\"token number\">1500</span> km</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"beijing\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> georadiusbymember china:city beijing <span class=\"token number\">1000</span> km</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"beijing\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>geohash 返回一个或多个位置元素的 geohash 表示</p>\n</blockquote>\n<p>该命令将返回 11 个字符的 geohash 字符串</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#将二维的经纬度转换为一维的字符串，如果两个字符串越相似就代表越近</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geohash china:city beijing hangzhou</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"wx4fbxxfke0\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"wtmkn31bfb0\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> geohash china:city beijing congqi hangzhou</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"wx4fbxxfke0\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"wm5xzrybty0\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"wtmkn31bfb0\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><ul>\n<li>geo 底层的实现原理其实就是 Zset, 我们可以使用 Zset 命令来操作 geo</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange china:city <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span> <span class=\"token comment\">#查看地图中全部元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"congqi\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"beijing\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrem china:city congqi <span class=\"token comment\">#将指定元素从地图中删除</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> zrange china:city <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"hangzhou\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"beijing\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><h4 id=\"hyperloglog\"><a class=\"markdownIt-Anchor\" href=\"#hyperloglog\">#</a> Hyperloglog</h4>\n<blockquote>\n<p>什么是基数？</p>\n</blockquote>\n<p 1,=\"\" 3,=\"\" 5,=\"\" 7,=\"\" 8,=\"\" 7=\"\">A</p>\n<p 1,=\"\" 3,=\"\" 5,=\"\" 7,=\"\" 8=\"\">B</p>\n<p>基数 (不重复的元素):B {1, 3, 5, 7, 8} = 5 , 可以接受误差！</p>\n<blockquote>\n<p>简介</p>\n</blockquote>\n<p>Redis2.8.9 版本就更新了 Hyperloglog 数据结构</p>\n<p>Redis Hyperloglog 基数统计的算法</p>\n<p>优点：占用的内存是固定的，2^64 不同的元素的基数，只需要废 12KB 内存，如果要从内存角度来比较的话 Hyperloglog 首选！</p>\n<p><mark>网页的 UV (一个人访问一个网站多次，但是还是算作一个人)</mark>  <code>视频浏览量</code></p>\n<p>传统的方式，set 保存用户的 id, 然后就可以统计 set 中的元素数量作为标准判断</p>\n<p>这个方式如果保存大量的 id, 就会比较麻烦，我们的目的是为了计数，而不是保存用户 id</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFadd Hyper a b c d e <span class=\"token comment\">#创建第一组元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFadd Hyper1 f g h i j k  <span class=\"token comment\">#创建第二组元素</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFcount Hyper <span class=\"token comment\">#查看第一组元素个数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFcount Hyper1 <span class=\"token comment\">#查看第二组元素个数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFmerge Hyper2 Hyper Hyper1 <span class=\"token comment\">#将两组元素以基数进行合并</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFcount Hyper2 <span class=\"token comment\">#查看第一组与第二组合并后的数量</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFadd Hyper4 a b c i m k <span class=\"token comment\">#创建第三组元素</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFmerge Hyper5 Hyper Hyper4 <span class=\"token comment\">#将第一组与第三组以基数进行合并</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> PFcount Hyper5 <span class=\"token comment\">#查看合并后的数量</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>如果允许容错，那么一定可以使用 Hyperloglog</p>\n<p>如果不允许容错，就使用 set 或者自己的数据类型即可</p>\n<h4 id=\"bitmaps\"><a class=\"markdownIt-Anchor\" href=\"#bitmaps\">#</a> Bitmaps</h4>\n<blockquote>\n<p>位存储</p>\n</blockquote>\n<p>统计疫情感染人数: 0 1 0 1 0 : 1, 被感染 0, 正常</p>\n<p>统计用户信息，活跃，不活跃，登录，未登录，打卡，365 打卡，两个状态的都可以使用 Bitmaps</p>\n<p>Bitmaps 位图，数据结构！都是操作二进制来进行记录，就只有 0 和 1 两个状态！</p>\n<p>365 天 = 365bit 1 字节 = 8bit 接近用户一年的打卡情况为 46 个字节左右</p>\n<p>使用 bitmaps 来记录，周一到周日的打卡情况！</p>\n<p>周一：1 周二：1 周三：0 周四：1 周五：0 周六：0 周日：1</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">0</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">1</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">2</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">3</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">4</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">5</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> setbit sign <span class=\"token number\">6</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>查看某一天是否有打卡！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getbit sign <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getbit sign <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getbit sign <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>统计操作，统计 打卡的天数！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> bitcount sign <span class=\"token number\">0</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> bitcount sign</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><h3 id=\"事务\"><a class=\"markdownIt-Anchor\" href=\"#事务\">#</a> 事务</h3>\n<p>Redis 事务本质：一组命令的集合！一个事务中的所有命令都会被序列化，在事务执行过程中，会按照顺序执行！</p>\n<p>一次性，顺序型，排它性！执行一系列的命令！</p>\n<pre><code>----队列 set set set 执行----\n</code></pre>\n<p>原子性：要么同时成功，要么同时失败</p>\n<p><font color='red'>Redis 事务没有隔离级别的概念</font></p>\n<p>所有的命令在事务中，并没有直接被执行，只有发起执行命令的时候才会执行！<font color='red' size=4>执行命令：Exec</font></p>\n<p><font color='red'>Redis 单条命令是保证原子性的但是 Redis 的事务是不保证原子性！</font></p>\n<p>Redis 的事务：每次执行完毕后事务就会消失，需要再次开启事务</p>\n<ul>\n<li>开启事务 (multi)</li>\n<li>命令入队 (…)</li>\n<li>执行事务 (exec)</li>\n</ul>\n<blockquote>\n<p>正常执行事务！</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi <span class=\"token comment\">#开启事务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k1 v1 <span class=\"token comment\">#添加键值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>QUEUED <span class=\"token comment\"># 命令入队</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k2 v2 <span class=\"token comment\">#添加键值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k2 <span class=\"token comment\">#通过键获取值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k3 v3 <span class=\"token comment\">#添加键值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">exec</span> <span class=\"token comment\">#执行事务</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> OK</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> OK</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"v2\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> OK</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>discard 放弃事务！</p>\n</blockquote>\n<p>翻译: discard 丢弃</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi <span class=\"token comment\">#开启事务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k1 v1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k2 v2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k3 v3</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> discard <span class=\"token comment\">#放弃事务</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k1 <span class=\"token comment\">#事务队列中的命令都没有被执行</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k3</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>编译型异常 (代码有问题！命令有错！), 事务中所有的命令都不会被执行！</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k1 v1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k2 v2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> getset k1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR wrong number of arguments <span class=\"token keyword\">for</span> <span class=\"token string\">'getset'</span> <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k3 v3</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k4 v4</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">exec</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> EXECABORT Transaction discarded because of previous errors.</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k4</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>运行时异常 (1/0), 如果事务队列中存在语法性，那么执行命令的时候，其它命令是可以正常执行的，错误命令抛出异常！</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k1 v1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> incr k1 <span class=\"token comment\">#给一个字符串进行 + 1 执行的时候报错</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k2 v2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k3 v3</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k3</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">exec</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> ERR value is not an integer or out of range <span class=\"token comment\">#虽然第一条命令报错了，但是依旧正常执行流程成功了</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> OK</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> OK</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"v3\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k2</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token string\">\"v2\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k3</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token string\">\"v3\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>监控！Watch (乐观锁) (面试常问)</p>\n</blockquote>\n<h3 id=\"悲观锁\"><a class=\"markdownIt-Anchor\" href=\"#悲观锁\">#</a> 悲观锁:</h3>\n<ul>\n<li>很悲观，认为什么时候都会出现问题，无论做什么都会加锁</li>\n</ul>\n<h3 id=\"乐观锁\"><a class=\"markdownIt-Anchor\" href=\"#乐观锁\">#</a> 乐观锁:</h3>\n<ul>\n<li>\n<p>很乐观，认为什么时候都不会出现问题，所以一般不会加锁，更新数据的时候去判断一下，在此期间是否有人修改过这个数据</p>\n</li>\n<li>\n<p>获取 version</p>\n</li>\n<li>\n<p>更新的时候比较 version</p>\n</li>\n</ul>\n<blockquote>\n<p>Redis 监视测试</p>\n</blockquote>\n<p>正常执行成功！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> money <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> out <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token function\">watch</span> money <span class=\"token comment\">#监视 money 对象，事务执行完毕之后监控就会自动取消</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi <span class=\"token comment\">#事务正常结束，数据期间没有发生变动，这个时候就正常执行成功！</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> decrby money <span class=\"token number\">20</span> <span class=\"token comment\">#花掉 20 元</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> incrby out <span class=\"token number\">20</span> <span class=\"token comment\">#增加花掉记录 20 元</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">exec</span> <span class=\"token comment\">#执行事务命令</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>测试多 Terminal 修改值，使用 watch 可以当作 redis 的乐观锁操作！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#终端一号</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token function\">watch</span> money <span class=\"token comment\">#监视 money</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi <span class=\"token comment\">#开启事务</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> decrby money <span class=\"token number\">10</span> <span class=\"token comment\">#花掉 10 元</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> incrby out <span class=\"token number\">10</span> <span class=\"token comment\">#记录花掉 10 元</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#终端二号</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get money <span class=\"token comment\">#获取余额</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token string\">\"80\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> money <span class=\"token number\">1000</span> <span class=\"token comment\">#设置为 1000 元</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get money <span class=\"token comment\">#查看设置的余额</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token string\">\"1000\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#终端一号</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">exec</span> <span class=\"token comment\">#执行事务命令</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span> <span class=\"token comment\">#exec 执行之前，另外一个线程，修改了我们的值，这个时候，就会导致事务执行失败！</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><ul>\n<li><u>unwatch 解开全部的乐观锁 watch, 当执行了 exec 或者 discard 后 watch 也会解锁</u></li>\n</ul>\n<p><font style=\"color:red\"><strong>如果不进行 watch, 使用多线程进行同样操作</strong></font></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Terminal 一</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get monery</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">\"100\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> multi</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">(</span>TX<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> decrby monery <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">(</span>TX<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> incrby out  <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>QUEUED</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">(</span>TX<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token builtin class-name\">exec</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#Terminal 二</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get monery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token string\">\"100\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> monery <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#Terminal 一</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:6379<span class=\"token punctuation\">(</span>TX<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token builtin class-name\">exec</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>integer<span class=\"token punctuation\">)</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get  monery</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token string\">\"80\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "基础",
                "database",
                "redis"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E6%8C%81%E4%B9%85%E5%8C%96/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E6%8C%81%E4%B9%85%E5%8C%96/",
            "title": "redis-持久化",
            "date_published": "2024-04-02T10:00:50.577Z",
            "content_html": "<h2 id=\"redis持久化\"><a class=\"markdownIt-Anchor\" href=\"#redis持久化\">#</a> Redis 持久化</h2>\n<p>面试和工作，持久化都是<mark>重点</mark>！</p>\n<blockquote>\n<p>Redis 是内存数据库，如果不将内存中的数据库状态保存到磁盘，那么一旦服务器进程退出，服务器中的数据库状态也会消失，所以 Redis 提供了持久化功能</p>\n</blockquote>\n<h3 id=\"rdbredis-database\"><a class=\"markdownIt-Anchor\" href=\"#rdbredis-database\">#</a> RDB(Redis DataBase)</h3>\n<p>在主从复制中，rdb 就是备用的，从机上面！</p>\n<blockquote>\n<p>什么是 RDB</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051426460.png\" alt=\"image-20240105142624377\"></p>\n<p>在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的 Snapshot 快照，它恢复时是将快照文件直接读到内存里.</p>\n<p>Redis 会单独创建 (fork), 一个子进程来进行持久化，会先将数据写入到一个临时文件中，待持久化过程都结束了，再用这个临时文件替换上次持久化好的文件，整个过程中，主进程是不进行任何 IO 操作的，这就确保了极高的性能，如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那 RDB 方式要比 AOF 方式更加的高效，RDB 的缺点是最后一次持久化后的数据可能丢失。我们默认的就是 RDB, 一般情况下不需要修改这个配置！</p>\n<blockquote>\n<p>有时候在生产环境我们会将这个文件进行备份</p>\n</blockquote>\n<p><mark>rdb 保存的文件是 dump.rdb</mark> 都是在配置文件中的快照中进行配置的！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051426756.png\" alt=\"image-20240105142652722\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051427482.png\" alt=\"image-20240105142725442\"></p>\n<blockquote>\n<p>rdb 触发机制</p>\n</blockquote>\n<p>1.save 的规则满足的情况下，会自动触发 rdb 规则</p>\n<p>2. 执行 flushall 命令，也会触发 rdb 规则</p>\n<p>3. 退出 redis, 也会产生 rdb 文件</p>\n<p>备份就自动生成一个  <code>dump.rdb</code>  文件</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425051.png\" alt=\"image_2023-01-02-17-53-39\"></p>\n<blockquote>\n<p>如何恢复 rdb 文件</p>\n</blockquote>\n<p>1. 只需要将 rdb 文件放在我们 redis 启动目录就可以，redis 启动的时候会自动检查 dump.rdb</p>\n<p>2. 查看存在的位置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> config get <span class=\"token function\">dir</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"dir\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"/usr/local/bin\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>几乎它自己默认的配置就够用了，但是我们还是需要去学习</p>\n</blockquote>\n<h4 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h4>\n<ol>\n<li>\n<p>适合大规模的数据恢复</p>\n</li>\n<li>\n<p>对数据的完整性要求不高</p>\n</li>\n</ol>\n<h4 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\">#</a> 缺点</h4>\n<ol>\n<li>\n<p>需要一定的时间间隔进程操作，如果 redis 意外宏基了，这个最后一次修改的数据就没了</p>\n</li>\n<li>\n<p>fork (分岔) 进程的时候，会占用一定的内存空间</p>\n</li>\n</ol>\n<h3 id=\"aofappend-only-file\"><a class=\"markdownIt-Anchor\" href=\"#aofappend-only-file\">#</a> AOF(Append only File)</h3>\n<p>将我们的所有命令都记录下来，类似与命令 <code>history</code> , 恢复的时候就把这个文件全部在执行一遍！</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425675.png\" alt=\"image_2023-01-02-17-17-21\"></p>\n<p>以日志的形式来记录每个写操作，将 redis 执行过的所有指令记录下来 (读操作不记录), 只许追加文件但不可以改写文件，redis 启动之初会读取该文件重新构建数据，换言之，redis 重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作</p>\n<p><mark>Aof 保存的是 appendonly.aof 文件</mark></p>\n<blockquote>\n<p>APPEND</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051427331.png\" alt=\"image-20240105142742273\"></p>\n<p>默认是不开启的，我们需要手动进行配置更改为开启 yes</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425208.png\" alt=\"image_2023-01-03-17-16-29\"></p>\n<p>一般每间隔一秒修改就好了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425787.png\" alt=\"image_2023-01-03-17-19-15\"></p>\n<blockquote>\n<p>重写规则说明</p>\n</blockquote>\n<p>aof 默认就是文件的无限追加，文件会越来越大</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051427580.png\" alt=\"image-20240105142755534\"></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425123.png\" alt=\"image_2023-01-03-17-23-03\"></p>\n<p>如果 aof 文件大于 64mb, 就会 fork 一个新的进程来将我们的文件进行重写！</p>\n<p>测试 如果破坏 aof 文件会怎么样</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425280.png\" alt=\"image_2023-01-03-19-14-06\"></p>\n<p><font style=\"color:red\"><u>报错：拒绝连接</u></font></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051425831.png\" alt=\"image_2023-01-03-19-15-50\"></p>\n<blockquote>\n<p>如果这个 aof 文件有错误，这时候 redis 是启动不起来的，我们需要修复这个 aof 文件<br>redis 给我们提供了一个工具 <code>redis-check-aof</code></p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051426279.png\" alt=\"image_2023-01-03-19-20-44\"></p>\n<p>查看 aof 文件里面没有错误命令了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051426997.png\" alt=\"image_2023-01-03-19-21-34\"></p>\n<p>再次重启后就可以正常启动了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051426319.png\" alt=\"image_2023-01-03-19-23-33\"></p>\n<blockquote>\n<p>优点和缺点</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># appendfsync always #每次修改都会 sync, 消耗性能</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>appendfsync everysec <span class=\"token comment\">#每秒执行一次 sync, 可能会丢失这 1 秒的数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># appendfsync no #不执行 sync, 这个时候操作系统自动同步数据，速度最快</span></pre></td></tr></table></figure><p>优点:</p>\n<ol>\n<li>\n<p>每次修改都同步，文件的完整性会更好</p>\n</li>\n<li>\n<p>每秒修改同步一次，可能会丢失一秒的数据</p>\n</li>\n<li>\n<p>从不同步，效率最高</p>\n</li>\n</ol>\n<p>缺点:</p>\n<ol>\n<li>\n<p>相对于数据文件来说，aof 远远大于 rdb, 修复的速度也比 rdb 慢！</p>\n</li>\n<li>\n<p>aof 运行效率要比 rdb 慢，所以我们 redis 默认的配置就是 rdb 持久化！</p>\n</li>\n</ol>\n<p><mark>扩展</mark></p>\n<ol>\n<li>\n<p>rdb 持久化方式能够在指定的时间间隔内对你的数据进行快照存储</p>\n</li>\n<li>\n<p>aof 持久化方式记录每次对服务器写的操作，当服务器重启的时候会重新执行这些命令来恢复原始数据，aof 命令以 Redis 协议追加保存每次写的操作到文件末尾，Redis 还能对 aof 文件进行后台重写，使得 aof 文件的体积不至于过大</p>\n</li>\n<li>\n<p>只做缓存，如果你希望你的数据在服务器运行的时候存在，你也可以不适用任何持久化</p>\n</li>\n<li>\n<p>同时开启两种持久化方式</p>\n<ul>\n<li>在这种情况下，当 redis 重启的时候会优先载入 aof 文件来恢复原始的数据，因为在通常情况下 aof 文件保存的数据集要比 rdb 文件保存的数据集要完整</li>\n<li>rdb 的数据不实时，同时使用两者时服务器重启也只会找 aof 文件，那要不要只使用 aof 呢？作者不建议，因为 rdb 更适合用于备份数据库 (aof 在不断变化不好备份), 快速重启，而且不会有 aof 可能潜在的 bug, 留着作为一个万一的手段</li>\n</ul>\n</li>\n<li>\n<p>性能建议</p>\n<ul>\n<li>因为 rdb 文件只用作后背用途，建议只在 Slae 上持久化 rdb 文件，而且只要 15 分钟备份一次就够了，只保留 Save 900 1 这条规则</li>\n<li>如果 Enable AOF, 好处是在最恶劣的情况下也只会丢失不超过两秒数据，启动脚本较简单只 load 自己的 aof 文件就可以了，代价一是带来了持续的 IO, 二是 AOF rewrite 的最后将 rewrite 过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的，只要硬盘许可，应该尽量减少 AOF rewrite 的频率，AOF 重写的基础大小默认值 64mb 太小了，可以设到 5G 以上，默认超过原大小 100% 大小重写可以改到适当的数值</li>\n<li>如果不 Enable AOF, 仅靠 Master-Slave Repllcation (主从复制) 实现高可用性也可以，能省掉一大笔 IO, 也减少了 rewrite 是带来的系统波动，代价是如果 Master/Slave 同时倒掉，会丢失十几分钟的数据，启动脚本也要比较两个 Master/Slave 中的 RDB 文件，载入较新的那个，微博就是这种架构</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "计算机学科",
                "database",
                "redis"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/",
            "title": "redis-发布订阅",
            "date_published": "2024-04-02T10:00:50.574Z",
            "content_html": "<h2 id=\"redis发布订阅\"><a class=\"markdownIt-Anchor\" href=\"#redis发布订阅\">#</a> Redis 发布订阅</h2>\n<p>Redis 发布订阅 (pub/sub) 是一种<mark>消息通信模式</mark>：发送者 (pub) 发送消息，订阅者 (sub) 接受消息</p>\n<p>Redis 客户端可以订阅任意数量的频道</p>\n<p>订阅 / 发布消息图:</p>\n<p>第一个：消息发送者，第二个：频道，第三个：消息订阅者</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424264.png\" alt=\"image-20240105142437181\"></p>\n<p>下图展示了频道 channel1, 以及订阅这个频道的三个客户端–client2, client5 和 client1 之间的关系:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424633.png\" alt=\"image_2023-01-03-20-27-49\"></p>\n<p>当有新消息通过 PUBLISH 命令发送给频道 channel1 时，这个消息就会被发送给订阅它的三个客户端:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424455.png\" alt=\"image_2023-01-03-20-47-11\"></p>\n<blockquote>\n<p>命令</p>\n</blockquote>\n<p>这些命令被广泛用于构建即时通信应用，比如网络聊天室 (chatroom) 和实时广播，实时提醒等</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>命令及描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><font color='red'>psubscribe</font> pattern[pattern …]<br>订阅一个或多个符合给定模式的频道</td>\n</tr>\n<tr>\n<td>2</td>\n<td><font color='red'>pubsub</font> subcommand[argument[argument…]]<br>查看订阅与发布系统状态</td>\n</tr>\n<tr>\n<td>3</td>\n<td><font color='red'>publish</font> channel message<br>将信息发送到指定的频道</td>\n</tr>\n<tr>\n<td>4</td>\n<td><font color='red'>punsubscribe</font> [pattern[pattern …]]<br>退订所有给定模式的频道</td>\n</tr>\n<tr>\n<td>5</td>\n<td><font color='red'>subscribe</font> channel[channel …]<br>订阅给定的一个或多个频道的信息</td>\n</tr>\n<tr>\n<td>6</td>\n<td><font color='red'>unsubscribe</font> [channel[channel …]]<br>指退订给定的频道</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>测试</p>\n</blockquote>\n<p><font style=\"color:red\"><strong><u>注意事项：要使用同一个 redis 也就是同一个端口号来进行测试 6379 订阅不能接收到 6380 发布的消息的只能接收到 6379 发布的消息，至于订阅后被阻塞还怎么发布消息这就看你自己的智商了</u></strong></font></p>\n<p>订阅一个频道的信息</p>\n<p>订阅端:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424362.png\" alt=\"image_2023-01-03-21-21-12\"></p>\n<p>将信息发送到指定的频道</p>\n<p>发送端:</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424581.png\" alt=\"image_2023-01-03-21-48-46\"></p>\n<p>接受到的信息</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424495.png\" alt=\"image_2023-01-03-21-47-59\"></p>\n<p>一次订阅多次发送</p>\n<blockquote>\n<p>原理</p>\n</blockquote>\n<p>Redis 是使用 C 实现的，通过分析 Redis 源码里的 pubsub.c 文件，了解发布和订阅机制的底层实现，籍此加深对 Redis 的理解</p>\n<p>Redis 通过 publish, subscribe 和 psubscribe 等命令实现发布和订阅功能</p>\n<p>通过 subscribe 命令订阅某频道后，redis-server 里维护了一个字典，字典的键就是一个个 channel, 而字典的值则是一个链表，链表中保存了所有订阅这个 channel 的客户端，subscribe 命令的关键，就是将客户端添加到给定 channel 的订阅链表中</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424967.png\" alt=\"image_2023-01-03-22-11-29\"></p>\n<p>通过 publish 命令向订阅者发送消息，redis-server 会使用给定的频道作为键，在它所维护的 channel 字典中查找记录了订阅这个频道的所有客户端的链表，遍历这个链表，将消息发布给所有订阅者</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051424577.png\" alt=\"image_2023-01-03-22-32-20\"></p>\n<p>pub/sub 从字面上理解就是发布 (publish) 与订阅 (subscribe), 在 Redis 中，你可以设定对某一个 key 值进行消息发布及消息订阅，当一个 key 值上进行了消息发布后，所有订阅它的客户端都会收到响应的消息，这一功能最明显的用法就是用作实时消息系统，比如普通的即时聊天，群聊等功能</p>\n",
            "tags": [
                "计算机学科",
                "database",
                "redis"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/",
            "title": "redis-分片集群",
            "date_published": "2024-04-02T10:00:50.572Z",
            "content_html": "<h1 id=\"一-redis分片集群\"><a class=\"markdownIt-Anchor\" href=\"#一-redis分片集群\">#</a> 一、Redis 分片集群🎄</h1>\n<ul>\n<li>搭建分片集群</li>\n<li>散列插槽</li>\n<li>集群伸缩</li>\n<li>故障转移</li>\n<li>RedisTemplate 访问分片集群</li>\n</ul>\n<h2 id=\"11-分片集群结构\"><a class=\"markdownIt-Anchor\" href=\"#11-分片集群结构\">#</a> 1.1、分片集群结构</h2>\n<p>主从和哨兵可以解决高可用，高并发读的问题。但是依然有两个问题没有解决：</p>\n<p>1、海量数据存储问题</p>\n<p>2、高并发写的问题</p>\n<p>使用分片集群可以解决上述问题，分片集群特征：</p>\n<p>1、集群中有多个 master，每个 master 保存不同数据</p>\n<p>2、每个 master 都可以有多个 slave 节点</p>\n<p>3、master 之间通过 ping 监测彼此健康状态</p>\n<p>4、客户端请求可以访问集群任意节点，最终都会被转发到正确节点</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191007730.png\" alt=\"image-20231019100741294\"></p>\n<h1 id=\"二-搭建分片集群\"><a class=\"markdownIt-Anchor\" href=\"#二-搭建分片集群\">#</a> 二、搭建分片集群🎄</h1>\n<h2 id=\"41集群结构\"><a class=\"markdownIt-Anchor\" href=\"#41集群结构\">#</a> 4.1. 集群结构</h2>\n<p>分片集群需要的节点数量较多，这里我们搭建一个最小的分片集群，包含 3 个 master 节点，每个 master 包含一个 slave 节点，结构如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017055.png\" alt=\"image-20210702164116027\"></p>\n<p>这里我们会在同一台虚拟机中开启 6 个 redis 实例，模拟分片集群，信息如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">PORT</th>\n<th style=\"text-align:center\">角色</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7001</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7002</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">7003</td>\n<td style=\"text-align:center\">master</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8001</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8002</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.150.101</td>\n<td style=\"text-align:center\">8003</td>\n<td style=\"text-align:center\">slave</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"42准备实例和配置\"><a class=\"markdownIt-Anchor\" href=\"#42准备实例和配置\">#</a> 4.2. 准备实例和配置</h2>\n<p>删除之前的 7001、7002、7003 这几个目录，重新创建出 7001、7002、7003、8001、8002、8003 目录：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 删除旧的，避免配置干扰</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建目录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span></pre></td></tr></table></figure><p>在 /tmp 下准备一个新的 redis.conf 文件，内容如下：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>port 6379</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 开启集群功能</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cluster-enabled yes</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 集群的配置文件名称，不需要我们创建，由 redis 自己维护</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster-config-file /tmp/6379/nodes.conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 节点心跳失败的超时时间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cluster-node-timeout 5000</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 持久化文件存放目录</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dir /tmp/6379</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 绑定地址</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>bind 0.0.0.0</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 让 redis 后台运行</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>daemonize yes</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 注册的实例 ip</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>replica-announce-ip 192.168.150.101</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 保护模式</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>protected-mode no</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 数据库数量</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>databases 1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 日志</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>logfile /tmp/6379/run.log</pre></td></tr></table></figure><p>将这个文件拷贝到每个目录下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 执行拷贝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> <span class=\"token function\">cp</span> redis.conf</pre></td></tr></table></figure><p>修改每个目录下的 redis.conf，将其中的 6379 修改为与所在目录一致：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 修改配置文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/6379/&#123;&#125;/g'</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>/redis.conf</pre></td></tr></table></figure><h2 id=\"43启动\"><a class=\"markdownIt-Anchor\" href=\"#43启动\">#</a> 4.3. 启动</h2>\n<p>因为已经配置了后台启动模式，所以可以直接启动服务：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 /tmp 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 一键启动所有服务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> redis-server <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>/redis.conf</pre></td></tr></table></figure><p>通过 ps 查看状态：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> redis</pre></td></tr></table></figure><p>发现服务都已经正常启动：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017466.png\" alt=\"image-20231019101756517\"></p>\n<p>如果要关闭所有进程，可以执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> redis <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">kill</span></pre></td></tr></table></figure><p>或者（推荐这种方式）：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%s\\n'</span> <span class=\"token number\">7001</span> <span class=\"token number\">7002</span> <span class=\"token number\">7003</span> <span class=\"token number\">8001</span> <span class=\"token number\">8002</span> <span class=\"token number\">8003</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> -I<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">-t</span> redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token function\">shutdown</span></pre></td></tr></table></figure><h2 id=\"44创建集群\"><a class=\"markdownIt-Anchor\" href=\"#44创建集群\">#</a> 4.4. 创建集群</h2>\n<p>虽然服务启动了，但是目前每个服务之间都是独立的，没有任何关联。</p>\n<p>我们需要执行命令来创建集群，在 Redis5.0 之前创建集群比较麻烦，5.0 之后集群管理命令都集成到了 redis-cli 中。</p>\n<p>1）Redis5.0 之前</p>\n<p>Redis5.0 之前集群命令都是用 redis 安装包下的 src/redis-trib.rb 来实现的。因为 redis-trib.rb 是有 ruby 语言编写的所以需要安装 ruby 环境。</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装依赖</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> zlib ruby rubygems</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gem <span class=\"token function\">install</span> redis</pre></td></tr></table></figure><p>然后通过命令来管理集群：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 redis 的 src 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp/redis-6.2.4/src</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 创建集群</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./redis-trib.rb create <span class=\"token parameter variable\">--replicas</span> <span class=\"token number\">1</span> <span class=\"token number\">192.168</span>.150.101:7001 <span class=\"token number\">192.168</span>.150.101:7002 <span class=\"token number\">192.168</span>.150.101:7003 <span class=\"token number\">192.168</span>.150.101:8001 <span class=\"token number\">192.168</span>.150.101:8002 <span class=\"token number\">192.168</span>.150.101:8003</pre></td></tr></table></figure><p>2）Redis5.0 以后</p>\n<p>我们使用的是 Redis6.2.4 版本，集群管理以及集成到了 redis-cli 中，格式如下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">--cluster</span> create --cluster-replicas <span class=\"token number\">1</span> <span class=\"token number\">192.168</span>.249.128:6379 <span class=\"token number\">192.168</span>.249.128:6380 <span class=\"token number\">192.168</span>.249.128:6381 <span class=\"token number\">192.168</span>.249.128:6382 <span class=\"token number\">192.168</span>.249.128:6383 <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr></table></figure><p>命令说明：</p>\n<ul>\n<li><code>redis-cli --cluster</code>  或者 <code>./redis-trib.rb</code> ：代表集群操作命令</li>\n<li><code>create</code> ：代表是创建集群</li>\n<li><code>--replicas 1</code>  或者 <code>--cluster-replicas 1</code>  ：指定集群中每个 master 的副本个数为 1，此时 <code>节点总数 ÷ (replicas + 1)</code>  得到的就是 master 的数量。因此节点列表中的前 n 个就是 master，其它节点都是 slave 节点，随机分配到不同 master</li>\n</ul>\n<p>运行后的样子：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191017247.png\" alt=\"image-20210702181101969\"></p>\n<p>这里输入 yes，则集群开始创建：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018254.png\" alt=\"image-20210702181215705\"></p>\n<pre><code>[ERR] Not all 16384 slots are covered by nodes.\n</code></pre>\n<p>如果出现上述错误则使用如下命令进行修复：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">--cluster</span> fix <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191131144.png\" alt=\"image-20231019113101085\"></p>\n<p>通过命令可以查看集群状态：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span> cluster nodes</pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018613.png\" alt=\"image-20210702181922809\"></p>\n<h2 id=\"45测试\"><a class=\"markdownIt-Anchor\" href=\"#45测试\">#</a> 4.5. 测试</h2>\n<p>尝试连接 7001 节点，存储一个数据：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 存储数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>get num</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 再次存储</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">set</span> a <span class=\"token number\">1</span></pre></td></tr></table></figure><p>结果悲剧了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018645.png\" alt=\"image-20210702182343979\"></p>\n<p>集群操作时，需要给 <code>redis-cli</code>  加上 <code>-c</code>  参数才可以：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-c</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">7001</span></pre></td></tr></table></figure><p>这次可以了：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191018478.png\" alt=\"image-20210702182602145\"></p>\n<p>其中的 一段多余的信息是，重定向数据到 15495 插槽中了。这个插槽是根据 a 这个变量来计算的</p>\n<h1 id=\"三-散列插槽\"><a class=\"markdownIt-Anchor\" href=\"#三-散列插槽\">#</a> 三、散列插槽🎄</h1>\n<p>Redis 会把每一个 master 节点映射到 0 ~ 16383 共 16384 个插槽 (hash slot) 上，查看集群信息时就能看到：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191135050.png\" alt=\"image-20231019113551981\"></p>\n<p>数据 key 不是与节点绑定，而是与插槽绑定。Redis 会根据 key 的有效部分计算插槽值，分两种情况：</p>\n<p>1、key 中包含 “{}” 且 “{}” 中至少包含 1 个字符，“{}” 中的部分是有效部分</p>\n<p>2、key 中不包含 “{}” ，整个 key 都是有效部分</p>\n<p>例如：key 是 num，那么就根据 num 计算，如果是 {itcast} num，则根据 itcast 计算。计算方式是利用 CRC16 算法得到一个 hash 值，然后对 16384 取余，得到的结果就是 slot 值。</p>\n<blockquote>\n<p>为什么 key 要去跟插槽绑定，而不是跟节点绑定？</p>\n<p>因为 redis 主节点可能出现宕机的情况或者是集群扩容增加了节点再或者是删除节点。</p>\n<p>如果一个节点删除或者宕机了那么它上面的数据跟着丢了，而如果数据是跟插槽绑定的，当节点宕机时，我们可以将这个节点对应的插槽转移到活着的节点上。集群扩容时我们也可以将插槽进行转移。</p>\n<p>这样数据跟着插槽走，永远都能够找到数据所在位置，这就是数据跟插槽绑定的原因了。</p>\n</blockquote>\n<blockquote>\n<p><strong>总结</strong>：</p>\n<p>Redis 如何判断某个 kkey 应该在哪个实例？</p>\n<ul>\n<li>将 16384 个插槽分配到不同的实例</li>\n<li>根据 key 的有效部分计算哈希值，对 16384 取余</li>\n<li>余数作为插槽，寻找插槽所在实例即可</li>\n</ul>\n<p><strong>问题</strong>：</p>\n<p>如何将同一类数据固定的保存在同一个 Redis 实例？</p>\n<ul>\n<li>\n<p>这一类数据使用相同的有效部分，例如 key 都以 {typeId} 为前缀</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> a <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">15495</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span> <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span>num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span> <span class=\"token builtin class-name\">set</span> num <span class=\"token number\">123</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">2765</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">&#125;</span>num <span class=\"token number\">456</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">15495</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span></pre></td></tr></table></figure></li>\n</ul>\n</blockquote>\n<h1 id=\"四集群伸缩\"><a class=\"markdownIt-Anchor\" href=\"#四集群伸缩\">#</a> 四，集群伸缩🎄</h1>\n<h2 id=\"41-添加一个节点到集群\"><a class=\"markdownIt-Anchor\" href=\"#41-添加一个节点到集群\">#</a> 4.1、添加一个节点到集群🌳</h2>\n<p><code>redis-cli --cluster</code>  提供了很多操作集群的命令，可以通过下面方式查看：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Cluster Manager Commands:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  create         host1:port1 <span class=\"token punctuation\">..</span>. hostN:portN</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                 --cluster-replicas <span class=\"token operator\">&lt;</span>arg<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  check          host:port</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                 --cluster-search-multiple-owners</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  info           host:port</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  fix            host:port</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                 --cluster-search-multiple-owners</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                 --cluster-fix-with-unreachable-masters</pre></td></tr></table></figure><p>比如，添加节点命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster help</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add-node       new_host:new_port existing_host:existing_port</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                 --cluster-slave</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                 --cluster-master-id <span class=\"token operator\">&lt;</span>arg<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"411-案例向集群中添加一个小新的master节点并向其中存储num-10\"><a class=\"markdownIt-Anchor\" href=\"#411-案例向集群中添加一个小新的master节点并向其中存储num-10\">#</a> 4.1.1、案例，向集群中添加一个小新的 master 节点，并向其中存储 num = 10</h3>\n<p><strong>需求</strong>：</p>\n<p>1、启动一个新的 redis 实例，端口为 7004</p>\n<p>2、添加 7004 到之前的集群，并作为一个 master 节点</p>\n<p>3、给 7004 节点分配插槽，使得 num 这个 key 可以存储到 7004 实例</p>\n<p>步骤：</p>\n<p>1、创建新 redis 实例的配置文件</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp configs/6379.conf configs/7004.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls configs/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">6379</span>.conf  <span class=\"token number\">6380</span>.conf  <span class=\"token number\">6381</span>.conf  <span class=\"token number\">6382</span>.conf  <span class=\"token number\">6383</span>.conf  <span class=\"token number\">6384</span>.conf  <span class=\"token number\">7004</span>.conf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>2、将 7004.conf 配置文件中的所有端口号改为 7004</p>\n<pre><code class=\"language-sh·\">[root@localhost bin]# sed -i s/6379/7004/g configs/7004.conf\n</code></pre>\n<p>2.1、查看修改情况</p>\n<pre><code># Accept connections on the specified port, default is 7004 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 7004\n</code></pre>\n<p>3、运行这个 redis 实例</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim configs/7004.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-server configs/7004.conf</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ps -ef | grep redis | grep -v grep</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root      <span class=\"token number\">51922</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:19 redis-server *:6379 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>root      <span class=\"token number\">51964</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:18 redis-server *:6380 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>root      <span class=\"token number\">51983</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:23 redis-server *:6381 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>root      <span class=\"token number\">52001</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:17 redis-server *:6382 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>root      <span class=\"token number\">52025</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:23 redis-server *:6383 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>root      <span class=\"token number\">52043</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> Oct18 ?        00:00:17 redis-server *:6384 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>root     <span class=\"token number\">116920</span>      <span class=\"token number\">1</span>  <span class=\"token number\">0</span> 01:41 ?        00:00:00 redis-server *:7004 <span class=\"token punctuation\">[</span>cluster<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4、将 7004 这个新 redis 实例添加成为集群中的一个节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster add-node 192.168.249.128:7004 192.168.249.128:6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Adding <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:7004 to cluster <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Performing Cluster Check <span class=\"token punctuation\">(</span>using <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:6379<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>S: 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>S: 25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   replicates 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>S: c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   replicates 74ea48fd9c233b0e4c46f52d00535f040917be36</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>M: 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>S: 34d086276e2a3790b72503c5d877a2d2b26020ff <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All nodes agree about slots configuration.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check <span class=\"token keyword\">for</span> <span class=\"token function\">open</span> slots<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check slots coverage<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All <span class=\"token number\">16384</span> slots covered.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Send CLUSTER MEET to <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:7004 to <span class=\"token function\">make</span> it <span class=\"token function\">join</span> the cluster.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> New <span class=\"token function\">node</span> added correctly.</pre></td></tr></table></figure><p>7004 成功的加入到了集群当中了</p>\n<p>5、将插槽重新分片</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli --cluster reshard 192.168.249.128:6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Performing Cluster Check <span class=\"token punctuation\">(</span>using <span class=\"token function\">node</span> <span class=\"token number\">192.168</span>.249.128:6379<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>S: 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>S: 25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   replicates 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>S: c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   replicates 74ea48fd9c233b0e4c46f52d00535f040917be36</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>M: 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> master</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>M: 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">2</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>S: 34d086276e2a3790b72503c5d877a2d2b26020ff <span class=\"token number\">192.168</span>.249.128:6384</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> slave</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   replicates 022d61ad3fb65399d711408bcec5b54068a601b0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All nodes agree about slots configuration.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check <span class=\"token keyword\">for</span> <span class=\"token function\">open</span> slots<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Check slots coverage<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span> All <span class=\"token number\">16384</span> slots covered.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 移动插槽的数量</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>How many slots <span class=\"token keyword\">do</span> you want to move <span class=\"token punctuation\">(</span>from <span class=\"token number\">1</span> to <span class=\"token number\">16384</span><span class=\"token punctuation\">)</span>? <span class=\"token number\">3000</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 接收插槽数据的 id</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>What is the receiving <span class=\"token function\">node</span> ID? 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Please enter all the <span class=\"token builtin class-name\">source</span> <span class=\"token function\">node</span> IDs.</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  Type <span class=\"token string\">'all'</span> to use all the nodes as <span class=\"token builtin class-name\">source</span> nodes <span class=\"token keyword\">for</span> the <span class=\"token builtin class-name\">hash</span> slots.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  Type <span class=\"token string\">'done'</span> once you entered all the <span class=\"token builtin class-name\">source</span> nodes IDs.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token comment\"># 发送插槽数据的 id</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Source <span class=\"token function\">node</span> <span class=\"token comment\">#1: 8cae694bd787bad63ab9dab15f397c34131f2a12</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 完成！</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>Source <span class=\"token function\">node</span> <span class=\"token comment\">#2: done</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Ready to move <span class=\"token number\">3000</span> slots.</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  Source nodes:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    M: 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">192.168</span>.249.128:6383</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">1</span> additional replica<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  Destination node:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    M: 34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>       slots: <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> slots<span class=\"token punctuation\">)</span> master</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  Resharding plan:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Moving slot <span class=\"token number\">0</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Moving slot <span class=\"token number\">1</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\tMoving slot <span class=\"token number\">5217</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Moving slot <span class=\"token number\">5218</span> from 8cae694bd787bad63ab9dab15f397c34131f2a12</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Do you want to proceed with the proposed reshard plan <span class=\"token punctuation\">(</span>yes/no<span class=\"token punctuation\">)</span>? <span class=\"token function\">yes</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Moving slot <span class=\"token number\">0</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Moving slot <span class=\"token number\">1</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Moving slot <span class=\"token number\">2</span> from <span class=\"token number\">192.168</span>.249.128:6383 to <span class=\"token number\">192.168</span>.249.128:7004:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>通过 get num 看出 它自动切换到了 6381 集群节点去了，set num 这时 num 就已经存在 7004 这个集群节点上了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli -c -p 7004</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:700<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>></span> <span class=\"token function\">ping</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PONG</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:700<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>></span> get num</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-<span class=\"token operator\">></span> Redirected to slot <span class=\"token punctuation\">[</span><span class=\"token number\">2765</span><span class=\"token punctuation\">]</span> located at <span class=\"token number\">192.168</span>.249.128:6381</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token builtin class-name\">set</span> num <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">192.168</span>.249.128:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span></pre></td></tr></table></figure><p>这就是说数据是跟着插槽走的</p>\n<h1 id=\"五故障转移\"><a class=\"markdownIt-Anchor\" href=\"#五故障转移\">#</a> 五，故障转移🎄</h1>\n<p>当集群中有一个 master 宕机会发生什么呢？</p>\n<pre><code class=\"language-sh·\">[root@localhost bin]# redis-cli -p 6380 shutdown\n[root@localhost bin]#\n</code></pre>\n<p>可以看到 6380 节点被停止后 7004 变成了主节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">192.168</span>.249.128:6379@16379 myself,slave 022d61ad3fb65399d711408bcec5b54068a601b0 <span class=\"token number\">0</span> <span class=\"token number\">1697697326000</span> <span class=\"token number\">10</span> connected</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380@16380 slave,fail 8cae694bd787bad63ab9dab15f397c34131f2a12 <span class=\"token number\">1697697296140</span> <span class=\"token number\">1697697292000</span> <span class=\"token number\">9</span> disconnected</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c4d2d8841cb4c801f755e2d95559221229ba7649 <span class=\"token number\">192.168</span>.249.128:6382@16382 slave 74ea48fd9c233b0e4c46f52d00535f040917be36 <span class=\"token number\">0</span> <span class=\"token number\">1697697327000</span> <span class=\"token number\">1</span> connected</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>34b1a846b72cbb3bdae35fb30567ddba8bf2d5d3 <span class=\"token number\">192.168</span>.249.128:7004@17004 master - <span class=\"token number\">0</span> <span class=\"token number\">1697697326309</span> <span class=\"token number\">11</span> connected</pre></td></tr></table></figure><p>当它回来的时候就是 slave 了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191437449.png\" alt=\"image-20231019143739426\"></p>\n<p>由此可以看出我们不需要哨兵，Redis 自动具备主从的故障切换</p>\n<p>这是自动的故障转移，有一个机器意外宕机了需要选出一个主。</p>\n<p>但是有的时候我们需要手动故障转移。比如说：机器升级</p>\n<h2 id=\"51-手动故障转移\"><a class=\"markdownIt-Anchor\" href=\"#51-手动故障转移\">#</a> 5.1、手动故障转移🌳</h2>\n<p>利用 cluster failover 命令可以手动让集群中的某个 master 宕机，切换到 cluster failover 命令的这个 slave 节点，实现无感知的数据迁移。其流程如下：</p>\n<p>手动的 Failover 支持三种不同模式：</p>\n<p>1、缺省：默认的流程，如图 1 ~ 6 步</p>\n<p>2、force：省略了对 offset 的一致性校验</p>\n<p>3、takeover：直接执行第 5 步，忽略数据一致性，忽略 master 状态和其它 master 的意见</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310191444531.png\" alt=\"image-20231019144410200\"></p>\n<h2 id=\"52-案例在6380这个slave节点执行手动故障转移重新夺回master地位\"><a class=\"markdownIt-Anchor\" href=\"#52-案例在6380这个slave节点执行手动故障转移重新夺回master地位\">#</a> 5.2、案例，在 6380 这个 slave 节点执行手动故障转移，重新夺回 master 地位🌳</h2>\n<p>步骤如下：</p>\n<p>1、利用 redis-cli 连接 6380 这个节点</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># redis-cli -p 6380</span></pre></td></tr></table></figure><p>2、执行命令</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> cluster failover</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>完成</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>25b42825643381d41525c1951f112766b912baa7 <span class=\"token number\">192.168</span>.249.128:6380@16380 master - <span class=\"token number\">0</span> <span class=\"token number\">1697698095838</span> <span class=\"token number\">12</span> connected</pre></td></tr></table></figure><h1 id=\"六redistemplate访问分配集群\"><a class=\"markdownIt-Anchor\" href=\"#六redistemplate访问分配集群\">#</a> 六，RedisTemplate 访问分配集群🎄</h1>\n<p>RedisTempalte 底层同样基于 lettuce 实现了分片集群的支持，而使用的步骤与哨兵模式基本一致：</p>\n<p>1、引入 redis 的 starter 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-redis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、配置分片集群地址</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">nodes</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 指定分配集群的每一个节点信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6380</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6381</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6382</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6383</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">6384</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.249.128<span class=\"token punctuation\">:</span><span class=\"token number\">7004</span></pre></td></tr></table></figure><p>3、配置读写分离</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">LettuceClientConfigurationBuilderCustomizer</span> <span class=\"token function\">configurationBuilderCustomizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">return</span> clientConfigurationBuilder <span class=\"token operator\">-></span> clientConfigurationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">readFrom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReadFrom</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REPLICA_PREFERRED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>与哨兵模式相比，其中只有分片集群的配置方式略有差异，如下：</p>\n<p>测试获取数据</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>channel<span class=\"token operator\">=</span>0x1291f995, /192.168.249.1:6999 -<span class=\"token operator\">></span> /192.168.249.128:6379, <span class=\"token assign-left variable\">chid</span><span class=\"token operator\">=</span>0x9<span class=\"token punctuation\">]</span> Stack contains: <span class=\"token number\">1</span> commands</pre></td></tr></table></figure><p>测试设置数据</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>channel<span class=\"token operator\">=</span>0xff704bc2, /192.168.249.1:7000 -<span class=\"token operator\">></span> /192.168.249.128:6381, <span class=\"token assign-left variable\">chid</span><span class=\"token operator\">=</span>0xa<span class=\"token punctuation\">]</span> Stack contains: <span class=\"token number\">1</span> commands</pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "database",
                "redis",
                "集群"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",
            "title": "redis-主从复制",
            "date_published": "2024-04-02T10:00:50.568Z",
            "content_html": "<h2 id=\"redis主从复制\"><a class=\"markdownIt-Anchor\" href=\"#redis主从复制\">#</a> Redis 主从复制</h2>\n<p><font size=4>概念</font></p>\n<p>主从复制，是指<font style=\"color:red\"><u><mark>将一台 Redis 的服务器的数据</mark>，<mark>复制到其它的 Redis 服务器</mark>，<mark>前者称为主节点 (master/leader)</mark> , <mark>后者称为从节点 (slave/follower)</mark>; <mark>数据的复制是单向的</mark>，<mark>只能由主节点到从节点</mark>，<mark>Master 以写为主，Slave 以读为主</mark></u></font></p>\n<p><font style=\"color:red\"><u>默认情况下，每台 Redis 服务器都是主节点</u>, <u>且一个主节点可以有多个从节点 (或没有从节点), 但一个从节点只能有一个主节点</u></font></p>\n<p>主从复制的作用主要包括:</p>\n<ol>\n<li>\n<p>数据冗余：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式</p>\n</li>\n<li>\n<p>故障恢复：当主节点出现问题时，可以由从节点服务器，实现快速的故障恢复，实际上是一种服务的冗余</p>\n</li>\n<li>\n<p>负载均衡：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务 (即写 Redis 数据时应用连接主节点，读 Redis 数据时应用连接从节点), 分担服务器负载；尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大大提高 Redis 服务器的并发量</p>\n</li>\n<li>\n<p>高可用 (集群) 基石：除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复制是 Redis 高可用的基础</p>\n</li>\n</ol>\n<p>一般来说，要将 Redis 运用于工程项目中，只使用一台 Redis 是万万不能的 (因为宕机就完了，一般要配三个就是：一主三从), 原因如下:</p>\n<ol>\n<li>\n<p>从结构上，单个 Redis 服务器会发生单点故障，并且一台服务器需要处理所有的请求负载，压力较大；</p>\n</li>\n<li>\n<p>从容量上，单个 Redis 服务器内存容量有限，就算一台 Redis 服务器内存容量为 256G, 也不能将所有内存用作 Redis 存储内存，一般来说，单台 Redis 最大使用内存不应该超过 20G</p>\n</li>\n</ol>\n<p>电商网站上的商品，一般都是一次上传，无数次浏览的，说专业点就是 &quot;多读少写&quot;, 对于这种场景，我们可以使如下这种架构:</p>\n<p>一主三从</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051409674.png\" alt=\"image-20240105140950566\"></p>\n<p>只要在公司中，主从复制就是必须要使用的，因为在真实的项目中不可能单机使用 <code>Redis</code>  !</p>\n<h3 id=\"环境配置\"><a class=\"markdownIt-Anchor\" href=\"#环境配置\">#</a> 环境配置</h3>\n<p>只配置从库，不用配置主库！(默认就是主库)</p>\n<p>查看当前库信息: <code>info replication</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> info replication <span class=\"token comment\">#查看当前库信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>role:master <span class=\"token comment\">#角色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>connected_slaves:0 <span class=\"token comment\">#从机数量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#随机生成的 id</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_replid:dae261b703d0f68b44c7b95cf50be33d8a3f0c50</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_repl_offset:0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>repl_backlog_active:0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>repl_backlog_first_byte_offset:0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>repl_backlog_histlen:0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><blockquote>\n<p>测试单机多集群</p>\n</blockquote>\n<p>配置多个从库配置文件主要改: <code>port|pidfile|dbfilename|logfile</code>   <font style=\"color:red\"> <code>logfile</code>  <strong>配置文件如果文件不存在则自动创建</strong></font></p>\n<h4 id=\"操作步骤\"><a class=\"markdownIt-Anchor\" href=\"#操作步骤\">#</a> 操作步骤:</h4>\n<p>1. 拷贝出 3 个配置文件，伪集群我们需要开三台 redis 来进行实验</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327154220388_20230327154614.png?v=1&amp;type=image&amp;token=V1:SNxXhfHSE20cGh0jieB-92RojNkNp9jz0k5M4JIB8ik\" alt=\"image-20230327154220388\"></p>\n<p>2. 配置<mark> 6379.conf</mark> 的信息主要配置: port     |     pidfile     |        dbfilename       |        logfile</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327152554550_20230327154627.png?v=1&amp;type=image&amp;token=V1:klL1texdf3iJ6yjEFDkq7J8VqDpq-RSpxH5cdk2lPAQ\" alt=\"image-20230327152554550\"></p>\n<p>每个程序运行的 pid 都是不同的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051411052.png\" alt=\"\"></p>\n<p>每个 redis 的数据库数据都是不同的</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051411429.png\" alt=\"\"></p>\n<p>每个 redis 的日志文件也是不同的</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327152904341_20230327154709.png?v=1&amp;type=image&amp;token=V1:fxfntNKPHAj74z8a_wZSGJAODAGrMARZHA15kXnob3A\" alt=\"image-20230327152904341\"></p>\n<p>3. 配置<mark> 6380.conf</mark> 的信息</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153341866_20230327154723.png?v=1&amp;type=image&amp;token=V1:jnYNuO_P2RdhP1e_gybBBWx1NLpwr0ka1DoBvQmNPXI\" alt=\"image-20230327153341866\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153525882_20230327154734.png?v=1&amp;type=image&amp;token=V1:dyEjnJRk8ryXskMZoBq29xs6w3az5jTnad5D_Jc10Zc\" alt=\"image-20230327153525882\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153535221_20230327154746.png?v=1&amp;type=image&amp;token=V1:uQO8vtt2AGypUJ07at5K-7DEwKxUNtERKfkLaRZ22ns\" alt=\"image-20230327153535221\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153605193_20230327154758.png?v=1&amp;type=image&amp;token=V1:VM6f9q3E6oWXwyAsXwuaacVUvmpQ3rFLM7jbRhuigNM\" alt=\"image-20230327153605193\"></p>\n<p>4. 配置<mark> 6381.conf</mark> 的信息</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153804788_20230327154811.png?v=1&amp;type=image&amp;token=V1:B7632TiOjUzBa9T1eezMSTVQdGHO42vKIQwsJ0oDk1Q\" alt=\"image-20230327153804788\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153829068_20230327154821.png?v=1&amp;type=image&amp;token=V1:bKBSYdVEmfM8wA2AkSWffBaIzXqRFfTQUdaRJJ-eNNQ\" alt=\"image-20230327153829068\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153843176_20230327154833.png?v=1&amp;type=image&amp;token=V1:ijg9azq_Fb6FknmbIREeupwRe8-X_8i31nTqgKQ75wA\" alt=\"image-20230327153843176\"></p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327153903835_20230327154845.png?v=1&amp;type=image&amp;token=V1:cRI6xeHzkCiw2TrbsamGy07_H12ZCUroy-ag3r_yVLM\" alt=\"image-20230327153903835\"></p>\n<p>一次对应着配置文件启动 redis</p>\n<p><strong>启动后</strong> 为伪集群 redis 配置完成了</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327154403607_20230327154857.png?v=1&amp;type=image&amp;token=V1:qySh2C_JQy12TXWSBLTHHpN96bEeEnI4yVeCGfkVAk8\" alt=\"image-20230327154403607\"></p>\n<p>其它配置确保是否后台开启 …</p>\n<p>修改完毕后启动三个 Redis 服务，可以通过 <code>ps -ef|grep redis</code>  查看进程</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051420779.png\" alt=\"image_2023-01-04-11-01-34\"></p>\n<p><font size=4>一主二从</font></p>\n<p><mark>默认情况下，每台 Redis 服务器都是主节点</mark> 我们一般情况下只用配置从机就好了</p>\n<p>一主 (79), 二从 (80, 81)</p>\n<p>从机认主机命令: <code>slaveof host port</code>  host: 主机的 ip , port: 主机中 redis 的端口</p>\n<p>从机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> slaveof <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> info replication</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>role:slave <span class=\"token comment\">#角色 slave: 奴隶</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_host:127.0.0.1 <span class=\"token comment\">#主机的 ip</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_port:6379 <span class=\"token comment\">#主机的端口 port</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_link_status:up</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>master_last_io_seconds_ago:4</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>master_sync_in_progress:0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>slave_repl_offset:56</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>slave_priority:100</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>slave_read_only:1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>connected_slaves:0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>master_replid:3ef9f108a1abe59116f3d4716364383f51414a19</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>master_repl_offset:56</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>repl_backlog_first_byte_offset:57</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>repl_backlog_histlen:0</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span></pre></td></tr></table></figure><p>主机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> info replication</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>role:master <span class=\"token comment\">#角色 master: 主人</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>connected_slaves:2 <span class=\"token comment\">#连接的奴隶数量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>slave0:ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1,port<span class=\"token operator\">=</span><span class=\"token number\">6380</span>,state<span class=\"token operator\">=</span>online,offset<span class=\"token operator\">=</span><span class=\"token number\">70</span>,lag<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token comment\">#奴隶 80 的 ip 与 port 和一些信息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>slave1:ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1,port<span class=\"token operator\">=</span><span class=\"token number\">6381</span>,state<span class=\"token operator\">=</span>online,offset<span class=\"token operator\">=</span><span class=\"token number\">70</span>,lag<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token comment\">#奴隶 81 的 ip 与 port 和一些信息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_replid:3ef9f108a1abe59116f3d4716364383f51414a19</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>master_repl_offset:70</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>repl_backlog_first_byte_offset:1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>repl_backlog_histlen:70</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>真实的主从配置应该<mark>在配置文件中配置</mark>，这样的话<mark>是永久的</mark>，我们这里使用的是<mark>命令，暂时的 (重启后就没了)</mark></p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051420523.png\" alt=\"image_2023-01-04-13-10-51\"></p>\n<blockquote>\n<p>细节</p>\n</blockquote>\n<p>主机可以写，从机只能读！主机中的所有信息和数据，都会自动被从机保存！</p>\n<p>主机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token builtin class-name\">set</span> k1 v1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> get k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"v1\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span></pre></td></tr></table></figure><p>从机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> get k1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"v1\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> <span class=\"token builtin class-name\">set</span> k2 v2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> READONLY You can't <span class=\"token function\">write</span> against a <span class=\"token builtin class-name\">read</span> only replica.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>如果主机断开了，从机依旧还是 <code>slave</code>  奴隶状态，依旧<mark>可以获取值</mark>，但是还是<mark>不能设置值</mark>，需要我们手动配置因为没有哨兵 [^ 下面有解释 (哨兵模式)]</p>\n<p><u>如果主机又连接回来了，主机写了一个值，从机还是可以读到的</u> <font style=\"color:red\"><strong>主机连接回来后还是主机从机会自动找主机认主</strong></font></p>\n<p>主机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:637<span class=\"token operator\"><span class=\"token file-descriptor important\">9</span>></span> <span class=\"token function\">shutdown</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>not connected<span class=\"token operator\">></span> <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> dkx@192  /usr/local/bin </pre></td></tr></table></figure><p>从机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> info replication</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>role:slave</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>master_host:127.0.0.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>master_port:6379</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_link_status:down</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_last_io_seconds_ago:-1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_sync_in_progress:0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>slave_repl_offset:8452</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>master_link_down_since_seconds:12</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>slave_priority:100</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>slave_read_only:1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>connected_slaves:0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>master_replid:3ef9f108a1abe59116f3d4716364383f51414a19</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>master_repl_offset:8452</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>repl_backlog_first_byte_offset:1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>repl_backlog_histlen:8452</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>从机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> get k1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"v1\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> <span class=\"token builtin class-name\">set</span> k3 v3</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> READONLY You can't <span class=\"token function\">write</span> against a <span class=\"token builtin class-name\">read</span> only replica.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>如果是使用命令行来配置的主从，这个时候如果重启了，就会变回主机 (也就是从机重启会变回主机状态)</p>\n<p>从机变回了主机必然是不能在读到 master 写的值了，我们在将其设置为之前 master 的 slave 后依旧可以读到主机的值</p>\n<blockquote>\n<p>复制原理</p>\n</blockquote>\n<p>Slave 启动成功连接到 <code>master</code>  后会发送一个 <code>syn</code>  命令</p>\n<p><code>Master</code>  接收到命令，启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令，在后台进程执行完毕之后，master 将传送整个数据文件到 slave, 并完成一次同步</p>\n<p><font color='green' size=4>全量复制</font>(只要连接则全部 <code>syn</code> ): 而 slave 服务在接收到数据库文件数据后，将其存盘并加载到内存中</p>\n<p><font color='green' size=4>增量复制</font>(连接后的依次读取): <code>Master</code>  继续将新的所有收集到的修改命令依次传给 slave, 完成同步</p>\n<p>但是只要是重新连接 <code>master</code>  , 一次完全同步 (全量复制) 将被自动执行！我们的数据一定可以在从机中看到！</p>\n<blockquote>\n<p>层级链路</p>\n</blockquote>\n<p>以链式的形式，完成主从复制但是还是只有一个主机，一旦主机宕机，从机也不能写只能读</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051421265.png\" alt=\"image-20240105142153186\"></p>\n<blockquote>\n<p>如果没有主人了，这时就会候选出一个老大</p>\n</blockquote>\n<p><mark>谋朝篡位</mark></p>\n<p>但是链式的只要 <code>master</code>  宕机了死掉了，我们可以让候选人来当老大依旧可以完成主从复制</p>\n<p>执行命令: <code>slaveof no one</code>  : 命令解释：奴隶说：没有老大了，我来当老大</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#当老大前</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> info replication</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>role:slave <span class=\"token comment\">#角色为奴隶</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>master_host:127.0.0.1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_port:6379</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_link_status:down</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_last_io_seconds_ago:-1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>master_sync_in_progress:0</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>slave_repl_offset:420</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>master_link_down_since_seconds:13</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>slave_priority:100</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>slave_read_only:1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>connected_slaves:1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>slave0:ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1,port<span class=\"token operator\">=</span><span class=\"token number\">6381</span>,state<span class=\"token operator\">=</span>online,offset<span class=\"token operator\">=</span><span class=\"token number\">420</span>,lag<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>master_replid:08e30f50a346437d9ce38596868b3eb4a2d3765b</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>master_repl_offset:420</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>repl_backlog_first_byte_offset:1</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>repl_backlog_histlen:420</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#当老大后</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> slaveof no one</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>OK</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> info replication</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>role:master <span class=\"token comment\">#角色为主人</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>connected_slaves:1</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>slave0:ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1,port<span class=\"token operator\">=</span><span class=\"token number\">6381</span>,state<span class=\"token operator\">=</span>online,offset<span class=\"token operator\">=</span><span class=\"token number\">420</span>,lag<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>master_replid:5ceda312f5f005f7fed7c1e2e5bb1c787fcd267b</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>master_replid2:08e30f50a346437d9ce38596868b3eb4a2d3765b</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>master_repl_offset:420</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>second_repl_offset:421</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>repl_backlog_first_byte_offset:1</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>repl_backlog_histlen:420</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>执行命令: <code>slaveof no one</code>  之后以链式的形式，第二个当了主人，而第三个第 n 个还是奴隶</p>\n<p>但是 如果主人 (主机) 被修复了又回来了，却不再是主人了手下的江山已经不再了已经是候选人的了，除非让候选人重新归顺于主机</p>\n<h3 id=\"哨兵模式\"><a class=\"markdownIt-Anchor\" href=\"#哨兵模式\">#</a> 哨兵模式</h3>\n<p>(自动选举老大的模式)</p>\n<blockquote>\n<p>概述</p>\n</blockquote>\n<p>主从切换技术的方法是：当主服务器宕机后，需要手动把一台服务器切换为主服务器，这就需要人工干预，费时费力，还会造成一段时间内服务不可用，这不是一种推荐的方式，更多时候，我们优先考虑哨兵模式，Redis 从 2.8 开始正式提供了 Sentinel (哨兵) 架构来解决这个问题</p>\n<p><font style=\"color:red\"><strong>谋朝篡位</strong></font>的自动版，能够后台监控主机是否故障，如果故障了根据票数自动将从库转为主库</p>\n<p>哨兵模式是一种特殊的模式，首先 Redis 提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它会独立运行，其原理是哨兵通过发送命令，等待 Redis 服务器响应，从而监控运行的多个 Redis 实例</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051422206.png\" alt=\"image-20240105142231100\"></p>\n<p>这里的哨兵有两个作用</p>\n<ul>\n<li>\n<p>通过发送命令，让 Redis 服务器返回监控其运行状态，包括主服务器和从服务器</p>\n</li>\n<li>\n<p>当哨兵监测到 <code>master</code>  宕机，会自动将 slave 切换成 master, 然后通过发布订阅模式通知其它的从服务器，修改配置文件，让它们切换主机</p>\n</li>\n</ul>\n<p>然而一个哨兵进程对 Redis 服务器进行监控，可能会出现问题，为此，我们可以使用多个哨兵进行监控，各个哨兵之间还会进行监控，这样就形成了多哨兵模式</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051423496.png\" alt=\"image-20240105142300373\"></p>\n<p>假设主服务器宕机，哨兵 1 先检测到这个结果，系统并不会马上进行 failover (故障转移) 过程，仅仅是哨兵 1 主观的认为主服务器不可用，这个现象称为 <code>主观下线</code> ，当后面的哨兵也检测到主服务器不可用，并且数量达到一定值时，那么哨兵之间就会进行一次投票，投票的结果由一个哨兵发起，进行 failover [故障转移] 操作，切换成功后，就会通过发布订阅模式，让各个哨兵把自己监控的从服务器实现切换主机，这个过程称为<font size=4>客观下线</font></p>\n<blockquote>\n<p>测试</p>\n</blockquote>\n<p>我们目前的状态是 一主二从</p>\n<ol>\n<li>在 redisconfig 文件夹  (<u>如果没有则自己创建用于存放配置文件的</u>)  中创建 sentinel.conf 哨兵的配置文件进行配置</li>\n</ol>\n<p>基本的配置 (核心) sentinel 的配置远远不止这一行</p>\n<ul>\n<li>注意：如果 Redis 要设置密码都全有一致的密码否则都一致不要设置密码\n<ul>\n<li>原因：设置密码连接从库需要配置 masterauth 连接有密码的库可以但是不能连接没有密码的所有密码设置与不设置一致确保能连接成功</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#哨兵    检测   主机名 [随意起名] 被监控的 ip port 投票数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sentinel monitor myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sentinel auth-pass myredis dkx <span class=\"token comment\">#主机密码，如果主机设置了密码不配置这条命令连接不上</span></pre></td></tr></table></figure><p>后面的数据 1, 代表主机挂了，slave 投票看让谁接替成为主机，票数最多的，就会成为主机</p>\n<ol start=\"2\">\n<li>启动哨兵</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dkx@192  /usr/local/bin  ./redis-sentinel redisconfig/sentinel.conf                                                    ✔  <span class=\"token number\">441</span>  01:57:29</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.739 <span class=\"token comment\"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.739 <span class=\"token comment\"># Redis version=5.0.4, bits=64, commit=00000000, modified=0, pid=38944, just started</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.739 <span class=\"token comment\"># Configuration loaded</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.740 <span class=\"token comment\"># You requested maxclients of 10000 requiring at least 10032 max file descriptors.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.740 <span class=\"token comment\"># Server can't set maximum open files to 10032 because of OS error: Operation not permitted.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.740 <span class=\"token comment\"># Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                _._                                                  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           _.-`<span class=\"token variable\"><span class=\"token variable\">`</span>__ <span class=\"token string\">''</span>-._                                             </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      _.-<span class=\"token variable\">`</span></span><span class=\"token variable\"><span class=\"token variable\">`</span>    <span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span>  <span class=\"token variable\"><span class=\"token variable\">`</span>_.  <span class=\"token string\">''</span>-._           Redis <span class=\"token number\">5.0</span>.4 <span class=\"token punctuation\">(</span>00000000/0<span class=\"token punctuation\">)</span> <span class=\"token number\">64</span> bit</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  .-<span class=\"token variable\">`</span></span><span class=\"token variable\"><span class=\"token variable\">`</span> .-<span class=\"token variable\">`</span></span>`<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">.</span>  <span class=\"token variable\">`</span></span>`<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token punctuation\">\\</span>/    _.,_ <span class=\"token string\">''</span>-._                                   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token punctuation\">(</span>    '      ,       .-<span class=\"token variable\">`</span></span>  <span class=\"token operator\">|</span> <span class=\"token variable\"><span class=\"token variable\">`</span>,    <span class=\"token punctuation\">)</span>     Running <span class=\"token keyword\">in</span> sentinel mode</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token operator\">|</span><span class=\"token variable\">`</span></span>-._<span class=\"token variable\"><span class=\"token variable\">`</span>-<span class=\"token punctuation\">..</span>.-<span class=\"token variable\">`</span></span> __<span class=\"token punctuation\">..</span>.-.`<span class=\"token variable\"><span class=\"token variable\">`</span>-._<span class=\"token operator\">|</span>'<span class=\"token variable\">`</span></span> _.-<span class=\"token string\">'|     Port: 26379</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> |    `-._   `._    /     _.-'</span>    <span class=\"token operator\">|</span>     PID: <span class=\"token number\">38944</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span>-._    <span class=\"token variable\">`</span></span>-._  <span class=\"token variable\"><span class=\"token variable\">`</span>-./  _.-<span class=\"token string\">'    _.-'</span>                                   </pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token operator\">|</span><span class=\"token variable\">`</span></span>-._<span class=\"token variable\"><span class=\"token variable\">`</span>-._    <span class=\"token variable\">`</span></span>-.__.-<span class=\"token string\">'    _.-'</span>_.-<span class=\"token string\">'|                                  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre> |    `-._`-._        _.-'</span>_.-<span class=\"token string\">'    |           http://redis.io        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  `-._    `-._`-.__.-'</span>_.-<span class=\"token string\">'    _.-'</span>                                   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token operator\">|</span><span class=\"token variable\"><span class=\"token variable\">`</span>-._<span class=\"token variable\">`</span></span>-._    <span class=\"token variable\"><span class=\"token variable\">`</span>-.__.-<span class=\"token string\">'    _.-'</span>_.-'<span class=\"token operator\">|</span>                                  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token operator\">|</span>    <span class=\"token variable\">`</span></span>-._<span class=\"token variable\"><span class=\"token variable\">`</span>-._        _.-<span class=\"token string\">'_.-'</span>    <span class=\"token operator\">|</span>                                  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token variable\">`</span></span>-._    <span class=\"token variable\"><span class=\"token variable\">`</span>-._<span class=\"token variable\">`</span></span>-.__.-<span class=\"token string\">'_.-'</span>    _.-<span class=\"token string\">'                                   </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      `-._    `-.__.-'</span>    _.-<span class=\"token string\">'                                       </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          `-._        _.-'</span>                                           </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              `-.__.-'                                               </pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.741 <span class=\"token comment\"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.742 <span class=\"token comment\"># Sentinel ID is 8ab32644bb1086cbb0bef3aa54b56016ca76422f</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.742 <span class=\"token comment\"># +monitor master myredis 127.0.0.1 6379 quorum 1</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.743 * +slave slave <span class=\"token number\">127.0</span>.0.1:6380 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6380</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 01:57:38.744 * +slave slave <span class=\"token number\">127.0</span>.0.1:6381 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6381</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr></table></figure><p>我们将主机关闭</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051420959.png\" alt=\"image_2023-01-04-15-01-28\"></p>\n<p>过一会之后哨兵发现主机挂了，就会发起投票选举主机</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.540 <span class=\"token comment\"># +sdown master myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.540 <span class=\"token comment\"># +odown master myredis 127.0.0.1 6379 #quorum 1/1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.540 <span class=\"token comment\"># +new-epoch 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.540 <span class=\"token comment\"># +try-failover master myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.541 <span class=\"token comment\"># +vote-for-leader 8ab32644bb1086cbb0bef3aa54b56016ca76422f 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.541 <span class=\"token comment\"># +elected-leader master myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.541 <span class=\"token comment\"># +failover-state-select-slave master myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.604 <span class=\"token comment\"># +selected-slave slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.604 * +failover-state-send-slaveof-noone slave <span class=\"token number\">127.0</span>.0.1:6381 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6381</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:43.667 * +failover-state-wait-promotion slave <span class=\"token number\">127.0</span>.0.1:6381 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6381</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:44.496 <span class=\"token comment\"># +promoted-slave slave 127.0.0.1:6381 127.0.0.1 6381 @ myredis 127.0.0.1 6379 #promoted-slave: 提升奴隶选举 81 为主机</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:44.496 <span class=\"token comment\"># +failover-state-reconf-slaves master myredis 127.0.0.1 6379</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:44.586 * +slave-reconf-sent slave <span class=\"token number\">127.0</span>.0.1:6380 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6380</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:01:45.545 * +slave-reconf-inprog slave <span class=\"token number\">127.0</span>.0.1:6380 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6380</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span></pre></td></tr></table></figure><p>80</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> info replication</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>role:slave</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>master_host:127.0.0.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>master_port:6381</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_link_status:down</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_last_io_seconds_ago:-1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>master_sync_in_progress:0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>slave_repl_offset:17761</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>master_link_down_since_seconds:164</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>slave_priority:100</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>slave_read_only:1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>connected_slaves:0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>master_replid:b0b6ff7c006cb105240c9b032a9207481222ef21</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>master_replid2:0000000000000000000000000000000000000000</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>master_repl_offset:17761</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>second_repl_offset:-1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>repl_backlog_first_byte_offset:1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>repl_backlog_histlen:17761</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr></table></figure><p>81</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> info replication</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Replication</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>role:master</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>connected_slaves:0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>master_replid:c490db106a8973cd53e490619faffa84d3085d78</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>master_replid2:b0b6ff7c006cb105240c9b032a9207481222ef21</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>master_repl_offset:27024</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>second_repl_offset:17762</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>repl_backlog_active:1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>repl_backlog_size:1048576</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>repl_backlog_first_byte_offset:169</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>repl_backlog_histlen:26856</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">127.0</span>.0.1:638<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span></pre></td></tr></table></figure><blockquote>\n<p>那主机又回来了呢？</p>\n</blockquote>\n<p>主机连接后 sentinel 又发布了一个新的消息，但是不幸的是主机被转为了奴隶:convert-to-slave: 转换为奴隶</p>\n<ul>\n<li>主机回来之后不再是 <code>master</code>  但是不一定会认候选出来的 <code>master</code>  作为主人，可能会选择候选人的候选人为主人</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">38944</span>:X 04 Jan <span class=\"token number\">2023</span> 02:10:20.662 * +convert-to-slave slave <span class=\"token number\">127.0</span>.0.1:6379 <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span> @ myredis <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6381</span></pre></td></tr></table></figure><p>优点:</p>\n<ol>\n<li>\n<p>哨兵集群，基于主从复制模式，所有的主从配置优点，它全有</p>\n</li>\n<li>\n<p>主从可以切换，故障可以转移，系统的可用性会更好</p>\n</li>\n<li>\n<p>哨兵模式就是主从模式的升级，手动到自动，更加健壮</p>\n</li>\n</ol>\n<p>缺点:</p>\n<ol>\n<li>\n<p>Redis 不好在线扩容的，集群容量一旦到达上限，在线扩容就十分麻烦</p>\n</li>\n<li>\n<p>实现哨兵模式的配置其实是很麻烦的，里面有很多选择</p>\n</li>\n</ol>\n<blockquote>\n<p>哨兵模式的全部配置</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Example sentinel.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#哨兵 sentinel 实例运行的端口 默认 26379</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>port <span class=\"token number\">26379</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#哨兵 sentinel 的工作目录</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">dir</span> /tmp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#哨兵 sentinel 监控的 redis 主节点的 ip port</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#master-name 可以自己命名的主节点名称，只能由字母 A-z, 数字 0-9, 这三个字符 \".-_\" 组成</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#quorum 配置多少个 sentinel 哨兵统一认为 master 主节点失联，那么这时客观上认为主节点失联了</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#sentinel monitor &lt;master-name> &lt;ip> &lt;redis-port> &lt;quorum></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sentinel monitor mymaster <span class=\"token number\">127.0</span>.0.1 <span class=\"token number\">6379</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#当在 Redis 实例中开启 requirepass foobared 授权密码，这样所有连接 Redis 实例的客户端都要提供密码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#设置哨兵 sentinel 连接主从的密码，注意必须为主从设置一样的验证密码</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#sentinel auth-pass &lt;master-name> &lt;password></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>sentinel auth-pass mymaster MySUPER--secret-0123password</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#指定多少毫秒之后 主节点没有应答哨兵 sentinel 此时，哨兵主观上认为主节点下线，默认 30 秒</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#sentinel down-after-milliseconds &lt;master-name> &lt;milliseconds></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>sentinel down-after-milliseconds mymaster <span class=\"token number\">30000</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#这个配置项指定了在发生 failover 主备切换时最多可以有多少个 slave 同时对新的 master 进行，同步</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#这个数字越小，完成 failover 所需的时间就越长</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#但是如果这个数字越大，就意味着越多的 slave 因为 replication 而不可用</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#可以通过将这个值设为 1 来保证每次只有一个 slave 处于不能处理命令请求的状态</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#Sentinel parallel-syncs &lt;master-name> &lt;numslaves></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>sentinel parallel-syncs mymaster <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#故障转移的超时时间 failover-timeout 可以用在一下这些方面</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#1. 同一个 sentinel 对同一个 master 两次 failover 之间的间隔时间</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#2. 当一个 slave 从一个错误的 master 那里同步数据开始计算时间，知道 slave 被纠正为正确的 master 那里同步数据时</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#3. 当想要取消一个正在进行的 failover 所需要的时间</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#4. 当进行 failover 时，配置所有 slaves 指向新的 master 所需的最大时间，不过，即使过了这个超时，slaves 依然会被正确配置为指向 master, 但是就不按 parallel-syncs 所配置的规则来了</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#默认三分钟</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#sentinel failover-timeout &lt;master-name> &lt;milliseconds></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sentinel failover-timeout mymaster <span class=\"token number\">180000</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#SCRIPTS EXECUTIOU</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#配置当某一事件发生时所需执行的脚本，可以通过脚本来通知管理员，例如当系统运行不正常时发邮件通知相关人员</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#对于脚本的运行结果有以下规则</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#若脚本执行后返回 1, 那么该脚本稍后将会被再次执行，重复次数目前默认为 10</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">#若脚本执行后返回 2, 或者比 2 更高一个返回值，脚本将不会重复执行</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#如果脚本在执行过程中由于收到系统中断信号被终止了，则同返回值为 1 时的行为相同</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">#一个脚本的最大执行时间为 60s, 如果超过这个时间，脚本将会被一个 SIGKILL 信号终止，之后重新执行</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#通知型脚本：当 sentinel 有任何警告级别的事件发生时，(比如说 redis 实例的主管失效和客观失效等等), 将会去调用这个脚本，这时这个脚本应该通过邮件，SMS 等方式去通知系统管理员关于系统不正常运行的信息，调用该脚本时，将传递给脚本两个参数，一个是事件的类型，一个是事件的描述，如果 sentinel.conf 配置文件中配置了这个脚本路径，那么必须保证这个脚本存在与这个路径，并且是可执行的，否则 sentinel 无法正常启动成功</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#通知脚本</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#shell 编程</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#sentinel notification-script &lt;master-name> &lt;script-path></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>sentinel norification-script mymaster /var/redis/nofity.sh</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#客户端重新配置主节点参数脚本</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#当一个 master 由于 failover 而发生改变时，这个脚本将会被调用，通知相关的客户端关于 master 地址已经发生改变的信息</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#以下参数将会在调用脚本时传递给脚本:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#&lt;master-name> &lt;role> &lt;state> &lt;from-ip> &lt;from-port> &lt;to-ip> &lt;to-port></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#目前 & lt;state > 总是 \"failover\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#&lt;role > 是 \"leader\" 或者 \"observer\" 中的一个</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#参数 from-ip, from-port, to-ip, to-port 是用来和旧的 master 和新的 master (即旧的 slave) 通信的</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">#这个脚本应该是通用的，能被多次调用，不是针对性的</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">#sentinel client-reconfig-script &lt;master-name> &lt;script-path></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>sentinel client-reconfig-script mymaster /var/redis/reconfig.sh</pre></td></tr></table></figure><h4 id=\"注意\"><a class=\"markdownIt-Anchor\" href=\"#注意\">#</a> 注意:</h4>\n<p>配置哨兵模式后配置文件会发生变化可能导致一些问题具体发生变化的内容</p>\n<p><img src=\"Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_md_files/image-20230327202721502_20230327202857.png?v=1&amp;type=image&amp;token=V1:6HAI1c2eHTs9H9Q4rGHs5PXrhYHhYHCq4vefJFxiQq4\" alt=\"image-20230327202721502\"></p>\n",
            "tags": [
                "计算机学科",
                "database",
                "redis"
            ]
        },
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis.config%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/database/redis/Redis.config%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/",
            "title": "redis-配置文件详解",
            "date_published": "2024-04-02T10:00:50.566Z",
            "content_html": "<h2 id=\"redisconfig配置文件详解\"><a class=\"markdownIt-Anchor\" href=\"#redisconfig配置文件详解\">#</a> Redis.Config 配置文件详解</h2>\n<p>启动的时候，就通过配置文件来启动</p>\n<p>工作中，一些小小的配置，可以让你脱颖而出</p>\n<p>行家有没有，出手就知道</p>\n<blockquote>\n<p>单位</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051429088.png\" alt=\"\"></p>\n<p>1. 配置文件 unit 单位，对大小写不敏感</p>\n<blockquote>\n<p>包含</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051429577.png\" alt=\"image-20240105142938522\"></p>\n<ul>\n<li>可以导入其它的配置文件</li>\n</ul>\n<blockquote>\n<p>网络</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051428712.png\" alt=\"image_2023-01-02-14-59-41\"></p>\n<ul>\n<li>\n<p>如果想要让 redis 可以远程连接则需要将 <code>bind</code>  更换为 redis 本机的 ip 地址或者 <code>bind *</code>  更换为通配符</p>\n</li>\n<li>\n<p>连接时输入 Linux 的 ip 即可连接</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>protected-mode <span class=\"token function\">yes</span> <span class=\"token comment\">#保护模式是否开启如果远程连接失败可以考虑将其设置为 no 如果考虑安全性则设为 yes</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>port <span class=\"token number\">6379</span> <span class=\"token comment\">#端口号</span></pre></td></tr></table></figure><blockquote>\n<p>GENERAL 通用</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>daemonize <span class=\"token function\">yes</span> <span class=\"token comment\">#是否守护进程开启 默认为 no , 我们希望退出后 server 还是运行的则需要设置为 yes</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pidfile /var/run/redis_6379.pid <span class=\"token comment\">#如果以后台的方式运行，我们就需要指定一个 pid 文件！</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#日志</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Specify the server verbosity level.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># This can be one of:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># debug (a lot of information, useful for development/testing)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># verbose (many rarely useful info, but not a mess like the debug level)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># notice (moderately verbose, what you want in production probably) #生产环境适用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># warning (only very important / critical messages are logged)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>loglevel notice</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>logfile <span class=\"token string\">\"/usr/local/bin/redis-log.log\"</span> <span class=\"token comment\">#日志文件的文件位置，这个日志文件是自己创建的信息会打印到这个文件中</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>databases <span class=\"token number\">16</span> <span class=\"token comment\">#默认的数据库数量</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>always-show-logo <span class=\"token function\">yes</span> <span class=\"token comment\">#是否显示 log, 下面为开启示例 默认开启</span></pre></td></tr></table></figure><p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051430154.png\" alt=\"image-20240105143005080\"></p>\n<blockquote>\n<p>SNAPSHOTTING 快照</p>\n</blockquote>\n<p>持久化，在规定的时间内，执行了多少次操作，则会持久化到文件 <code>.rdb</code>  ,  <code>.aof</code></p>\n<p>redis 是内存数据库，如果没有持久化，那么数据断电即失</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#如果 900 秒内，如果至少有一个 key 进行了修改，这个时候就进行持久化操作</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>save <span class=\"token number\">900</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#如果 300 秒内，如果至少有十个 key 进行了修改，这个时候就进行持久化操作</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>save <span class=\"token number\">300</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#如果 300 秒内比如说高并发的时候，如果至少有 10000 个 key 进行了修改，这个时候就进行持久化操作</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>save <span class=\"token number\">60</span> <span class=\"token number\">10000</span></pre></td></tr></table></figure><ul>\n<li>我们之后学习持久化，会自己定义这个测试！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>stop-writes-on-bgsave-error <span class=\"token function\">yes</span> <span class=\"token comment\">#持久化出现错误之后，是否继续进行工作，默认开启</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rdbcompression <span class=\"token function\">yes</span> <span class=\"token comment\">#是否压缩 rdb 文件，默认开启，rdb 就是持久化的文件，开启需要消耗一些 CPU 的资源</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rdbchecksum <span class=\"token function\">yes</span> <span class=\"token comment\">#保存 rdb 文件的时候进行 rdb 文件校验，如果出错了可以自定进行一些修复</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">dir</span> ./ <span class=\"token comment\">#rdb 默认保存目录</span></pre></td></tr></table></figure><blockquote>\n<p>REPLICATION 主从复制</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>replica-serve-stale-data <span class=\"token function\">yes</span> <span class=\"token comment\">#是否保存数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>replica-read-only <span class=\"token function\">yes</span> <span class=\"token comment\">#是否为只读</span></pre></td></tr></table></figure><blockquote>\n<p>SECURITY 安全</p>\n</blockquote>\n<p>设置密码默认没有密码</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051428738.png\" alt=\"image_2023-01-02-16-25-06\"></p>\n<p>密码为空</p>\n<p>如果我们使用命令来设置密码的话当我们重启 redis 后密码就会失效所以我们对配置文件进行修改就不会失效了</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051429088.png\" alt=\"image-20240105142900035\"></p>\n<ul>\n<li>\n<p>补充：命令设置密码为:config set requirepass “密码”</p>\n</li>\n<li>\n<p>获取:config get requirepass</p>\n</li>\n<li>\n<p>登入:auth “密码”</p>\n</li>\n<li>\n<p>注意：如果我们设置了密码那么可以看下是否可以 ping 如果可以就重启以下如果还可以就说明密码没有设置成功，有密码不登陆执行命令就会报错如下图</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051428768.png\" alt=\"image_2023-01-02-16-36-45\"></p>\n<blockquote>\n<p>CLIENTS 客户端的限制</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051430304.png\" alt=\"image-20240105143019251\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>maxclients <span class=\"token number\">10000</span> <span class=\"token comment\">#设置能连接上客户端的数，最大 1w 个</span></pre></td></tr></table></figure><blockquote>\n<p>MEMORY MANAGEMENT 内存管理</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202401051430915.png\" alt=\"image-20240105143032841\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>maxmemory <span class=\"token operator\">&lt;</span>bytes<span class=\"token operator\">></span> <span class=\"token comment\">#redis 配置最大内存容量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>maxmemory-policy noeviction <span class=\"token comment\">#内存达到上限后的处理策略</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span>.volatile-lru:只对设置了过期时间的key进行LRU<span class=\"token punctuation\">(</span>默认值<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span>.allkeys-lru:删除lru算法的key</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3</span>.volatile-random:随机删除即将过期key</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">4</span>.allkeys-random:随机删除</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">5</span>.volatile-ttl:删除即将过期的</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">6</span>.noeviction:永不过期, 返回错误</pre></td></tr></table></figure><blockquote>\n<p>APPEND ONLY MODE aof 配置</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>appendonly no <span class=\"token comment\">#默认不开启，为什么不开启呢 因为默认使用的是 rdb 方式持久化的，在大部分情况下 rdb 完全够用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>appendfilename <span class=\"token string\">\"appendonly.aof\"</span> <span class=\"token comment\">#持久化的文件的名称后缀名为.aof 而 rdb 后缀为.rdb</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># appendfsync always #每次修改都会 sync (同步), 消耗性能</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>appendfsync everysec <span class=\"token comment\">#每秒执行一次，sync (同步), 可能会丢失 1 秒的数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># appendfsync no #不执行 sync (同步), 这个时候操作系统自己同步数据，速度最快</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "database",
                "redis"
            ]
        }
    ]
}