{
    "version": "https://jsonfeed.org/version/1",
    "title": "homepage • All posts by \"openresty\" category",
    "description": "欢迎来我的博客空间",
    "home_page_url": "https://pigpigletsgo.github.io/homepage",
    "items": [
        {
            "id": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/OpenResty/%E5%AE%89%E8%A3%85OpenResty/",
            "url": "https://pigpigletsgo.github.io/homepage/2024/04/02/computer-science/java/spring/springcloud/springcloud-%E9%AB%98%E7%BA%A7/OpenResty/%E5%AE%89%E8%A3%85OpenResty/",
            "title": "安装OpenResty",
            "date_published": "2024-04-02T06:23:31.021Z",
            "content_html": "<h1 id=\"安装openresty\"><a class=\"markdownIt-Anchor\" href=\"#安装openresty\">#</a> 安装 OpenResty</h1>\n<h1 id=\"1安装\"><a class=\"markdownIt-Anchor\" href=\"#1安装\">#</a> 1. 安装</h1>\n<p>首先你的 Linux 虚拟机必须联网</p>\n<h2 id=\"1安装开发库\"><a class=\"markdownIt-Anchor\" href=\"#1安装开发库\">#</a> <strong>1）安装开发库</strong></h2>\n<p>首先要安装 OpenResty 的依赖开发库，执行命令：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> pcre-devel openssl-devel gcc --skip-broken</pre></td></tr></table></figure><h2 id=\"2安装openresty仓库\"><a class=\"markdownIt-Anchor\" href=\"#2安装openresty仓库\">#</a> <strong>2）安装 OpenResty 仓库</strong></h2>\n<p>你可以在你的 CentOS 系统中添加  <code>openresty</code>  仓库，这样就可以便于未来安装或更新我们的软件包（通过  <code>yum check-update</code>  命令）。运行下面的命令就可以添加我们的仓库：</p>\n<pre><code>yum-config-manager --add-repo https://openresty.org/package/centos/openresty.repo\n</code></pre>\n<p>如果提示说命令不存在，则运行：</p>\n<pre><code>yum install -y yum-utils \n</code></pre>\n<p>然后再重复上面的命令</p>\n<h2 id=\"3安装openresty\"><a class=\"markdownIt-Anchor\" href=\"#3安装openresty\">#</a> <strong>3）安装 OpenResty</strong></h2>\n<p>然后就可以像下面这样安装软件包，比如  <code>openresty</code> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openresty</pre></td></tr></table></figure><h2 id=\"4安装opm工具\"><a class=\"markdownIt-Anchor\" href=\"#4安装opm工具\">#</a> <strong>4）安装 opm 工具</strong></h2>\n<p>opm 是 OpenResty 的一个管理工具，可以帮助我们安装一个第三方的 Lua 模块。</p>\n<p>如果你想安装命令行工具  <code>opm</code> ，那么可以像下面这样安装  <code>openresty-opm</code>  包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openresty-opm</pre></td></tr></table></figure><h2 id=\"5目录结构\"><a class=\"markdownIt-Anchor\" href=\"#5目录结构\">#</a> <strong>5）目录结构</strong></h2>\n<p>默认情况下，OpenResty 安装的目录是：/usr/local/openresty</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200901485.png\" alt=\"image-20200310225539214\"></p>\n<p>看到里面的 nginx 目录了吗，OpenResty 就是在 Nginx 基础上集成了一些 Lua 模块。</p>\n<h2 id=\"6配置nginx的环境变量\"><a class=\"markdownIt-Anchor\" href=\"#6配置nginx的环境变量\">#</a> <strong>6）配置 nginx 的环境变量</strong></h2>\n<p>打开配置文件：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/profile</pre></td></tr></table></figure><p>在最下面加入两行：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NGINX_HOME</span><span class=\"token operator\">=</span>/usr/local/openresty/nginx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;NGINX_HOME&#125;</span>/sbin:<span class=\"token environment constant\">$PATH</span></pre></td></tr></table></figure><p>NGINX_HOME：后面是 OpenResty 安装目录下的 nginx 的目录</p>\n<p>然后让配置生效：</p>\n<pre><code>source /etc/profile\n</code></pre>\n<h1 id=\"2启动和运行\"><a class=\"markdownIt-Anchor\" href=\"#2启动和运行\">#</a> 2. 启动和运行</h1>\n<p>OpenResty 底层是基于 Nginx 的，查看 OpenResty 目录的 nginx 目录，结构与 windows 中安装的 nginx 基本一致：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200901105.png\" alt=\"image-20210811100653291\"></p>\n<p>所以运行方式与 nginx 基本一致：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nginx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 重新加载配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> reload</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 停止</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nginx <span class=\"token parameter variable\">-s</span> stop</pre></td></tr></table></figure><p>nginx 的默认配置文件注释太多，影响后续我们的编辑，这里将 nginx.conf 中的注释部分删除，保留有效部分。</p>\n<p>修改 <code>/usr/local/openresty/nginx/conf/nginx.conf</code>  文件，内容如下：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#user  nobody;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">error_log</span>  logs/error.log</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">include</span>       mime.types</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 Linux 的控制台输入命令以启动 nginx：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx</pre></td></tr></table></figure><p>然后访问页面：<a href=\"http://192.168.150.101:8081\">http://192.168.150.101:8081</a>，注意 ip 地址替换为你自己的虚拟机 IP：</p>\n<p><img src=\"https://raw.githubusercontent.com/PigPigLetsGo/imeages/master/202310200910980.png\" alt=\"image-20231020091008283\"></p>\n<h1 id=\"3备注\"><a class=\"markdownIt-Anchor\" href=\"#3备注\">#</a> 3. 备注</h1>\n<p>加载 OpenResty 的 lua 模块：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#lua 模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_package_path</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.lua;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#c 模块     </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_package_cpath</span> <span class=\"token string\">\"/usr/local/openresty/lualib/?.so;;\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>监听浏览器请求</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">8081</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  localhost</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /api/item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token comment\"># 默认的响应类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">default_type</span> application/json</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token comment\"># 响应结果由 lua/item.lua 下的文件决定</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_file</span> lua/item.lua</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token directive\"><span class=\"token keyword\">root</span>   html</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>common.lua</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 封装函数，发送 http 请求，并解析响应</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_http</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> resp <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">capture</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        method <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>HTTP_GET<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        args <span class=\"token operator\">=</span> params<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">-- 记录错误信息，返回 404</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"http not found, path: \"</span><span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">,</span> <span class=\"token string\">\", args: \"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 将方法导出</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">local</span> _M <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    read_http <span class=\"token operator\">=</span> read_http</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">return</span> _M</pre></td></tr></table></figure><p>释放 Redis 连接 API：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 关闭 redis 连接的工具方法，其实是放入连接池</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_max_idle_time <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> <span class=\"token comment\">-- 连接的空闲时间，单位是毫秒</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> pool_size <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\">-- 连接池大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">set_keepalive</span><span class=\"token punctuation\">(</span>pool_max_idle_time<span class=\"token punctuation\">,</span> pool_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"放入redis连接池失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>读取 Redis 数据的 API：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 查询 redis 的方法 ip 和 port 是 redis 地址，key 是查询的 key</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">read_redis</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">-- 获取一个连接</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"连接redis失败 : \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">-- 查询 redis</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">local</span> resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> red<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">-- 查询失败处理</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resp <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis失败: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\", key = \"</span> <span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">-- 得到的数据为空处理</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> resp <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>null <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        resp <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"查询Redis数据为空, key = \"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">close_redis</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> resp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>开启共享词典：</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 共享字典，也就是本地缓存，名称叫做：item_cache，大小 150m</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token directive\"><span class=\"token keyword\">lua_shared_dict</span> item_cache <span class=\"token number\">150m</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机学科",
                "springcloud",
                "OpenResty"
            ]
        }
    ]
}